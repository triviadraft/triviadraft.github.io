var encrypted_mts_map = '{'questions': [{'question': "What famous comedian plays Tom Hanks's BFF in the film You've Got Mail?", 'answer': 'Dave Chappelle', 'category': 'Rom-Coms'}, {'question': 'Who do the Indians play in the one game playoff at the end of the first Major League film?', 'answer': 'the New York Yankees', 'category': 'Sports'}, {'question': 'What is the name of the lead actress in Labyrinth?', 'answer': 'Jennifer Connelly', 'category': '1980s'}, {'question': "What 80s star played Joe Pesci's nephew on trial for murder in My Cousin Vinny?", 'answer': 'Ralph Macchio', 'category': '1990s'}, {'question': 'What role did Al Pacino get nominated for for Best Supporting Actor the same year that Joe Pesci took home the gold for Goodfellas?', 'answer': 'Alphonse "Big Boy" Caprice in Dick Tracy', 'category': 'Oscars'}, {'question': "Who plays Jean-Claude Van Damme's Cajun uncle in the modern day classic Hard Target?", 'answer': 'Wilford Brimley', 'category': 'Action'}, {'question': "What is the name of Patrick Dempsey's character in Can't Buy Me Love?", 'answer': 'Ronald Miller', 'category': 'Rom-Coms'}, {'question': 'What university does Nick Nolte coach in Blue Chips?', 'answer': 'Western University', 'category': 'Sports'}, {'question': 'Name two of the actors in the coming-of-age film Explorers.', 'answer': 'Ethan Hawke, Jason Presson, River Phoenix', 'category': '1980s'}, {'question': 'What is the highest-grossing film of the 1990s?', 'answer': 'Titanic', 'category': '1990s'}, {'question': 'Which 1995 film won the Best Picture Oscar?', 'answer': 'Braveheart', 'category': 'Oscars'}, {'question': 'What was the name of the Steven Seagal film that featured bad guys from Jamaica?', 'answer': 'Marked for Death', 'category': 'Action'}, {'question': "What is the name of Harrison Ford's character in Blade Runner?", 'answer': 'Rick Deckard', 'category': 'Sci-Fi'}, {'question': 'Which actor played the hero in Battlefield Earth?', 'answer': 'Barry Pepper', 'category': 'Sci-Fi'}, {'question': 'Which original trilogy Star Wars film has the longest running time?', 'answer': 'Return of the Jedi', 'category': 'Sci-Fi'}, {'question': 'Which Iron Man franchise alumni is in the first Predator?', 'answer': 'Shane Black', 'category': 'Sci-Fi'}, {'question': "Who played Steve Guttenberg's Indian friend in Short Circuit?", 'answer': 'Fisher Stevens', 'category': 'Sci-Fi'}, {'question': 'Who directed Eternal Sunshine of the Spotless Mind?', 'answer': 'Michel Gondry', 'category': 'Sci-Fi'}, {'question': "What happens to any one of Charlton Heston's co-pilots in Planet of the Apes?", 'answer': 'Dodge shot and stuffed, Landon lobotomized, Stewart died in sleep after stasis pod malfunction', 'category': 'Sci-Fi'}, {'question': "What is Emilio Estevez's occupation in Freejack?", 'answer': 'a racecar driver', 'category': 'Sci-Fi'}, {'question': 'What iconic musician plays Needles in Back to the Future Part II and Part III?', 'answer': 'Flea', 'category': 'Sci-Fi'}, {'question': 'What type of dinosaur was sick in Jurassic Park?', 'answer': 'Triceratops', 'category': 'Sci-Fi'}, {'question': 'What is the name of the Sylvester Stallone film that involves soccer?', 'answer': 'Escape to Victory', 'category': 'World Cup'}, {'question': "What is the name of Ariel's fish friend in The Little Mermaid?", 'answer': 'Flounder', 'category': 'Animated'}, {'question': 'What country does Rambo go to in Rambo: First Blood Part II?', 'answer': 'Vietnam', 'category': 'Action/Adventure'}, {'question': "Who played Leslie Nielsen's girlfriend in the Naked Gun series?", 'answer': 'Priscilla Presley', 'category': 'Comedies'}, {'question': 'Who voiced the teapot in Beauty and the Beast?', 'answer': 'Angela Lansbury', 'category': 'Animated'}, {'question': "Who played Arnold Schwarzenegger's daughter in the 1985 film Commando?", 'answer': 'Alyssa Milano', 'category': 'Action/Adventure'}, {'question': 'What were the only two movies that Eddie Murphy and Arsenio Hall were in together (as of July 2014)?', 'answer': 'Coming to America, Harlem Nights', 'category': 'Comedies'}, {'question': 'What was the subtitle of Star Trek II?', 'answer': 'The Wrath of Khan', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What were the three movies that Tom Hanks and Meg Ryan starred in together?', 'answer': "Joe Versus the Volcano, Sleepless in Seattle, You've Got Mail", 'category': 'Rom-Coms'}, {'question': "Name any three theatrically released films based on Stephen King's works (as of July 2014).", 'answer': "1976's Carrie, The Shining, Creepshow, Cujo, The Dead Zone, Christine, Children of the Corn, Firestarter, Cat's Eye, Silver Bullet, Maximum Overdrive, Stand by Me, Creepshow 2, The Running Man, Pet Sematary, Tales from the Darkside: The Movie, Graveyard Shift, Misery, The Lawnmower Man, The Dark Half, Needful Things, The Shawshank Redemption, The Mangler, Dolores Claiborne, Thinner, Apt Pupil, The Green Mile, Hearts in Atlantis, Dreamcatcher, Secret Window, Riding the Bullet, 1408, The Mist, 2013's Carrie", 'category': 'Horror/Thriller'}, {'question': 'Who played detective Del Spooner in the film I, Robot?', 'answer': 'Will Smith', 'category': 'Fantasy/Sci-Fi'}, {'question': "What was Richard Gere's phobia in Pretty Woman?", 'answer': 'heights', 'category': 'Rom-Coms'}, {'question': "What is Brad Pitt's plea to Morgan Freeman in the desert at the end of Seven?", 'answer': 'What was in the box?', 'category': 'Horror/Thriller'}, {'question': "In the hospital in Rocky II, which part of Rocky's face did he care about the most?", 'answer': 'his nose', 'category': 'Rocky'}, {'question': 'How many rounds did it take for Clubber Lang to beat Rocky, and how many did it take for Rocky to beat Clubber?', 'answer': '2, 3', 'category': 'Rocky'}, {'question': 'Where do Rocky and Adrian go on their very first date?', 'answer': 'an ice skating rink', 'category': 'Rocky'}, {'question': 'How many main characters died in the Rocky series (not counting the Creed movies)?', 'answer': '3 (Adrian, Apollo, Mickey)', 'category': 'Rocky'}, {'question': "What is the name of Keanu Reeves's character?", 'answer': 'Johnny Utah', 'category': 'Point Break'}, {'question': 'What is the nickname of the bank-robbing gang in Point Break?', 'answer': 'the Ex-Presidents', 'category': 'Point Break'}, {'question': "What is Gary Busey's lunch order while on stakeout for the bank robbing surfers?", 'answer': 'meatball sandwiches', 'category': 'Point Break'}, {'question': "Which presidential mask does Patrick Swayze's character wear to rob banks?", 'answer': 'Ronald Reagan', 'category': 'Point Break'}, {'question': 'Which one of these four actors have never won an Oscar: Mickey Rourke, Eminem, Robert Duvall, Cuba Gooding Jr.?', 'answer': 'Mickey Rourke (Eminem won Original Song for 8 Mile, Duvall won Actor for Tender Mercies, Gooding Jr. won Supporting Actor for Jerry Maguire)', 'category': 'Oscars'}, {'question': "What was Belle's father's occupation in Beauty and the Beast?", 'answer': 'inventor', 'category': 'Animated'}, {'question': 'In Predator, what is the name of the song that the crew listens to before landing in the jungle?', 'answer': 'Long Tall Sally', 'category': 'Action/Adventure'}, {'question': 'Who starred in the film Skin Deep?', 'answer': 'John Ritter', 'category': 'Comedies'}, {'question': 'Who voiced the robot in The Iron Giant?', 'answer': 'Vin Diesel', 'category': 'Animated'}, {'question': "What is the name of the coke-snorting weasel that Holly works with in Die Hard that gives Hans Gruber McClane's name?", 'answer': 'Harry Ellis', 'category': 'Action/Adventure'}, {'question': 'What does the mermaid in Splash name herself?', 'answer': 'Madison', 'category': 'Comedies'}, {'question': 'The famous line "snap out of it" is from what movie?', 'answer': 'Moonstruck', 'category': 'Rom-Coms'}, {'question': "In 2010's Piranha 3D, which actor made a guest appearance? Robert De Niro, Richard Dreyfuss, Samuel L. Jackson, or Gary Busey?", 'answer': 'Richard Dreyfuss', 'category': 'Horror/Thriller'}, {'question': 'What were the leaders of the Dark City aliens called in the futuristic Dark City?', 'answer': 'Strangers', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Love Story, what did Ryan O'Neal's character Oliver Barrett tell Ali MacGraw as Jenny Cavilleri love means?", 'answer': "never having to say you're sorry", 'category': 'Rom-Coms'}, {'question': 'Who did Christian Slater replace in Interview with the Vampire?', 'answer': 'River Phoenix', 'category': 'Horror/Thriller'}, {'question': 'Morpheus has a full team that Neo meets in the first Matrix. There were two brothers. What were their names?', 'answer': 'Dozer, Tank', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is Annette Bening's character's occupation in American Beauty?", 'answer': 'a real estate broker', 'category': 'Oscars'}, {'question': 'In Braveheart, who said the line "my hate will die with you"?', 'answer': 'Robert the Bruce', 'category': 'Oscars'}, {'question': 'Name one of the movies that Shakespeare in Love beat to win Best Picture.', 'answer': 'Saving Private Ryan, Life Is Beautiful, Elizabeth, The Thin Red Line', 'category': 'Oscars'}, {'question': 'Who was the first performer to win consecutive awards? Katharine Hepburn, Tom Hanks, Jason Robards, or Luise Rainer?', 'answer': 'Luise Rainer (for The Great Ziegfeld, The Good Earth)', 'category': 'Oscars'}, {'question': 'What movie did Alec Guinness win his Best Actor award for?', 'answer': 'The Bridge on the River Kwai', 'category': 'Oscars'}, {'question': 'Kenny Loggins recorded Danger Zone and what other song from the film Top Gun?', 'answer': 'Playing with the Boys', 'category': 'Scores & Soundtracks'}, {'question': 'Name the composer of the classic score from Rudy.', 'answer': 'Jerry Goldsmith', 'category': 'Scores & Soundtracks'}, {'question': 'What band is responsible for the Rocky classic "Eye of the Tiger"?', 'answer': 'Survivor', 'category': 'Scores & Soundtracks'}, {'question': 'Guns N\' Roses\' "You Could Be Mine" is featured in what classic from the 90s?', 'answer': 'Terminator 2: Judgment Day', 'category': 'Scores & Soundtracks'}, {'question': "Name the two actors who portray reporters Woodward and Bernstein in All the President's Men.", 'answer': 'Robert Redford, Dustin Hoffman', 'category': 'Political'}, {'question': 'In which film is the song "When You Wish Upon a Star" featured?', 'answer': 'Pinocchio', 'category': 'Animated'}, {'question': 'Who directed the John Travolta Christian Slater film Broken Arrow?', 'answer': 'John Woo', 'category': 'Action/Adventure'}, {'question': "In Wedding Crashers, what does Will Ferrell's character crash?", 'answer': 'funerals', 'category': 'Comedies'}, {'question': 'Walt Disney was the first to release a full-length animated movie. What was it?', 'answer': 'Snow White and the Seven Dwarfs', 'category': 'Animated'}, {'question': 'Which film starred Harrison Ford as an ex-CIA man?', 'answer': 'Patriot Games', 'category': 'Action/Adventure'}, {'question': "In Trading Places, what were the wealthy Duke brothers' first names?", 'answer': 'Mortimer, Randolph', 'category': 'Comedies'}, {'question': 'Which 2004 movie depicts the catastrophic events of global warming in a series of extreme weather events that usher in a new ice age?', 'answer': 'The Day After Tomorrow', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what movie does Hugh Grant ask the object of his affection not to marry him?', 'answer': 'Four Weddings and a Funeral', 'category': 'Rom-Coms'}, {'question': 'British actor Boris Karloff created a cinematic icon when he played the role of which monster?', 'answer': "Frankenstein's monster", 'category': 'Horror/Thriller'}, {'question': 'Which movie starring Arnold Schwarzenegger is based on the Philip K. Dick story We Can Remember It for You Wholesale?', 'answer': 'Total Recall', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the film Roxanne, which of the body parts of Charlie, played by Steve Martin, stands out?', 'answer': 'his nose', 'category': 'Rom-Coms'}, {'question': 'Which one of these killers is not a famous slasher from a horror film: Candyman, Razorblade, Jigsaw, Pinhead, or Pumpkinhead?', 'answer': 'Razorblade (Candyman in Candyman, Jigsaw in Saw, Pinhead in Hellraiser, Pumpkinhead in Pumpkinhead)', 'category': 'Horror/Thriller'}, {'question': 'Who played Mr. White in Reservoir Dogs?', 'answer': 'Harvey Keitel', 'category': 'Quentin Tarantino'}, {'question': 'What X-Men star appeared in Inglourious Basterds?', 'answer': 'Michael Fassbender', 'category': 'Quentin Tarantino'}, {'question': "Who plays Quentin Tarantino's brother in the film From Dusk till Dawn?", 'answer': 'George Clooney', 'category': 'Quentin Tarantino'}, {'question': 'Tony Scott directed which film written by Quentin Tarantino?', 'answer': 'True Romance', 'category': 'Quentin Tarantino'}, {'question': "Who plays Keanu Reeves' love interest in Point Break?", 'answer': 'Lori Petty', 'category': 'Point Break'}, {'question': 'Who directed the film Point Break?', 'answer': 'Kathryn Bigelow', 'category': 'Point Break'}, {'question': 'What country does the last scene of the film take place?', 'answer': 'Australia', 'category': 'Point Break'}, {'question': "Where did Keanu Reeves' character play college football?", 'answer': 'the Ohio State University', 'category': 'Point Break'}, {'question': 'What film includes the quote, "I get to live the rest of my life like a schnook"?', 'answer': 'Goodfellas', 'category': 'Quotes'}, {'question': "What was the female cowgirl's name in the Toy Story series that made her first appearance in Toy Story 2?", 'answer': 'Jessie', 'category': 'Animated'}, {'question': 'Who played the villain in Live Free or Die Hard?', 'answer': 'Timothy Olyphant', 'category': 'Action/Adventure'}, {'question': "In the film The Mask, what breed of dog played Jim Carrey's dog Milo?", 'answer': 'a Jack Russell Terrier', 'category': 'Comedies'}, {'question': 'Who voiced the lead character Oscar in the animated film Shark Tale?', 'answer': 'Will Smith', 'category': 'Animated'}, {'question': 'Whom does Indiana Jones tell Mola Ram that he has betrayed in The Temple of Doom?', 'answer': 'Shiva', 'category': 'Action/Adventure'}, {'question': "Who played Matt Damon's brother in Stuck on You?", 'answer': 'Greg Kinnear', 'category': 'Comedies'}, {'question': 'In what franchise might you find a necromancer?', 'answer': 'Middle-earth', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In The Wedding Singer, which 80s rocker helps Robbie fight for Julia on an airplane?', 'answer': 'Billy Idol', 'category': 'Rom-Coms'}, {'question': "Who was the female star of Rosemary's Baby?", 'answer': 'Mia Farrow', 'category': 'Horror/Thriller'}, {'question': "In the movie The NeverEnding Story, the main character's name is what?", 'answer': 'Bastian Balthazar Bux', 'category': 'Fantasy/Sci-Fi'}, {'question': 'True or false? In Pretty Woman, Vivian sings Prince\'s "When Doves Cry" in the bathtub while wearing headphones.', 'answer': 'false (she sang Prince\'s "Kiss")', 'category': 'Rom-Coms'}, {'question': 'What is the name of the film featured in Scream 2, which is based upon the murders in Scream?', 'answer': 'Stab', 'category': 'Horror/Thriller'}, {'question': 'Name an actor that refused to accept his Academy Award.', 'answer': 'George C. Scott (for Patton), Marlon Brando (for The Godfather)', 'category': 'Oscars'}, {'question': 'Two films have tied for the record of most Oscar nominations without a single win. Name either film.', 'answer': 'The Color Purple, The Turning Point', 'category': 'Oscars'}, {'question': 'Only three films have won the Big Five (Picture, Director, Actor, Actress, Screenplay). Name one of them.', 'answer': "It Happened One Night, One Flew Over the Cuckoo's Nest, The Silence of the Lambs", 'category': 'Oscars'}, {'question': 'Who was the first actor or actress to win four Academy Awards?', 'answer': "Katharine Hepburn (for Morning Glory, Guess Who's Coming to Dinner, The Lion in Winter, On Golden Pond)", 'category': 'Oscars'}, {'question': 'In the 2014 version of Godzilla, there was a nod to a famous Godzilla monster. Who was that monster?', 'answer': 'Mothra', 'category': 'Monster'}, {'question': 'In what movie did the Scorpion King make his debut?', 'answer': 'The Mummy Returns', 'category': 'Monster'}, {'question': 'Who directed Van Helsing?', 'answer': 'Stephen Sommers', 'category': 'Monster'}, {'question': 'Who is the female lead in the remake of Mighty Joe Young?', 'answer': 'Charlize Theron', 'category': 'Monster'}, {'question': 'In the film Closer, Julia Roberts cheats on Clive Owen with Jude Law. Who does she cheat on Jude Law with?', 'answer': 'Clive Owen', 'category': 'Julia Roberts'}, {'question': 'What action movie star lent his voice to a character in the animated film Antz?', 'answer': 'Sylvester Stallone', 'category': 'Animated'}, {'question': 'What is the evil enforcer robot called from RoboCop?', 'answer': 'the ED-209', 'category': 'Action/Adventure'}, {'question': "How did Daniel come up with Mrs. Doubtfire's name?", 'answer': 'he saw "Doubt Fire" in a newspaper article', 'category': 'Comedies'}, {'question': 'Who directed the 2007 Pixar hit Ratatouille?', 'answer': 'Brad Bird', 'category': 'Animated'}, {'question': 'What does Tommy Lee Jones tell Dr. Richard Kimble in The Fugitive when he is told that Kimble did not kill his wife?', 'answer': "I don't care!", 'category': 'Action/Adventure'}, {'question': 'Where does most of the film starring Adam Ray, Sandra Bullock, and Melissa McCarthy, The Heat, take place?', 'answer': 'Boston', 'category': 'Comedies'}, {'question': 'Which actor had a role in both The Terminator and Aliens?', 'answer': 'Bill Paxton, Michael Biehn', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the film Kate & Leopold, who played Kate and Leopold?', 'answer': 'Meg Ryan, Hugh Jackman', 'category': 'Rom-Coms'}, {'question': 'Which sitcom star had a role in the first Leprechaun film?', 'answer': 'Jennifer Aniston', 'category': 'Horror/Thriller'}, {'question': "What are the names of either Tommy Lee Jones' or Will Smith's characters from the Men in Black franchise?", 'answer': 'Agent K, Agent J', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which one of these movies is not a romantic comedy starring Katherine Heigl: 27 Dresses, The Ugly Truth, Life as We Know It, Someone like You?', 'answer': 'Someone like You', 'category': 'Rom-Coms'}, {'question': 'Who portrayed Buffy the Vampire Slayer on the big screen?', 'answer': 'Kristy Swanson', 'category': 'Horror/Thriller'}, {'question': "Who played Frankenstein's monster in Kenneth Branagh's Mary Shelley's Frankenstein?", 'answer': 'Robert De Niro', 'category': 'Monster'}, {'question': 'What movie franchise features an evil monster called Pinhead?', 'answer': 'Hellraiser', 'category': 'Monster'}, {'question': 'Name a subtitle of any of the Nightmare on Elm Street movies.', 'answer': "Freddy's Revenge, Dream Warriors, The Dream Master, The Dream Child, The Final Nightmare", 'category': 'Monster'}, {'question': 'Name three of the monsters that are featured in the classic The Monster Squad.', 'answer': "Dracula, Frankenstein's monster, the Gill-man, the Mummy, the Wolf Man", 'category': 'Monster'}, {'question': 'Who is the love interest of Michael Douglas in The American President?', 'answer': 'Annette Bening', 'category': 'Political'}, {'question': 'What city do Jim Garrison and his family reside in JFK?', 'answer': 'New Orleans', 'category': 'Political'}, {'question': 'Kevin Kline played the President in what Ivan Reitman comedy?', 'answer': 'Dave', 'category': 'Political'}, {'question': 'Dustin Hoffman stars in what political comedy in which a war is fabricated to cover up a presidential sex scandal?', 'answer': 'Wag the Dog', 'category': 'Political'}, {'question': 'What famous actor do people tell Terri that she looks like in the 80s cult classic Just One of the Guys?', 'answer': 'Ralph Macchio', 'category': '1980s Comedies'}, {'question': 'Who voiced the voice of Scar in The Lion King?', 'answer': 'Jeremy Irons', 'category': 'Animated'}, {'question': "What is Indiana Jones' actual name?", 'answer': 'Henry Walton Jones, Jr.', 'category': 'Action/Adventure'}, {'question': 'Which character in Ghostbusters says, "when someone asks you if you\'re a god, you say \'Yes\'!"?', 'answer': 'Winston Zeddemore', 'category': 'Comedies'}, {'question': 'What is the name of the home where they live in The Lion King?', 'answer': 'Pride Rock', 'category': 'Animated'}, {'question': 'Who were the lead male and female in Romancing the Stone?', 'answer': 'Michael Douglas, Kathleen Turner', 'category': 'Action/Adventure'}, {'question': "In the classic 2003 film Old School, what is the nickname of Will Ferrell's character?", 'answer': 'Frank the Tank', 'category': 'Comedies'}, {'question': "What is Samwise's last name in The Lord of the Rings?", 'answer': 'Gamgee', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who directed Valentine's Day and New Year's Eve?", 'answer': 'Garry Marshall', 'category': 'Rom-Coms'}, {'question': "What is the name of the serial killer at the start of Child's Play? The Lakeshore Strangler, the Lincoln Park Loon, the North Shore Killer, or the Southside Psycho?", 'answer': 'the Lakeshore Strangler', 'category': 'Horror/Thriller'}, {'question': 'What is the name of the dance that George and Lorraine fall in love in in Back to the Future?', 'answer': 'Enchantment Under the Sea', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who is Sandra Bullock's love interest in the film While You Were Sleeping?", 'answer': 'Bill Pullman', 'category': 'Rom-Coms'}, {'question': 'The Ring is originally based on a 1998 horror movie from which country?', 'answer': 'Japan', 'category': 'Horror/Thriller'}, {'question': 'What film saw Jean-Claude Van Damme play two roles as twin brothers Chad and Alex?', 'answer': 'Double Impact', 'category': 'Jean-Claude Van Damme'}, {'question': 'What is the home country of actor Jean-Claude Van Damme?', 'answer': 'Belgium', 'category': 'Jean-Claude Van Damme'}, {'question': 'What character did Van Damme play in the video game movie Street Fighter?', 'answer': 'Guile', 'category': 'Jean-Claude Van Damme'}, {'question': 'What movie did Van Damme debut as an extra dancing on Venice Beach?', 'answer': "Breakin'", 'category': 'Jean-Claude Van Damme'}, {'question': "What is the name of Rick Moranis' character in Spaceballs?", 'answer': 'Dark Helmet', 'category': 'Slapstick Spoof'}, {'question': "Who played Dr. Frankenstein's monster in the Mel Brook classic Young Frankenstein?", 'answer': 'Peter Boyle', 'category': 'Slapstick Spoof'}, {'question': 'Who gets a bomb dropped on them as they are sipping lemonade at the end of the classic Hot Shots!?', 'answer': 'Saddam Hussein', 'category': 'Slapstick Spoof'}, {'question': "Who played Eric Bana's love interest in Ang Lee's Hulk?", 'answer': 'Jennifer Connelly', 'category': 'Comic Book'}, {'question': 'Which of these Autobots does not die in the 1986 The Transformers: The Movie? Megatron, Ironhide, Bumblebee, or Starscream?', 'answer': 'Bumblebee', 'category': 'Animated'}, {'question': 'Who played the villain in the 1982 Conan the Barbarian?', 'answer': 'James Earl Jones', 'category': 'Action/Adventure'}, {'question': "What does Jason Lee give to Michael Rooker to make him sick in Kevin Smith's Mallrats?", 'answer': 'chocolate-covered pretzels (a stink palm)', 'category': 'Comedies'}, {'question': "What is Jay Baruchel's character's name in the franchise How to Train Your Dragon?", 'answer': 'Hiccup Horrendous Haddock III', 'category': 'Animated'}, {'question': "Who played Robin Hood's half-brother Will Scarlett in Robin Hood: Prince of Thieves?", 'answer': 'Christian Slater', 'category': 'Action/Adventure'}, {'question': 'In The Hangover Part II, where does the wedding take place?', 'answer': 'Thailand', 'category': 'Comedies'}, {'question': 'What movie had the tagline "Heroes. Giants. Villains. Wizards. True Love."?', 'answer': 'The Princess Bride', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who was John Cusack's love interest in Serendipity?", 'answer': 'Kate Beckinsale', 'category': 'Rom-Coms'}, {'question': 'What past Schmoes Know guest has appeared in a Halloween movie?', 'answer': 'Katee Sackhoff (in Halloween: Resurrection)', 'category': 'Horror/Thriller'}, {'question': 'Who voiced the alien in the sci-fi comedy Paul with Simon Pegg and Nick Frost?', 'answer': 'Seth Rogen', 'category': 'Fantasy/Sci-Fi'}, {'question': 'The 2005 rom-com Rumor Has It with Jennifer Aniston was about a woman who learns her family was the inspiration for the book and film of which classic?', 'answer': 'The Graduate', 'category': 'Rom-Coms'}, {'question': "What is the evil child's name in The Omen?", 'answer': 'Damien Thorn', 'category': 'Horror/Thriller'}, {'question': 'In The Big Lebowski, what is the Dude doing when the nihilists break into his house?', 'answer': 'taking meth', 'category': '1990s'}, {'question': 'Who is the actress that plays the blonde bimbo in Empire Records?', 'answer': 'Renée Zellweger', 'category': '1990s'}, {'question': 'Who played the cheating boyfriend of Melanie Griffith in Working Girl?', 'answer': 'Alec Baldwin', 'category': '1990s'}, {'question': 'Who was the Latin bombshell that played Selena in the Selena biopic?', 'answer': 'Jennifer Lopez', 'category': '1990s'}, {'question': "Who composed the music for Pixar's Up?", 'answer': 'Michael Giacchino', 'category': 'Scores & Soundtracks'}, {'question': 'Who composed the music for The Avengers?', 'answer': 'Alan Silvestri', 'category': 'Scores & Soundtracks'}, {'question': 'Name three movies Hans Zimmer has composed the score to.', 'answer': "12 Years a Slave, As Good as It Gets, Batman Begins, Crimson Tide, Gladiator, Inception, Man of Steel, Rain Man, Sherlock Holmes, Sherlock Holmes: A Game of Shadows, The Amazing Spider-Man 2, The Dark Knight, The Dark Knight Rises, The Lion King, The Preacher's Wife, The Prince of Egypt, The Thin Red Line, etc.", 'category': 'Scores & Soundtracks'}, {'question': '"Up Where We Belong" was a smash hit used in what 1982 film?', 'answer': 'An Officer and a Gentleman', 'category': 'Scores & Soundtracks'}, {'question': "What planet was Jabba the Hutt's palace on in Return of the Jedi?", 'answer': 'Tatooine', 'category': 'Star Wars'}, {'question': 'What is the name of the film within a film in Home Alone that features such lines as "Keep the change, ya filthy animal."?', 'answer': 'Angels with Filthy Souls', 'category': 'N/A'}, {'question': 'For what role did the late Philip Seymour Hoffman win a Best Actor Oscar?', 'answer': 'Truman Capote (in Capote)', 'category': 'N/A'}, {'question': 'Which hand does Captain Hook have his hook on in Peter Pan?', 'answer': 'his left hand', 'category': 'Animated'}, {'question': 'In the opening scene of Raiders of the Lost Ark, what is the type of bug that Indy has to remove to get through the cave?', 'answer': 'tarantulas', 'category': 'Action/Adventure'}, {'question': 'What is the name of the sequel to the film Ace Ventura: Pet Detective?', 'answer': 'Ace Ventura: When Nature Calls', 'category': 'Comedies'}, {'question': "In Disney's Robin Hood, what type of animal is Robin?", 'answer': 'a fox', 'category': 'Animated'}, {'question': "Because of his commitment to The Hunt for Red October, John McTiernan, original director of Die Hard, could not direct 1990's Die Hard 2. Who was his replacement?", 'answer': 'Renny Harlin', 'category': 'Action/Adventure'}, {'question': 'In the 2004 comedy Mean Girls, what SNL alum had a small role in the film and also wrote it?', 'answer': 'Tina Fey', 'category': 'Comedies'}, {'question': "Who played the character of Darkness in 1986's Legend, directed by Ridley Scott?", 'answer': 'Tim Curry', 'category': 'Fantasy/Sci-Fi'}, {'question': "Based on Shakespeare's The Taming of the Shrew, which rom-com stars Heath Ledger and Julia Stiles?", 'answer': '10 Things I Hate About You', 'category': 'Rom-Coms'}, {'question': 'True or false? Freddy Krueger is the actual name of the kid who bullied Wes Craven in school.', 'answer': 'true', 'category': 'Horror/Thriller'}, {'question': 'In the 1997 film The Fifth Element, what is the fifth element needed to save the galaxy after water, fire, air, and earth?', 'answer': 'love', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the highest-grossing romantic comedy of all time domestically? Pretty Woman, Hitch, My Big Fat Greek Wedding, or What Women Want?', 'answer': 'My Big Fat Greek Wedding', 'category': 'Rom-Coms'}, {'question': "Before Donald Pleasence was cast as Dr. Sam Loomis in John Carpenter's Halloween, which horror icon was originally offered the role? Lon Chaney Jr., Vincent Price, Christopher Lee, or Peter Cushing?", 'answer': 'Christopher Lee', 'category': 'Horror/Thriller'}, {'question': 'The town of Bedford Falls is the setting for what classic film?', 'answer': "It's a Wonderful Life", 'category': 'Classics'}, {'question': "Who was the female star of Hitchcock's film Vertigo?", 'answer': 'Kim Novak', 'category': 'Classics'}, {'question': 'In The Godfather, who was murdered in the causeway?', 'answer': 'Sonny Corleone', 'category': 'Classics'}, {'question': 'In The Graduate, where does Elaine go to college?', 'answer': 'University of California, Berkeley', 'category': 'Classics'}, {'question': 'In the film Stand By Me, what is the name of the junkyard dog?', 'answer': 'Chopper', 'category': 'Coming of Age'}, {'question': "2013's The Way, Way Back was greenlit after writer-directors Nat Faxon and Jim Rash's other screenplay won an Oscar. What film was that screenplay for?", 'answer': 'The Descendants', 'category': 'Coming of Age'}, {'question': "In Sixteen Candles, Samantha played by Molly Ringwald coins a nickname for Anthony Michael Hall's character. Name that nickname.", 'answer': 'Farmer Ted', 'category': 'Coming of Age'}, {'question': 'What Academy Award winning actor with the surname of Coppola had a cameo in Fast Times at Ridgemont High?', 'answer': 'Nicolas Cage', 'category': 'Coming of Age'}, {'question': "In the classic film Ferris Bueller's Day Off, the principal played by Jeffrey Jones is named what?", 'answer': 'Edward R. Rooney', 'category': '1980s'}, {'question': 'Who voiced the evil Lord Farquaad in Shrek?', 'answer': 'John Lithgow', 'category': 'Animated'}, {'question': 'The first James Bond film was what?', 'answer': 'Dr. No', 'category': 'Action/Adventure'}, {'question': "What is the foreign exchange student's name in Sixteen Candles?", 'answer': 'Long Duk Dong', 'category': 'Comedies'}, {'question': 'In what movie might you hear the song "A Dream Is a Wish Your Heart Makes"?', 'answer': 'Cinderella', 'category': 'Animated'}, {'question': 'The Great Escape was an escape from what?', 'answer': 'a prisoner-of-war camp', 'category': 'Action/Adventure'}, {'question': 'What two comedy juggernauts starred in the 2010 comedy Date Night?', 'answer': 'Steve Carell, Tina Fey', 'category': 'Comedies'}, {'question': "What is Voldemort's real name?", 'answer': 'Tom Marvolo Riddle', 'category': 'Fantasy/Sci-Fi'}, {'question': 'For each of three romantic comedy pairings, name at least one movie they were in together. Drew Barrymore and Adam Sandler, Jack Nicholson and Helen Hunt, Will Smith and Eva Mendes.', 'answer': 'The Wedding Singer, 50 First Dates, Blended; As Good as It Gets; Hitch', 'category': 'Rom-Coms'}, {'question': "What was the name of the killer clown in Stephen King's It?", 'answer': 'Pennywise', 'category': 'Horror/Thriller'}, {'question': 'Name the sci-fi film from the quote: "There is no spoon.".', 'answer': 'The Matrix', 'category': 'Fantasy/Sci-Fi'}, {'question': 'True or false? In When Harry Met Sally..., Harry and Sally both attended NYU.', 'answer': 'false (they attended the University of Chicago)', 'category': 'Rom-Coms'}, {'question': 'In Halloween: Resurrection, which rap star played a character who battled Michael Myers?', 'answer': 'Busta Rhymes', 'category': 'Horror/Thriller'}, {'question': 'Val Kilmer starred in what slapstick film from the same producers as Airplane!?', 'answer': 'Top Secret!', 'category': 'Slapstick Spoof'}, {'question': 'What character does Leslie Nielsen play in the Naked Gun franchise?', 'answer': 'Frank Drebin', 'category': 'Slapstick Spoof'}, {'question': 'What legendary actor played Inspector Clouseau in the original Pink Panther?', 'answer': 'Peter Sellers', 'category': 'Slapstick Spoof'}, {'question': 'How many Scary Movie films are there?', 'answer': '5', 'category': 'Slapstick Spoof'}, {'question': 'Which sports film sees Kevin Costner play a character named Roy McAvoy?', 'answer': 'Tin Cup', 'category': 'Sports'}, {'question': "Name the director of the classic sports films Bull Durham and White Men Can't Jump.", 'answer': 'Ron Shelton', 'category': 'Sports'}, {'question': 'Name the two NBA All-Stars who starred in Blue Chips.', 'answer': "Penny Hardaway, Shaquille O'Neal", 'category': 'Sports'}, {'question': 'What is the name of the quiet sharpshooting high school star on the basketball team in Hoosiers?', 'answer': 'Jimmy Chitwood', 'category': 'Sports'}, {'question': "According to the high schoolers in Dazed and Confused, which band's concert tickets are the first priority of the summer?", 'answer': 'Aerosmith', 'category': 'Coming of Age'}, {'question': 'Who is the villain in Aladdin?', 'answer': 'Jafar', 'category': 'Animated'}, {'question': "What were Arnold Schwarzenegger's two names in Total Recall?", 'answer': 'Carl Hauser, Douglas Quaid', 'category': 'Action/Adventure'}, {'question': 'Who played Hansel in Zoolander?', 'answer': 'Owen Wilson', 'category': 'Comedies'}, {'question': 'Who voices the love interest to Blu in the film Rio?', 'answer': 'Anne Hathaway', 'category': 'Animated'}, {'question': 'Who was the martial artist that played the lead role in The Perfect Weapon?', 'answer': 'Jeff Speakman', 'category': 'Action/Adventure'}, {'question': 'Who was the star of Easy A?', 'answer': 'Emma Stone', 'category': 'Comedies'}, {'question': "What was Elliott's brother's name in E.T.?", 'answer': 'Michael', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played Jennifer Garner's flamboyant boss in the 2004 romantic comedy 13 Going on 30?", 'answer': 'Andy Serkis', 'category': 'Rom-Coms'}, {'question': 'True or false? Sam Raimi directed Drag Me to Hell.', 'answer': 'true', 'category': 'Horror/Thriller'}, {'question': 'What was happening to the women in Children of Men?', 'answer': 'they were unable to get pregnant', 'category': 'Fantasy/Sci-Fi'}, {'question': 'A particularly famous actor directed Reality Bites. Who was it?', 'answer': 'Ben Stiller', 'category': 'Rom-Coms'}, {'question': 'What is the type of monster killing people in 30 Days of Night?', 'answer': 'vampires', 'category': 'Horror/Thriller'}, {'question': 'Why does Mickey tell Rocky to stop messing around with Adrian during training? Give an exact quote.', 'answer': 'Women weaken legs!', 'category': 'Rocky'}, {'question': 'What problem does Rocky point out on his banner at the arena the night before the fight?', 'answer': 'the colors of his shorts are the opposite of what they should be', 'category': 'Rocky'}, {'question': "What is the name of Rocky's theme song?", 'answer': 'Gonna Fly Now', 'category': 'Rocky'}, {'question': 'What meat packing plant does Paulie work at?', 'answer': 'the Shamrock Meat Packing Facility', 'category': 'Rocky'}, {'question': 'What 1997 film sees humans fare off against space bugs?', 'answer': 'Starship Troopers', 'category': 'Alien'}, {'question': 'In Independence Day, what does Will Smith yell as he blasts off in the spaceship?', 'answer': 'I have got to get me one of these!', 'category': 'Alien'}, {'question': "Travis Walton disappears for five days in 1993's thriller Fire in the Sky. What was his occupation?", 'answer': 'a logger', 'category': 'Alien'}, {'question': "At the end of E.T., what is E.T.'s closing advice to Elliott?", 'answer': 'Be good.', 'category': 'Alien'}, {'question': 'What was the name of the band in Almost Famous?', 'answer': 'Stillwater', 'category': 'Coming of Age'}, {'question': 'In The Incredibles, who was the voice of Mr. Incredible?', 'answer': 'Craig T. Nelson', 'category': 'Animated'}, {'question': 'Which of the following films was not directed by Sylvester Stallone? The Expendables, Cobra, Rocky II, or Paradise Alley?', 'answer': 'Cobra', 'category': 'Action/Adventure'}, {'question': 'Which Star Trek movie sees Captains Kirk and Jean-Luc Picard meet?', 'answer': 'Star Trek Generations', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Whoopi Goldberg voiced what kind of animal in The Lion King?', 'answer': 'a spotted hyena', 'category': 'Animated'}, {'question': 'Which action film was based on an original script called Simon Says?', 'answer': 'Die Hard with a Vengeance', 'category': 'Action/Adventure'}, {'question': 'What is the title of the fourth Star Trek film?', 'answer': 'Star Trek IV: The Voyage Home', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Walter Hill directed what popular 1980s comedy action film and its sequel?', 'answer': '48 Hrs.', 'category': 'Comedies'}, {'question': "Name the two male co-stars in the film Bridget Jones's Diary.", 'answer': 'Colin Firth, Hugh Grant', 'category': 'Rom-Coms'}, {'question': 'A Nightmare on Elm Street 2 has what subtitle?', 'answer': "Freddy's Revenge", 'category': 'Horror/Thriller'}, {'question': 'Peter Sellers played three roles in what Stanley Kubrick dark comedy?', 'answer': 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', 'category': 'Comedies'}, {'question': 'In the McConaughey classic Failure to Launch, who plays his parents?', 'answer': 'Kathy Bates, Terry Bradshaw', 'category': 'Rom-Coms'}, {'question': 'Which horror icon appears when you say his name three names into a mirror?', 'answer': 'the Candyman', 'category': 'Horror/Thriller'}, {'question': 'In the film Pretty Woman, what type of car is Richard Gere driving when he picks up Vivian?', 'answer': 'a Lotus Esprit', 'category': 'Julia Roberts'}, {'question': "In the film My Best Friend's Meeting, what happened to Kimmy's maid of honor that saw her not be able to be in the wedding?", 'answer': 'she shattered her pelvis line dancing', 'category': 'Julia Roberts'}, {'question': 'What fake name does Anna use at the Ritz in Notting Hill?', 'answer': 'Flintstone', 'category': 'Julia Roberts'}, {'question': 'In the film Eat Pray Love, who plays the character Felipe?', 'answer': 'Javier Bardem', 'category': 'Julia Roberts'}, {'question': 'What movie includes the quote: "I came here tonight because when you realize you want to spend the rest of your life with somebody, you want the rest of your life to start as soon as possible."?', 'answer': 'When Harry Met Sally...', 'category': 'Quotes'}, {'question': 'What movie includes the quote "bring the little pards down here. We got plenty of snakes and lizards for them to play with."?', 'answer': 'Beetlejuice', 'category': 'Quotes'}, {'question': 'What movie includes the quote "I\'m not bad, I\'m just drawn that way."?', 'answer': 'Who Framed Roger Rabbit', 'category': 'Quotes'}, {'question': 'What movie includes the quote "Fat, drunk, and stupid is no way to go through life, son."?', 'answer': "National Lampoon's Animal House", 'category': 'Quotes'}, {'question': 'In the film Rocky Balboa, what is the name of the Italian restaurant that Rocky owns?', 'answer': "Adrian's Restaurant", 'category': 'Rocky'}, {'question': 'King Triton is the father of which Disney beauty?', 'answer': 'Ariel (in The Little Mermaid)', 'category': 'Animated'}, {'question': "In Die Hard, what is Holly McClane's maiden name?", 'answer': 'Gennero', 'category': 'Action/Adventure'}, {'question': "Who played Bill Murray's love interest in Groundhog Day?", 'answer': 'Andie MacDowell', 'category': 'Comedies'}, {'question': "Who voices the plane Dusty in Disney's Planes?", 'answer': 'Dane Cook', 'category': 'Animated'}, {'question': 'Name the two actors who have played Judge Dredd.', 'answer': 'Sylvester Stallone, Karl Urban', 'category': 'Action/Adventure'}, {'question': "In what film did Meryl Streep play Anne Hathaway's highly successful, highly crazy boss, based off of a novel?", 'answer': 'The Devil Wears Prada', 'category': 'Comedies'}, {'question': "Who is Flash Gordon's main enemy?", 'answer': 'Ming the Merciless', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played the rock star in the hit rom-com Forgetting Sarah Marshall?', 'answer': 'Russell Brand', 'category': 'Rom-Coms'}, {'question': 'Name two of the stars of the Amazonian thriller Anaconda.', 'answer': 'Eric Stoltz, Ice Cube, Jennifer Lopez, Jon Voight, Jonathan Hyde, Owen Wilson', 'category': 'Horror/Thriller'}, {'question': 'What 1988 movie starred Val Kilmer and Warwick Davis?', 'answer': 'Willow', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In which film might you find Ryan Gosling proposing his love to a mannequin?', 'answer': 'Lars and the Real Girl', 'category': 'Rom-Coms'}, {'question': "How did Phoebe Cates' dad die in Gremlins?", 'answer': 'he died in a chimney dressed as Santa during Christmas', 'category': 'Horror/Thriller'}, {'question': 'Henry Rowengartner is a fan of which Major League Baseball team in Rookie of the Year?', 'answer': 'the Chicago Cubs', 'category': 'Sports'}, {'question': 'Tom Cruise starred in the film Jerry Maguire. For whom was the title role originally written for?', 'answer': 'Tom Hanks', 'category': 'Sports'}, {'question': 'What is the coach of the Indians named in the first Major League?', 'answer': 'Lou Brown', 'category': 'Sports'}, {'question': 'In Field of Dreams, Ray Liotta played a character, but who played the character in Eight Men Out?', 'answer': 'D. B. Sweeney (playing Shoeless Joe Jackson)', 'category': 'Sports'}, {'question': 'What is the name of the good guy cyborg in Aliens?', 'answer': 'Bishop', 'category': 'Alien'}, {'question': 'What national monument does Richard Dreyfuss recreate out of mashed potatoes in Close Encounters of the Third Kind?', 'answer': 'Devils Tower', 'category': 'Alien'}, {'question': 'What is the character of Zoe Saldana in Guardians of the Galaxy?', 'answer': 'Gamora', 'category': 'Alien'}, {'question': 'What planet is home to the Arnold Schwarzenegger 1990 blockbuster Total Recall?', 'answer': 'Mars', 'category': 'Alien'}, {'question': "What is Hulk Hogan's nickname for his character in Rocky III? Not his name Thunderlips; his nickname.", 'answer': 'the Ultimate Male', 'category': 'Rocky'}, {'question': 'Kung Fu Panda idolizes the Furious Five. Name three of the animals featured in the legendary martial arts group.', 'answer': 'Crane, Mantis, Monkey, Tiger, Viper', 'category': 'Animated'}, {'question': 'How many total Action Jackson films were made?', 'answer': '1', 'category': 'Action/Adventure'}, {'question': 'What term do the humans use to refer to the aliens in District 9?', 'answer': 'prawns', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name five of the seven dwarfs in Snow White.', 'answer': 'Bashful, Doc, Dopey, Grumpy, Happy, Sleepy, Sneezy', 'category': 'Animated'}, {'question': 'Harry Tasker is the hero from which 1990s action blockbuster?', 'answer': 'True Lies', 'category': 'Action/Adventure'}, {'question': 'In which state does E.T. take place?', 'answer': 'California', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Chris Farley and David Spade must save which auto factory in the film Tommy Boy?', 'answer': 'Callahan Auto', 'category': 'Comedies'}, {'question': 'Who won the Best Actress Oscar for her role in As Good as It Gets?', 'answer': 'Helen Hunt', 'category': 'Rom-Coms'}, {'question': 'What was the name of the sequel to The Blair Witch Project?', 'answer': 'Book of Shadows: Blair Witch 2', 'category': 'Horror/Thriller'}, {'question': 'Name a Monty Python film besides Holy Grail.', 'answer': "And Now for Something Completely Different, Monty Python's Life of Brian, Monty Python Live at the Hollywood Bowl, Monty Python's The Meaning of Life", 'category': 'Comedies'}, {'question': "What artistic pursuit is the dream of Jason Segel's character in Forgetting Sarah Marshall?", 'answer': 'a puppeteer', 'category': 'Rom-Coms'}, {'question': 'Which horror movies from the following were released in 1980? Halloween, A Nightmare on Elm Street, The Shining, and Friday the 13th.', 'answer': 'Friday the 13th, The Shining', 'category': 'Horror/Thriller'}, {'question': 'In the film Who Framed Roger Rabbit, what is the potion that frightens toons the most?', 'answer': 'the Dip', 'category': '1980s'}, {'question': 'The music of Jackie Wilson makes everything ooze with dance moves in what 1980s film?', 'answer': 'Ghostbusters II', 'category': '1980s'}, {'question': 'In Ferris Bueller\'s Day Off, how many times "this year" has Ferris Bueller been absent?', 'answer': '9 times', 'category': '1980s'}, {'question': 'What actor narrates the film Stand by Me?', 'answer': 'Richard Dreyfuss', 'category': '1980s'}, {'question': "What is the name of Macaulay Culkin's character in Home Alone?", 'answer': 'Kevin McCallister', 'category': 'Holiday'}, {'question': 'What two stars duke it out for a popular toy in the film Jingle All the Way?', 'answer': 'Arnold Schwarzenegger, Sinbad', 'category': 'Holiday'}, {'question': "What was the angel's name in the film It's a Wonderful Life?", 'answer': 'Clarence Odbody', 'category': 'Holiday'}, {'question': 'What Die Hard star also appears in another Christmas classic, Love Actually?', 'answer': 'Alan Rickman', 'category': 'Holiday'}, {'question': "What was Bill Murray's occupation in the modern take on A Christmas Carol Scrooged?", 'answer': 'a television executive', 'category': 'Holiday'}, {'question': 'What is the name of the hotel in The Shining?', 'answer': 'the Overlook Hotel', 'category': 'Horror/Thriller'}, {'question': 'In the film Sudden Death, which hockey team is playing a home game?', 'answer': 'the Pittsburgh Penguins', 'category': 'Jean-Claude Van Damme'}, {'question': 'Sleeping Beauty is known by two other names. What is one of the names?', 'answer': 'Aurora, Briar Rose', 'category': 'Animated'}, {'question': 'Robert Rodriguez came to prominence with his Mariachi Trilogy. Name the three films.', 'answer': 'El Mariachi, Desperado, Once Upon a Time in Mexico', 'category': 'Action/Adventure'}, {'question': 'In the film Looper, how far into the past do loopers travel?', 'answer': '30 years, three months, two days, eight hours, and five seconds', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which Disney film features the Blue Fairy granting a wish?', 'answer': 'Pinocchio', 'category': 'Animated'}, {'question': 'Which film sees Arnold Schwarzenegger play a narc named Ivan Danko?', 'answer': 'Red Heat', 'category': 'Action/Adventure'}, {'question': 'Who is the only person capable of getting Jurassic Park back online?', 'answer': 'Dennis Nedry', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Beverly Hills Cop, how does Axel Foley escape the car sent to follow him?', 'answer': "he sticks a banana in the car's tailpipe", 'category': 'Comedies'}, {'question': 'After a magical night, a female leaves it up to fate by writing her phone number in a book in which romantic comedy?', 'answer': 'Serendipity', 'category': 'Rom-Coms'}, {'question': "Which horror film was released first? The Exorcist, Psycho, Night of the Living Dead, or Rosemary's Baby?", 'answer': 'Psycho', 'category': 'Horror/Thriller'}, {'question': 'In which comedy will you find the bumper sticker "I Love Uranus"?', 'answer': 'Spaceballs', 'category': 'Comedies'}, {'question': "Which actress did not appear in He's Just Not That into You? Malin Åkerman, Jennifer Aniston, Drew Barrymore, or Scarlett Johansson?", 'answer': 'Malin Åkerman', 'category': 'Rom-Coms'}, {'question': 'Which franchise sees a demon named Toby terrorizing a family?', 'answer': 'Paranormal Activity', 'category': 'Horror/Thriller'}, {'question': 'Topper Harley is the main character in which spoof flick?', 'answer': 'Hot Shots!, Hot Shots! Part Deux', 'category': 'Slapstick Spoof'}, {'question': 'What comedy team has met the Mummy, Dr. Jekyll, and Mr. Hyde?', 'answer': 'Abbott and Costello', 'category': 'Slapstick Spoof'}, {'question': 'In The Naked Gun 2½, what singer stars as the conniving Quentin Hapsburg?', 'answer': 'Robert Goulet', 'category': 'Slapstick Spoof'}, {'question': 'In the film, Young Frankenstein, Gene Wilder plays Frederick Frankenstein. What is his relation to the mad scientist who experimented on reanimating corpses?', 'answer': 'his grandson', 'category': 'Slapstick Spoof'}, {'question': 'Name the imperial officer who is the administrator of the second Death Star.', 'answer': 'Tiaan Jerjerrod', 'category': 'Star Wars'}, {'question': 'In The Empire Strikes Back, the gang eventually goes to Cloud City. What is another term for Cloud City?', 'answer': 'Bespin', 'category': 'Star Wars'}, {'question': 'What is the number of the cell block where Princess Leia is being held captive?', 'answer': '1138', 'category': 'Star Wars'}, {'question': 'Darth Vader and Obi-Wan Kenobi had their first fight on what planet?', 'answer': 'Mustafar', 'category': 'Star Wars'}, {'question': 'What actor starred opposite Marlon Brando in the mafia comedy The Freshman?', 'answer': 'Matthew Broderick', 'category': 'Mob'}, {'question': 'True or false? Joss Whedon wrote Toy Story 2.', 'answer': 'false (he wrote Toy Story)', 'category': 'Animated'}, {'question': 'Who directed the film Crouching Tiger, Hidden Dragon?', 'answer': 'Ang Lee', 'category': 'Action/Adventure'}, {'question': 'The quote "when Mr. Bigglesworth gets upset... people die!" is from what film?', 'answer': 'Austin Powers: International Man of Mystery', 'category': 'Comedies'}, {'question': "What is the name of Steve Carell's character in the Despicable Me franchise?", 'answer': 'Felonius Gru', 'category': 'Animated'}, {'question': 'True or false? Sean Connery was in The Avengers.', 'answer': "true (he was in 1998's The Avengers)", 'category': 'Action/Adventure'}, {'question': 'Who was the female star of The World According to Garp?', 'answer': 'Glenn Close, Mary Beth Hurt', 'category': 'Comedies'}, {'question': "Who played the object of Tom Cruise's affection in the Ridley Scott fantasy film Legend?", 'answer': 'Mia Sara', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Drew Barrymore goes undercover and back to high school in which film?', 'answer': 'Never Been Kissed', 'category': 'Rom-Coms'}, {'question': 'The original 1973 film The Exorcist takes place in which city?', 'answer': 'Washington, D.C.', 'category': 'Horror/Thriller'}, {'question': 'How many scenes do Gary Oldman and Bruce Willis have together in The Fifth Element?', 'answer': '0', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who starred in the rom-com 27 Dresses?', 'answer': 'Katherine Heigl', 'category': 'Rom-Coms'}, {'question': 'In what American city does The Ring take place?', 'answer': 'Seattle', 'category': 'Horror/Thriller'}, {'question': 'In the film Old School, what is the name of the electronics store where Vince Vaughn is an employee and owner?', 'answer': 'Speaker City', 'category': '2000s'}, {'question': 'Carl Fredricksen is a grouchy character in which Pixar film?', 'answer': 'Up', 'category': '2000s'}, {'question': "The film Pan's Labyrinth takes place during World War II in which country?", 'answer': 'Spain', 'category': '2000s'}, {'question': 'Frank Abagnale Jr. is the lead character in what film based on a true story?', 'answer': 'Catch Me If You Can', 'category': '2000s'}, {'question': 'What famous brother-sister duo appear in the cast of Sixteen Candles?', 'answer': 'Joan Cusack, John Cusack', 'category': '1980s'}, {'question': "In Disney's Cinderella, what are the names of the two mice?", 'answer': 'Gus, Jaq', 'category': 'Animated'}, {'question': 'Who voices the King in Shrek the Third?', 'answer': 'John Cleese', 'category': 'Animated'}, {'question': 'Which comedy focuses on friends named Jim, Oz, Finch, and Kevin?', 'answer': 'American Pie, American Pie 2, American Reunion', 'category': 'Comedies'}, {'question': 'Who stars in the summer camp comedy Meatballs?', 'answer': 'Bill Murray', 'category': 'Comedies'}, {'question': "What is the name of Orlando Bloom's character in Pirates of the Caribbean?", 'answer': 'William Turner Jr.', 'category': 'Fantasy'}, {'question': 'Who plays the effeminate pacifist pirate captain in Stardust?', 'answer': 'Robert De Niro', 'category': 'Fantasy'}, {'question': 'Name the film that this quote is from: "Give me that baby, you warthog from hell!"?', 'answer': 'Raising Arizona', 'category': 'Quotes'}, {'question': 'What film is this quote from: "Wise men say: \'Forgiveness is divine, but never pay full price for late pizza.\'"?', 'answer': 'Teenage Mutant Ninja Turtles (1990)', 'category': 'Quotes'}, {'question': 'Where was horror movie villain Dr. Hannibal Lecter born?', 'answer': 'Lithuania', 'category': 'Horror'}, {'question': 'Which of these haunted houses is not allegedly based on a true story? The Amityville Horror, The Others, The Changeling, or The Haunting in Connecticut?', 'answer': 'The Others', 'category': 'Horror'}, {'question': "According to Cher's father in Clueless, everywhere in L.A. takes what?", 'answer': '20 minutes', 'category': 'Rom-Coms'}, {'question': 'Who are Dane Cook and Dax Shepard fighting over in the film Employee of the Month?', 'answer': 'Jessica Simpson', 'category': 'Rom-Coms'}, {'question': 'What is the name of the Imperial that Darth Vader force chokes in Star Wars: Episode IV – A New Hope?', 'answer': 'Conan Antonio Motti', 'category': 'Star Wars'}, {'question': 'In Star Wars: Episode II – Attack of the Clones, what drug does a dealer try to sell Obi-Wan in the nightclub?', 'answer': 'death sticks', 'category': 'Star Wars'}, {'question': 'In A New Hope, who had the first spoken line of the film? Who had the last?', 'answer': 'C-3PO, Luke Skywalker', 'category': 'Star Wars'}, {'question': 'In The Empire Strikes Back, what were chewing on the power cables of the Millennium Falcon?', 'answer': 'mynocks', 'category': 'Star Wars'}, {'question': 'What song was playing when Iron Man joins Captain America in the fight against Loki in Stuttgart, Germany in The Avengers?', 'answer': 'Shoot to Thrill', 'category': 'Marvel'}, {'question': "What is the name of Michael Rooker's character in Guardians of the Galaxy?", 'answer': 'Yondu Udonta', 'category': 'Marvel'}, {'question': "Who plays Hawkeye's wife in Avengers: Age of Ultron?", 'answer': 'Linda Cardellini', 'category': 'Marvel'}, {'question': 'In The Incredible Hulk, who played Emil Blonsky / the Abomination?', 'answer': 'Tim Roth', 'category': 'Marvel'}, {'question': 'Name the Best Picture winners that Leonardo DiCaprio has been in. ', 'answer': 'Titanic, The Departed', 'category': 'Leonardo DiCaprio'}, {'question': "How many of Private Ryan's brothers were killed in the film Saving Private Ryan?", 'answer': '3 brothers', 'category': 'War'}, {'question': "In Rush Hour 2, who played the Versace salesman that was going to turn Chan and Tucker's characters into the belle of the ball?", 'answer': 'Jeremy Piven', 'category': 'Comedies'}, {'question': "What is Derek Zoolander's signature modeling look?", 'answer': 'Blue Steel', 'category': 'Comedies'}, {'question': 'In what film does Richard Dreyfuss play a music teacher with a deaf son?', 'answer': "Mr. Holland's Opus", 'category': 'Dramas'}, {'question': "What secret is Brendan Fraser's character keeping in the 1992 film School Ties?", 'answer': 'he is Jewish', 'category': 'Dramas'}, {'question': 'Who was the frontrunner to play Peter Parker in the upcoming Spider-Man film before Tom Holland was cast?', 'answer': 'Asa Butterfield', 'category': 'Current Movie News'}, {'question': 'What actor has recently been rumored for two different roles in both Green Lantern and Wonder Woman?', 'answer': 'Chris Pine', 'category': 'Current Movie News'}, {'question': 'Warren Beatty starred in and directed all of these films except which: Love Affair, Bugsy, Reds, or Heaven Can Wait?', 'answer': 'Bugsy, Love Affair', 'category': 'Directors'}, {'question': 'Who directed the 1969 counterculture film classic Easy Rider?', 'answer': 'Dennis Hopper', 'category': 'Directors'}, {'question': 'Who directed the 1976 movie Carrie, based on a novel by Stephen King?', 'answer': 'Brian De Palma', 'category': 'Horror'}, {'question': 'In what campy horror classic does Kiefer Sutherland play a villainous vampire?', 'answer': 'The Lost Boys', 'category': 'Horror'}, {'question': 'Helen Hunt won the 1998 Best Actress Oscar for her performance in which talkie?', 'answer': 'As Good as It Gets', 'category': 'Oscars'}, {'question': 'How many Oscars has Paul Thomas Anderson won?', 'answer': '0', 'category': 'Oscars'}, {'question': 'Which Humphrey Bogart movie features the gangster Johnny Rocco?', 'answer': 'Key Largo', 'category': 'Mob'}, {'question': "Which actor portrayed Marlon Brando's Vito Corleone character as a young man?", 'answer': 'Robert De Niro', 'category': 'Mob'}, {'question': 'Who directed Denzel Washington in the 2007 film American Gangster?', 'answer': 'Ridley Scott', 'category': 'Mob'}, {'question': 'What two states do the majority of Donnie Brasco take place in?', 'answer': 'Florida, New York', 'category': 'Mob'}, {'question': "Who played Mel Gibson's eldest son in The Patriot?", 'answer': 'Heath Ledger', 'category': 'War'}, {'question': 'Who directed the war movies Paths of Glory and Full Metal Jacket?', 'answer': 'Stanley Kubrick', 'category': 'War'}, {'question': 'Major Major is a character in which 1970 war film?', 'answer': 'Catch-22', 'category': 'War'}, {'question': 'Meryl Streep received her first Oscar nomination for her performance in which film?', 'answer': 'The Deer Hunter', 'category': 'War'}, {'question': 'Name a film in which Catherine Zeta-Jones plays a love interest of John Cusack.', 'answer': "High Fidelity, America's Sweethearts", 'category': 'Rom-Coms'}, {'question': 'What game does Matthew Broderick make the supercomputer play against itself to keep itself busy at the end of WarGames?', 'answer': 'tic-tac-toe', 'category': '1980s'}, {'question': 'What causes the death of the newlyweds in Beetlejuice?', 'answer': 'they drown after a car accident', 'category': '1980s'}, {'question': "What final dish does Remy make for Anton Ego in Pixar's Ratatouille?", 'answer': 'ratatouille', 'category': 'Animated'}, {'question': 'In Toy Story, what is the name of the bully kid?', 'answer': 'Sid Phillips', 'category': 'Animated'}, {'question': 'What is the name of the demon that terrorizes the characters in the Paranormal Activity films?', 'answer': 'Toby', 'category': 'Horror'}, {'question': "Which 2006 film is credited as James Gunn's directorial debut?", 'answer': 'Slither', 'category': 'Horror'}, {'question': 'Famed Star Wars scribe Lawrence Kasdan also wrote a 1983 drama that stars Kevin Kline, Glenn Close, and Tom Berenger. Name the film.', 'answer': 'The Big Chill', 'category': 'Dramas'}, {'question': 'Who plays Superman actor George Reeves in the true crime mystery Hollywoodland?', 'answer': 'Ben Affleck', 'category': 'Dramas'}, {'question': 'Robert Rodriguez made Sharkboy and Lavagirl the same year he adapted what graphic novel into a hard R extravaganza?', 'answer': 'Sin City', 'category': 'Directors'}, {'question': 'What is the only Mad Max film that George Miller did not direct on his own?', 'answer': 'Mad Max Beyond Thunderdome', 'category': 'Directors'}, {'question': 'How many arrows took down Boromir in The Lord of the Rings: The Fellowship of the Ring?', 'answer': '3 arrows', 'category': 'Fantasy'}, {'question': 'What are the four houses of Hogwarts?', 'answer': 'Gryffindor, Hufflepuff, Ravenclaw, Slytherin', 'category': 'Fantasy'}, {'question': 'What Steven Spielberg big-budget World War II film flopped at the box office?', 'answer': '1941', 'category': 'Steven Spielberg'}, {'question': 'During the filming of what movie did Spielberg meet the woman he later married?', 'answer': 'Indiana Jones and the Temple of Doom', 'category': 'Steven Spielberg'}, {'question': 'What is the only Spielberg film to win an Oscar for acting?', 'answer': 'Lincoln', 'category': 'Steven Spielberg'}, {'question': 'Before appearing in the 2009 reboot of Star Trek, Zoe Saldana played a big fan of the franchise in which Spielberg film?', 'answer': 'The Terminal', 'category': 'Steven Spielberg'}, {'question': "Which song greets Bill Murray's character each morning in Groundhog Day?", 'answer': 'I Got You Babe', 'category': '1990s'}, {'question': 'Who plays gangster Dutch Schultz in the film Billy Bathgate?', 'answer': 'Dustin Hoffman', 'category': '1990s'}, {'question': 'Which 90s movie features a character named Sonny Koufax?', 'answer': 'Big Daddy', 'category': '1990s'}, {'question': 'Which disturbing film was adapted from a Chuck Palahniuk novel?', 'answer': 'Fight Club', 'category': '1990s'}, {'question': 'What actress is married to the mob in the film Married to the Mob?', 'answer': 'Michelle Pfeiffer', 'category': 'Mob'}, {'question': 'Who played Toad in the 2000 film X-Men?', 'answer': 'Ray Park', 'category': 'Comic Book'}, {'question': "Who plays Harrison Ford's son in the film Cowboys & Aliens?", 'answer': 'Paul Dano', 'category': 'Comic Book'}, {'question': 'What name from the reservation list does Ferris Bueller use to get into fancy restaurant Chez Quis?', 'answer': 'Abe Froman', 'category': 'Comedies'}, {'question': "Who plays Abigail Breslin's troubled uncle in Little Miss Sunshine?", 'answer': 'Steve Carell', 'category': 'Comedies'}, {'question': 'This 1968 classic was directed by Roman Polanski and starred Mia Farrow.', 'answer': "Rosemary's Baby", 'category': 'Horror'}, {'question': 'After starring in Underworld, Kate Beckinsale starred in what other feature film having both vampires and werewolves?', 'answer': 'Van Helsing', 'category': 'Horror'}, {'question': 'What Disney film has a couple of buzzards named Trigger and Nutsy?', 'answer': 'Robin Hood', 'category': 'Animated'}, {'question': 'In the Toy Story series, who voiced the piggy bank Hamm?', 'answer': 'John Ratzenberger', 'category': 'Animated'}, {'question': 'Name the movie: a princess who was prepared to be wed is sent away by an evil queen to New York, where she falls in love with a lawyer.', 'answer': 'Enchanted', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In The Princess Bride, what does Westley say instead of "I love you."?', 'answer': 'As you wish.', 'category': 'Fantasy/Sci-Fi'}, {'question': 'At the end of this movie, Jennifer Connelly states "You have no power over me.", which causes the world around her to disappear.', 'answer': 'Labyrinth', 'category': 'Quotes'}, {'question': 'Finish this quote: "I have come here to ___ and kick ass... and I\'m all out of ___.".', 'answer': 'chew bubblegum, bubblegum (in They Live)', 'category': 'Quotes'}, {'question': 'Name the movie based on the synopsis: two boys growing up in a violent neighborhood of Rio de Janeiro take different paths. One becomes a photographer, the other a drug dealer.', 'answer': 'City of God', 'category': 'Mob'}, {'question': 'Which actor played the lead in the classic mobster films The Public Enemy, White Heat, and Angels with Dirty Faces?', 'answer': 'James Cagney', 'category': 'Mob'}, {'question': 'What is Al Capone eventually charged with in The Untouchables?', 'answer': 'tax evasion', 'category': 'Mob'}, {'question': 'Who directed Once Upon a Time in America?', 'answer': 'Sergio Leone', 'category': 'Mob'}, {'question': 'Who is literally carried away by Richard Gere in An Officer and a Gentleman?', 'answer': 'Debra Winger', 'category': '1980s'}, {'question': 'What is the name of the company that Tom Hanks works for in the movie Big?', 'answer': 'MacMillan Toys', 'category': '1980s'}, {'question': 'Which film has a dance instructor named Johnny Castle?', 'answer': 'Dirty Dancing', 'category': '1980s'}, {'question': 'In the film Who Framed Roger Rabbit, who framed Roger Rabbit?', 'answer': 'Judge Doom', 'category': '1980s'}, {'question': 'In the film Tropic Thunder, what is the name of the film that Tugg Speedman, played by Ben Stiller, stars in about a disabled farmer?', 'answer': 'Simple Jack', 'category': 'Comedies'}, {'question': 'What actress plays the matriarch of the family in the film The Royal Tenenbaums?', 'answer': 'Anjelica Huston', 'category': 'Comedies'}, {'question': 'Aladdin has a pet named Abu. What kind of animal is it?', 'answer': 'a monkey', 'category': 'Animated'}, {'question': 'In the Pixar film Brave, what happens when the queen eats the enchanted cake that Merida gives her?', 'answer': 'she turns into a bear', 'category': 'Animated'}, {'question': 'Who switches homes with Kate Winslet in the film The Holiday?', 'answer': 'Cameron Diaz', 'category': 'Rom-Coms'}, {'question': 'Who played Tad Hamilton in Win a Date with Tad Hamilton!?', 'answer': 'Josh Duhamel', 'category': 'Rom-Coms'}, {'question': "Who tells Harry he's a wizard in the film Harry Potter and the Sorcerer's Stone?", 'answer': 'Rubeus Hagrid', 'category': 'Fantasy'}, {'question': 'Who voiced the dragon in the film Dragonheart?', 'answer': 'Sean Connery', 'category': 'Fantasy'}, {'question': 'At the end of what film do Patrick Dempsey and Amanda Peterson drive a lawnmower off into the sunset?', 'answer': "Can't Buy Me Love", 'category': '1980s'}, {'question': 'Who play the Three Amigos?', 'answer': 'Chevy Chase, Martin Short, Steve Martin', 'category': '1980s'}, {'question': 'Name two of the four directors who directed segments in Twilight Zone: The Movie.', 'answer': 'George Miller, Joe Dante, John Landis, Steven Spielberg', 'category': 'Directors'}, {'question': "What was Tim Burton and Johnny Depp's first collaboration?", 'answer': 'Edward Scissorhands', 'category': 'Directors'}, {'question': 'Who were the two leads in the 1994 sci-fi film Stargate?', 'answer': 'James Spader, Kurt Russell', 'category': 'Sci-Fi'}, {'question': "Who plays the captain in Joss Whedon's Serenity?", 'answer': 'Nathan Fillion', 'category': 'Sci-Fi'}, {'question': 'What color is the pill that Neo needs to take to get out of the Matrix?', 'answer': 'red', 'category': 'Sci-Fi'}, {'question': 'In what film do Matt Damon and Drew Barrymore set out to create a second Earth after the first one is destroyed?', 'answer': 'Titan A.E.', 'category': 'Sci-Fi'}, {'question': "Which ex-Mouseketeer's film debut was in Honey, I Blew Up the Kid?", 'answer': 'Keri Russell', 'category': 'Sci-Fi'}, {'question': 'In The Others, why must the doors and curtains be closed at all times?', 'answer': 'the children are photosensitive', 'category': 'Horror'}, {'question': 'What are possessed humans called in the Evil Dead films?', 'answer': 'Deadites', 'category': 'Horror'}, {'question': 'In the 2007 film 1408, who is trapped in an evil hotel room?', 'answer': 'John Cusack', 'category': 'Horror'}, {'question': 'The real-life Amityville Horror house stands in which U.S. state?', 'answer': 'New York', 'category': 'Horror'}, {'question': "What was Disney's very first science-fiction film?", 'answer': '20,000 Leagues Under the Sea', 'category': 'Family'}, {'question': 'Who was originally chosen to write Star Wars: The Force Awakens before being replaced by Lawrence Kasdan?', 'answer': 'Michael Arndt', 'category': 'Current Movie News'}, {'question': 'Which Rogue One actor is rumored to be the villain in the new Doctor Strange movie?', 'answer': 'Mads Mikkelsen', 'category': 'Current Movie News'}, {'question': 'Who directed Denzel Washington in He Got Game, Malcolm X, and Inside Man?', 'answer': 'Spike Lee', 'category': 'Directors'}, {'question': "Who directed the 1992 film adaptation of Bram Stoker's Dracula?", 'answer': 'Francis Ford Coppola', 'category': 'Directors'}, {'question': "In the 1976 film The Omen, what shape does Damien's birthmark take?", 'answer': '666', 'category': 'Horror'}, {'question': 'This 1986 horror film was directed by David Cronenberg and starred Jeff Goldblum.', 'answer': 'The Fly', 'category': 'Horror'}, {'question': 'Banzai, Shenzi, and Ed are the names of three characters in what film?', 'answer': 'The Lion King', 'category': 'Animated'}, {'question': 'In the film Alice in Wonderland, what are the Mad Hatter and the March Hare celebrating when Alice stumbles upon them?', 'answer': 'their unbirthdays', 'category': 'Animated'}, {'question': 'What super-strong mutant does Vinnie Jones play in X-Men: The Last Stand?', 'answer': 'Juggernaut', 'category': 'Comic Book'}, {'question': "In 2003's Daredevil, who kills Elektra's father?", 'answer': 'Bullseye', 'category': 'Comic Book'}, {'question': 'In The Lion, the Witch and the Wardrobe, who played Mr. Tumnus?', 'answer': 'James McAvoy', 'category': 'Fantasy/Sci-Fi'}, {'question': "What were Gandalf's final words to the Fellowship in The Lord of the Rings: The Fellowship of the Ring?", 'answer': 'Fly, you fools!', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who won the Academy Award for Best Supporting Actor for his work in the 1989 film Glory?', 'answer': 'Denzel Washington', 'category': 'Oscars'}, {'question': "Who won the Academy Award for Best Supporting Actress playing Cher's mother in the 1987 film Moonstruck?", 'answer': 'Olympia Dukakis', 'category': 'Oscars'}, {'question': 'What Christopher Nolan film was nominated for Best Picture (as of August 2015)?', 'answer': 'Inception', 'category': 'Oscars'}, {'question': 'Jennifer Hudson won an Oscar for her portrayal of Effie White in what 2006 musical?', 'answer': 'Dreamgirls', 'category': 'Oscars'}, {'question': 'In what school film does rebel John Bender describe his violent father?', 'answer': 'The Breakfast Club', 'category': 'Coming of Age'}, {'question': 'What famous baseball player signed the ball that went over the fence in the film The Sandlot?', 'answer': 'Babe Ruth', 'category': 'Coming of Age'}, {'question': 'In the film Dazed and Confused, which President is said to have grown marijuana on his plantation?', 'answer': 'George Washington', 'category': 'Coming of Age'}, {'question': 'According to the epilogue in Fast Times at Ridgemont High, which celebrity does Spicoli save from drowning?', 'answer': 'Brooke Shields', 'category': 'Coming of Age'}, {'question': "Who plays the wife of Robert De Niro's therapist in the film Analyze This?", 'answer': 'Lisa Kudrow', 'category': 'Mob'}, {'question': "What was the name of Val Kilmer's character in the 1988 film Willow?", 'answer': 'Madmartigan', 'category': 'Fantasy'}, {'question': 'Who plays Amelia Earhart in Night at the Museum: Battle of the Smithsonian?', 'answer': 'Amy Adams', 'category': 'Fantasy'}, {'question': 'Who was nominated for Best Supporting Actor for The Departed?', 'answer': 'Mark Wahlberg', 'category': 'Oscars'}, {'question': 'Which of the following musicals was not nominated for Best Picture: An American in Paris, Bye Bye Birdie, Gigi, or Oliver!?', 'answer': 'Bye Bye Birdie', 'category': 'Oscars'}, {'question': 'Who is writing the upcoming Lucille Ball biopic?', 'answer': 'Aaron Sorkin', 'category': 'Current Movie News'}, {'question': 'Who is set to play Roger Ebert?', 'answer': 'Josh Gad', 'category': 'Current Movie News'}, {'question': 'In which 1986 comedy does Goldie Hawn play a football coach?', 'answer': 'Wildcats', 'category': 'Comedies'}, {'question': 'Where do Hugh Grant and Julia Roberts first meet in Notting Hill?', 'answer': 'a bookstore', 'category': 'Comedies'}, {'question': "What is the name of Hiccup's dragon in How to Train Your Dragon?", 'answer': 'Toothless', 'category': 'Animated'}, {'question': 'Who provided the voice of Frozone in The Incredibles?', 'answer': 'Samuel L. Jackson', 'category': 'Animated'}, {'question': "Which actress has not played Hugh Grant's love interest: Madeleine Stowe, Sarah Jessica Parker, Drew Barrymore, or Julianne Moore?", 'answer': 'Madeleine Stowe (with Parker in Did You Hear About the Morgans?, with Barrymore in Music and Lyrics, with Moore in Nine Months)', 'category': 'Rom-Coms'}, {'question': "What does Channing Tatum stuff up his nose in the film She's the Man?", 'answer': 'a tampon', 'category': 'Rom-Coms'}, {'question': 'In which film do Sandra Bullock and Nicole Kidman play sister witches?', 'answer': 'Practical Magic', 'category': 'Sandra Bullock'}, {'question': 'Which state does Sandra Bullock represent in Miss Congeniality?', 'answer': 'New Jersey', 'category': 'Sandra Bullock'}, {'question': "What country music superstar plays Sandra Bullock's husband in The Blind Side?", 'answer': 'Tim McGraw', 'category': 'Sandra Bullock'}, {'question': "In what film is Sandra Bullock's boss played by Hugh Grant?", 'answer': 'Two Weeks Notice', 'category': 'Sandra Bullock'}, {'question': "What was Leonardo DiCaprio's first movie as the lead?", 'answer': "This Boy's Life", 'category': 'Leonardo DiCaprio'}, {'question': 'In what film does Leonardo DiCaprio play two characters?', 'answer': 'The Man in the Iron Mask', 'category': 'Leonardo DiCaprio'}, {'question': 'A young Leonardo DiCaprio appears in what Sam Raimi western?', 'answer': 'The Quick and the Dead', 'category': 'Leonardo DiCaprio'}, {'question': 'Both Scorsese favorites, what film pairs up Leonardo DiCaprio with Robert De Niro?', 'answer': "This Boy's Life", 'category': 'Leonardo DiCaprio'}, {'question': 'Martin Scorsese received his first Best Director Oscar nomination for which film?', 'answer': 'Raging Bull', 'category': 'Martin Scorsese'}, {'question': 'Name the movie: "Yeah. The funny thing is - on the outside, I was an honest man, straight as an arrow. I had to come to prison to be a crook.".', 'answer': 'The Shawshank Redemption', 'category': 'Quotes'}, {'question': 'Which movie has the line, "Now that\'s a real badge, I\'m a real cop, and this is a real f-ing gun!"?', 'answer': 'Lethal Weapon', 'category': 'Quotes'}, {'question': 'Kevin Kline stars in what 80s comedy about an unlikely group of diamond robbers?', 'answer': 'A Fish Called Wanda', 'category': '1980s'}, {'question': 'What Oscar-winning actress played the best friend of Sarah Jessica Parker in Girls Just Want to Have Fun?', 'answer': 'Helen Hunt', 'category': '1980s'}, {'question': 'Joshua Jackson and Paul Walker both star in this film about a secret society of the same name. Name the film.', 'answer': 'The Skulls', 'category': 'Dramas'}, {'question': "What happened to Meryl Streep's child in A Cry in the Dark, originally titled Evil Angels?", 'answer': 'she was taken by a dingo', 'category': 'Dramas'}, {'question': 'What is the full title for The Princess Diaries 2?', 'answer': 'The Princess Diaries 2: Royal Engagement', 'category': 'Rom-Coms'}, {'question': 'What sport do Annie and George Banks play together when Annie is having trouble sleeping the day before her wedding in Father of the Bride from 1991?', 'answer': 'basketball', 'category': 'Rom-Coms'}, {'question': 'On the coattails of Netflix, Hulu, and Amazon, this high-profile company is interested in producing its own entertainment content. Name the company.', 'answer': 'Apple', 'category': 'Current Movie News'}, {'question': 'Scheduling conflicts were the reason this actor needed to drop out of Fifty Shades of Grey.', 'answer': 'Charlie Hunnam', 'category': 'Current Movie News'}, {'question': 'Which Amy Heckerling film had us using the catchphrase "As If!"?', 'answer': 'Clueless', 'category': 'Directors'}, {'question': "What Steven Spielberg film features an alien that has a liking for Reese's Pieces?", 'answer': 'E.T. the Extra-Terrestrial', 'category': 'Directors'}, {'question': 'Who won an Oscar for portraying Oscar winner Katharine Hepburn?', 'answer': 'Cate Blanchett (for The Aviator)', 'category': 'Oscars'}, {'question': 'For which movie did Rachel Weisz win an acting Oscar?', 'answer': 'The Constant Gardener', 'category': 'Oscars'}, {'question': 'Who is the youngest actor to take home an Oscar?', 'answer': "Tatum O'Neal (for Paper Moon)", 'category': 'Oscars'}, {'question': 'For which movie did Marlon Brando win his Oscar?', 'answer': 'On the Waterfront, The Godfather', 'category': 'Oscars'}, {'question': 'Which sci-fi film features a eight-foot-tall robot named Gort?', 'answer': 'The Day the Earth Stood Still (1951)', 'category': 'Sci-Fi'}, {'question': 'What special ability does Riddick have in the Riddick film series?', 'answer': 'he can see in the dark', 'category': 'Sci-Fi'}, {'question': 'How many exes were a part of the League of Evil Exes in Scott Pilgrim vs. the World?', 'answer': '7 exes', 'category': 'Sci-Fi'}, {'question': 'On which planet do the aliens wait in 2001: A Space Odyssey?', 'answer': 'Jupiter', 'category': 'Sci-Fi'}, {'question': "Who plays Arnold Schwarzenegger's wife in 1990's Total Recall?", 'answer': 'Sharon Stone', 'category': 'Sci-Fi'}, {'question': 'According to Indy, in Indiana Jones and the Last Crusade, where did Marcus once get lost?', 'answer': 'in his own museum', 'category': 'Action/Adventure'}, {'question': 'Who played the Keymaster and the Gatekeeper in Ghostbusters?', 'answer': 'Rick Moranis, Sigourney Weaver', 'category': 'Comedies'}, {'question': 'In A Night at the Roxbury, who was the celebrity that Chris Kattan and Will Ferrell are always bragging about having bumped into at a payphone?', 'answer': 'Emilio Estevez', 'category': 'Comedies'}, {'question': 'Which M. Night Shyamalan movie came first: The Happening, The Last Airbender, or Lady in the Water?', 'answer': 'Lady in the Water', 'category': 'Directors'}, {'question': 'True or false? Clint Eastwood also acted in his directorial debut.', 'answer': 'true (he acted in Play Misty for Me)', 'category': 'Directors'}, {'question': 'Which member of the Perron family gets possessed at the end of The Conjuring?', 'answer': 'the mother Carolyn Perron', 'category': 'Horror'}, {'question': 'What creature feature stars Bill Pullman, Oliver Platt, and Betty White?', 'answer': 'Lake Placid', 'category': 'Horror'}, {'question': "Which Spider-Man 3 villain was learned to be the cause of Uncle Ben's death in Sam Raimi's Spider-Man trilogy?", 'answer': 'the Sandman', 'category': 'Comic Book'}, {'question': "What is the name of Bruce Wayne's love interest in Tim Burton's 1989 Batman?", 'answer': 'Vicki Vale', 'category': 'Comic Book'}, {'question': 'Name one actor who has played Zeus, king of the gods.', 'answer': "Laurence Olivier (in 1981's Clash of the Titans), Liam Neeson (in 2010's Clash of the Titans, Wrath of the Titans), Luke Evans (in Immortals), Niall MacGinnis (in Jason and the Argonauts), Rip Torn (in 1997's Hercules), Sean Bean (in Percy Jackson & the Olympians: The Lightning Thief)", 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who was originally cast to play the role of Aragorn in the Lord of the Rings trilogy?', 'answer': 'Stuart Townsend', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What sci-fi icon is in charge of the moonbase in Airplane II: The Sequel?', 'answer': 'William Shatner', 'category': 'Comedies'}, {'question': 'What breakfast food does John Candy make giant versions of in Uncle Buck?', 'answer': 'pancakes', 'category': 'Comedies'}, {'question': 'Name three horror films featuring scream queen Jamie Lee Curtis (as of September 2015).', 'answer': 'Halloween (1978), The Fog, Prom Night, Terror Train, Roadgames, Halloween II (1981), Halloween III: Season of the Witch, Halloween H20: 20 Years Later, Virus, Halloween: Resurrection', 'category': 'Horror'}, {'question': 'Which character attends Bates High School?', 'answer': 'Carrie White', 'category': 'Horror'}, {'question': 'Which two horror remakes both star Supernatural star Jared Padalecki?', 'answer': 'House of Wax, Friday the 13th', 'category': 'Horror'}, {'question': 'In what David Arquette film does a small town come under the attack of giant spiders?', 'answer': 'Eight Legged Freaks', 'category': 'Horror'}, {'question': 'What is the only film since 2001 for which Leonardo DiCaprio did not receive top billing?', 'answer': 'Django Unchained', 'category': 'Leonardo DiCaprio'}, {'question': "What is the name of Leonardo DiCaprio's dead wife played by Marion Cotillard in Inception?", 'answer': 'Mal Cobb', 'category': 'Leonardo DiCaprio'}, {'question': 'Who plays the nurse whom Leonardo DiCaprio romances in Catch Me If You Can?', 'answer': 'Amy Adams', 'category': 'Leonardo DiCaprio'}, {'question': 'Leonardo DiCaprio worked with Woody Allen in what film?', 'answer': 'Celebrity', 'category': 'Leonardo DiCaprio'}, {'question': 'What baseball movie is based on the novel Shoeless Joe?', 'answer': 'Field of Dreams', 'category': 'Sports'}, {'question': 'Who voices Batman in The Lego Movie?', 'answer': 'Will Arnett', 'category': 'Animated'}, {'question': 'What is the name of the blue fairy in Sleeping Beauty?', 'answer': 'Merryweather', 'category': 'Animated'}, {'question': 'In what year did Disney buy Lucasfilm and the Star Wars franchise for four billion dollars?', 'answer': '2012', 'category': 'Current Movie News'}, {'question': 'Author Anthony Horowitz claims Idris Elba is too "what" to be Bond?', 'answer': 'street', 'category': 'Current Movie News'}, {'question': 'Big Hero 6 won Best Animated Feature Film in 2015. Name one other animated film that was nominated for the award that year.', 'answer': 'How to Train Your Dragon 2, The Boxtrolls, The Tale of the Princess Kaguya, Song of the Sea', 'category': 'Oscars'}, {'question': 'What was the first color film to win a Best Picture Oscar?', 'answer': 'Gone with the Wind', 'category': 'Oscars'}, {'question': 'In Beverly Hills Cop, what magazine does Axel Foley pretend to write for to get a room without a reservation?', 'answer': 'Rolling Stone', 'category': '1980s'}, {'question': 'Musician Jenny Lewis, Shelley Long, and Craig T. Nelson star in this 1989 comedy about this Southern California wilderness girl organization.', 'answer': 'Troop Beverly Hills', 'category': '1980s'}, {'question': "What does Samuel L. Jackson's character call himself in Unbreakable?", 'answer': 'Mr. Glass', 'category': 'Dramas'}, {'question': 'What kind of animal is the host animal in the medical disaster film Outbreak?', 'answer': 'a white-faced capuchin monkey', 'category': 'Dramas'}, {'question': 'Hugh Jackman stars in what film about boxing robots?', 'answer': 'Real Steel', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who voices the alien Paul in the sci-fi comedy Paul?', 'answer': 'Seth Rogen', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What causes Christopher Reeve to return to the 1970s after spending time in 1912 in the movie Somewhere in Time?', 'answer': 'he sees a penny from 1979', 'category': 'Romance'}, {'question': "Where does Barbra Streisand's character first meet Robert Redford's character in the 1973 film The Way We Were?", 'answer': 'in college', 'category': 'Romance'}, {'question': "What happens the first time Sonora Webster performs in the girl and horse high diving act in Wild Hearts Can't be Broken?", 'answer': 'there is an accident that causes her to become blind', 'category': 'Romance'}, {'question': "What was the name of Romeo's girlfriend before he met Juliet in Baz Luhrmann's Romeo + Juliet?", 'answer': 'Rosaline', 'category': 'Romance'}, {'question': 'What landmark was the setting of the final scene of Close Encounters of the Third Kind?', 'answer': 'Devils Tower', 'category': 'Steven Spielberg'}, {'question': 'In Jaws, what is the name of the boat that is used to hunt the shark?', 'answer': 'the Orca', 'category': 'Steven Spielberg'}, {'question': 'Indiana Jones hates snakes. What animal does his father hate?', 'answer': 'rats', 'category': 'Steven Spielberg'}, {'question': "What was Tom Hanks's character's profession in Saving Private Ryan before he went out to war?", 'answer': 'a high school English teacher', 'category': 'Steven Spielberg'}, {'question': 'Who played the station inspector in Hugo?', 'answer': 'Sacha Baron Cohen', 'category': 'Martin Scorsese'}, {'question': 'Who plays the devil in the Brendan Fraser classic Bedazzled?', 'answer': 'Elizabeth Hurley', 'category': 'Comedies'}, {'question': 'Who plays Captain Dickson in 21 Jump Street?', 'answer': 'Ice Cube', 'category': 'Comedies'}, {'question': 'In Phone Booth, who plays the mysterious caller who has a sniper rifle aimed at Colin Farrell?', 'answer': 'Kiefer Sutherland', 'category': 'Dramas'}, {'question': 'Which actors played David Frost and Richard Nixon in the film Frost/Nixon?', 'answer': 'Michael Sheen, Frank Langella', 'category': 'Dramas'}, {'question': 'A young John Travolta appeared in what early Stephen King classic?', 'answer': 'Carrie', 'category': 'Horror'}, {'question': 'Who are the four leads in I Know What You Did Last Summer?', 'answer': 'Freddie Prinze Jr., Jennifer Love Hewitt, Ryan Phillippe, Sarah Michelle Gellar', 'category': 'Horror'}, {'question': "What monument is comically miniaturized in 1984's This Is Spinal Tap?", 'answer': 'Stonehenge', 'category': '1980s'}, {'question': "Who plays Rob Lowe's best friend in About Last Night?", 'answer': 'James Belushi', 'category': '1980s'}, {'question': 'In the 2009 film Star Trek, who played the villainous Romulan Captain Nero?', 'answer': 'Eric Bana', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Elias Koteas played what character in the original Teenage Mutant Ninja Turtles?', 'answer': 'Casey Jones', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What movie do Emma Stone and Ryan Gosling reenact in the film Crazy, Stupid, Love.?', 'answer': 'Dirty Dancing', 'category': 'Rom-Coms'}, {'question': "What Academy Award winning actor plays Annie Hall's brother in Annie Hall?", 'answer': 'Christopher Walken', 'category': 'Rom-Coms'}, {'question': 'What do Jack and Rose repeatedly say to each other throughout Titanic?', 'answer': 'You jump, I jump', 'category': 'Romance'}, {'question': 'What does Harry tell Sally he always does when starting a new book in When Harry Met Sally...?', 'answer': 'read the last page first', 'category': 'Romance'}, {'question': 'What is the name of the song that Ingrid Bergman asks Sam to play in the 1943 film Casablanca?', 'answer': 'As Time Goes By', 'category': 'Romance'}, {'question': "In The Notebook, at one point in the film, Rachel McAdams' character is engaged to be married to Lon Hammond. Who plays Lon Hammond?", 'answer': 'James Marsden', 'category': 'Romance'}, {'question': "Which noted athlete appears as a former lover in the film There's Something About Mary?", 'answer': 'Brett Favre', 'category': 'Sports'}, {'question': 'The 2002 film Blue Crush features what sport?', 'answer': 'surfing', 'category': 'Sports'}, {'question': 'In the movie Major League, where does Cleveland Indians owner Rachel Phelps want to move the team?', 'answer': 'Miami', 'category': 'Sports'}, {'question': 'In the movie Hoosiers, who plays the teacher that Gene Hackman eventually becomes close with?', 'answer': 'Barbara Hershey', 'category': 'Sports'}, {'question': 'Ronda Rousey is set to star in the reboot of Road House. Who is the director set to direct the feature?', 'answer': 'Nick Cassavetes', 'category': 'Current Movie News'}, {'question': "What is the name of Atreyu's horse in The NeverEnding Story?", 'answer': 'Artax', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the 1984 sci-fi fantasy film Dune?', 'answer': 'David Lynch', 'category': 'Fantasy/Sci-Fi'}, {'question': "The recent trailer for Daddy's Home, with Mark Wahlberg and Will Ferrell, was released. Who plays the wife in the trailer?", 'answer': 'Linda Cardellini', 'category': 'Current Movie News'}, {'question': 'Who is rumored to direct Ant-Man 2?', 'answer': 'Peyton Reed', 'category': 'Current Movie News'}, {'question': "Name the five main actors in 1985's The Breakfast Club.", 'answer': 'Ally Sheedy, Anthony Michael Hall, Emilio Estevez, Judd Nelson, Molly Ringwald', 'category': '1980s'}, {'question': "In what sci-fi musical do Jeff Goldblum, Jim Carrey, and Damon Wayans play aliens who crash-land in Geena Davis' pool?", 'answer': 'Earth Girls Are Easy', 'category': '1980s'}, {'question': "Which of the following Disney songs did not win an Oscar for Best Original Song: “I Just Can't Wait to Be King” from The Lion King, “Under the Sea” from The Little Mermaid, “A Whole New World” from Aladdin, or “Colors of the Wind” from Pocahontas?", 'answer': '"I Just Can\'t Wait to Be King" from The Lion King', 'category': 'Oscars'}, {'question': 'Which of these actors has never been nominated for an Oscar: Sharon Stone, Gary Oldman, Martin Sheen, or James Caan?', 'answer': 'Martin Sheen (Stone for Casino, Oldman for Tinker Tailor Soldier Spy, Caan for The Godfather)', 'category': 'Oscars'}, {'question': 'What gun trick does Angelina Jolie teach James McAvoy how to do in Wanted?', 'answer': 'curving bullets', 'category': 'Comic Book'}, {'question': 'Who directed A History of Violence?', 'answer': 'David Cronenberg', 'category': 'Comic Book'}, {'question': 'In Finding Nemo, after Nemo is taken from the sea, where does he end up?', 'answer': "in an aquarium in a dentist's office", 'category': 'Animated'}, {'question': 'In Peter Pan, what do you need in order to be able to fly?', 'answer': 'pixie dust', 'category': 'Animated'}, {'question': 'The trailer for Jane Got a Gun finally has hit the web. Who directed Jane Got a Gun?', 'answer': "Gavin O'Connor", 'category': 'Current Movie News'}, {'question': 'Steven Spielberg and Tom Hanks are currently working together on Bridge of Spies. What other movies have Spielberg and Hanks worked on together?', 'answer': 'Saving Private Ryan, Catch Me If You Can, The Terminal', 'category': 'Current Movie News'}, {'question': 'There is a major character rumored to show up in Thor: Ragnarok. Who is the character?', 'answer': 'the Hulk', 'category': 'Current Movie News'}, {'question': 'The first actress rumored to be starring in Episode VIII was recently announced. Who is said actress?', 'answer': 'Gugu Mbatha-Raw', 'category': 'Current Movie News'}, {'question': 'In Catch Me If You Can, Leonardo DiCaprio gets a suit tailor-made to look like what famous film character?', 'answer': 'James Bond (in Goldfinger)', 'category': 'Leonardo DiCaprio'}, {'question': 'In what Sam Mendes film does Leonardo DiCaprio reunite with Kate Winslet 11 years after Titanic?', 'answer': 'Revolutionary Road', 'category': 'Leonardo DiCaprio'}, {'question': 'In what film does Leonardo DiCaprio play two characters?', 'answer': 'The Man in the Iron Mask', 'category': 'Leonardo DiCaprio'}, {'question': 'In what film does Leonardo DiCaprio play a CIA agent hot on the trail of a dangerous terrorist leader?', 'answer': 'Body of Lies', 'category': 'Leonardo DiCaprio'}, {'question': 'What is the band name in That Thing You Do!?', 'answer': 'the Wonders / the Oneders', 'category': '1990s'}, {'question': 'Which movie did Cecil B. DeMille direct twice?', 'answer': 'The Ten Commandments', 'category': 'Directors'}, {'question': 'Name the two movies that Jake Gyllenhaal has worked on with Denis Villeneuve.', 'answer': 'Prisoners, Enemy', 'category': 'Directors'}, {'question': 'Which of these things is true: Drew Struzan did the artwork for the new Star Wars poster and John Williams did the score for the new trailer, Struzan did not do the poster but Williams did the score, Struzan did the poster but Williams did not do the score, or neither of them worked on either?', 'answer': 'neither of them worked on either', 'category': 'Current Movie News'}, {'question': 'Michael J. Fox was just given a special gift for Back to the Future Day. What was he given?', 'answer': 'Nike self-lacing MAG sneakers', 'category': 'Current Movie News'}, {'question': 'In what state does My Cousin Vinny take place?', 'answer': 'Alabama', 'category': 'Comedies'}, {'question': 'What does Austin Powers call what gives him all his power?', 'answer': 'mojo', 'category': 'Comedies'}, {'question': "Who played the role of the jock in Joss Whedon's The Cabin in the Woods?", 'answer': 'Chris Hemsworth', 'category': 'Horror'}, {'question': "Who is the first person that Michael Myers kills in 1978's Halloween?", 'answer': 'his older sister Judith Myers', 'category': 'Horror'}, {'question': 'Who plays the slacker boyfriend in the 1989 film Parenthood?', 'answer': 'Keanu Reeves', 'category': 'Dramas'}, {'question': 'What actors played the three astronauts in Apollo 13?', 'answer': 'Bill Paxton, Kevin Bacon, Tom Hanks', 'category': 'Dramas'}, {'question': 'In Kingsman: The Secret Service, what TV action hero does Eggsy name his dog after?', 'answer': 'Jack Bauer', 'category': 'Comic Book'}, {'question': 'In which film does the villain strike the San Andreas Fault with a nuclear missile?', 'answer': 'Superman', 'category': 'Comic Book'}, {'question': 'Steven Spielberg received his first Academy Award for Best Director for what film?', 'answer': "Schindler's List", 'category': 'Steven Spielberg'}, {'question': 'What movie produced by Spielberg has also been long-rumored to also have been directed by him?', 'answer': 'Poltergeist', 'category': 'Steven Spielberg'}, {'question': 'What actor was famously offered the role of Indiana Jones before passing on it, leaving it open for Harrison Ford?', 'answer': 'Tom Selleck', 'category': 'Steven Spielberg'}, {'question': 'Who plays the character chasing down Tom Cruise in Minority Report?', 'answer': 'Colin Farrell', 'category': 'Steven Spielberg'}, {'question': 'Who played Colonel William Tavington in The Patriot?', 'answer': 'Jason Isaacs', 'category': 'War'}, {'question': "What's the rank of Richard Crenna's character in the Rambo series?", 'answer': 'Colonel', 'category': 'War'}, {'question': 'In which war movie does Robert De Niro play Russian roulette?', 'answer': 'The Deer Hunter', 'category': 'War'}, {'question': 'Which war is the backdrop for the 2004 remake of The Manchurian Candidate?', 'answer': 'the Gulf War', 'category': 'War'}, {'question': 'What kind of shoes did Benny Rodriguez put on before he hopped the fence to retrieve the autographed ball in The Sandlot?', 'answer': 'PF Flyers', 'category': 'Sports'}, {'question': 'Who plays the graduate student D-Bob, who befriends Rudy at Notre Dame, in Rudy?', 'answer': 'Jon Favreau', 'category': 'Sports'}, {'question': 'At the end of Moneyball, Brad Pitt turns down a lucrative offer to become the general manager for what Major League Baseball team?', 'answer': 'the Boston Red Sox', 'category': 'Sports'}, {'question': 'Which baseball player was a hypnotized assassin in The Naked Gun: From the Files of Police Squad!?', 'answer': 'Reggie Jackson', 'category': 'Sports'}, {'question': 'In which film do Sandra Bullock and Nicole Kidman play sister witches?', 'answer': 'Practical Magic', 'category': 'Sandra Bullock'}, {'question': 'What must Sandra Bullock do in 28 Days?', 'answer': 'stay in a rehab center', 'category': 'Sandra Bullock'}, {'question': "In what film does Bullock play Kiefer Sutherland's girlfriend who is abducted by Jeff Bridges?", 'answer': 'The Vanishing', 'category': 'Sandra Bullock'}, {'question': 'In what film does Bullock play a legal researcher for Matthew McConaughey?', 'answer': 'A Time to Kill', 'category': 'Sandra Bullock'}, {'question': "What does Paul Giamatti give Virginia Madsen after leaving Sandra Oh's house in Sideways?", 'answer': 'a copy of his manuscript', 'category': 'Romance'}, {'question': 'What happens to Wanda in A Fish Called Wanda?', 'answer': 'she gets eaten by Otto', 'category': '1980s'}, {'question': "Name two of the actors who played the four best friends in 1986's Stand by Me.", 'answer': "Corey Feldman, Jerry O'Connell, River Phoenix, Wil Wheaton", 'category': '1980s'}, {'question': '"Good morning, and in case I don\'t see ya, good afternoon, good evening, and good night!" is from what movie?', 'answer': 'The Truman Show', 'category': 'Quotes'}, {'question': 'In what Heath Ledger film can you hear the line, "the Pope may be French, but Jesus is bloody English!"?', 'answer': "A Knight's Tale", 'category': 'Quotes'}, {'question': "Who plays Jon Favreau's friend who traveled around with Favreau and his son in the food truck in Chef?", 'answer': 'John Leguizamo', 'category': 'Dramas'}, {'question': 'What actress was dressing to look like Veronica Lake in the movie L.A. Confidential?', 'answer': 'Kim Basinger', 'category': 'Dramas'}, {'question': 'Who directed the sci-fi action thriller Looper?', 'answer': 'Rian Johnson', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Christopher Nolan's The Prestige, it is explained that each trick has three parts. What is the third part of the trick?", 'answer': 'the Prestige', 'category': 'Fantasy/Sci-Fi'}, {'question': 'How many acting nominations did Birdman receive?', 'answer': '3 (for Edward Norton, Emma Stone, Michael Keaton)', 'category': 'Oscars'}, {'question': 'For which film did Julia Roberts win Best Actress?', 'answer': 'Erin Brockovich', 'category': 'Oscars'}, {'question': 'Finish the lyrics: "One, two, Freddy\'s coming for you. Three, four...".', 'answer': 'better lock your door.', 'category': 'Horror'}, {'question': 'What section of the department store did Ash work in in Army of Darkness?', 'answer': 'housewares', 'category': 'Horror'}, {'question': 'Which popular comedian played a teacher in The Faculty?', 'answer': 'Jon Stewart', 'category': '1990s'}, {'question': 'Which Christina Ricci movie has the tagline "Get An Afterlife"?', 'answer': 'Casper', 'category': '1990s'}, {'question': 'Who stars as the lead actress in the 1995 pirate film Cutthroat Island?', 'answer': 'Geena Davis', 'category': '1990s'}, {'question': 'Who is the assassination target in the 1993 film In the Line of Fire?', 'answer': 'the U.S. President', 'category': '1990s'}, {'question': "The scientist who took care of Caesar in Rise of the Planet of the Apes lived with his father, who was battling Alzheimer's. Who played the father?", 'answer': 'John Lithgow', 'category': 'Fantasy/Sci-Fi'}, {'question': "Which old-time movie serial opens George Lucas' 1971 film THX 1138?", 'answer': 'Buck Rogers', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays Gigolo Joe in A.I. Artificial Intelligence?', 'answer': 'Jude Law', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Signs, what was Mel Gibson's wife's final message meant for his brother?", 'answer': 'Swing away', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Danny Boyle directed what film starring Leonardo DiCaprio?', 'answer': 'The Beach', 'category': 'Leonardo DiCaprio'}, {'question': "Leonardo DiCaprio's first producer credit is for what film?", 'answer': 'The Assassination of Richard Nixon', 'category': 'Leonardo DiCaprio'}, {'question': "In Django Unchained, what is the name of the plantation that DiCaprio's character owns?", 'answer': 'Candyland', 'category': 'Leonardo DiCaprio'}, {'question': 'Leonardo DiCaprio has one soundtrack credit on his IMDb page. What film does he provide a voice for the soundtrack?', 'answer': 'Titanic (for Come Josephine in My Flying Machine)', 'category': 'Leonardo DiCaprio'}, {'question': 'In Shutter Island, who plays the lead psychiatrist of the hospital on the island?', 'answer': 'Ben Kingsley', 'category': 'Leonardo DiCaprio'}, {'question': 'What musical starring Bing Crosby and Rosemary Clooney features songs written by Irving Berlin?', 'answer': 'White Christmas', 'category': 'Musicals'}, {'question': 'In which country does the 1956 musical The King and I take place?', 'answer': 'Siam (now Thailand)', 'category': 'Musicals'}, {'question': 'Name the movie musical that includes the songs "One", "I Can Do That", "I Hope I Get It", and "Dance: Ten; Looks: Three".', 'answer': 'A Chorus Line', 'category': 'Musicals'}, {'question': 'Name the musical: pleasantly plump teenager Tracy Turnblad teaches 1962 Baltimore a thing or two about integration after landing a spot on the local TV dance show.', 'answer': 'Hairspray', 'category': 'Musicals'}, {'question': "In the movie The Patriot, what did Mel Gibson's character melt down to make more bullets?", 'answer': "his son Thomas' toy tin soldiers", 'category': 'War'}, {'question': 'Who provided the voice of Edna Mode in The Incredibles?', 'answer': 'Brad Bird', 'category': 'Animated'}, {'question': 'Finish this movie quote: "I can\'t believe I gave my panties to a ___".', 'answer': 'geek (in Sixteen Candles)', 'category': 'Quotes'}, {'question': 'Who played Blain in Predator?', 'answer': 'Jesse Ventura', 'category': 'Action/Adventure'}, {'question': 'Who directed the Animated Best Feature film Inside Out?', 'answer': 'Pete Docter', 'category': 'Animated'}, {'question': 'Name the movie from the quote: "Throw that shit again, Meat. Throw that weak-ass shit again.".', 'answer': 'Bull Durham', 'category': 'Quotes'}, {'question': 'What was the first film in which the Rock, Dwayne Johnson, played the lead?', 'answer': 'The Scorpion King', 'category': 'Action/Adventure'}, {'question': "In Men in Black, what does the tiny alien say is on Orion's belt?", 'answer': 'the galaxy', 'category': 'Comic Book'}, {'question': 'What fatal event do the survivors escape at the beginning of Final Destination?', 'answer': 'a plane explosion', 'category': 'Horror'}, {'question': 'Aside from Winona Ryder and Ethan Hawke, name one other main actor or the director of Reality Bites.', 'answer': 'Ben Stiller, Janeane Garofalo, Steve Zahn', 'category': 'Rom-Coms'}, {'question': 'Who plays the villain in the first Blade film?', 'answer': 'Stephen Dorff', 'category': 'Comic Book'}, {'question': 'What is the name of the sequel to The Blair Witch Project?', 'answer': 'Book of Shadows: Blair Witch 2', 'category': 'Horror'}, {'question': 'Who played the title role in the original Sabrina?', 'answer': 'Audrey Hepburn', 'category': 'Rom-Coms'}, {'question': 'In Dazed and Confused, which President is said to have grown marijuana on his plantation?', 'answer': 'George Washington', 'category': 'Coming of Age'}, {'question': "In Mean Girls, what breakfast food did Gretchen Wieners' father invent?", 'answer': 'Toaster Strudels', 'category': 'Coming of Age'}, {'question': 'What famous baseball player signed the ball that went over the fence in The Sandlot?', 'answer': 'Babe Ruth', 'category': 'Coming of Age'}, {'question': 'What Lord of the Rings star made his film debut in The Goonies?', 'answer': 'Sean Astin', 'category': 'Coming of Age'}, {'question': 'In what city does Minority Report take place?', 'answer': 'Washington, D.C.', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the Lord of the Rings trilogy, who plays Galadriel, Queen of the Elves?', 'answer': 'Cate Blanchett', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name the female lead in the 2008 movie Hancock.', 'answer': 'Charlize Theron', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What science-fiction action flick features crablike creatures called Facehuggers?', 'answer': 'Alien, Aliens, Alien 3, Alien Resurrection, Alien vs. Predator, Aliens vs. Predator: Requiem', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played the titular character in Maverick?', 'answer': 'Mel Gibson', 'category': '1990s'}, {'question': 'Who played the title role in the 1963 version of Cleopatra?', 'answer': 'Elizabeth Taylor', 'category': 'Classics'}, {'question': "What was the name of Val Kilmer's character in the 1988 film Willow?", 'answer': 'Madmartigan', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what city does Fever Pitch take place?', 'answer': 'Boston', 'category': 'Sports'}, {'question': 'What do Charlie and Grandpa Joe drink in Willy Wonka & the Chocolate Factory?', 'answer': 'Fizzy Lifting Drinks', 'category': 'Family'}, {'question': 'Name three of the four hobbits in the Fellowship in The Lord of the Rings.', 'answer': 'Frodo Baggins, Meriadoc Brandybuck, Peregrin Took, Samwise Gamgee', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which hockey movie follows the exploits of the Charlestown Chiefs?', 'answer': 'Slap Shot', 'category': 'Sports'}, {'question': 'In the film Explorers, two famous Hollywood actors made their first film appearances as kids who built a working spaceship in their backyard. Name one.', 'answer': 'Ethan Hawke, River Phoenix', 'category': 'Family'}, {'question': 'In An American Tail, Fievel and his family travel to America. Where do they journey from?', 'answer': 'Russia', 'category': 'Animated'}, {'question': 'Who directed the 1981 horror comedy An American Werewolf in London?', 'answer': 'John Landis', 'category': 'Horror'}, {'question': 'What movie features the line: "there\'s an awful lot you could tell about a person by their shoes."?', 'answer': 'Forrest Gump', 'category': 'Quotes'}, {'question': "Name one of Gru's three children in the Despicable Me films.", 'answer': 'Margo, Edith, Agnes', 'category': 'Animated'}, {'question': 'Which member of the Perron family gets possessed at the end of The Conjuring?', 'answer': 'the mother Carolyn Perron', 'category': 'Horror'}, {'question': 'Finish this movie quote: "Of all the ___, in all the towns, in all the world, she walks into mine.".', 'answer': 'gin joints (in Casablanca)', 'category': 'Quotes'}, {'question': 'Steven Spiellberg received his first Academy Award for Best Director for what film?', 'answer': "Schindler's List", 'category': 'Steven Spielberg'}, {'question': 'In Jaws, what is the name of the boat that is used to hunt the shark?', 'answer': 'the Orca', 'category': 'Steven Spielberg'}, {'question': 'Which Spielberg movie starred Whoopi Goldberg and Oprah Winfrey?', 'answer': 'The Color Purple', 'category': 'Steven Spielberg'}, {'question': 'What Spielberg film features a young Christian Bale in a young leading role?', 'answer': 'Empire of the Sun', 'category': 'Steven Spielberg'}, {'question': 'In The Godfather, where do hitmen turn Sonny into swiss cheese?', 'answer': 'near a tollbooth in a causeway', 'category': 'Crime'}, {'question': "What actress plays Pacino's wife in Scarface?", 'answer': 'Michelle Pfeiffer', 'category': 'Crime'}, {'question': 'What filmmaker directed both A History of Violence and Eastern Promises?', 'answer': 'David Cronenberg', 'category': 'Crime'}, {'question': "What is constantly visible on the back of Marsellus Wallace's head in Pulp Fiction?", 'answer': 'a band-aid', 'category': 'Crime'}, {'question': 'What does Black Widow use to close the wormhole at the end of The Avengers?', 'answer': "Loki's scepter", 'category': 'Marvel'}, {'question': 'Who directed Jim Carrey in the live-action How the Grinch Stole Christmas?', 'answer': 'Ron Howard', 'category': 'Holiday'}, {'question': 'Cary Grant and Katherine Hepburn starred in The Philadelphia Story. What other big name played the tabloid reporter?', 'answer': 'James Stewart', 'category': 'Classics'}, {'question': 'In The Godfather Part II, who said "I know it was you, Fredo. You broke my heart."?', 'answer': 'Michael Corleone', 'category': 'Crime'}, {'question': "Philip K. Dick's novel Do Androids Dream of Electric Sheep was adapted into which sci-fi film in 1982?", 'answer': 'Blade Runner', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What are the three planet settings in The Empire Strikes Back?', 'answer': 'Bespin, Dagobah, Hoth', 'category': 'Star Wars'}, {'question': 'Rob Schneider and Rachel McAdams star in which film?', 'answer': 'The Hot Chick', 'category': 'Comedies'}, {'question': 'Dennis Quaid stars as Detective Remy McSwain in this 1987 drama.', 'answer': 'The Big Easy', 'category': 'Dramas'}, {'question': "Who played Lex Luthor's bumbling sidekick in 1978's Superman: The Movie?", 'answer': 'Ned Beatty', 'category': 'Comic Book'}, {'question': 'In which comedy classic will you find the character the Waco Kid?', 'answer': 'Blazing Saddles', 'category': 'Comedies'}, {'question': 'Who plays the new editor of the paper Marty Baron in Oscar winner Spotlight?', 'answer': 'Liev Schreiber', 'category': 'Dramas'}, {'question': 'Alan Cumming played which mutant in X2?', 'answer': 'Nightcrawler', 'category': 'Comic Book'}, {'question': 'What is the name of the man in the bunny suit in Donnie Darko?', 'answer': 'Frank Anderson', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name the movie from the quote: "It seems to me the only thing you\'ve learned is that Caesar is a \'salad dressing dude.\'".', 'answer': "Bill & Ted's Excellent Adventure", 'category': 'Quotes'}, {'question': 'What famous adventure film was the hero seeking the Sankara Stones in?', 'answer': 'Indiana Jones and the Temple of Doom', 'category': 'Action/Adventure'}, {'question': 'The science-fiction thriller Species starred who as a beautiful woman who transforms into a killing machine?', 'answer': 'Natasha Henstridge', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name the movie from the quote: "I was born a poor black child.".', 'answer': 'The Jerk', 'category': 'Quotes'}, {'question': 'What city was the setting for Predator 2?', 'answer': 'Los Angeles', 'category': 'Action/Adventure'}, {'question': 'Which film is set in the town of Woodsboro, California?', 'answer': 'Scream, Scream 4', 'category': 'Horror'}, {'question': 'Name the killer in the original Friday the 13th.', 'answer': 'Mrs. Voorhees', 'category': 'Horror'}, {'question': 'In which film does Bruce Campbell play Elvis Presley fighting a mummy in a retirement home?', 'answer': 'Bubba Ho-Tep', 'category': 'Horror'}, {'question': 'What is the spiritual realm called in the Insidious films?', 'answer': 'the Further', 'category': 'Horror'}, {'question': 'The 2002 film Blue Crush features what sport?', 'answer': 'surfing', 'category': 'Sports'}, {'question': 'You will find characters named Sidney Deane and Billy Hoyle in which basketball film?', 'answer': "White Men Can't Jump", 'category': 'Sports'}, {'question': 'What baseball movie is based on the novel Shoeless Joe?', 'answer': 'Field of Dreams', 'category': 'Sports'}, {'question': 'Which baseball player was a hypnotized assassin in The Naked Gun: From the Files of Police Squad!?', 'answer': 'Reggie Jackson', 'category': 'Sports'}, {'question': "What is the name of Jimmy Stewart's guardian angel in It's a Wonderful Life?", 'answer': 'Clarence Odbody', 'category': 'Classics'}, {'question': 'What 1991 movie saw Julia escaping her past and her abusive husband?', 'answer': 'Sleeping with the Enemy', 'category': 'Julia Roberts'}, {'question': 'In what 80s flick will you find supporting characters named Boof and Stiles?', 'answer': 'Teen Wolf', 'category': '1980s'}, {'question': 'Who played Ty Cobb in the 1994 baseball biopic Cobb?', 'answer': 'Tommy Lee Jones', 'category': 'Biopics'}, {'question': 'What film stars Matthew McConaughey and Bill Paxton as members of a U.S. Navy team who commandeer a German submarine during World War II?', 'answer': 'U-571', 'category': 'War'}, {'question': "Name three of the five main animals that Mowgli interacts with in Disney's The Jungle Book.", 'answer': 'Bagheera, Baloo, Kaa, Louie, Shere Khan', 'category': 'Animated'}, {'question': 'In Man of Steel, how does Pa Kent die?', 'answer': 'he dies in a tornado while refusing to let Clark rescue him', 'category': 'Comic Book'}, {'question': "What was Tim Burton and Johnny Depp's first collaboration?", 'answer': 'Edward Scissorhands', 'category': 'Directors'}, {'question': 'In the film Ice Age, a creature named Scrat is constantly protecting his what?', 'answer': 'acorns', 'category': 'Animated'}, {'question': 'The mutant Toad appeared and was referred to by name in which X-Men film?', 'answer': 'X-Men', 'category': 'Comic Book'}, {'question': 'Who directed such films as The French Connection and The Exorcist?', 'answer': 'William Friedkin', 'category': 'Directors'}, {'question': 'Which 2005 sci-fi flick begins with the narration "No one would have believed in the early years of the 21st century that our world was being watched by intelligences greater than our own"?', 'answer': 'War of the Worlds', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name two of the leads in I Know What You Did Last Summer.', 'answer': 'Freddie Prinze Jr., Jennifer Love Hewitt, Ryan Phillippe, Sarah Michelle Gellar', 'category': 'Horror'}, {'question': "Who plays Amy Schumer's father in Trainwreck?", 'answer': 'Colin Quinn', 'category': 'Rom-Coms'}, {'question': 'In the 2009 film Star Trek, who played the villainous Romulan Captain Nero?', 'answer': 'Eric Bana', 'category': 'Fantasy/Sci-Fi'}, {'question': 'How long do you have to live after watching the tape in The Ring?', 'answer': '7 days', 'category': 'Horror'}, {'question': 'In which rom-com does Kate Beckinsale write her phone number in the novel Love in the Time of Cholera?', 'answer': 'Serendipity', 'category': 'Rom-Coms'}, {'question': 'In Son in Law, what holiday does Pauly spend on a farm?', 'answer': 'Thanksgiving', 'category': 'Pauly Shore'}, {'question': 'What movie sees Pauly and Andy Dick join the military?', 'answer': 'In the Army Now', 'category': 'Pauly Shore'}, {'question': 'Who co-starred with Pauly in Bio-Dome?', 'answer': 'Stephen Baldwin', 'category': 'Pauly Shore'}, {'question': 'Who plays the best friend of Stoney in Encino Man?', 'answer': 'Sean Astin', 'category': 'Pauly Shore'}, {'question': 'In which film do Sandra Bullock and Nicole Kidman play sister witches?', 'answer': 'Practical Magic', 'category': 'Sandra Bullock'}, {'question': 'What state does Sandra Bullock represent in Miss Congeniality?', 'answer': 'New Jersey', 'category': 'Sandra Bullock'}, {'question': "In what film is Bullock's boss played by Hugh Grant?", 'answer': 'Two Weeks Notice', 'category': 'Sandra Bullock'}, {'question': 'Which film stars Matt Dillon, Don Cheadle, and Sandra Bullock?', 'answer': 'Crash', 'category': 'Sandra Bullock'}, {'question': "In the first Scream, what was Stu's motive for the killings?", 'answer': 'peer pressure', 'category': '1990s'}, {'question': 'Which American film was the first to show a toilet flushing?', 'answer': 'Psycho', 'category': 'Classics'}, {'question': "Who plays Scott Lang's friend Luis in Ant-Man?", 'answer': 'Michael Peña', 'category': 'N/A'}, {'question': 'Who coaches the Keanu Reeves led football team in The Replacements?', 'answer': 'Gene Hackman', 'category': 'Sports'}, {'question': "You'll find the character of Captain Steven Hiller in which 90s sci-fi film?", 'answer': 'Independence Day', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In The Breakfast Club, what did Brian try to kill himself with?', 'answer': 'a flare gun', 'category': '1980s'}, {'question': 'Name the leads in the 1995 film The Bridges of Madison County.', 'answer': 'Clint Eastwood, Meryl Streep', 'category': 'Dramas'}, {'question': 'Name all of the seven dwarfs.', 'answer': 'Bashful, Doc, Dopey, Grumpy, Happy, Sleepy, Sneezy', 'category': 'Animated'}, {'question': 'Which young actor does not appear in the 1986 film Stand by Me? Christian Slater, River Phoenix, Wil Wheaton, or Kiefer Sutherland?', 'answer': 'Christian Slater', 'category': '1980s'}, {'question': "Who plays betrayed wife Beth Gallagher in 1987's Fatal Attraction?", 'answer': 'Anne Archer', 'category': 'Dramas'}, {'question': 'Who voiced Superman and Green Lantern in The Lego Movie?', 'answer': 'Channing Tatum, Jonah Hill', 'category': 'Animated'}, {'question': 'Helen Hunt won the 1998 Best Actress Oscar for her performance in which film?', 'answer': 'As Good as It Gets', 'category': 'Oscars'}, {'question': 'In what city does The Hangover Part II take place?', 'answer': 'Bangkok', 'category': 'Comedies'}, {'question': 'Name the movie: "You\'re a funny guy Sully, I like you. That\'s why I\'m going to kill you last.".', 'answer': 'Commando', 'category': 'Quotes'}, {'question': 'What was the first color film to win Best Picture at the Academy Awards?', 'answer': 'Gone with the Wind', 'category': 'Oscars'}, {'question': 'What comedy involves out-of-work movie actors, Mexican banditos, and a plethora of piñatas?', 'answer': 'Three Amigos', 'category': 'Comedies'}, {'question': 'Finish this movie quote: "You hear me talkin\', ___ boy? I ain\'t through with you by a damn sight. I\'ma get medieval on your ass."?', 'answer': 'hillbilly (in Pulp Fiction)', 'category': 'Quotes'}, {'question': '"Au revoir, gopher" is a line from what golf movie?', 'answer': 'Caddyshack', 'category': 'Sports'}, {'question': "What noted athlete appears in There's Something About Mary?", 'answer': 'Brett Favre', 'category': 'Sports'}, {'question': 'In Little Big League, 12-year-old Billy Heywood becomes the owner and manager of what Major League Baseball team?', 'answer': 'the Minnesota Twins', 'category': 'Sports'}, {'question': 'Who played legendary hockey coach Herb Brooks in the film Miracle?', 'answer': 'Kurt Russell', 'category': 'Sports'}, {'question': "Name a song that Ferris sings at the parade in Ferris Bueller's Day Off.", 'answer': 'Danke Schoen, Twist and Shout', 'category': '1980s'}, {'question': 'In which film will you find roommates Dustin Hoffman and Bill Murray?', 'answer': 'Tootsie', 'category': '1980s'}, {'question': 'What is the name of the creatures in Gremlins before they turn into gremlins?', 'answer': 'Mogwai', 'category': '1980s'}, {'question': 'In Rain Man, both Tom Cruise and Dustin Hoffman share a love for what band?', 'answer': 'the Beatles', 'category': '1980s'}, {'question': 'Who broke the neck chain Jabba had leashed to Princess Leia?', 'answer': 'R2-D2', 'category': 'Star Wars'}, {'question': 'In which Johnny Depp crime film is his character gunned down in front of a movie theater?', 'answer': 'Public Enemies', 'category': 'Crime'}, {'question': 'Two con men try to settle their rivalry by betting on who can swindle a young American heiress out of $50,000 first in what movie?', 'answer': 'Dirty Rotten Scoundrels', 'category': '1980s'}, {'question': "What actor played the double agent facing off against Pierce Brosnan's James Bond in GoldenEye?", 'answer': 'Sean Bean', 'category': 'Action'}, {'question': "Who played the Cooler King in John Sturges' The Great Escape?", 'answer': 'Steve McQueen', 'category': 'Classics'}, {'question': 'What is the most recent Best Picture winner that did not earn a Best Director nomination (as of April 2016)?', 'answer': 'Argo', 'category': 'Oscars'}, {'question': 'In which film will you find the desirous character named Wendy Peffercorn?', 'answer': 'The Sandlot', 'category': '1990s'}, {'question': "Name the film with the following synopsis: during her family's move to the suburbs, a sullen 10-year-old girl wanders into a world ruled by gods, witches, and spirits, and where humans are changed into beasts.", 'answer': 'Spirited Away', 'category': 'Animated'}, {'question': 'What war film released in 1970 won the Oscar for Best Picture?', 'answer': 'Patton', 'category': 'Oscars'}, {'question': 'Who played John Connor in Terminator 2: Judgment Day?', 'answer': 'Edward Furlong', 'category': '1990s'}, {'question': 'In which Disney film will you find an owl named Archimedes?', 'answer': 'The Sword in the Stone', 'category': 'Animated'}, {'question': 'Who was the lead actor in the science-fiction film Equilibrium?', 'answer': 'Christian Bale', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name two of the stars of the film Sleepers.', 'answer': 'Billy Crudup, Brad Pitt, Brad Renfro, Bruno Kirby, Dustin Hoffman, Jason Patric, Kevin Bacon, Minnie Driver, Robert De Niro', 'category': 'Dramas'}, {'question': "Who plays the big boss of Josh Baskin in 1988's Big?", 'answer': 'Robert Loggia', 'category': '1980s'}, {'question': 'Who plays Khan in Star Trek II: The Wrath of Khan?', 'answer': 'Ricardo Montalbán', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who directed 2004's Eternal Sunshine of the Spotless Mind?", 'answer': 'Michel Gondry', 'category': 'Dramas'}, {'question': "Who plays policeman Will Teasle in 1982's First Blood?", 'answer': 'Brian Dennehy', 'category': '1980s'}, {'question': 'In what year was the popular film Return of the Jedi released?', 'answer': '1983', 'category': 'Star Wars'}, {'question': 'In the original trilogy, what actor is in the suit as Darth Vader?', 'answer': 'David Prowse', 'category': 'Star Wars'}, {'question': 'In which film is the name Darth Plagueis mentioned?', 'answer': 'Star Wars: Episode III – Revenge of the Sith', 'category': 'Star Wars'}, {'question': "What color is the lower half of C-3PO's right leg?", 'answer': 'silver (in A New Hope, The Empire Strikes Back, Return of the Jedi)', 'category': 'Star Wars'}, {'question': "Which stand-up comedian appeared in Martin Scorsese's film Taxi Driver?", 'answer': 'Albert Brooks', 'category': 'Martin Scorsese'}, {'question': "In Martin Scorsese's New York, New York, Robert De Niro's character is a musician. What kind of musician was he?", 'answer': 'a saxophonist', 'category': 'Martin Scorsese'}, {'question': "Which singer-songwriter played Pontius Pilate in Martin Scorsese's The Last Temptation of Christ?", 'answer': 'David Bowie', 'category': 'Martin Scorsese'}, {'question': 'In what part of New York City does Mean Streets take place?', 'answer': 'Little Italy', 'category': 'Martin Scorsese'}, {'question': "Name one of Ryan Reynolds' three love interests in the film Definitely, Maybe.", 'answer': 'Elizabeth Banks, Isla Fisher, Rachel Weisz', 'category': 'Romance'}, {'question': 'What historical figure is the center of the film Young Guns?', 'answer': 'Billy the Kid', 'category': 'N/A'}, {'question': "In Wayne's World, who played the character of Cassandra?", 'answer': 'Tia Carrere', 'category': 'N/A'}, {'question': 'Who directed the film A Bronx Tale?', 'answer': 'Robert De Niro', 'category': 'N/A'}, {'question': 'In Back to the Future, Marty McFly travels back to what year?', 'answer': '1955', 'category': 'N/A'}, {'question': 'Name the movie featuring the following characters: Tank, Mouse.', 'answer': 'The Matrix', 'category': 'N/A'}, {'question': "In Bruce Almighty, what is Jim Carrey's occupation?", 'answer': 'a news reporter', 'category': 'Comedies'}, {'question': 'Which movie is this quote from: "Do you have a bra to match that... something leather, rubber, or barbed wire?"?', 'answer': 'Weird Science', 'category': 'Quotes'}, {'question': "What are the names of the two sisters in Disney's Frozen?", 'answer': 'Anna, Elsa', 'category': 'Animated'}, {'question': "In I Love You, Man, what rock band did Paul Rudd and Jason Segel's characters bond over?", 'answer': 'Rush', 'category': 'Comedies'}, {'question': 'Name the movie: "You seem a decent fellow... I hate to kill you." and "You seem a decent fellow... I hate to die."?', 'answer': 'The Princess Bride', 'category': 'Quotes'}, {'question': "Who voices Esmeralda in Disney's The Hunchback of Notre Dame?", 'answer': 'Demi Moore', 'category': 'Animated'}, {'question': 'What historical document was a coded map found on the back of in National Treasure?', 'answer': 'the Declaration of Independence', 'category': 'Action/Adventure'}, {'question': "In the movie Pretty Woman, what is the rule Julia Roberts' character abides by?", 'answer': 'she does not kiss on the mouth', 'category': 'Rom-Coms'}, {'question': "Who played the language and speech therapist in The King's Speech?", 'answer': 'Geoffrey Rush', 'category': 'Dramas'}, {'question': 'Who played the villain Simon Gruber in Die Hard with a Vengeance?', 'answer': 'Jeremy Irons', 'category': 'Action/Adventure'}, {'question': "Jim Carrey and Zooey Deschanel attend a themed party put on by Jim Carrey's boss in Yes Man. What was the theme of the party?", 'answer': 'Harry Potter', 'category': 'Rom-Coms'}, {'question': "Who played Ben Affleck's father, who appeared only once, in the movie The Town?", 'answer': 'Chris Cooper', 'category': 'Dramas'}, {'question': 'Alan Turing is the main character of what film set in World War II?', 'answer': 'The Imitation Game', 'category': 'War'}, {'question': "What was Chris Kyle's career before he decided to go to war in American Sniper?", 'answer': 'a ranch hand and rodeo cowboy', 'category': 'War'}, {'question': "In the movie Fury, what is the nickname given to the newest member of the tank's crew Norman?", 'answer': 'Machine', 'category': 'War'}, {'question': 'Robin Williams plays which real-life disc jockey in the movie Good Morning, Vietnam?', 'answer': 'Adrian Cronauer', 'category': 'War'}, {'question': 'What is the name of the high school football team that is the prime focus in Friday Night Lights?', 'answer': 'the Permian Panthers', 'category': 'Coming of Age'}, {'question': 'The climax of Rebel without a Cause, starring James Dean, takes place at which popular Hollywood landmark?', 'answer': 'Griffith Observatory', 'category': 'Coming of Age'}, {'question': 'In American Graffiti, whom is Richard Dreyfuss looking for throughout the film?', 'answer': 'a blonde young lady in a Thunderbird', 'category': 'Coming of Age'}, {'question': 'How do the students show their support for Mr. Keating at the end of Dead Poets Society?', 'answer': 'they stand up on their desks', 'category': 'Coming of Age'}, {'question': 'Who was in charge of all Rebel fleet operations during the second Death Star battle?', 'answer': 'Gial Ackbar', 'category': 'Star Wars'}, {'question': 'How many parsecs did Han Solo do the Kessel Run?', 'answer': '12 parsecs', 'category': 'Star Wars'}, {'question': 'What Rebel fell overboard off a small sand skiff near the sarlacc pit in Return of the Jedi?', 'answer': 'Lando Calrissian', 'category': 'Star Wars'}, {'question': 'On which planet were the clones created in Episode II – Attack of the Clones?', 'answer': 'Kamino', 'category': 'Star Wars'}, {'question': 'Who played Lancelot in First Knight?', 'answer': 'Richard Gere', 'category': '1990s'}, {'question': 'Who plays the title role in the 1995 remake of Sabrina?', 'answer': 'Julia Ormond', 'category': '1990s'}, {'question': 'Which 1997 film features Cyrus "The Virus", Diamond Dog, and Johnny 23?', 'answer': 'Con Air', 'category': '1990s'}, {'question': 'How does Dave discover Link in Encino Man?', 'answer': 'he is digging a swimming pool in his backyard', 'category': '1990s'}, {'question': 'Who played the Vice President of the United States in Air Force One?', 'answer': 'Glenn Close', 'category': 'Action/Adventure'}, {'question': "In 1986's Big Trouble in Little China, the brides of Lo Pan must have what color eyes?", 'answer': 'green', 'category': 'N/A'}, {'question': 'What are the colossal robots in Pacific Rim called?', 'answer': 'Jaegers', 'category': 'N/A'}, {'question': "Who is the famous daughter of Norman Bates' first victim Janet Leigh from Psycho?", 'answer': 'Jamie Lee Curtis', 'category': 'N/A'}, {'question': "What is Captain America's shield made of?", 'answer': 'vibranium', 'category': 'N/A'}, {'question': 'In Happy Gilmore, what celebrity does Happy get in a fight with?', 'answer': 'Bob Barker', 'category': 'N/A'}, {'question': 'What is the first sports movie to win Best Picture?', 'answer': 'Rocky', 'category': 'Oscars'}, {'question': 'Who played the sexy Bond baddie Xenia Onatopp in GoldenEye?', 'answer': 'Famke Janssen', 'category': 'Action/Adventure'}, {'question': "In the movie Speed, what was the nickname that Dennis Hopper's character gave to Sandra Bullock?", 'answer': 'a wildcat', 'category': 'Sandra Bullock'}, {'question': 'In Love Actually, which actor falls in love with his non-English-speaking housekeeper?', 'answer': 'Colin Firth', 'category': 'Romance'}, {'question': 'What is the name of the con that Robert Redford and Paul Newman pulled in The Sting?', 'answer': 'the wire', 'category': 'Classics'}, {'question': 'In which movie will you find Mr. Furious, the Spleen, and Captain Amazing?', 'answer': 'Mystery Men', 'category': 'Comic Book'}, {'question': 'Who directed The Horse Whisperer?', 'answer': 'Robert Redford', 'category': 'Dramas'}, {'question': 'Making her feature film debut, Julie Andrews won an Oscar for what film?', 'answer': 'Mary Poppins', 'category': 'Oscars'}, {'question': "What is the name of T.J. Miller's character in Deadpool?", 'answer': 'Weasel', 'category': 'Comic Book'}, {'question': 'Name one of the actors who played either the Falcon or the Snowman in The Falcon and the Snowman.', 'answer': 'Timothy Hutton, Sean Penn', 'category': 'Dramas'}, {'question': 'How many times has Liam Neeson been nominated for an Oscar?', 'answer': "1 (for Schindler's List)", 'category': 'Oscars'}, {'question': 'You will find the bad guy Simon Phoenix in which movie?', 'answer': 'Demolition Man', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the movie Flashdance, Alex Owens has two jobs to pay the bills. One of those jobs is an exotic dancer. The other job is doing what?', 'answer': 'welding at a steel mill', 'category': '1980s'}, {'question': 'In Office Space, what is flair?', 'answer': "buttons worn at Chotchkie's", 'category': 'Comedies'}, {'question': 'Blue Book is a software company with a mysterious head figure in what film?', 'answer': 'Ex Machina', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What brand of candy bar did Chunk try to give Sloth in The Goonies?', 'answer': 'a Baby Ruth', 'category': '1980s'}, {'question': 'What celebrity do Harold and Kumar pick up in Harold & Kumar Go to White Castle?', 'answer': 'Neil Patrick Harris', 'category': 'Comedies'}, {'question': "In Martin Scorsese's 1995 film Casino, which casino is run by Sam Rothstein?", 'answer': 'the Tangiers', 'category': 'Martin Scorsese'}, {'question': 'What Martin Scorsese film was shot in all black-and-white?', 'answer': 'Raging Bull', 'category': 'Martin Scorsese'}, {'question': "Which of Martin Scorsese's films garnered massive controversy when it was released in 1988?", 'answer': 'The Last Temptation of Christ', 'category': 'Martin Scorsese'}, {'question': 'Which Martin Scorsese movie was the first to star Leonardo DiCaprio?', 'answer': 'Gangs of New York', 'category': 'Martin Scorsese'}, {'question': 'Where do all of the students hang out in American Graffiti?', 'answer': "Mel's Drive-In", 'category': 'Coming of Age'}, {'question': 'In The Perks of Being a Wallflower, what David Bowie song are the main characters listening to when they drive through the tunnel?', 'answer': 'Heroes', 'category': 'Coming of Age'}, {'question': 'According to the epilogue in Fast Times at Ridgemont High, which celebrity does Spicoli save from drowning?', 'answer': 'Brooke Shields', 'category': 'Coming of Age'}, {'question': 'What is the name of the main character, the boy, in the coming-of-age epic Boyhood?', 'answer': 'Mason Evans Jr.', 'category': 'Coming of Age'}, {'question': "Who directed and who starred in 1986's Legend?", 'answer': 'Ridley Scott, Tom Cruise', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Steel Magnolias, what is the groom's cake in the shape of?", 'answer': 'an armadillo', 'category': 'Dramas'}, {'question': "In what 2000s film does Julia Roberts' character pretend to be Julia Roberts?", 'answer': "Ocean's Twelve", 'category': 'Comedies'}, {'question': 'Name the movie: An ocean liner is found in the Gobi desert, the main character gets a sunburn on half of his face, and spaceships shaped like ice cream cones fail to pay the Ohio highway toll. Throw in Devils Tower and a government cover-up, and you get what movie?', 'answer': 'Close Encounters of the Third Kind', 'category': 'Fantasy/Sci-Fi'}, {'question': "Tom Cruise's character in Collateral shared an admiration of which musician with one of his victims?", 'answer': 'Miles Davis', 'category': 'Dramas'}, {'question': "What veteran actors play Ben Stiller's parents in Meet the Fockers?", 'answer': 'Barbra Streisand, Dustin Hoffman', 'category': 'Comedies'}, {'question': 'Hank McCoy is the real name of this superhero.', 'answer': 'Beast', 'category': 'Comic Book'}, {'question': 'Which actor has the record for most Oscar nominations without a single win?', 'answer': "Peter O'Toole (for Lawrence of Arabia; Becket; The Lion in Winter; Goodbye, Mr. Chips; The Ruling Class; The Stunt Man; My Favorite Year; Venus)", 'category': 'Oscars'}, {'question': 'Name the film: "I came across time for you, Sarah. I love you; I always have.".', 'answer': 'The Terminator', 'category': 'Quotes'}, {'question': 'In which film does the villain strike the San Andreas Fault with a nuclear missile?', 'answer': 'Superman', 'category': 'Comic Book'}, {'question': 'Who are the only brothers to be nominated for acting Oscars?', 'answer': 'Joaquin Phoenix (for Gladiator, Walk the Line, The Master), River Phoenix (for Running on Empty)', 'category': 'Oscars'}, {'question': 'Name the movie: "Oh, this is going to be fun. We can stay up late, swapping manly stories, and in the morning, I\'m making waffles!".', 'answer': 'Shrek', 'category': 'Quotes'}, {'question': 'John Wayne was nominated three times for an Academy Award, but won only once. What film did he win for?', 'answer': 'True Grit', 'category': 'Oscars'}, {'question': 'How many Academy Awards did the 1962 film Lawrence of Arabia win?', 'answer': '7 (Picture; Director; Art Direction, Color; Cinematography, Color; Film Editing; Music Score — Substantially Original; Sound)', 'category': 'Oscars'}, {'question': "Who won the Academy Award for Best Supporting Actress playing Cher's mother in the 1987 film Moonstruck?", 'answer': 'Olympia Dukakis', 'category': 'Oscars'}, {'question': 'Jennifer Hudson won an Oscar for her portrayal in what 2006 musical?', 'answer': 'Dreamgirls', 'category': 'Oscars'}, {'question': 'Who directed Tom Hanks in the 1980s comedy classic Splash?', 'answer': 'Ron Howard', 'category': 'Tom Hanks'}, {'question': 'What was the first film that Tom Hanks directed?', 'answer': 'That Thing You Do!', 'category': 'Tom Hanks'}, {'question': 'For which film did Tom Hanks receive his second Best Actor Oscar win?', 'answer': 'Forrest Gump', 'category': 'Tom Hanks'}, {'question': "What is the last name of Tom Hanks' dentist in Cast Away?", 'answer': 'Spalding', 'category': 'Tom Hanks'}, {'question': "What is the name of Charlie Sheen's character in the spoof film Hot Shots!?", 'answer': 'Topper Harley', 'category': 'Charlie Sheen'}, {'question': 'What is the name of the song that Ingrid Bergman asks Sam to play in the 1943 film Casablanca?', 'answer': 'As Time Goes By', 'category': 'Romance'}, {'question': 'In Les Misérables, why was Jean Valjean imprisoned?', 'answer': 'he stole a loaf of bread', 'category': 'Musicals'}, {'question': 'Philip Seymour Hoffman lost 40 pounds for his Oscar-winning role in what biopic?', 'answer': 'Capote', 'category': 'Biopics'}, {'question': 'What was the subtitle of the second Nightmare on Elm Street film?', 'answer': "Freddy's Revenge", 'category': 'N/A'}, {'question': 'Name the movie featuring the quote: "We\'ve come for your daughter, Chuck.".', 'answer': 'Beetlejuice', 'category': 'Quotes'}, {'question': 'In The Little Mermaid, what does Ariel give to Ursula when they make their deal?', 'answer': 'her voice', 'category': 'Animated'}, {'question': 'Name the three actors playing the men in Three Men and a Baby.', 'answer': 'Steve Guttenberg, Ted Danson, Tom Selleck', 'category': '1980s'}, {'question': 'Who said the line "A boy\'s best friend is his mother."?', 'answer': 'Norman Bates (in Psycho)', 'category': 'Quotes'}, {'question': 'Mandy Moore and Zachary Levi provide voices in which Disney film?', 'answer': 'Tangled', 'category': 'Animated'}, {'question': 'Who directed the fantasy adventure The NeverEnding Story?', 'answer': 'Wolfgang Petersen', 'category': '1980s'}, {'question': 'Who was the first person that Michael Myers kills in Halloween?', 'answer': 'his older sister Judith Myers', 'category': 'Horror'}, {'question': 'Name a Steve Martin film directed by Carl Reiner.', 'answer': "The Jerk, Dead Men Don't Wear Plaid, The Man with Two Brains, All of Me", 'category': 'Directors'}, {'question': 'What balls-to-the-wall action film stars Clive Owen and Paul Giamatti?', 'answer': "Shoot 'Em Up", 'category': 'Action/Adventure'}, {'question': 'Who played the groundskeeper at the Overlook Hotel in The Shining?', 'answer': 'Scatman Crothers', 'category': 'Horror'}, {'question': 'Name a film directed by Rob Reiner in which he also makes an appearance as an actor.', 'answer': 'This Is Spinal Tap, Misery, The Story of Us, Alex & Emma, And So It Goes', 'category': 'Directors'}, {'question': 'In which city do the Boondock Saints reside in?', 'answer': 'Boston', 'category': 'Action/Adventure'}, {'question': 'What must Sandra Bullock do in 28 Days?', 'answer': 'stay in a rehab center', 'category': 'Sandra Bullock'}, {'question': "What country music superstar plays Sandra Bullock's husband in The Blind Side?", 'answer': 'Tim McGraw', 'category': 'Sandra Bullock'}, {'question': 'In which movie does Sandra Bullock play a subway tollbooth operator?', 'answer': 'While You Were Sleeping', 'category': 'Sandra Bullock'}, {'question': 'The night before Sandra Bullock won an Oscar for Best Actress in The Blind Side, she won a Razzie for Worst Actress in which film?', 'answer': 'All About Steve', 'category': 'Sandra Bullock'}, {'question': 'Oliver Stone won an Academy Award for directing what 1986 blockbuster war movie?', 'answer': 'Platoon', 'category': 'War'}, {'question': 'Released in 1978, which Vietnam War movie starred Robert De Niro, Christopher Walken, and John Savage?', 'answer': 'The Deer Hunter', 'category': 'War'}, {'question': 'The movie All Quiet on the Western Front was set in which war?', 'answer': 'World War I', 'category': 'War'}, {'question': 'What actor plays a photographer in the movie Apocalypse Now?', 'answer': 'Dennis Hopper', 'category': 'War'}, {'question': 'Which real-life boxer played Tommy Gunn in the film Rocky V?', 'answer': 'Tommy Morrison', 'category': 'Sports'}, {'question': 'What Jodie Foster classic was remade starring Lindsay Lohan in her role?', 'answer': 'Freaky Friday', 'category': 'Family'}, {'question': 'Why does Roger Dorn punch Ricky "Wild Thing" Vaughn after the Indians win the pennant?', 'answer': 'he slept with his wife', 'category': 'Charlie Sheen'}, {'question': 'What 80s teen comedy suggests in its tagline "If you can\'t get a date, make one!"?', 'answer': 'Weird Science', 'category': 'Coming of Age'}, {'question': "What causes George Bailey's suicidal depression in the Christmas classic It's a Wonderful Life?", 'answer': 'a financial crisis', 'category': 'Holiday'}, {'question': 'Riggs and Murtaugh pursue Jack Travis, a former cop turned arms dealer, in which Lethal Weapon film?', 'answer': 'Lethal Weapon 3', 'category': 'Action/Adventure'}, {'question': 'Which animated movie features lead characters Grug, Ugga, Eep, and Thunk?', 'answer': 'The Croods', 'category': 'Animated'}, {'question': 'In which state does Adam Sandler attend college in The Waterboy?', 'answer': 'Louisiana', 'category': 'Comedies'}, {'question': 'Kelly LeBrock nurses Steven Seagal back to health in which movie?', 'answer': 'Hard to Kill', 'category': 'Action/Adventure'}, {'question': "In the film WALL-E, what does the E in WALL-E's name stand for?", 'answer': 'Earth-Class', 'category': 'Animated'}, {'question': 'Which comedy features the lawyer Fletcher Reede?', 'answer': 'Liar Liar', 'category': 'Comedies'}, {'question': "Who plays Harry's best friend Tyrone in Requiem for a Dream?", 'answer': 'Marlon Wayans', 'category': 'Dramas'}, {'question': 'Who directed the acclaimed drama American Beauty?', 'answer': 'Sam Mendes', 'category': 'Directors'}, {'question': 'What movie is the following tagline from: "The Longer You Wait, The Harder It Gets."?', 'answer': 'The 40-Year-Old Virgin', 'category': 'Taglines'}, {'question': 'Which movie is based on the life of John Nash, a Nobel laureate in Economics?', 'answer': 'A Beautiful Mind', 'category': 'Dramas'}, {'question': 'Who directed the fast-talking action flick The Last Boy Scout?', 'answer': 'Tony Scott', 'category': 'Directors'}, {'question': '"Every man dies, not every man really lives." is a tagline of which film?', 'answer': 'Braveheart', 'category': 'Taglines'}, {'question': 'Which Harry Potter film did David Tennant appear in?', 'answer': 'Harry Potter and the Goblet of Fire', 'category': 'Harry Potter'}, {'question': 'In Harry Potter and the Goblet of Fire, what animal does Professor Moody turn Draco Malfoy into as punishment?', 'answer': 'a ferret', 'category': 'Harry Potter'}, {'question': 'Who gifted Harry Potter his Firebolt racing broom in the Harry Potter series?', 'answer': 'Sirius Black', 'category': 'Harry Potter'}, {'question': 'Who directed the very first two Harry Potter films?', 'answer': 'Chris Columbus', 'category': 'Harry Potter'}, {'question': "Who is the composer for Zack Snyder's Man of Steel movie?", 'answer': 'Hans Zimmer', 'category': 'DC'}, {'question': "Who played reporter Alexander Knox in 1989's Batman?", 'answer': 'Robert Wuhl', 'category': 'DC'}, {'question': 'To prove his worth to the League of Shadows, what must Bruce Wayne bring to the mountaintop in Batman Begins?', 'answer': 'a blue double-bloomed poppy', 'category': 'DC'}, {'question': 'Superman II was directed by Richard Donner, but the last quarter of the film was helmed by whom?', 'answer': 'Richard Lester', 'category': 'DC'}, {'question': "What actor received a Best Supporting Actor nomination for playing Howard Cosell in 2001's Ali?", 'answer': 'Jon Voight', 'category': 'Sports'}, {'question': 'Name the film with the following synopsis: when a property owner starts using a band of hooligans to terrorize a group of small-town gold miners into giving up their territory, an enigmatic man named the Preacher arrives in town.', 'answer': 'Pale Rider', 'category': 'Westerns'}, {'question': "What is Doc Brown's first name in Back to the Future?", 'answer': 'Emmett', 'category': '1980s'}, {'question': "What comedian played Dalton Trumbo's best friend in the 2015 film Trumbo?", 'answer': 'Louis C.K.', 'category': 'Biopics'}, {'question': "Name the Oscar-winning actress who played Adam Sandler's mother in The Waterboy.", 'answer': 'Kathy Bates', 'category': 'Oscars'}, {'question': 'In The Incredibles, who provides the voice of Mr. Incredible?', 'answer': 'Craig T. Nelson', 'category': 'Pixar'}, {'question': 'Which Disney film was the first animated movie to be nominated for a Best Picture Oscar, losing to The Silence of the Lambs?', 'answer': 'Beauty and the Beast', 'category': 'Animated'}, {'question': 'Name two of the stars of the 1997 sci-fi film Gattaca.', 'answer': 'Alan Arkin, Ernest Borgnine, Ethan Hawke, Jude Law, Loren Dean, Uma Thurman', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the movie Crazy, Stupid, Love., Julianne Moore is unfaithful to her husband, played by whom?', 'answer': 'Steve Carell', 'category': 'Rom-Coms'}, {'question': "In How to Train Your Dragon, who provides the voice of Hiccup's father?", 'answer': 'Gerard Butler', 'category': 'Animated'}, {'question': 'A human and a reptilian creature must work together to survive in which movie starring Dennis Quaid and Louis Gossett Jr.?', 'answer': 'Enemy Mine', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Robbie Hart falls in love with Julia Sullivan in which movie?', 'answer': 'The Wedding Singer', 'category': 'Rom-Coms'}, {'question': 'Who directed the 2005 version of Fantastic Four?', 'answer': 'Tim Story', 'category': 'Comic Book'}, {'question': 'Name the movie featuring the quote "You won\'t answer my calls, you change your number. I mean, I\'m not gonna be ignored, Dan!".', 'answer': 'Fatal Attraction', 'category': 'Quotes'}, {'question': 'Which action film features characters named Sean Archer and Castor Troy?', 'answer': 'Face/Off', 'category': 'Action/Adventure'}, {'question': 'In which Batman film will you find the character of Max Shreck?', 'answer': 'Batman Returns', 'category': 'Comic Book'}, {'question': 'Name the movie featuring the quote "Can I refill your eggnog for you? Get you something to eat? Drive you out to the middle of nowhere and leave you for dead?".', 'answer': "National Lampoon's Christmas Vacation", 'category': 'Quotes'}, {'question': 'What was the second Bond movie to star Pierce Brosnan?', 'answer': 'Tomorrow Never Dies', 'category': 'Action/Adventure'}, {'question': 'In the 1957 classic 12 Angry Men, which juror member did Henry Fonda play?', 'answer': 'Juror 8', 'category': 'Classics'}, {'question': 'Name the 1958 movie in which Paul Newman warns Elizabeth Taylor "Careful Maggie, your claws are showing."?', 'answer': 'Cat on a Hot Tin Roof', 'category': 'Classics'}, {'question': "What does Holly Golightly call her cat in Breakfast at Tiffany's?", 'answer': 'Cat', 'category': 'Classics'}, {'question': 'Name the 1962 epic in which the lead character pleads "I pray that I may never see the desert again. Hear me, God.".', 'answer': 'Lawrence of Arabia', 'category': 'Classics'}, {'question': 'Name the 1996 movie in which a woman suffering from amnesia discovers her true identity, starring actress Geena Davis.', 'answer': 'The Long Kiss Goodnight', 'category': 'Action/Adventure'}, {'question': 'Who plays the skilled hacker Stanley in Swordfish?', 'answer': 'Hugh Jackman', 'category': 'Action/Adventure'}, {'question': 'In the 1990 Teenage Mutant Ninja Turtles film, which turtle was thrown through a skylight by the Foot Clan?', 'answer': 'Raphael', 'category': 'Action/Adventure'}, {'question': 'What is the name of the redneck bar from Road House?', 'answer': 'the Double Deuce', 'category': 'Action/Adventure'}, {'question': 'What superhero does the Iron Giant compare himself to in the movie The Iron Giant?', 'answer': 'Superman', 'category': 'Animated'}, {'question': 'Jude Law played what famous classic Hollywood actor in The Aviator?', 'answer': 'Errol Flynn', 'category': 'Martin Scorsese'}, {'question': 'What film features Alec Guiness pondering "What have I done?" as he falls on a bomb detonator?', 'answer': 'The Bridge on the River Kwai', 'category': 'War'}, {'question': "How much did Uma Thurman's milkshake cost in Pulp Fiction?", 'answer': '5 dollars', 'category': '1990s'}, {'question': 'Private eye Sam Spade hunts for the stuff that dreams are made of in what noir mystery film?', 'answer': 'The Maltese Falcon', 'category': 'Classics'}, {'question': 'Who was the composer of the score for The Avengers?', 'answer': 'Alan Silvestri', 'category': 'Marvel'}, {'question': "Sam and Annie meet on Valentine's Day at the top of the Empire State Building in what romantic comedy?", 'answer': 'Sleepless in Seattle', 'category': 'Rom-Coms'}, {'question': "In Disney's Wreck-It Ralph, Ralph attends a bad guy self-help meeting group with other video game bad guys. Other than Ralph, name two others that are attending the meeting.", 'answer': 'Bowser, Clyde, Dr. Eggman, M. Bison, Neff, Zangief', 'category': 'Animated'}, {'question': 'In what 2001 comedy is a fictional comic book called Bluntman and Chronic being turned into a movie?', 'answer': 'Jay and Silent Bob Strike Back', 'category': 'Comedies'}, {'question': 'Name the movie based on the synopsis: a journalist enrolls in her old high school as part of her research for a story.', 'answer': 'Never Been Kissed', 'category': 'Rom-Coms'}, {'question': 'Which famous comedian voiced the character Batty Koda in FernGully: The Last Rainforest?', 'answer': 'Robin Williams', 'category': 'Animated'}, {'question': 'What 2006 comedy asked "What If You Had A Universal Remote... That Controlled Your Universe?"?', 'answer': 'Click', 'category': 'Comedies'}, {'question': "Which Spider-Man 3 villain was learned to be the cause of Uncle Ben's death in Sam Raimi's Spider-Man 3?", 'answer': 'the Sandman', 'category': 'Comic Book'}, {'question': 'Which country is the setting for the 2003 hit Lost in Translation?', 'answer': 'Japan', 'category': 'Dramas'}, {'question': 'How do we first get a full view of the alien in the movie Signs?', 'answer': 'in news footage of a birthday party', 'category': 'Horror/Thriller'}, {'question': 'Who played the two main villains in Iron Man 2?', 'answer': 'Mickey Rourke, Sam Rockwell', 'category': 'Comic Book'}, {'question': 'Which actors played David Frost and Richard Nixon in Frost/Nixon?', 'answer': 'Michael Sheen, Frank Langella', 'category': 'Dramas'}, {'question': 'Who directed the 1976 horror film The Omen?', 'answer': 'Richard Donner', 'category': 'Horror/Thriller'}, {'question': 'Which Avenger makes an appearance in the film Ant-Man?', 'answer': 'the Falcon', 'category': 'Marvel'}, {'question': 'What was the name of the fictional Eastern European country in Avengers: Age of Ultron?', 'answer': 'Sokovia', 'category': 'Marvel'}, {'question': 'Who played Obadiah Stane in Iron Man?', 'answer': 'Jeff Bridges', 'category': 'Marvel'}, {'question': 'In which Marvel film will you find Stanley Tucci as Dr. Abraham Erskine?', 'answer': 'Captain America: The First Avenger', 'category': 'Marvel'}, {'question': "What song did Heath Ledger's character sing over the PA system to Julia Stiles' character during her soccer practice in 10 Things I Hate About You?", 'answer': "Can't Take My Eyes Off You", 'category': 'Coming of Age'}, {'question': 'What nickname is the main character given at the water park in The Way, Way Back?', 'answer': "Pop 'n' Lock", 'category': 'Coming of Age'}, {'question': "In Mean Girls, Lindsay Lohan's character joins a high school clique dubbed the what?", 'answer': 'the Plastics', 'category': 'Coming of Age'}, {'question': 'What do Goonies never say?', 'answer': 'die', 'category': 'Coming of Age'}, {'question': "Tom Cruise's character Nathan Algren in The Last Samurai is a veteran of what war?", 'answer': 'the Civil War', 'category': 'War'}, {'question': 'In which action franchise will you find tough guy Bryan Mills?', 'answer': 'Taken', 'category': 'Action/Adventure'}, {'question': 'Jeremy Irons won a Best Actor Oscar for his role in which 1990 film?', 'answer': 'Reversal of Fortune', 'category': 'Oscars'}, {'question': 'Who played Willie in Indiana Jones and the Temple of Doom?', 'answer': 'Kate Capshaw', 'category': 'Indiana Jones'}, {'question': 'Tom Hanks coaches which baseball team in A League of Their Own?', 'answer': 'the Rockford Peaches', 'category': 'Tom Hanks'}, {'question': 'What state was the setting for the Earth-based scenes in the film Thor?', 'answer': 'New Mexico', 'category': 'Marvel'}, {'question': "What classic animated film is loosely based on Shakespeare's Hamlet?", 'answer': 'The Lion King', 'category': 'Animated'}, {'question': "Name Richard Linklater's Before trilogy in order.", 'answer': 'Before Sunrise, Before Sunset, Before Midnight', 'category': 'Dramas'}, {'question': 'Jerry Maguire is the sports agent for Rod Tidwell, who plays for what NFL team?', 'answer': 'the Arizona Cardinals', 'category': 'Rom-Coms'}, {'question': 'Why does Elsa leave Arendelle and go into seclusion in the film Frozen?', 'answer': 'she is worried she will freeze people', 'category': 'Animated'}, {'question': 'Name a famous singer that had a role in the movie Fight Club.', 'answer': 'Jared Leto, Meat Loaf', 'category': 'Dramas'}, {'question': 'In the movie The 40-Year-Old Virgin, what musician does Jane Lynch always have playing on the TVs at Smart Tech?', 'answer': 'Michael McDonald', 'category': 'Rom-Coms'}, {'question': 'In X2: X-Men United, who are the two X-Men who track down Nightcrawler in a church in Boston?', 'answer': 'Jean Grey, Storm', 'category': 'Comic Book'}, {'question': "In 1991, Disney's Beauty and the Beast became the first animated feature film to be nominated for Best Picture at the Academy Awards. What film did it lose to?", 'answer': 'The Silence of the Lambs', 'category': 'Oscars'}, {'question': 'In what city do the events of 28 Days Later primarily take place?', 'answer': 'London', 'category': 'Horror'}, {'question': "Who provided the voice of the Silver Surfer in 2007's Fantastic Four: Rise of the Silver Surfer?", 'answer': 'Laurence Fishburne', 'category': 'Comic Book'}, {'question': 'Name two of the 10 Best Picture winners from the 2000s.', 'answer': 'Gladiator, A Beautiful Mind, Chicago, The Lord of the Rings: The Return of the King, Million Dollar Baby, Crash, The Departed, No Country for Old Men, Slumdog Millionaire, The Hurt Locker', 'category': 'Oscars'}, {'question': 'What 2009 Anna Paquin film will you find four interwoven stories that all take place on Halloween Night?', 'answer': "Trick 'r Treat", 'category': 'Horror'}, {'question': "Who plays Meryl Streep's daughter Sophie in the film Mamma Mia!?", 'answer': 'Amanda Seyfried', 'category': 'Meryl Streep'}, {'question': 'For which film did Meryl Streep win her first Oscar?', 'answer': 'Kramer vs. Kramer', 'category': 'Meryl Streep'}, {'question': 'In an attempt to rekindle their marriage, Meryl Streep performs fellatio on Tommy Lee Jones in a movie theater in which film?', 'answer': 'Hope Springs', 'category': 'Meryl Streep'}, {'question': "What was the first name of Meryl Streep's character in The Devil Wears Prada?", 'answer': 'Miranda', 'category': 'Meryl Streep'}, {'question': 'Which Avenger meets their unfortunate demise in the film Age of Ultron?', 'answer': 'Quicksilver', 'category': 'Marvel'}, {'question': 'What song does Star-Lord have a dance-off to with Ronan in Guardians of the Galaxy?', 'answer': 'O-o-h Child', 'category': 'Marvel'}, {'question': 'Who plays Howard Stark in Captain America: The First Avenger?', 'answer': 'Dominic Cooper', 'category': 'Marvel'}, {'question': 'Who plays S.H.I.E.L.D. agent Maria Hill?', 'answer': 'Cobie Smulders', 'category': 'Marvel'}, {'question': 'Carol Burnett played Miss Hannigan in what 1982 musical?', 'answer': 'Annie', 'category': 'Musicals'}, {'question': "What year saw the release of William Friedkin's classic film The French Connection?", 'answer': '1971', 'category': 'Release Dates'}, {'question': 'Which film features a devil named Daryl Van Horne?', 'answer': 'The Witches of Eastwick', 'category': '1980s'}, {'question': "Who was Sandra Bullock's co-star in Speed 2: Cruise Control?", 'answer': 'Jason Patric', 'category': 'Sandra Bullock'}, {'question': 'Name three of the actors that portrayed the Magnificent Seven in 1960.', 'answer': 'Brad Dexter, Charles Bronson, Horst Buchholz, James Coburn, Robert Vaughn, Steve McQueen, Yul Brynner', 'category': 'Westerns'}, {'question': 'Judge Frollo is the villain of what Disney film?', 'answer': 'The Hunchback of Notre Dame', 'category': 'Animated'}, {'question': 'Who directed the 2007 fantasy film Stardust?', 'answer': 'Matthew Vaughn', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What comedy\'s tagline was "He just landed the gig of his life: 5th grade."?', 'answer': 'School of Rock', 'category': 'Comedies'}, {'question': "What popular children's book character was put on the big screen in 2006 with original songs by Jack Johnson?", 'answer': 'Curious George', 'category': 'Animated'}, {'question': "Who plays Lord Denethor, Boromir and Faramir's father, in The Lord of the Rings: The Return of the King?", 'answer': 'John Noble', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What comedy had the tagline "3% Body Fat. 1% Brain Activity."?', 'answer': 'Zoolander', 'category': 'Comedies'}, {'question': 'Nicolas Cage is an arms dealer, Jared Leto is his kid brother, and Ethan Hawke is an Interpol agent in what movie?', 'answer': 'Lord of War', 'category': 'Dramas'}, {'question': 'Finish the quote in the film Tombstone: "I\'m your...".', 'answer': 'huckleberry', 'category': 'Quotes'}, {'question': 'Who directed The Hurt Locker?', 'answer': 'Kathryn Bigelow', 'category': 'Directors'}, {'question': "Who plays Heath Ledger's wife in Brokeback Mountain?", 'answer': 'Michelle Williams', 'category': 'Dramas'}, {'question': 'Name the movie: "What we\'ve got here is... failure to communicate."?', 'answer': 'Cool Hand Luke', 'category': 'Quotes'}, {'question': 'Who directed Full Metal Jacket?', 'answer': 'Stanley Kubrick', 'category': 'Directors'}, {'question': 'In Finding Nemo, what was the name of the pelican who befriended Nemo and assisted Marlin and Dory?', 'answer': 'Nigel', 'category': 'Pixar'}, {'question': "In Up, what is the name of Carl Fredricksen's wife?", 'answer': 'Ellie Fredricksen', 'category': 'Pixar'}, {'question': 'Who provides the voice of Lotso the evil bear in Toy Story 3?', 'answer': 'Ned Beatty', 'category': 'Pixar'}, {'question': 'What was the first Pixar film to win Best Animated Feature at the Academy Awards?', 'answer': 'Finding Nemo', 'category': 'Pixar'}, {'question': 'In The Perks of Being a Wallflower, what movie did the kids reenact live in the film?', 'answer': 'The Rocky Horror Picture Show', 'category': 'Coming of Age'}, {'question': 'In Say Anything..., what does Lloyd say he wants to do for a career?', 'answer': 'a kickboxer', 'category': 'Coming of Age'}, {'question': "Who does Ferris pretend to be when he picks up Sloan from the school in Ferris Bueller's Day Off?", 'answer': "Sloan's father", 'category': 'Coming of Age'}, {'question': 'What is used as a makeshift treehouse in Mud?', 'answer': 'a boat', 'category': 'Coming of Age'}, {'question': 'Who played mob boss Carmine Falcone in Batman Begins?', 'answer': 'Tom Wilkinson', 'category': 'DC'}, {'question': 'What does Claire give to Bender at the end of The Breakfast Club?', 'answer': 'her earring', 'category': 'Coming of Age'}, {'question': 'What legendary western director was behind Stagecoach, The Searchers, and The Man Who Shot Liberty Valance?', 'answer': 'John Ford', 'category': 'Westerns'}, {'question': 'How does Yondu control his deadly hovering arrow?', 'answer': 'whistling', 'category': 'Marvel'}, {'question': "In the movie Weird Science, what is the name of Wyatt's brother played by Bill Paxton?", 'answer': 'Chet Donnelly', 'category': '1980s'}, {'question': 'What sport does Riley play in Inside Out?', 'answer': 'ice hockey', 'category': 'Pixar'}, {'question': 'What Will Smith film was described as the cure for the common man?', 'answer': 'Hitch', 'category': 'N/A'}, {'question': 'How many gigawatts of electricity did Doc Brown need to power the DeLorean in Back to the Future?', 'answer': '1.21 gigawatts', 'category': '1980s'}, {'question': 'Name a voiceover artist who lent their talents to the film WALL-E.', 'answer': 'Ben Burtt, Elissa Knight, Fred Willard, Jeff Garlin, John Ratzenberger, Kathy Najimy, Sigourney Weaver', 'category': 'Animated'}, {'question': 'Which comedy features the fictional companies Initech and Initrode?', 'answer': 'Office Space', 'category': 'Comedies'}, {'question': 'What fraternity do Lewis and Gilbert join in Revenge of the Nerds?', 'answer': 'Lambda Lambda Lambda', 'category': '1980s'}, {'question': 'Who voiced the fox Nick Wilde in the film Zootopia?', 'answer': 'Jason Bateman', 'category': 'Animated'}, {'question': 'What department store did Ash work for in Army of Darkness?', 'answer': 'S-Mart', 'category': 'Comedies'}, {'question': "What Oscar-winning actor plays the Headless Horseman in full form in Tim Burton's Sleepy Hollow?", 'answer': 'Christopher Walken', 'category': 'Horror'}, {'question': 'In Terminator 2, which human is most directly responsible for the creation of Skynet?', 'answer': 'Miles Dyson', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who received Oscar nominations for playing the title roles in 1967's Bonnie and Clyde?", 'answer': 'Faye Dunaway, Warren Beatty', 'category': 'Oscars'}, {'question': "Who played Jack Nicholson's book editor rival, who also gets turned into a werewolf, in the film Wolf?", 'answer': 'James Spader', 'category': 'Horror'}, {'question': 'What is the name of the second Chronicles of Narnia film?', 'answer': 'The Chronicles of Narnia: Prince Caspian', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What Christopher Nolan was nominated for Best Picture (as of July 2016)?', 'answer': 'Inception', 'category': 'Oscars'}, {'question': "In Jurassic Park, what animal's DNA do they use to fill in the gaps in the dino DNA?", 'answer': 'frogs', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Men in Black, what does the J stand for in Agent J's name?", 'answer': 'James', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Looper, how is a looper paid when their services are no longer required, ending the looper's contract?", 'answer': 'gold bars', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the name of the alien race that tries to take over Earth in Star Trek: First Contact?', 'answer': 'the Borg', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays the villain in Cliffhanger?', 'answer': 'John Lithgow', 'category': 'Sly & Arnie'}, {'question': 'Who directed Predator?', 'answer': 'John McTiernan', 'category': 'Sly & Arnie'}, {'question': "Who played Sylvester Stallone's daughter in the comedy Oscar?", 'answer': 'Marisa Tomei', 'category': 'Sly & Arnie'}, {'question': "What was Arnold Schwarzenegger's name in Commando?", 'answer': 'John Matrix', 'category': 'Sly & Arnie'}, {'question': 'In what film is Arnold Schwarzenegger trying to decipher the Riddle of Steel?', 'answer': 'Conan the Barbarian', 'category': 'Sly & Arnie'}, {'question': 'Name the year the following movies were released: Ordinary People, Stir Crazy, The Blues Brothers.', 'answer': '1980', 'category': 'N/A'}, {'question': "In Disney's Aladdin, what was Aladdin's third and final wish?", 'answer': 'he wished the genie free', 'category': 'N/A'}, {'question': 'In 1989, this film features the wind whispering "Ease his pain."?', 'answer': 'Field of Dreams', 'category': 'N/A'}, {'question': "Name the actor who played Tom Cruise's best friend in Top Gun.", 'answer': 'Anthony Edwards', 'category': 'N/A'}, {'question': "Who played the father of the gifted child in 2016's Midnight Special?", 'answer': 'Michael Shannon', 'category': 'N/A'}, {'question': 'Who play the two con artists in Dirty Rotten Scoundrels?', 'answer': 'Michael Caine, Steve Martin', 'category': 'Comedies'}, {'question': 'Name the Oscar-winning actress who starred in Fargo and Wonder Boys.', 'answer': 'Frances McDormand', 'category': 'Oscars'}, {'question': "Based off a popular book series, in what 2004 movie does Count Olaf try to steal Violet, Klaus, and Sunny Baudelaire's fortune?", 'answer': "Lemony Snicket's A Series of Unfortunate Events", 'category': 'N/A'}, {'question': 'Who played Arwen, the Elven love interest of Aragorn, in The Lord of the Rings?', 'answer': 'Liv Tyler', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the full character's name of Indy's love interest in Raiders of the Lost Ark?", 'answer': 'Marion Ravenwood', 'category': 'Indiana Jones'}, {'question': 'Victor utilizes electricity to bring his dog Sparky back to life in which movie?', 'answer': 'Frankenweenie', 'category': 'Animated'}, {'question': 'In which movie will you find the characters Jack Cates and Reggie Hammond?', 'answer': '48 Hrs., Another 48 Hrs.', 'category': '1980s'}, {'question': 'Who directed Michael Douglas and Sean Penn in The Game?', 'answer': 'David Fincher', 'category': 'Directors'}, {'question': 'John Travolta lent his voice to this animated pooch in 2008.', 'answer': 'Bolt', 'category': 'Animated'}, {'question': 'What is the subtitle for the third Mad Max film?', 'answer': 'Beyond Thunderdome', 'category': '1980s'}, {'question': 'Robert Redford stars as a gambler named Jack in what Sydney Pollack drama?', 'answer': 'Havana', 'category': 'Directors'}, {'question': 'Which film has the following premise? In the near future, an undercover cop has infiltrated a group of junkies addicted to the hallucinatory drug called Substance D.', 'answer': 'A Scanner Darkly', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which comedy features a less-than-scrupulous private detective named Pat Healy?', 'answer': "There's Something About Mary", 'category': 'Comedies'}, {'question': 'Name the film with the tagline "Eight legs, two fangs and an attitude.".', 'answer': 'Arachnophobia', 'category': 'Taglines'}, {'question': "Name a star of Tim Burton's ill-fated Planet of the Apes film besides Mark Wahlberg.", 'answer': 'Estella Warren, Helena Bonham Carter, Kris Kristofferson, Michael Clarke Duncan, Paul Giamatti, Tim Roth', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name a film featuring Jim Carrey that was released before Ace Ventura: Pet Detective.', 'answer': 'Finders Keepers, Once Bitten, Peggy Sue Got Married, The Dead Pool, Earth Girls Are Easy, Pink Cadillac', 'category': 'Comedies'}, {'question': 'Name the film with the tagline "The Bitch is Back".', 'answer': 'Alien 3', 'category': 'Taglines'}, {'question': 'What director has won the most Oscars for directing?', 'answer': 'John Ford (for The Informer, The Grapes of Wrath, How Green Was My Valley, The Quiet Man)', 'category': 'Oscars'}, {'question': 'What composer has the most Oscar wins for Best Original Score?', 'answer': "Alfred Newman (for Alexander's Ragtime Band, Tin Pan Alley, The Song of Bernadette, Mother Wore Tights, With a Song in My Heart, Call Me Madam, Love Is a Many-Splendored Thing, The King and I, Camelot)", 'category': 'Oscars'}, {'question': 'Who won the 1953 Best Actor Oscar for his portrayal of Marshal Will Kane in the film High Noon?', 'answer': 'Gary Cooper', 'category': 'Oscars'}, {'question': 'At 82 years old at the time, who is the oldest person to win an Academy Award for acting?', 'answer': 'Christopher Plummer (for Beginners)', 'category': 'Oscars'}, {'question': 'What was the name of the film starring Emma Thompson about Mary Poppins?', 'answer': 'Saving Mr. Banks', 'category': 'Biopics'}, {'question': 'What was the name of the 2005 Johnny Cash biopic?', 'answer': 'Walk the Line', 'category': 'Biopics'}, {'question': "In 2012's Lincoln, Daniel Day-Lewis portrayed the President who lobbied for Congress to pass the what Amendment?", 'answer': 'the Thirteenth Amendment', 'category': 'Biopics'}, {'question': "Which college does Big Mike choose to attend in 2009's The Blind Side?", 'answer': 'the University of Mississippi', 'category': 'Biopics'}, {'question': 'Where do Cher and Nicolas Cage go for their first date in Moonstruck?', 'answer': 'the opera', 'category': 'Romance'}, {'question': 'Who voices Prospector Stinky Pete in Toy Story 2?', 'answer': 'Kelsey Grammer', 'category': 'Pixar'}, {'question': 'Name a film featuring Julia Roberts that was released before her star-making turn in Pretty Woman.', 'answer': 'Satisfaction, Mystic Pizza, Blood Red, Steel Magnolias', 'category': 'Julia Roberts'}, {'question': 'Name the film in which skateboarder Christian Slater avenges the death of his adopted brother.', 'answer': 'Gleaming the Cube', 'category': '1980s'}, {'question': 'What year did the Michael J. Fox teen comedy Teen Wolf come out?', 'answer': '1985', 'category': 'Release Dates'}, {'question': 'Who voices the merchant who tells us the story of Aladdin in the start of the film?', 'answer': 'Robin Williams', 'category': 'Animated'}, {'question': "Name the Hitchcock drama about a San Francisco detective's fear of heights and his obsession over a woman.", 'answer': 'Vertigo', 'category': 'Dramas'}, {'question': 'What is the name of the mines that the Fellowship must pass through in The Lord of the Rings: The Fellowship of the Ring?', 'answer': 'the Mines of Moria', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name two of the three Darling children in Peter Pan.', 'answer': 'John Darling, Michael Darling, Wendy Darling', 'category': 'Animated'}, {'question': 'Which actor played young Brad Pitt in the film Sleepers?', 'answer': 'Brad Renfro', 'category': 'Dramas'}, {'question': "Who plays John Murdoch's wife Emma Murdoch in 1998's Dark City?", 'answer': 'Jennifer Connelly', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Finish the movie quote: "Take your ___ paws off me, you damn dirty ape!".', 'answer': "stinkin' (from 1968's Planet of the Apes)", 'category': 'Quotes'}, {'question': 'What comes out of the walls at the end of The Amityville Horror?', 'answer': 'blood', 'category': 'Horror'}, {'question': "How was the secret passageway opened to Dr. Frankenstein's lab in Young Frankenstein?", 'answer': 'moving a candle', 'category': 'Comedies'}, {'question': 'What film is this quote from: "And I guess that was your accomplice in the woodchipper."?', 'answer': 'Fargo', 'category': 'Quotes'}, {'question': "Who directed 1991's film The People Under the Stairs?", 'answer': 'Wes Craven', 'category': 'Horror'}, {'question': 'Which boy band shows up to greet the guys in Heaven in the 2013 comedy This Is the End?', 'answer': 'the Backstreet Boys', 'category': 'Comedies'}, {'question': "Who plays Jake Gyllenhaal's stern father in October Sky?", 'answer': 'Chris Cooper', 'category': '1990s'}, {'question': "What was the name of Milla Jovovich's character in The Fifth Element?", 'answer': 'Leeloo', 'category': '1990s'}, {'question': 'In which film will you find the Colonel Nathan Jessup?', 'answer': 'A Few Good Men', 'category': '1990s'}, {'question': 'Who plays the famous movie star that John Travolta pitches his movie idea to in Get Shorty?', 'answer': 'Danny DeVito', 'category': '1990s'}, {'question': 'Who co-starred with Robert Redford in the 2001 movie Spy Game?', 'answer': 'Brad Pitt', 'category': 'Action/Adventure'}, {'question': 'What is the full name of the company that Holly Gennero works for in Die Hard?', 'answer': 'the Nakatomi Corporation', 'category': 'Action/Adventure'}, {'question': 'Who directed the film Layer Cake?', 'answer': 'Matthew Vaughn', 'category': 'Action/Adventure'}, {'question': 'What is the name of the hotel in John Wick?', 'answer': 'the Continental Hotel', 'category': 'Action/Adventure'}, {'question': 'What 1993 movie paired Jack Lemmon and Walter Matthau as the best of enemies until something came between them? ', 'answer': 'Grumpy Old Men', 'category': '1990s'}, {'question': 'Where do Hugh Grant and Julia Roberts meet for the first time in the film Notting Hill?', 'answer': 'a bookstore', 'category': 'Julia Roberts'}, {'question': 'There were two Steven Spielberg films that were released in 2002. One was Minority Report. What was the other?', 'answer': 'Catch Me If You Can', 'category': 'Steven Spielberg'}, {'question': 'What member of the Rat Pack co-starred with John Wayne in Rio Bravo?', 'answer': 'Dean Martin', 'category': 'Westerns'}, {'question': 'What is the name of the hippogriff creature that Harry and Hermione save in The Prisoner of Azkaban?', 'answer': 'Buckbeak', 'category': 'Harry Potter'}, {'question': 'Of the movies Housesitter, Houseguest, and Bringing Down the House, which one stars Sinbad?', 'answer': 'Houseguest', 'category': 'Rom-Coms'}, {'question': 'What disaster film had the tagline "Earth. It Was Fun While It Lasted."?', 'answer': 'Armageddon', 'category': 'Taglines'}, {'question': 'In which movie does a wealthy man announce to his son\'s kidnappers "congratulations, you\'ve just become a two million dollar lottery ticket" as he offers a bounty on national television?', 'answer': 'Ransom', 'category': 'Dramas'}, {'question': 'What romantic comedy involves the New York Knicks, a magazine called Composure, and a diamond ad campaign?', 'answer': 'How to Lose a Guy in 10 Days', 'category': 'Rom-Coms'}, {'question': 'What cult classic had the tagline "Just Because They Serve You... Doesn\'t Mean They Like You."?', 'answer': 'Clerks', 'category': 'Taglines'}, {'question': "What actress plays the title role as stepmom to Ed Harris and Susan Sarandon's children in the 1998 movie Stepmom?", 'answer': 'Julia Roberts', 'category': 'Dramas'}, {'question': 'In the film Zootopia, what was the name of the sloth that helped Officer Hopps at the DMV?', 'answer': 'Flash', 'category': 'Animated'}, {'question': "In Ang Lee's Hulk, the Hulk has to fight giant gamma-infected animals. What kind of animals were they?", 'answer': 'dogs', 'category': 'Comic Book'}, {'question': 'What comedy horror film stars Tyler Labine and Alan Tudyk, and is about what happens when two of them are on vacation at their dilapidated mountain cabin where they are attacked by a group of preppy college kids?', 'answer': 'Tucker & Dale vs. Evil', 'category': 'Horror'}, {'question': "What is Tiana's dream in The Princess and the Frog?", 'answer': 'to own a restaurant', 'category': 'Animated'}, {'question': 'The main villain in Deadpool got his name from what household product?', 'answer': 'Ajax', 'category': 'Comic Book'}, {'question': "What horror film's villain is a young school-aged girl named Samara?", 'answer': 'The Ring, The Ring Two', 'category': 'Horror'}, {'question': 'Who played Blackbeard in Pirates of the Caribbean: On Stranger Tides?', 'answer': 'Ian McShane', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the name of Katniss' sister in the Hunger Games series?", 'answer': 'Primrose Everdeen', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the 1988 film Willow, what kind of creatures attack Willow on the bridge?', 'answer': 'trolls', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays Jeff Goldblum's father in Independence Day?", 'answer': 'Judd Hirsch', 'category': 'Fantasy/Sci-Fi'}, {'question': "In 1963's The Haunting, why are all the characters staying at Hill House?", 'answer': 'they are participating in paranormal research', 'category': 'Horror'}, {'question': 'Whom did Sidney say would play her in Scream 2?', 'answer': 'Tori Spelling', 'category': 'Horror'}, {'question': "What is the lead character Christine Brown's job in Drag Me to Hell?", 'answer': 'a bank loan officer', 'category': 'Horror'}, {'question': 'Which horror movie has the tagline "Be afraid. Be very afraid."?', 'answer': 'The Fly', 'category': 'Horror'}, {'question': "In the film Jerry Maguire, what was the name of Jerry's stepson?", 'answer': 'Ray Boyd', 'category': '1990s'}, {'question': 'What was the first film to pair Steven Spielberg with composer John Williams?', 'answer': 'The Sugarland Express', 'category': 'Steven Spielberg'}, {'question': 'In which country does the film Cinema Paradiso take place?', 'answer': 'Italy', 'category': 'Dramas'}, {'question': 'What is the name of the squirrel in the Ice Age films?', 'answer': 'Scrat', 'category': 'Animated'}, {'question': 'The Mystics and the Skeksis are two races that join together in which 1980s fantasy?', 'answer': 'The Dark Crystal', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays betrayed wife Beth Gallagher in 1987's Fatal Attraction?", 'answer': 'Anne Archer', 'category': 'Dramas'}, {'question': 'Meeko and Flit are the names of two characters in what Disney film?', 'answer': 'Pocahontas', 'category': 'Animated'}, {'question': "In 2005's War of the Worlds, who plays Tom Cruise's daughter?", 'answer': 'Dakota Fanning', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In which acclaimed movie will you find a wolf named Two Socks?', 'answer': 'Dances with Wolves', 'category': 'Dramas'}, {'question': 'Which film involves a gang that deals a reality-altering drug called Slo-Mo?', 'answer': 'Dredd', 'category': 'Comic Book'}, {'question': 'Name the film featuring the tagline "Even A Hit Man Deserves A Second Shot!".', 'answer': 'Grosse Pointe Black', 'category': 'Taglines'}, {'question': 'What is the 1980s comedy that stars Kathleen Turner and Nicolas Cage, and was directed by Francis Ford Coppola?', 'answer': 'Peggy Sue Got Married', 'category': '1980s'}, {'question': "Who played Rorschach in 2009's Watchmen?", 'answer': 'Jackie Earle Haley', 'category': 'Comic Book'}, {'question': 'Name the film featuring the tagline: "Man is The Warmest Place to Hide.".', 'answer': 'The Thing', 'category': 'Taglines'}, {'question': 'Who directed the 1987 mob movie The Untouchables?', 'answer': 'Brian De Palma', 'category': '1980s'}, {'question': "Who plays Keanu Reeves' partner in Speed?", 'answer': 'Jeff Daniels', 'category': 'Action/Adventure'}, {'question': 'What film stars Viggo Mortensen as American distance rider Frank Hopkins and his mustang of the same name?', 'answer': 'Hidalgo', 'category': 'Action/Adventure'}, {'question': 'Detective Inspector Lee and Detective James Carter are the two cops in what buddy cop movie?', 'answer': 'Rush Hour, Rush Hour 2, Rush Hour 3', 'category': 'Action/Adventure'}, {'question': 'In True Lies, what does Arnold Schwarzenegger tell Jamie Lee Curtis he does for a living?', 'answer': 'a computer salesman', 'category': 'Action/Adventure'}, {'question': "What phrase is used by Farmer Hoggett in 1995's Babe, when he congratulates Babe on doing a good job?", 'answer': "That'll do, pig. That'll do.", 'category': 'Family'}, {'question': "Who plays Daphne in 2002's live-action Scooby-Doo?", 'answer': 'Sarah Michelle Gellar', 'category': 'Family'}, {'question': "Who played the boyfriend of Piper Perabo's character in Cheaper by the Dozen?", 'answer': 'Ashton Kutcher', 'category': 'Family'}, {'question': 'What is the name of the basketball team that Michael Jordan plays on alongside Bugs Bunny and the other Looney Tunes in Space Jam?', 'answer': 'the Tune Squad', 'category': 'Family'}, {'question': 'In what film do musicians want to turn the volume up to eleven?', 'answer': 'This Is Spinal Tap', 'category': 'Comedies'}, {'question': 'Who performed the closing credits song "May It Be" from The Lord of the Rings: The Fellowship of the Ring?', 'answer': 'Enya', 'category': 'Scores & Soundtracks'}, {'question': 'Name the director of the 1969 classic The Wild Bunch.', 'answer': 'Sam Peckinpah', 'category': 'Westerns'}, {'question': 'Which Disney film features a pig herder, Taran, who must go on a quest to stop the evil Horned King?', 'answer': 'The Black Cauldron', 'category': 'Animated'}, {'question': "What was Randy Robinson's famous nickname in The Wrestler?", 'answer': 'the Ram', 'category': 'Dramas'}, {'question': 'What comedian and sitcom star directed the film Dirty Work?', 'answer': 'Bob Saget', 'category': 'Directors'}, {'question': 'Which sci-fi legend was the voice of Galvatron in the 1986 feature film The Transformers: The Movie?', 'answer': 'Leonard Nimoy', 'category': 'Animated'}, {'question': 'Which award-winning film centers on suburban husband and father Lester Burnham?', 'answer': 'American Beauty', 'category': 'Dramas'}, {'question': 'Paul Thomas Anderson has never won an Oscar, though he was nominated once for Best Director (as of August 2016). Which film earned him that nod?', 'answer': 'There Will Be Blood', 'category': 'Directors'}, {'question': 'In which comedy will you find the psychiatrist Dr. Leo Marvin on vacation at Lake Winnipesaukee?', 'answer': 'What About Bob?', 'category': 'Comedies'}, {'question': 'Kick-ass rock artists, Blue Öyster Cult, Cheap Trick, Black Sabbath, and Sammy Hagar lent music to this 1981 animated epic.', 'answer': 'Heavy Metal', 'category': 'Scores & Soundtracks'}, {'question': 'Which film had the following tagline: "Reality is a thing of the past."?', 'answer': 'The Matrix', 'category': 'Taglines'}, {'question': "What actress played Harriet the butcher, the object of Mike Myers' affection, in So I Married an Axe Murderer?", 'answer': 'Nancy Travis', 'category': 'Comedies'}, {'question': 'Rocky composer Bill Conti won an Oscar in 1984 for scoring this inspirational true story.', 'answer': 'The Right Stuff', 'category': 'Scores & Soundtracks'}, {'question': 'Which film had the tagline "Fifty million people watched, but no one saw a thing."?', 'answer': 'Quiz Show', 'category': 'Taglines'}, {'question': 'What year was Braveheart released?', 'answer': '1995', 'category': 'Release Dates'}, {'question': 'What year did the first Chipmunks movie come out?', 'answer': '2007', 'category': 'Release Dates'}, {'question': 'What year did Goodfellas come out?', 'answer': '1990', 'category': 'Release Dates'}, {'question': 'What year did the Val Kilmer comedy Top Secret! come out?', 'answer': '1984', 'category': 'Release Dates'}, {'question': 'What is the name of the boxing star whose life is put under scrutiny in the classic 1980 film Raging Bull?', 'answer': 'Jake LaMotta', 'category': 'Biopics'}, {'question': 'What is the name of the 1989 movie that attempts to tell the story of the tragic life of the talented comedic actor John Belushi?', 'answer': 'Wired', 'category': 'Biopics'}, {'question': "In 1980, movie viewers were treated to a lovely little performance by Sissy Spacek in the biographical film Coal Miner's Daughter. Which country western singer did Spacek portray in the film?", 'answer': 'Loretta Lynn', 'category': 'Biopics'}, {'question': "Composer Atticus Ross teamed up with what musician to do the score for David Fincher's The Social Network?", 'answer': 'Trent Reznor', 'category': 'Biopics'}, {'question': 'What 2006 horror remake stars Nicolas Cage and features the tagline "Some Sacrifices Must Be Made"?', 'answer': 'The Wicker Man', 'category': 'Horror'}, {'question': 'Which film sees Gene Wilder and a co-star on stage performing "Puttin\' on the Ritz"?', 'answer': 'Young Frankenstein', 'category': 'Classics'}, {'question': "Name two of the stars of Steven Spielberg's 2005 film Munich.", 'answer': 'Ciarán Hinds, Daniel Craig, Eric Bana, Geoffrey Rush, Hanns Zischler, Mathieu Kassovitz', 'category': 'Steven Spielberg'}, {'question': 'In what movie did Jude Law and Ed Harris play enemy snipers during World War II?', 'answer': 'Enemy at the Gates', 'category': 'War'}, {'question': 'How many Infinity Stones are said to exist in the Marvel Cinematic Universe?', 'answer': '6 Infinity Stones', 'category': 'Marvel'}, {'question': "Which snarky Saturday Night Live alum is the narrator in The Emperor's New Groove?", 'answer': 'David Spade', 'category': 'Animated'}, {'question': 'Which 90s action film features criminals with nicknames like Diamond Dog and Baby-O?', 'answer': 'Con Air', 'category': 'Action/Adventure'}, {'question': 'Which film won Tom Hooper the Academy Award for Best Director?', 'answer': "The King's Speech", 'category': 'Oscars'}, {'question': 'Mel Gibson voices Rocky in this farm-based animated film.', 'answer': 'Chicken Run', 'category': 'Animated'}, {'question': 'Steven Seagal plays cop Nico Toscani and is partners with Pam Grier in which film?', 'answer': 'Above the Law', 'category': 'Action/Adventure'}, {'question': 'Javier Bardem won the Best Supporting Actor Oscar for his role in No Country for Old Men. Name another award that was won for that film.', 'answer': 'Picture, Director, Adapted Screenplay', 'category': 'Oscars'}, {'question': 'Jack Nicholson falls for Diane Keaton in this 2003 romantic comedy.', 'answer': "Something's Gotta Give", 'category': 'Rom-Coms'}, {'question': 'In 1974, Francis Ford Coppola directed The Godfather Part II, and which other film, starring Gene Hackman and featuring a small role by Harrison Ford?', 'answer': 'The Conversation', 'category': 'Directors'}, {'question': 'Name the film featuring the tagline "Love Is A Force Of Nature".', 'answer': 'Brokeback Mountain', 'category': 'Taglines'}, {'question': "Name the two dashing leading men in the original Bridget Jones's Diary.", 'answer': 'Colin Firth, Hugh Grant', 'category': 'Rom-Coms'}, {'question': "Which acting legend made his debut behind the lens with 1971's Play Misty for Me?", 'answer': 'Clint Eastwood', 'category': 'Directors'}, {'question': 'Name the feature film featuring the tagline "One man\'s struggle to take it easy."?', 'answer': "Ferris Bueller's Day Off", 'category': 'Taglines'}, {'question': 'Who played the co-pilot Roger in the 1980 spoof smash Airplane!?', 'answer': 'Kareem Abdul-Jabbar', 'category': 'Comedies'}, {'question': "This 1994 Danny DeVito film was also Mark Wahlberg's feature film debut.", 'answer': 'Renaissance Man', 'category': 'Comedies'}, {'question': 'In what state does the indie comedy hit Clerks take place?', 'answer': 'New Jersey', 'category': 'Comedies'}, {'question': 'Who directed the Vegas high jinks comedy The Hangover?', 'answer': 'Todd Phillips', 'category': 'Comedies'}, {'question': 'Which U.S. President did Will Smith have to aid in the 1999 film Wild Wild West?', 'answer': 'Ulysses S. Grant', 'category': 'Will Smith'}, {'question': 'Which Will Smith film also stars Bridget Moynahan and Bruce Greenwood?', 'answer': 'I, Robot', 'category': 'Will Smith'}, {'question': "What government organization's corrupt members were after Will Smith in Enemy of the State?", 'answer': 'the NSA', 'category': 'Will Smith'}, {'question': 'What female does Will Smith help find true love in the film Hitch?', 'answer': 'Eva Mendes', 'category': 'Will Smith'}, {'question': 'Which actor plays the role of Phil in the Hangover series?', 'answer': 'Bradley Cooper', 'category': 'Famous Actors'}, {'question': 'In Ant-Man, who plays the role of Darren Cross?', 'answer': 'Corey Stoll', 'category': 'Marvel'}, {'question': 'In Indiana Jones and the Last Crusade, what is the name of the art dealer and Nazi sympathizer who sends Jones after the Holy Grail?', 'answer': 'Walter Donovan', 'category': 'Indiana Jones'}, {'question': 'Which film set post World War II depicts a mother ensuring her two children avoid sunlight because of their photosensitivity?', 'answer': 'The Others', 'category': 'Horror'}, {'question': 'Which film is inspired by the Homage DC comic and stars Bruce Willis and Morgan Freeman?', 'answer': 'Red', 'category': 'DC'}, {'question': 'For which film did Jodie Foster win her first Oscar?', 'answer': 'The Accused', 'category': 'Oscars'}, {'question': 'Which animated movie stars Burt Reynolds as the voice of a casino-owning canine named Charlie?', 'answer': 'All Dogs Go to Heaven', 'category': 'Animated'}, {'question': 'In what film will you find Vince Vaughn as FBI agent Peter Novak?', 'answer': 'The Cell', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name two of the stars of the Oscar-nominated drama Dangerous Liaisons.', 'answer': 'Glenn Close, John Malkovich, Keanu Reeves, Michelle Pfeiffer, Mildred Natwick, Swoosie Kurtz, Uma Thurman', 'category': 'Dramas'}, {'question': 'Bill Nighy voices Jake in the film Rango. What type of animal is Jake?', 'answer': 'a western diamondback rattlesnake', 'category': 'Animated'}, {'question': 'Which 90s fantasy starred Macaulay Culkin and Christopher Lloyd as a librarian named Mr. Dewey?', 'answer': 'The Pagemaster', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed Clint Eastwood and Meryl Streep in The Bridges of Madison County?', 'answer': 'Clint Eastwood', 'category': 'Dramas'}, {'question': 'Who won a Best Supporting Actress Oscar for her turn as Linda Ash in Mighty Aphrodite?', 'answer': 'Mira Sorvino', 'category': 'Oscars'}, {'question': "What concert do Wayne and Garth attend in the first Wayne's World?", 'answer': 'an Alice Cooper concert', 'category': 'Comedies'}, {'question': 'Which actor had the famous line from In the Heat of the Night "They call me Mr. Tibbs!"?', 'answer': 'Sidney Poitier', 'category': 'Quotes'}, {'question': 'Renée Zellweger won her only Academy Award for her performance in which film (as of August 2016)?', 'answer': 'Cold Mountain', 'category': 'Oscars'}, {'question': 'Greg Mottola directed which film written by Seth Rogen and Evan Goldberg?', 'answer': 'Superbad', 'category': 'Comedies'}, {'question': 'Name the film featuring the quote "Gentlemen, you can\'t fight in here! This is the War Room.".', 'answer': 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', 'category': 'Quotes'}, {'question': 'In Sideways, what do Paul Giamatti and Thomas Haden Church plan to do on their trip before getting involved with Sandra Oh and Virginia Madsen?', 'answer': 'wine tastings', 'category': 'Romance'}, {'question': 'In the 1980 romantic fantasy Somewhere in Time, who co-starred alongside Christopher Reeve?', 'answer': 'Jane Seymour', 'category': 'Romance'}, {'question': "Who plays Barbra Streisand's love interest in the 1996 film The Mirror Has Two Faces?", 'answer': 'Jeff Bridges', 'category': 'Romance'}, {'question': 'Who plays stubborn landlord Armande Voizin in the 2000 romance Chocolat?', 'answer': 'Judi Dench', 'category': 'Romance'}, {'question': 'What activity is the focus of the film Iron Monkey?', 'answer': 'martial arts', 'category': 'Sports'}, {'question': "In Days of Thunder, what soda was Cole Trickle's car sponsored by in the final race at Daytona?", 'answer': 'Mello Yello', 'category': 'Sports'}, {'question': 'Who directed Friday Night Lights?', 'answer': 'Peter Berg', 'category': 'Sports'}, {'question': 'What do they call the road where the final rollerblade race takes place at the end of the film Airborne?', 'answer': "the Devil's Backbone", 'category': 'Sports'}, {'question': 'In which Judd Apatow movie will you find the main character named Ben Stone?', 'answer': 'Knocked Up', 'category': 'Judd Apatow'}, {'question': 'Name the movie featuring the quote "I got nowhere else to go! ".', 'answer': 'An Officer and a Gentleman', 'category': 'N/A'}, {'question': 'What is the name of the crab in The Little Mermaid?', 'answer': 'Sebastian', 'category': 'N/A'}, {'question': 'Name the directorial debut for Ben Affleck.', 'answer': 'Gone Baby Gone', 'category': 'N/A'}, {'question': 'Rufus is the time traveling character played by which comedian?', 'answer': "George Carlin (in Bill & Ted's Excellent Adventure, Bill & Ted's Bogus Journey)", 'category': 'N/A'}, {'question': 'Name the film starring the actors: Bruce Willis, Samuel L. Jackson, Robin Wright.', 'answer': 'Unbreakable', 'category': 'N/A'}, {'question': "In The Lost World: Jurassic Park, Jeff Goldblum's Dr. Ian Malcolm is joined on the adventure by Dr. Sarah Harding, played by whom?", 'answer': 'Julianne Moore', 'category': 'Steven Spielberg'}, {'question': "Who played Lee Harvey Oswald in Oliver Stone's JFK?", 'answer': 'Gary Oldman', 'category': 'Famous Actors'}, {'question': 'What 2014 film duo used the WABAC time machine to embark on an outrageous adventure?', 'answer': 'Mr. Peabody, Sherman', 'category': 'Animated'}, {'question': 'Who plays Wednesday in the Addams Family movies?', 'answer': 'Christina Ricci', 'category': 'Comedies'}, {'question': "Who directed 2005's frightening tale of the murderous Firefly family The Devil's Rejects?", 'answer': 'Rob Zombie', 'category': 'Directors'}, {'question': 'Who voices Marty the zebra in the Madagascar film franchise?', 'answer': 'Chris Rock', 'category': 'Animated'}, {'question': 'Which Adam Sandler comedy sees him play a New Yorker named Sonny Koufax?', 'answer': 'Big Daddy', 'category': 'Comedies'}, {'question': 'Who directed Kevin Costner in both Robin Hood: Prince of Thieves and Waterworld?', 'answer': 'Kevin Reynolds', 'category': 'Directors'}, {'question': 'An asthmatic boy dreams of fighting crime with his hero Chuck Norris in which film?', 'answer': 'Sidekicks', 'category': 'Action/Adventure'}, {'question': 'Which huge box office grossing film never reached number one while in theaters domestically? Star Wars, My Big Fat Greek Wedding, Titanic, or The Passion of the Christ?', 'answer': 'My Big Fat Greek Wedding', 'category': 'Box Office'}, {'question': 'Which movie is this tagline from: "A lively comedy about a guy who isn\'t."?', 'answer': "Weekend at Bernie's", 'category': 'Taglines'}, {'question': 'Which actors starred as the brothers in the 2005 flick The Brothers Grimm?', 'answer': 'Heath Ledger, Matt Damon', 'category': 'Action/Adventure'}, {'question': 'Which film was the highest-grossing film of 1984 domestically? Ghostbusters, Gremlins, Beverly Hills Cop, or Indiana Jones and the Temple of Doom?', 'answer': 'Beverly Hills Cop', 'category': 'Box Office'}, {'question': 'Which movie is this tagline from: "Protecting the Earth from the scum of the universe"?', 'answer': 'Men in Black', 'category': 'Taglines'}, {'question': 'What writer director ex-couple was behind the movie Strange Days?', 'answer': 'James Cameron, Kathryn Bigelow', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Jimmy Smits made his Star Wars debut as Bail Organa in which film?', 'answer': 'Star Wars: Episode II – Attack of the Clones', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the movie Them!, the characters face off giant versions of what insect?', 'answer': 'ants', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What Star Trek movie is the first feature film appearance of Patrick Stewart as Jean-Luc Picard?', 'answer': 'Star Trek Generations', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed Sense and Sensibility?', 'answer': 'Ang Lee', 'category': '1990s'}, {'question': 'What are the items given back to Verbal Kint as he leaves the police station in the movie The Usual Suspects?', 'answer': 'a gold watch and a gold lighter', 'category': '1990s'}, {'question': "Who is transformed into a prom princess in She's All That?", 'answer': 'Rachael Leigh Cook', 'category': '1990s'}, {'question': 'During which event was Mickey to be interviewed in Natural Born Killers?', 'answer': 'the Super Bowl', 'category': '1990s'}, {'question': 'Name the first film that featured Tom Hanks and Meg Ryan in leading roles.', 'answer': 'Joe Versus the Volcano', 'category': 'Tom Hanks'}, {'question': 'What classic comedy follows the academic and romantic pursuits of teenagers Stacy Hamilton and Mark Ratner?', 'answer': 'Fast Times at Ridgemont High', 'category': 'Coming of Age'}, {'question': 'Iron Man launched the MCU back in 2008. What was the next MCU film that was released in theaters?', 'answer': 'The Incredible Hulk', 'category': 'Marvel'}, {'question': 'Cary Grant starred in which film that is loosely based on the Rudyard Kipling poem of the same name?', 'answer': 'Gunga Din', 'category': 'Classics'}, {'question': 'Based on a Stephen King story, who directed the 2007 film The Mist?', 'answer': 'Frank Darabont', 'category': 'Horror'}, {'question': 'Who plays the villainous Mr. Joshua in Lethal Weapon?', 'answer': 'Gary Busey', 'category': '1980s'}, {'question': 'What newspaper did the reporters in Spotlight work for?', 'answer': 'the Boston Globe', 'category': 'Dramas'}, {'question': "What is the name of the walking, talking clock in Disney's Beauty and the Beast?", 'answer': 'Cogsworth', 'category': 'Animated'}, {'question': "In Back to the Future, Marty bumps into the future mayor of Hill Valley when he journeys back to 1955. What is the prospective mayor's name?", 'answer': 'Goldie Wilson', 'category': '1980s'}, {'question': "Who played Ben Affleck's lawyer in Gone Girl?", 'answer': 'Tyler Perry', 'category': 'Dramas'}, {'question': 'Name the movie: Stuart, Kevin, and Bob are recruited by Scarlet Overkill, a supervillain who, alongside her inventor husband Herb, hatches a plot to take over the world.', 'answer': 'Minions', 'category': 'Animated'}, {'question': 'Who plays the title role in the 2001 romantic comedy The Wedding Planner?', 'answer': 'Jennifer Lopez', 'category': 'Rom-Coms'}, {'question': 'Who plays the alien woman Ella, who helps the humans against the alien invaders, in Cowboys & Aliens?', 'answer': 'Olivia Wilde', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name the movie that had the quote "D\'you know that bees and dogs can smell fear?".', 'answer': 'Jerry Maguire', 'category': 'Quotes'}, {'question': 'In Forgetting Sarah Marshall, Jason Segel dreams of making a puppet rock opera based on what classic novel?', 'answer': 'Dracula', 'category': 'Rom-Coms'}, {'question': "What was Neo's last name before he was awoken in The Matrix?", 'answer': 'Anderson', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What movie is this quote from: "We got cocaine and coffee here. We\'re gonna get wired and have a big party."?', 'answer': 'Beverly Hills Cop', 'category': 'Quotes'}, {'question': 'Which baseball film ends with a spectacular home run that shatters the lights?', 'answer': 'The Natural', 'category': 'Sports'}, {'question': 'Which comedy stars Rip Torn as a coach who throws wrenches at his players?', 'answer': 'Dodgeball: A True Underdog Story', 'category': 'Sports'}, {'question': "Seabiscuit's match of the century pits which horse against Seabiscuit?", 'answer': 'War Admiral', 'category': 'Sports'}, {'question': "What profession is Dennis Quaid's character in before he tries out for Major League Baseball in The Rookie?", 'answer': 'a high school science teacher', 'category': 'Sports'}, {'question': "In Die Hard, what was the name of John McClane's limo driver?", 'answer': 'Argyle', 'category': 'Action/Adventure'}, {'question': 'Who plays the villainous Raoul Silva in the James Bond film Skyfall?', 'answer': 'Javier Bardem', 'category': 'Action/Adventure'}, {'question': 'What animal does Jean-Claude Van Damme punch in the face in Hard Target?', 'answer': 'a rattlesnake', 'category': 'Action/Adventure'}, {'question': "What was Bruce Lee's final film?", 'answer': 'Enter the Dragon', 'category': 'Action/Adventure'}, {'question': 'Who played the villain Sebastian Shaw in X-Men: First Class?', 'answer': 'Kevin Bacon', 'category': 'Comic Book'}, {'question': 'In the 1933 comedy Duck Soup, Groucho Marx plays the leader of what fictitious nation?', 'answer': 'Freedonia', 'category': 'Classics'}, {'question': 'What 2004 crime thriller stars Kim Basinger, Chris Evans, and Jason Statham?', 'answer': 'Cellular', 'category': 'Crime'}, {'question': 'What was Leia\'s response when Han asked "Who are you?" in Jabba\'s Palace after she freed him from carbonite?', 'answer': 'Someone who loves you.', 'category': 'Star Wars'}, {'question': 'What is the name of the young Apatosaurus in The Land Before Time?', 'answer': 'Littlefoot', 'category': 'Animated'}, {'question': "Who was Jean-Claude Van Damme's co-star in the 1998 film Knock Off?", 'answer': 'Rob Schneider', 'category': 'Jean-Claude Van Damme'}, {'question': 'What are the names of the four Ghostbusters?', 'answer': 'Egon Spengler, Peter Venkman, Ray Stantz, Winston Zeddemore', 'category': '1980s'}, {'question': 'Which film was the highest-grossing film of 2011 domestically? The Twilight Saga: Breaking Dawn – Part 1, Transformers: Dark of the Moon, Harry Potter and the Deathly Hallows – Part 2, or Pirates of the Caribbean: On Stranger Tides?', 'answer': 'Harry Potter and the Deathly Hallows – Part 2', 'category': 'Box Office'}, {'question': "What are Harry and Lloyd's last names in Dumb and Dumber?", 'answer': 'Dunne, Christmas', 'category': 'Comedies'}, {'question': "In National Lampoon's Vacation, at Walley World, what weapon does Clark use to kidnap John Candy at the end of the film?", 'answer': 'a BB gun', 'category': '1980s'}, {'question': 'Which film was the highest-grossing film of 2014 domestically? The Hunger Games: Mockingjay – Part 1, American Sniper, Guardians of the Galaxy, or The Lego Movie?', 'answer': 'American Sniper', 'category': 'Box Office'}, {'question': 'In Lars and the Real Girl, who is the real girl?', 'answer': 'a lifelike doll Lars bought on the Internet', 'category': 'Comedies'}, {'question': 'What 1984 movie had sequels that were subtitled Dream Warriors and The Dream Master?', 'answer': 'A Nightmare on Elm Street', 'category': 'Horror'}, {'question': 'Meryl Streep was nominated for an Oscar for the heartfelt drama Music of the Heart, the only non-horror film from what legendary director?', 'answer': 'Wes Craven', 'category': 'Directors'}, {'question': "What is Tom Hanks' character's job in the film Road to Perdition?", 'answer': 'an Irish mob enforcer', 'category': 'Comic Book'}, {'question': 'In what room does Danny find the creepy old lady in the bathtub in The Shining?', 'answer': 'Room 237', 'category': 'Horror'}, {'question': 'Who directed Mission: Impossible III?', 'answer': 'J. J. Abrams', 'category': 'Directors'}, {'question': "When Josh Dallas couldn't come back for Thor 2, what actor took over the role of Fandral, one of Thor's friends known as the Warriors Three?", 'answer': 'Zachary Levi', 'category': 'Comic Book'}, {'question': "What is Quentin Tarantino's color in Reservoir Dogs?", 'answer': 'brown', 'category': 'Quentin Tarantino'}, {'question': "What is the name of Quentin Tarantino's third solo feature film directorial effort?", 'answer': 'Jackie Brown', 'category': 'Quentin Tarantino'}, {'question': 'To date, what is the highest-grossing film domestically that Quentin Tarantino has directed?', 'answer': 'Django Unchained', 'category': 'Quentin Tarantino'}, {'question': 'What Quentin Tarantino film includes characters named Major Marquis Warren, Sheriff Chris Mannix, and Oswaldo Mobray?', 'answer': 'The Hateful Eight', 'category': 'Quentin Tarantino'}, {'question': "What is the name of Harrison Ford's character in Witness?", 'answer': 'John Book', 'category': '1980s'}, {'question': "In The Goonies, everyone's houses are being foreclosed so that the entire neighborhood can be replaced by what?", 'answer': 'a golf course', 'category': '1980s'}, {'question': '1983 saw the release of the official Bond film Octopussy as well as the release of what unofficial Bond film with Sean Connery reprising the legendary role?', 'answer': 'Never Say Never Again', 'category': '1980s'}, {'question': 'What do Tom Cruise and his friends sing to Kelly McGillis in the bar in Top Gun?', 'answer': "You've Lost That Lovin' Feelin'", 'category': '1980s'}, {'question': 'In the film Batman Begins, how long was Bruce Wayne away from Gotham City?', 'answer': '7 years', 'category': 'DC'}, {'question': "What is the name of the prison that General Zod and his followers were imprisoned in in Donner and Lester's Superman films and Man of Steel?", 'answer': 'the Phantom Zone', 'category': 'DC'}, {'question': "What Batman villain pops up in each of Christopher Nolan's Dark Knight trilogy?", 'answer': 'Scarecrow', 'category': 'DC'}, {'question': 'In what year did Green Lantern come out?', 'answer': '2011', 'category': 'DC'}, {'question': 'Which film won Best Picture of 2013, beating out other nominee Her?', 'answer': '12 Years a Slave', 'category': 'Oscars'}, {'question': "Who played love interest Carla Purty in 1996's The Nutty Professor?", 'answer': 'Jada Pinkett Smith', 'category': 'Comedies'}, {'question': 'Who directed Brad Pitt in The Curious Case of Benjamin Button?', 'answer': 'David Fincher', 'category': 'Directors'}, {'question': 'In which film does Daniel Day-Lewis play Gerry Conlon, a young Irishman who spends 15 years trying to prove his innocence for a bombing in Belfast?', 'answer': 'In the Name of the Father', 'category': 'Dramas'}, {'question': 'What famous rap artist performs at the first party for the new frat in Old School?', 'answer': 'Snoop Dogg', 'category': 'Comedies'}, {'question': 'Which director was at the helm for the 1985 comedy fantasy Weird Science?', 'answer': 'John Hughes', 'category': 'Directors'}, {'question': 'Who starred as the radio shock jock Jack Lucas in the acclaimed 1991 drama The Fisher King?', 'answer': 'Jeff Bridges', 'category': 'Dramas'}, {'question': 'Which adventure film was nominated for an Academy Award and stars Russell Crowe as Jack Aubrey?', 'answer': 'Master and Commander: The Far Side of the World', 'category': 'Action/Adventure'}, {'question': 'Which 1999 film featured the tagline "There\'s something about your first piece."?', 'answer': 'American Pie', 'category': 'Taglines'}, {'question': 'Which film features this quote: "Yes, they deserved to die and I hope they burn in hell!"?', 'answer': 'A Time to Kill', 'category': 'Quotes'}, {'question': 'Name a star of the 1972 Sam Peckinpah film The Getaway.', 'answer': 'Al Lettieri, Ali MacGraw, Ben Johnson, Sally Struthers, Steve McQueen', 'category': 'Action/Adventure'}, {'question': 'Which 1998 movie featured the tagline "Size Does Matter"?', 'answer': 'Godzilla', 'category': 'Taglines'}, {'question': 'Which film features the quote "That morning I was not yet a vampire, and I saw my last sunrise. I remember it completely, and yet I can\'t recall any sunrise before it."?', 'answer': 'Interview with the Vampire', 'category': 'Quotes'}, {'question': 'In Indiana Jones and the Temple of Doom, what state was Willie from?', 'answer': 'Missouri', 'category': 'Steven Spielberg'}, {'question': 'What government agency comes after Frank Abagnale Jr. in Catch Me If You Can?', 'answer': 'the FBI', 'category': 'Steven Spielberg'}, {'question': 'What was Tootles looking for in order to find his happy place in Hook?', 'answer': 'his marbles', 'category': 'Steven Spielberg'}, {'question': 'What kind of dead life form does E.T. revive in the first and only E.T. the Extra-Terrestrial?', 'answer': 'a dead flower', 'category': 'Steven Spielberg'}, {'question': "What Lord of the Rings star made their film debut in 1985's Witness?", 'answer': 'Viggo Mortensen', 'category': '1980s'}, {'question': "Who played Tess McGill's backstabbing boss in Working Girl?", 'answer': 'Sigourney Weaver', 'category': '1980s'}, {'question': "Who plays Mr. Rooney in Ferris Bueller's Day Off?", 'answer': 'Jeffrey Jones', 'category': '1980s'}, {'question': 'In what movie does a teacher implore his students to "Seize the day, boys. Make your lives extraordinary."?', 'answer': 'Dead Poets Society', 'category': '1980s'}, {'question': 'In Borat, what 90s bombshell does Borat fall in love with and attempt to kidnap and marry?', 'answer': 'Pamela Anderson', 'category': 'Comedies'}, {'question': 'Which 1970s film marked the first time Steven Spielberg was nominated for Best Director?', 'answer': 'Close Encounters of the Third Kind', 'category': 'Steven Spielberg'}, {'question': 'Who directed the film The African Queen?', 'answer': 'John Huston', 'category': 'Oscars'}, {'question': 'What was the subtitle of the last Halloween movie Donald Pleasence starred in?', 'answer': 'The Curse of Michael Myers', 'category': 'Horror'}, {'question': 'Who directed the fan favorite Tom Cruise thrill ride Edge of Tomorrow?', 'answer': 'Doug Liman', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which film centers around the character Daniel Hillard, a recently divorced actor?', 'answer': 'Mrs. Doubtfire', 'category': 'Family'}, {'question': 'Which decade saw the release of the very first Land Before Time film?', 'answer': 'the 1980s', 'category': 'Animated'}, {'question': 'What was the name of the very specialized pet store Lloyd and Harry hoped to open in Dumb and Dumber?', 'answer': 'I Got Worms', 'category': 'Comedies'}, {'question': 'In The Princess Bride, what do Miracle Max and his wife tell the gentlemen when they leave their house?', 'answer': "Have fun stormin' da castle.", 'category': 'Fantasy/Sci-Fi'}, {'question': "Which Batman animated film, released theatrically, sees the Caped Crusader deal with the return of Bruce Wayne's mysterious ex-girlfriend Andrea?", 'answer': 'Batman: Mask of the Phantasm', 'category': 'Animated'}, {'question': 'What 1979 comedy features the dim-witted Navin, who grows up with an adopted family in Mississippi?', 'answer': 'The Jerk', 'category': 'Comedies'}, {'question': 'Who directed the gritty 2009 sci-fi thriller District 9?', 'answer': 'Neill Blomkamp', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who won a Best Actress Oscar for her role in Dead Man Walking?', 'answer': 'Susan Sarandon', 'category': 'Oscars'}, {'question': 'Down-on-his-luck detective Joe Hallenbeck teams up with troubled pro quarterback Jimmy Dix in what 1991 action film?', 'answer': 'The Last Boy Scout', 'category': 'Action/Adventure'}, {'question': 'Who directed Caddyshack?', 'answer': 'Harold Ramis', 'category': 'Directors'}, {'question': 'Jeff Bridges finally won a Best Actor Oscar for which film?', 'answer': 'Crazy Heart', 'category': 'Oscars'}, {'question': 'Which Lethal Weapon film featured a villain played by Jet Li?', 'answer': 'Lethal Weapon 4', 'category': 'Action/Adventure'}, {'question': 'Who is the first woman to win an Oscar for Best Director?', 'answer': 'Kathryn Bigelow (for The Hurt Locker)', 'category': 'Directors'}, {'question': 'In The Force Awakens, what is the name of the First Order base?', 'answer': 'Starkiller Base', 'category': 'Star Wars'}, {'question': 'Who is the only actor to ever receive an Oscar nomination for a performance in a Star Wars film?', 'answer': 'Alec Guinness (for Star Wars)', 'category': 'Star Wars'}, {'question': 'Who said this quote in A New Hope: "Evacuate? In our moment of triumph? I think you overestimate their chances."?', 'answer': 'Wilhuff Tarkin', 'category': 'Star Wars'}, {'question': 'Who was the top racer to beat in the podrace in The Phantom Menace?', 'answer': 'Sebulba', 'category': 'Star Wars'}, {'question': 'What is the name of the Clone Captain in Star Wars: The Clone Wars?', 'answer': 'Rex', 'category': 'Star Wars'}, {'question': 'In A New Hope, what kind of ship did the Rebel officer tell Darth Vader that they were on while he was being choked?', 'answer': 'a consular ship', 'category': 'Star Wars'}, {'question': "Who played Queen Amidala's decoy in The Phantom Menace?", 'answer': 'Keira Knightley', 'category': 'Star Wars'}, {'question': 'Why was Jar Jar Binks banished from Gungan City?', 'answer': 'he was clumsy', 'category': 'Star Wars'}, {'question': "Who played the love interest of Bruce Willis' character in the 1993 action flick Striking Distance?", 'answer': 'Sarah Jessica Parker', 'category': 'Action/Adventure'}, {'question': 'Which Tom Hanks film has the quote: "every now and again - not often, but occasionally - you get to be a part of justice being done. That really is quite a thrill when that happens."?', 'answer': 'Philadelphia', 'category': 'Tom Hanks'}, {'question': 'Name a film that has won Ang Lee a Best Director Oscar.', 'answer': 'Brokeback Mountain, Life of Pi', 'category': 'Oscars'}, {'question': "While clashing with her high school clique, Veronica learns her boyfriend J.D. has been killing students he doesn't like in what 1980s classic?", 'answer': 'Heathers', 'category': '1980s'}, {'question': 'Vincent Price plays a scientist while building a character in what movie?', 'answer': 'Edward Scissorhands', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the name of Christina Applegate's newscaster in Anchorman: The Legend of Ron Burgundy?", 'answer': 'Veronica Corningstone', 'category': 'Comedies'}, {'question': 'What famed director was at the helm of the 1986 crime drama Blue Velvet?', 'answer': 'David Lynch', 'category': '1980s'}, {'question': 'Which Mortal Kombat character defeats Shang Tsung at the end of Mortal Kombat?', 'answer': 'Liu Kang', 'category': 'Fantasy/Sci-Fi'}, {'question': "In 2008's Role Models, name the two lead actors who are forced to help youths in a mentoring program.", 'answer': 'Paul Rudd, Seann William Scott', 'category': 'Comedies'}, {'question': 'For which film did Jack Palance win a Best Supporting Actor Oscar?', 'answer': 'City Slickers', 'category': 'Oscars'}, {'question': 'What was the highest-grossing film of 2010 domestically? The Twilight Saga: Eclipse, Toy Story 3, Iron Man 2, or Harry Potter and the Deathly Hallows – Part 1?', 'answer': 'Toy Story 3', 'category': 'Box Office'}, {'question': 'In which film will you find the quote "I collect spores, molds, and fungus."?', 'answer': 'Ghostbusters (1984)', 'category': 'Quotes'}, {'question': 'For which film did Robert Zemeckis win his Best Director statue?', 'answer': 'Forrest Gump', 'category': 'Oscars'}, {'question': 'What was the highest-grossing film of 2005 domestically? Star Wars: Episode III – Revenge of the Sith, Harry Potter and the Goblet of Fire, Batman Begins, or King Kong?', 'answer': 'Star Wars: Episode III – Revenge of the Sith', 'category': 'Box Office'}, {'question': 'In which film will you find the quote: "This list... is an absolute good. The list is life. All around its margins lies the gulf."?', 'answer': "Schindler's List", 'category': 'Quotes'}, {'question': "What is the name of Marty's band in Back to the Future?", 'answer': 'the Pinheads', 'category': '1980s'}, {'question': 'Besides Platoon, what other film won Best Director for Oliver Stone?', 'answer': 'Born on the Fourth of July', 'category': '1980s'}, {'question': "Released in 1983, what was the full name of the sequel to Porky's?", 'answer': "Porky's II: The Next Day", 'category': '1980s'}, {'question': 'In what film will you find on-air personality Adrian Cronauer?', 'answer': 'Good Morning, Vietnam', 'category': '1980s'}, {'question': 'In Silver Linings Playbook, which NFL team are Pat and his father obsessed with?', 'answer': 'the Philadelphia Eagles', 'category': 'Dramas'}, {'question': "What actress is on the poster used to hide Andy Dufresne's tunnel in The Shawshank Redemption?", 'answer': 'Raquel Welch', 'category': 'Dramas'}, {'question': 'In the film The Truman Show, what country does Truman think that Lauren/Sylvia moved to?', 'answer': 'Fiji', 'category': 'Dramas'}, {'question': 'Who played the overbearing mother of Nina Sayers in the poetic thriller Black Swan?', 'answer': 'Barbara Hershey', 'category': 'Dramas'}, {'question': 'Amongst other roles, Tom played a doctor, a hotel manager, and a ruthless author in what 2012 film?', 'answer': 'Cloud Atlas', 'category': 'Tom Hanks'}, {'question': 'Jerry Goldsmith was the composer for five different Star Trek films. Name two of them.', 'answer': 'The Motion Picture, The Final Frontier, First Contact, Insurrection, Nemesis', 'category': 'Scores & Soundtracks'}, {'question': 'Which Steven Spielberg directed film centers around Viktor Navorski, an Eastern European tourist?', 'answer': 'The Terminal', 'category': 'Steven Spielberg'}, {'question': 'What are the character names for the five Guardians of the Galaxy?', 'answer': 'Drax, Gamora, Groot, Rocket, Star-Lord', 'category': 'Marvel'}, {'question': "How does Atreyu's horse Artax die in The NeverEnding Story?", 'answer': 'he sinks in the Swamps of Sadness', 'category': '1980s'}, {'question': 'Will Smith voices Oscar in which animated feature?', 'answer': 'Shark Tale', 'category': 'Will Smith'}, {'question': 'Which Disney animated film features the vocal talents of Tate Donovan, James Woods, and Danny DeVito?', 'answer': 'Hercules', 'category': 'Animated'}, {'question': 'Which comedy features the restaurant Shenaniganz as a central location?', 'answer': 'Waiting...', 'category': 'Comedies'}, {'question': 'What drama stars Gene Hackman and Willem Dafoe as FBI agents investigating the disappearance of some civil rights activists?', 'answer': 'Mississippi Burning', 'category': 'Dramas'}, {'question': 'From the creators of Ice Age came this film that follows the adventures of Rodney Copperbottom.', 'answer': 'Robots', 'category': 'Animated'}, {'question': 'Who played Barry, the snake babysitter, in the movie Road Trip?', 'answer': 'Tom Green', 'category': 'Comedies'}, {'question': 'Craig T. Nelson plays the coach of Tom Cruise in what sports drama?', 'answer': 'All the Right Moves', 'category': 'Dramas'}, {'question': 'Harry Connick Jr. plays a deranged killer in what 1995 thriller?', 'answer': 'Copycat', 'category': 'Horror'}, {'question': 'Who starred as Face in the 2010 feature film The A-Team?', 'answer': 'Bradley Cooper', 'category': 'Action/Adventure'}, {'question': 'Which comedy features the quote "I have nipples, Greg, could you milk me?"?', 'answer': 'Meet the Parents', 'category': 'Quotes'}, {'question': 'How many films into the celebrated Leprechaun franchise did he go to a distant planet?', 'answer': '4', 'category': 'Horror'}, {'question': 'Which James Bond movie featured actor Sean Bean as the villain?', 'answer': 'GoldenEye', 'category': 'Action/Adventure'}, {'question': 'Which movie features the quote "Look, you shoot off a guy\'s head with his pants down, believe me, Texas is not the place you wanna get caught."?', 'answer': 'Thelma & Louise', 'category': 'Quotes'}, {'question': 'What Disney character has a best friend named Timothy Q. Mouse?', 'answer': 'Dumbo', 'category': 'Disney'}, {'question': "What is the name of the octopus-like villain in Disney's The Little Mermaid?", 'answer': 'Ursula', 'category': 'Disney'}, {'question': "In Disney's The Rescuers, what precious object is the Devil's Eye?", 'answer': 'a diamond', 'category': 'Disney'}, {'question': 'What was the first full-length Disney movie to star Goofy as the title character?', 'answer': 'A Goofy Movie', 'category': 'Disney'}, {'question': "What actor is the voice of the satyr Phil in Disney's Hercules?", 'answer': 'Danny DeVito', 'category': 'Disney'}, {'question': "The character of Thomas O'Malley is from what Disney animated classic?", 'answer': 'The Aristocats', 'category': 'Disney'}, {'question': 'Who plays the title role in My Stepmother is an Alien?', 'answer': 'Kim Basinger', 'category': '1980s'}, {'question': "Which urban drama has Sal's Famous Pizzeria at the center of its action?", 'answer': 'Do the Right Thing', 'category': '1980s'}, {'question': "Who played Michael Keaton's working wife in the 1983 comedy Mr. Mom?", 'answer': 'Teri Garr', 'category': '1980s'}, {'question': 'Which weapon is used to kill Yvette the maid in Clue?', 'answer': 'the rope', 'category': '1980s'}, {'question': 'In what Tom Selleck film does Kiss member Gene Simmons play the villain?', 'answer': 'Runaway', 'category': '1980s'}, {'question': 'What actor plays journalist John Reed in the film Reds?', 'answer': 'Warren Beatty', 'category': '1980s'}, {'question': 'Which film had the tagline "It\'s a jungle in there!"?', 'answer': 'Jumanji', 'category': 'Family'}, {'question': 'What 2000 movie stars Brad Pitt and had the working title Lock, Stock and Six Stolen Diamonds?', 'answer': 'Snatch', 'category': 'Crime'}, {'question': 'Name the four actors who have portrayed Jack Ryan in the Tom Clancy novel based films.', 'answer': 'Alec Baldwin (in The Hunt for Red October), Harrison Ford (in Patriot Games, Clear and Present Danger), Ben Affleck (in The Sum of All Fears), Chris Pine (Jack Ryan: Shadow Recruit)', 'category': 'Action/Adventure'}, {'question': 'What 1980s horror film has the line "You\'re a creature of the night Michael, just like out of a comic book!"?', 'answer': 'The Lost Boys', 'category': 'Horror'}, {'question': 'What 1980s film starred Tom Hanks, Shelley Long, and Die Hard baddie Alexander Godunov?', 'answer': 'The Money Pit', 'category': 'Tom Hanks'}, {'question': 'Name the actor who appeared in the following three films: Glengarry Glen Ross, The Firm, and Apollo 13.', 'answer': 'Ed Harris', 'category': '1990s'}, {'question': "Who took over for John Belushi as Dan Aykroyd's partner in Blues Brothers 2000?", 'answer': 'John Goodman', 'category': 'Comedies'}, {'question': 'What classic film is this quote from: "Today, I consider myself the luckiest man on the face of the Earth."?', 'answer': 'The Pride of the Yankees', 'category': 'Quotes'}, {'question': 'Skip and Harry are framed for a bank robbery and sentenced to 125 years in prison. Name the film.', 'answer': 'Stir Crazy', 'category': '1980s'}, {'question': "What is Bill Murray's occupation in Groundhog Day?", 'answer': 'a TV weatherman', 'category': 'Comedies'}, {'question': 'In what film can you hear this line: "They call me Mr. Tibbs!"?', 'answer': 'In the Heat of the Night', 'category': 'Quotes'}, {'question': "What was the name of Bob Hoskins' character in Who Framed Roger Rabbit?", 'answer': 'Eddie Valiant', 'category': '1980s'}, {'question': 'Brad Pitt was nominated for Best Actor for Benjamin Button the same year his former partner Angelina Jolie was nominated for Best Actress for what film?', 'answer': 'Changeling', 'category': 'Oscars'}, {'question': 'What actor has a primary role in both the Lord of the Rings trilogy as well as the new Star Trek movies?', 'answer': 'Karl Urban', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the name of either the fox or the hound in Disney's The Fox and the Hound?", 'answer': 'Copper, Tod', 'category': 'Animated'}, {'question': 'Jamie Foxx won his first Academy Award for what movie?', 'answer': 'Ray', 'category': 'Oscars'}, {'question': 'Sean Bean co-stars in what 2015 space opera as the character Stinger Apini?', 'answer': 'Jupiter Ascending', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who voiced Hiccup's mother in How to Train Your Dragon 2?", 'answer': 'Cate Blanchett', 'category': 'Animated'}, {'question': 'Legendary rockers AC/DC recorded the hit "Big Gun" for which Arnold Schwarzenegger film?', 'answer': 'Last Action Hero', 'category': 'Sly & Arnie'}, {'question': "What actor played the lead villain Rico in Sylvester Stallone's take on Judge Dredd?", 'answer': 'Armand Assante', 'category': 'Sly & Arnie'}, {'question': 'Which famous real-life game show personality hosted the futuristic events as Damon Killian in The Running Man?', 'answer': 'Richard Dawson', 'category': 'Sly & Arnie'}, {'question': "What was the name of Rocky's pet dog?", 'answer': 'Butkus', 'category': 'Sly & Arnie'}, {'question': "Who provided the voice of the villainous Hades in Disney's Hercules?", 'answer': 'James Woods', 'category': 'Disney'}, {'question': 'Who plays the baseball agent who journeys to India to look for untapped baseball talent in Million Dollar Arm?', 'answer': 'Jon Hamm', 'category': 'Disney'}, {'question': 'What kind of object was Dumbo told was magic and, if he held it in his trunk, would make him able to fly?', 'answer': 'a feather', 'category': 'Disney'}, {'question': "Who plays D'Artagnan in 1993's The Three Musketeers?", 'answer': "Chris O'Donnell", 'category': 'Disney'}, {'question': "What nickname did Harvey Keitel's character go by in Pulp Fiction?", 'answer': 'the Wolf', 'category': 'Quentin Tarantino'}, {'question': 'What two actresses played the role of Rachel Dawes in the Dark Knight trilogy?', 'answer': 'Katie Holmes (in Batman Begins), Maggie Gyllenhaal (in The Dark Knight)', 'category': 'Comic Book'}, {'question': 'Whom does Ben have an affair with in The Graduate?', 'answer': 'Mrs. Robinson', 'category': 'Classics'}, {'question': "What was Seth Rogen's character's name in Sausage Party?", 'answer': 'Frank', 'category': 'Comedies'}, {'question': 'What 1994 film features Arnold Schwarzenegger as a pregnant man?', 'answer': 'Junior', 'category': 'Sly & Arnie'}, {'question': 'Which movie features a lonely girl who adopts a small dog that turns out to be a genetic experiment that crash-landed on Earth?', 'answer': 'Lilo & Stitch', 'category': 'Animated'}, {'question': "Who played the wife of Mel Gibson's character in the dramatic thriller Ransom?", 'answer': 'Rene Russo', 'category': 'Dramas'}, {'question': 'Which year saw the release of Hellraiser, Evil Dead II, and A Nightmare on Elm Street 3?', 'answer': '1987', 'category': 'Horror'}, {'question': "What game do Alice and the Queen of Hearts play in Disney's Alice in Wonderland?", 'answer': 'croquet', 'category': 'Animated'}, {'question': "Name two of the lead character names in Danny Boyle's Trainspotting.", 'answer': 'Daniel "Spud" Murphy, Francis "Franco" Begbie, Mark "Rent Boy" Renton, Simon "Sick Boy" Williamson, Thomas "Tommy" Mackenzie', 'category': 'Dramas'}, {'question': 'Which veteran actor starred as Leland Gaunt in the 1993 Stephen King adaptation Needful Things?', 'answer': 'Max von Sydow', 'category': 'Horror'}, {'question': 'In X-Men: First Class, Charles Xavier graduates from which university?', 'answer': 'the University of Oxford', 'category': 'Comic Book'}, {'question': 'Which two Stephen King stories did Rob Reiner adapt to the big screen?', 'answer': 'Stand by Me, Misery', 'category': 'Directors'}, {'question': 'Name the film that stars Adam Sandler and Jennifer Aniston as his assistant posing as an ex-wife.', 'answer': 'Just Go with It', 'category': 'Rom-Coms'}, {'question': "Pat Hingle played which role in 1989's Batman?", 'answer': 'Commissioner Gordon', 'category': 'Comic Book'}, {'question': 'Who was at the helm for the 1995 action thriller Crimson Tide?', 'answer': 'Tony Scott', 'category': 'Directors'}, {'question': "Before Jack Nicholson falls for Diane Keaton in Something's Gotta Give, he is dating Keaton's daughter, played by whom?", 'answer': 'Amanda Peet', 'category': 'Rom-Coms'}, {'question': 'Ryan Phillippe and Neve Campbell star in which film about a popular New York City nightclub?', 'answer': '54', 'category': '1990s'}, {'question': 'Who played the father of the Boondock Saints?', 'answer': 'Billy Connolly', 'category': '1990s'}, {'question': "Which famous artist paints Danielle's portrait in the romantic film Ever After?", 'answer': 'Leonardo da Vinci', 'category': '1990s'}, {'question': "Who is Mia and Vincent's waiter at Jack Rabbit Slim's in Pulp Fiction?", 'answer': 'Buddy Holly', 'category': '1990s'}, {'question': "What actress played Julia Roberts' sister in the 1995 film Something to Talk About?", 'answer': 'Kyra Sedgwick', 'category': '1990s'}, {'question': 'What Shakespearean play received a contemporary big-screen twist in 1996?', 'answer': 'Romeo and Juliet', 'category': '1990s'}, {'question': "Who played Tony's old flame and the scientist working for A.I.M., Maya, in Iron Man 3?", 'answer': 'Rebecca Hall', 'category': 'Comic Book'}, {'question': 'What 1982 aquatic creature feature was based on a comic book of the same name?', 'answer': 'Swamp Thing', 'category': 'Comic Book'}, {'question': "In Superman (1978), what is the name of Lex Luthor's bumbling sidekick?", 'answer': 'Otis', 'category': 'Comic Book'}, {'question': 'What color is the Infinity Stone that is used to create Vision?', 'answer': 'yellow', 'category': 'Comic Book'}, {'question': 'What was the first film based on a Marvel comic that Stan Lee cameoed in?', 'answer': 'X-Men', 'category': 'Comic Book'}, {'question': 'Which Terrence Malick film was released the same year as Saving Private Ryan and also centered around World War II?', 'answer': 'The Thin Red Line', 'category': 'War'}, {'question': 'At the end of The Graduate, what Simon & Garfunkel song plays as our two leads ride the bus away from the wedding?', 'answer': 'The Sound of Silence', 'category': 'N/A'}, {'question': 'Jennifer Lawrence has been nominated for four Oscars, and she has won once, for which film?', 'answer': 'Silver Linings Playbook', 'category': 'Oscars'}, {'question': "Name the two male co-stars in Meryl Streep's 2009 movie It's Complicated.", 'answer': 'Alec Baldwin, Steve Martin', 'category': 'Meryl Streep'}, {'question': "In Batman Forever, what is the name of Jim Carrey's character before he turns into the Riddler?", 'answer': 'Edward Nygma', 'category': 'DC'}, {'question': "Name two of the three films in Sergio Leone's Man with No Name Trilogy that stars Clint Eastwood.", 'answer': 'A Fistful of Dollars; For a Few Dollars More; The Good, the Bad and the Ugly', 'category': 'Westerns'}, {'question': 'In which film does normal teen Alex Rogan discover that the video game he has been playing is actually a training tool used to recruit real pilots?', 'answer': 'The Last Starfighter', 'category': '1980s'}, {'question': 'Who played Jane Austen in the 2007 film Becoming Jane?', 'answer': 'Anne Hathaway', 'category': 'Famous Actors & Actresses'}, {'question': "For which branch of service had Michelle Pfeiffer's character served in Dangerous Minds?", 'answer': 'the Marines', 'category': 'Dramas'}, {'question': 'Name the two stars of the 1987 action comedy Stakeout.', 'answer': 'Emilio Estevez, Richard Dreyfuss', 'category': '1980s'}, {'question': "What actor co-starred as Dr. Pete Graham with Halle Berry in 2003's Gothika?", 'answer': 'Robert Downey Jr.', 'category': 'Famous Actors & Actresses'}, {'question': 'What two performers played the two siblings who find themselves in a 1950s sitcom in Pleasantville?', 'answer': 'Reese Witherspoon, Tobey Maguire', 'category': 'Dramas'}, {'question': 'Farewell to the Flesh was a sequel in what horror franchise?', 'answer': 'Candyman', 'category': 'Horror'}, {'question': 'For which film did George C. Scott win his Best Actor Oscar?', 'answer': 'Patton', 'category': 'Oscars'}, {'question': 'Which movie saw Sean Connery utter the famous line "You\'re the man now, dog!"?', 'answer': 'Finding Forrester', 'category': 'Quotes'}, {'question': 'Name both of the Tales from the Crypt films that were theatrically released.', 'answer': 'Demon Knight, Bordello of Blood', 'category': 'Horror'}, {'question': 'Whoopi Goldberg won a Best Supporting Actress Oscar for what film?', 'answer': 'Ghost', 'category': 'Oscars'}, {'question': 'What film features the quote "this is not \'Nam. This is bowling. There are rules."?', 'answer': 'The Big Lebowski', 'category': 'Quotes'}, {'question': "In Funny People, Seth Rogen and Jonah Hill's characters shared an apartment with Mark, a sitcom actor. Who plays him?", 'answer': 'Jason Schwartzman', 'category': 'Judd Apatow'}, {'question': "What is Paul Rudd's occupation in the Judd Apatow film This Is 40?", 'answer': 'a record label owner', 'category': 'Judd Apatow'}, {'question': 'What is the name of the rock star character played by Russell Brand in the Judd Apatow produced comedies Forgetting Sarah Marshall and Get Him to the Greek?', 'answer': 'Aldous Snow', 'category': 'Judd Apatow'}, {'question': "Who played Amy Schumer's cold-hearted boss in 2015's Trainwreck?", 'answer': 'Tilda Swinton', 'category': 'Judd Apatow'}, {'question': 'Name the two stars of the 1969 classic film Butch Cassidy and the Sundance Kid.', 'answer': 'Paul Newman, Robert Redford', 'category': 'Biopics'}, {'question': 'Todd Haynes directed which biopic that features several different actors portraying Bob Dylan at various points in his life?', 'answer': "I'm Not There", 'category': 'Biopics'}, {'question': 'Which acclaimed actor director was behind the camera for two famed biopics Gandhi and Chaplin?', 'answer': 'Richard Attenborough', 'category': 'Biopics'}, {'question': 'The life of underground comic book writer Harvey Pekar is the subject of which biopic?', 'answer': 'American Splendor', 'category': 'Biopics'}, {'question': 'What was the name of the sequel to Under Siege?', 'answer': 'Under Siege 2: Dark Territory', 'category': 'Steven Seagal'}, {'question': 'Which coming-of-age movie features characters such as the artistic Preston, the dorky William, and the meathead Mike Dexter?', 'answer': "Can't Hardly Wait", 'category': 'Coming of Age'}, {'question': 'In Chasing Amy, Holden and Banky are played by Ben Affleck and Jason Lee. What is their job?', 'answer': 'comic book artists', 'category': 'Rom-Coms'}, {'question': "Who played Terry Leather in 2007's The Bank Job?", 'answer': 'Jason Statham', 'category': 'Crime'}, {'question': 'Name the film in which Tom Cruise plays a security repairman named Jack Harper.', 'answer': 'Oblivion', 'category': 'Tom Cruise'}, {'question': 'Name two films that have starred Denzel Washington and were directed by Spike Lee.', 'answer': "Mo' Better Blues, Malcolm X, He Got Game, Inside Man", 'category': 'Famous Actors & Actresses'}, {'question': "In the beloved classic Bambi, what is the name of Bambi's skunk pal?", 'answer': 'Flower', 'category': 'Animated'}, {'question': 'Who played the daring love interest that accompanied Brendan Fraser in the Mummy films?', 'answer': 'Rachel Weisz', 'category': 'Action/Adventure'}, {'question': 'Which comedy features characters named Smokey, Deebo, and Big Worm?', 'answer': 'Friday', 'category': 'Comedies'}, {'question': 'Which 1980s Disney film features a mouse that goes by the moniker Basil of Baker Street?', 'answer': 'The Great Mouse Detective', 'category': 'Animated'}, {'question': 'Which famed villain is the antagonist of Sherlock Holmes: A Game of Shadows?', 'answer': 'James Moriarty', 'category': 'Action/Adventure'}, {'question': "Who played Mr. Wilson in 1993's Dennis the Menace?", 'answer': 'Walter Matthau', 'category': 'Comedies'}, {'question': "Johnny Depp played what real-life gangster in 2009's Public Enemies?", 'answer': 'John Dillinger', 'category': 'Dramas'}, {'question': 'Paul Haggis directed which movie that won Best Picture?', 'answer': 'Crash', 'category': 'Oscars'}, {'question': 'What comedy featured a role by Macaulay Culkin before he starred in Home Alone?', 'answer': 'See You in the Morning, Uncle Buck', 'category': 'Child Actors'}, {'question': "Who plays the detective with whom Meg Ryan has an affair in 2003's In the Cut?", 'answer': 'Mark Ruffalo', 'category': 'Dramas'}, {'question': 'Name one of the two films that saw Hilary Swank win the Oscar for Best Actress.', 'answer': "Boys Don't Cry, Million Dollar Baby", 'category': 'Oscars'}, {'question': 'Dylan and Cole Sprouse play Julian McGrath in what comedy in which he gives himself the nickname Frankenstein?', 'answer': 'Big Daddy', 'category': 'Child Actors'}, {'question': 'In what setting does the climactic showdown battle take place in the 1991 film Cape Fear?', 'answer': 'on a boat', 'category': 'Martin Scorsese'}, {'question': 'Which Martin Scorsese film is based on the book Wiseguy by Nicholas Pileggi?', 'answer': 'Goodfellas', 'category': 'Martin Scorsese'}, {'question': 'The Departed is a remake of what acclaimed Hong Kong action thriller?', 'answer': 'Infernal Affairs', 'category': 'Martin Scorsese'}, {'question': "What is the occupation of Daniel Day-Lewis' character Newland Archer in the 1993 romantic drama movie The Age of Innocence?", 'answer': 'a lawyer', 'category': 'Martin Scorsese'}, {'question': 'What Academy Award winning movie directed by Martin Scorsese ends with the biblical quote "All I know is this: once I was blind and now I can see."?', 'answer': 'Raging Bull', 'category': 'Martin Scorsese'}, {'question': "What actor portrayed trooper William Costigan Jr. in Martin Scorsese's 2006 crime movie The Departed?", 'answer': 'Leonardo DiCaprio', 'category': 'Martin Scorsese'}, {'question': "Rambo reluctantly gets called back into action in 2008's Rambo. From which country does he attempt to rescue hostages?", 'answer': 'Burma', 'category': 'Sly & Arnie'}, {'question': 'Which 1990s action flick saw Arnold Schwarzenegger joined by action veterans James Caan, James Coburn, and James Cromwell?', 'answer': 'Eraser', 'category': 'Sly & Arnie'}, {'question': "Rocky is trained by Mick. What is the name, or the nickname, of Apollo's trainer?", 'answer': 'Tony "Duke" Evers', 'category': 'Sly & Arnie'}, {'question': 'Which 1980s Sylvester Stallone movie was originally pitched as The French Connection III?', 'answer': 'Nighthawks', 'category': 'Sly & Arnie'}, {'question': 'In which apocalyptic film does Arnold Schwarzenegger play the character Jericho Cane?', 'answer': 'End of Days', 'category': 'Sly & Arnie'}, {'question': 'Which Arnold movie made the most money at the domestic box office?', 'answer': 'Terminator 2: Judgment Day', 'category': 'Sly & Arnie'}, {'question': 'Which director currently working on a comic book movie (as of October 2016) was at the helm for the 2003 movie Monster starring Charlize Theron?', 'answer': 'Patty Jenkins', 'category': 'Crime'}, {'question': 'Name a James Bond film that stars Timothy Dalton as 007.', 'answer': 'The Living Daylights, Licence to Kill', 'category': 'Action/Adventure'}, {'question': 'Name the four young stars who played best friends in Stand by Me.', 'answer': "Corey Feldman, Jerry O'Connell, River Phoenix, Wil Wheaton", 'category': 'Coming of Age'}, {'question': 'What Star Wars actor appeared in the 1980s World War II drama The Big Red One?', 'answer': 'Mark Hamill', 'category': 'War'}, {'question': 'Who played Tango, and who played Cash?', 'answer': 'Sylvester Stallone, Kurt Russell', 'category': 'Sly & Arnie'}, {'question': 'Who voiced police chief Bogo in Zootopia?', 'answer': 'Idris Elba', 'category': 'Animated'}, {'question': 'Who played Professor Plum in the 1985 film Clue?', 'answer': 'Christopher Lloyd', 'category': '1980s'}, {'question': 'Which action star played the lead in the 2008 remake Death Race?', 'answer': 'Jason Statham', 'category': 'Action/Adventure'}, {'question': "What happened to Shrek after he drank the potion from the Fairy Godmother's workshop in Shrek 2?", 'answer': 'he turned into a human', 'category': 'Animated'}, {'question': 'Name one of the two songs that are performed at the FAO Schwarz floor piano in Big.', 'answer': 'Heart and Soul, Chopsticks', 'category': '1980s'}, {'question': "Who plays Liam Neeson's daughter in the Taken franchise?", 'answer': 'Maggie Grace', 'category': 'Action/Adventure'}, {'question': 'How many daughters does Matt King have with his comatose wife in The Descendants?', 'answer': '2 daughters', 'category': 'Dramas'}, {'question': 'Name two films for which Kevin Costner has sole credit as director.', 'answer': 'Dances with Wolves, The Postman, Open Range', 'category': 'Directors'}, {'question': 'Willie Nelson and Jessica Simpson star in what 2005 adaptation with the tagline "Cousins. Outlaws. Thrillbillies."?', 'answer': 'The Dukes of Hazzard', 'category': 'Taglines'}, {'question': 'What film set in the 1950s paired Brad Pitt and Jessica Chastain?', 'answer': 'The Tree of Life', 'category': 'Dramas'}, {'question': 'Name two of the four movies directed by John Carpenter starring Kurt Russell.', 'answer': 'Escape from New York, The Thing, Big Trouble in Little China, Escape from L.A.', 'category': 'Directors'}, {'question': 'Which Sylvester Stallone movie had the tagline "They went in alone. The only way out is.....together!"?', 'answer': 'Daylight', 'category': 'Taglines'}, {'question': "What is Bill Murray's character's name in the movie Stripes?", 'answer': 'John Winger', 'category': '1980s'}, {'question': "What movie is set at Kellerman's Mountain House?", 'answer': 'Dirty Dancing', 'category': '1980s'}, {'question': 'Why have the aliens come to Earth in The Abyss?', 'answer': 'to prevent Earth from destroying itself in a nuclear war', 'category': '1980s'}, {'question': "What is Maverick's real name in Top Gun?", 'answer': 'Pete Mitchell', 'category': '1980s'}, {'question': 'At the end of Armageddon, what does Bruce Willis tell Ben Affleck to give Billy Bob Thornton?', 'answer': 'a patch', 'category': 'Action/Adventure'}, {'question': 'What did Ethan Hunt yell when he smashed the exploding gum on the helicopter window at the end of Mission: Impossible?', 'answer': 'Red light, green light!', 'category': 'Action/Adventure'}, {'question': 'Name the movie that has the following synopsis: after being betrayed and left for dead in Italy, Charlie Croker and his team plan an elaborate gold heist against their former ally.', 'answer': 'The Italian Job', 'category': 'Action/Adventure'}, {'question': "In 1983's Scarface, what is Tony Montana's first job in America?", 'answer': 'a dishwasher', 'category': 'Action/Adventure'}, {'question': 'Who voices the parrot Iago in Aladdin?', 'answer': 'Gilbert Gottfried', 'category': 'Disney'}, {'question': 'What actor plays multiple roles in The Polar Express?', 'answer': 'Tom Hanks', 'category': 'Holiday'}, {'question': 'Who played the evil Judge Doom in Who Framed Roger Rabbit?', 'answer': 'Christopher Lloyd', 'category': 'Animated'}, {'question': 'How many people have colors as their aliases in Reservoir Dogs?', 'answer': '6 people (Mr. Blonde, Mr. Blue, Mr. Brown, Mr. Orange, Mr. Pink, Mr. White)', 'category': 'Quentin Tarantino'}, {'question': 'What is the name of the man-eating plant in Little Shop of Horrors?', 'answer': 'Audrey II', 'category': 'Musicals'}, {'question': "What is the name of Jock's pet boa constrictor in Raiders of the Lost Ark?", 'answer': 'Reggie', 'category': 'Indiana Jones'}, {'question': 'A young boy escapes his cruel aunts and sets sail for New York in a very unorthodox vessel in what stop-motion live-action blend?', 'answer': 'James and the Giant Peach', 'category': 'Animated'}, {'question': 'Michael Douglas and Sean Penn played brothers in which film?', 'answer': 'The Game', 'category': '1990s'}, {'question': 'Matthew McConaughey stars alongside whom in How to Lose a Guy in 10 Days?', 'answer': 'Kate Hudson', 'category': 'Rom-Coms'}, {'question': 'In which Disney film will you find Prince Eric?', 'answer': 'The Little Mermaid', 'category': 'Animated'}, {'question': 'Who directed Val Kilmer as Jim Morrison in the 1991 movie The Doors?', 'answer': 'Oliver Stone', 'category': '1990s'}, {'question': "Who played Drew Barrymore's steroid-loving brother in 50 First Dates?", 'answer': 'Sean Astin', 'category': 'Rom-Coms'}, {'question': 'What action movie features a prisoner transport flight dubbed the Jailbird?', 'answer': 'Con Air', 'category': 'Action/Adventure'}, {'question': 'Who played the role of Evey in V for Vendetta?', 'answer': 'Natalie Portman', 'category': 'Famous Actors & Actresses'}, {'question': 'Which Mission: Impossible movie had the highest gross at the domestic box office (as of October 2016)?', 'answer': 'Mission: Impossible 2', 'category': 'Box Office'}, {'question': "Who starred as demon hunter John Constantine in 2005's Constantine?", 'answer': 'Keanu Reeves', 'category': 'Action/Adventure'}, {'question': 'Who played the Vietnam War fighter pilot in Rescue Dawn?', 'answer': 'Christian Bale', 'category': 'Famous Actors & Actresses'}, {'question': 'Which Expendables movie had the highest gross at the domestic box office?', 'answer': 'The Expendables', 'category': 'Box Office'}, {'question': 'From which country do the von Trapps escape in The Sound of Music?', 'answer': 'Austria', 'category': 'Musicals'}, {'question': 'Who directed and starred in the 1949 musical On the Town?', 'answer': 'Gene Kelly', 'category': 'Musicals'}, {'question': 'What is the occupation of Sweeney Todd in the musical of the same name?', 'answer': 'a barber', 'category': 'Musicals'}, {'question': 'What contemporary musical has its stars singing "Come What May", "Sparkling Diamonds", and "Elephant Love Medley"?', 'answer': 'Moulin Rouge!', 'category': 'Musicals'}, {'question': 'What 2005 movie was based on a Broadway musical that was based on a 1968 movie starring Gene Wilder?', 'answer': 'The Producers', 'category': 'Musicals'}, {'question': 'What rock star makes a cameo in The Rocky Horror Picture Show?', 'answer': 'Meat Loaf', 'category': 'Musicals'}, {'question': "What popular 90s comedy television actor portrayed Andrew Neiman's father in the 2014 film Whiplash?", 'answer': 'Paul Reiser', 'category': 'Oscars'}, {'question': 'For what movie did Humphrey Bogart win his only Oscar for Best Actor?', 'answer': 'The African Queen', 'category': 'Oscars'}, {'question': 'Who played the role of the Unsinkable Molly Brown in Titanic?', 'answer': 'Kathy Bates', 'category': 'Oscars'}, {'question': 'For what movie did Rachel Weisz win an acting Oscar?', 'answer': 'The Constant Gardener', 'category': 'Oscars'}, {'question': "In No Country for Old Men, what was hitman Anton Chigurh's weapon of choice?", 'answer': 'a captive bolt stunner', 'category': 'Oscars'}, {'question': 'For what film has Ryan Gosling received his only Oscar nomination (as of October 2016)?', 'answer': 'Half Nelson', 'category': 'Oscars'}, {'question': 'A snobbish phonetics professor wagers that he can make a flower girl presentable in high society in what classic film?', 'answer': 'My Fair Lady', 'category': 'Musicals'}, {'question': 'In what year was The Terminator released?', 'answer': '1984', 'category': 'Release Dates'}, {'question': 'George Clooney, Mark Wahlberg, and Ice Cube are soldiers who tackle the Gulf War in what film?', 'answer': 'Three Kings', 'category': 'War'}, {'question': 'Which Indiana Jones film has its climax on an island in the Aegean Sea?', 'answer': 'Raiders of the Lost Ark', 'category': 'Indiana Jones'}, {'question': "Who starred as Marian in Ridley Scott's 2010 version of Robin Hood?", 'answer': 'Cate Blanchett', 'category': 'Ridley Scott'}, {'question': 'What is keeping Jimmy Stewart confined to his apartment in the Alfred Hitchcock classic Rear Window?', 'answer': 'he has a broken leg', 'category': 'Classics'}, {'question': 'Where is Magneto imprisoned in X-Men: Days of Future Past?', 'answer': 'in the Pentagon', 'category': 'Comic Book'}, {'question': 'Who provided the voice of Moses in the 1998 film The Prince of Egypt?', 'answer': 'Val Kilmer', 'category': 'Animated'}, {'question': 'Who played the knight that befriended the dragon in Dragonheart?', 'answer': 'Dennis Quaid', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Before playing different versions of Quicksilver in two different movies, Aaron Taylor-Johnson and Evan Peters appeared together in what film?', 'answer': 'Kick-Ass', 'category': 'Comic Book'}, {'question': "Who provides the voice of Mr. Fox's son Ash in Fantastic Mr. Fox?", 'answer': 'Jason Schwartzman', 'category': 'Animated'}, {'question': 'What dimension were the other beings from in Interstellar?', 'answer': 'the 5th dimension', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays Rooster Cogburn in the 2010 remake of True Grit?', 'answer': 'Jeff Bridges', 'category': 'Dramas'}, {'question': 'In the movie Superbad, what actors play the two bumbling cops Officer Michaels and Officer Slater?', 'answer': 'Seth Rogen, Bill Hader', 'category': 'Comedies'}, {'question': 'Who directed The Cable Guy?', 'answer': 'Ben Stiller', 'category': 'Directors'}, {'question': 'What company do Forrest Gump and Lieutenant Dan invest in?', 'answer': 'Apple', 'category': 'Dramas'}, {'question': 'What is the name of the town that obstructs the route of the new railroad being built in Blazing Saddles?', 'answer': 'Rock Ridge', 'category': 'Comedies'}, {'question': 'Who directed The Graduate?', 'answer': 'Mike Nichols', 'category': 'Directors'}, {'question': 'Who played Charlie Chaplin in the 1992 film Chaplin?', 'answer': 'Robert Downey Jr.', 'category': 'Biopics'}, {'question': "In the 1997 film Selena, who played Selena's father Abraham Quintanilla?", 'answer': 'Edward James Olmos', 'category': 'Biopics'}, {'question': 'What is the name of the 2004 film starring Kevin Kline that follows the life and times of American songwriter Cole Porter?', 'answer': 'De-Lovely', 'category': 'Biopics'}, {'question': "The 1989 movie Great Balls of Fire! is about American musician Jerry Lee Lewis. Who played Jerry Lee Lewis' cousin?", 'answer': 'Winona Ryder', 'category': 'Biopics'}, {'question': 'Who played the pilot of the Jupiter II in the 1998 film Lost in Space?', 'answer': 'Matt LeBlanc', 'category': 'Fantasy/Sci-Fi'}, {'question': "In the movie I Am Legend, what is the name of Robert Neville's dog?", 'answer': 'Samantha', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What are the psychics called in Minority Report?', 'answer': 'Precogs', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the name of the talking lion in the Narnia films?', 'answer': 'Aslan', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the name of the enchanter played by John Cleese in Monty Python and the Holy Grail?', 'answer': 'Tim', 'category': 'Comedies'}, {'question': 'Name the holiday movie that has the following characters in it: Flick, Randy, Miss Shields, Santa Claus, Ralphie.', 'answer': 'A Christmas Story', 'category': 'N/A'}, {'question': 'In Dazed and Confused, what sport was played?', 'answer': 'baseball', 'category': 'N/A'}, {'question': 'How many Mission: Impossible movies are there (as of October 2016)?', 'answer': '5 (Mission: Impossible, 2, III, Ghost Protocol, Rogue Nation)', 'category': 'N/A'}, {'question': 'Robert Altman directed this 1980 film starring Robin Williams in his live-action film debut.', 'answer': 'Popeye', 'category': 'N/A'}, {'question': 'Who directed the second Iron Man?', 'answer': 'Jon Favreau', 'category': 'N/A'}, {'question': 'Who won Best Supporting Actress for her role in Chicago?', 'answer': 'Catherine Zeta-Jones', 'category': 'Oscars'}, {'question': "In 2004's Shaun of the Dead, Shaun and Ed try unsuccessfully to fend off a couple of zombies in Shaun's backyard using a case of what?", 'answer': 'records', 'category': 'Horror'}, {'question': "In Sam Rami's Spider-Man, which actor played Flash Thompson?", 'answer': 'Joe Manganiello', 'category': 'Comic Book'}, {'question': "What is the name of Captain Hook's personal assistant in Peter Pan?", 'answer': 'Mr. Smee', 'category': 'Disney'}, {'question': 'You will find the character of Caractacus Potts driving a special car in what film?', 'answer': 'Chitty Chitty Bang Bang', 'category': 'Family'}, {'question': "What is Jason Bourne's real name?", 'answer': 'David Webb', 'category': 'Action/Adventure'}, {'question': "What is the name of Laurence Fishburne's character in the Matrix series?", 'answer': 'Morpheus', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays blabbermouth shower curtain ring salesman Del Griffith in Planes, Trains and Automobiles?', 'answer': 'John Candy', 'category': 'Comedies'}, {'question': 'Name the movie from the quote: "Well hello Mister Fancypants. Well, I\'ve got news for you pal, you ain\'t leadin\' but two things, right now: Jack and shit... and Jack left town".', 'answer': 'Army of Darkness', 'category': 'Quotes'}, {'question': 'What career does Arnold Schwarzenegger choose for his make-believe vacation in Total Recall?', 'answer': 'a secret agent', 'category': 'Fantasy/Sci-Fi'}, {'question': 'The character of Jeff Spicoli can be found in what 1980s comedy?', 'answer': 'Fast Times at Ridgemont High', 'category': 'Comedies'}, {'question': 'Name the movie that contains the following quote: "There are no two words in the English language more harmful than \'good job\'.".', 'answer': 'Whiplash', 'category': 'Quotes'}, {'question': 'Who plays the sick grandson in The Princess Bride?', 'answer': 'Fred Savage', 'category': '1980s'}, {'question': 'Who directed Moonrise Kingdom?', 'answer': 'Wes Anderson', 'category': 'Directors'}, {'question': "What is the name of the braggart who seeks Belle's affection in Disney's Beauty and the Beast?", 'answer': 'Gaston', 'category': 'Animated'}, {'question': 'What were the names of the FBI agents who showed up in Die Hard?', 'answer': 'Johnson, Johnson', 'category': '1980s'}, {'question': "Who directed Bram Stoker's Dracula?", 'answer': 'Francis Ford Coppola', 'category': 'Directors'}, {'question': "Who provided the voice of Ralph in Disney's Wreck-It Ralph?", 'answer': 'John C. Reilly', 'category': 'Animated'}, {'question': "In Say Anything..., what song does Lloyd Dobler play on his boombox outside Diane's window?", 'answer': 'In Your Eyes', 'category': '1980s'}, {'question': 'What do the Ghostbusters use as their headquarters?', 'answer': 'a firehouse', 'category': '1980s'}, {'question': "Which item does Pee-wee purchase at Mario's Magic shop in Pee-wee's Big Adventure?", 'answer': 'a boomerang bow tie', 'category': '1980s'}, {'question': "Corey Haim and Corey Feldman decide to go for a night on the town despite flunking the driver's license test in which 1988 movie?", 'answer': 'License to Drive', 'category': '1980s'}, {'question': 'In Bill & Ted\'s Excellent Adventure, according to Ted, who had "wooden teeth, chased Moby Dick"?', 'answer': 'George Washington', 'category': '1980s'}, {'question': 'Who plays strict father and reverend Shaw Moore in Footloose?', 'answer': 'John Lithgow', 'category': '1980s'}, {'question': 'What year was the Daniel Craig 007 film Casino Royale released?', 'answer': '2006', 'category': 'Release Dates'}, {'question': 'In what year was Taxi Driver released?', 'answer': '1976', 'category': 'Release Dates'}, {'question': 'In what year did Toy Story 2 come out?', 'answer': '1999', 'category': 'Release Dates'}, {'question': 'In what year did we first hear Charlton Heston utter the famous line "Take your stinking paws off me, you damned dirty ape!" in Planet of the Apes?', 'answer': '1968', 'category': 'Release Dates'}, {'question': 'The Lord of the Rings: The Return of the King hit theaters in December of what year?', 'answer': '2003', 'category': 'Release Dates'}, {'question': 'The sci-fi classic Metropolis was released in what year?', 'answer': '1927', 'category': 'Release Dates'}, {'question': "Who played Prince John in Ridley Scott's Robin Hood?", 'answer': 'Oscar Isaac', 'category': 'Action/Adventure'}, {'question': 'Name the second film in the Lord of the Rings trilogy.', 'answer': 'The Lord of the Rings: The Two Towers', 'category': 'N/A'}, {'question': 'Where did the Griswolds go in the fourth Vacation movie?', 'answer': 'Las Vegas', 'category': 'N/A'}, {'question': 'Name the film that has the following characters: Fred, Go Go, Honey Lemon, Wasabi, Tadashi.', 'answer': 'Big Hero 6', 'category': 'N/A'}, {'question': 'What sci-fi film has the classic line "Never give up. Never surrender."?', 'answer': 'Galaxy Quest', 'category': 'N/A'}, {'question': 'What is the name of the villain in the first Shrek film, voiced by John Lithgow?', 'answer': 'Lord Farquaad', 'category': 'Animated'}, {'question': 'Which comedy stars characters named Dusty Bottoms, Ned Nederlander, and Lucky Day?', 'answer': 'Three Amigos', 'category': 'Comedies'}, {'question': 'In what decade does the film Revolutionary Road take place?', 'answer': 'the 1950s', 'category': 'Dramas'}, {'question': 'In Sleeping Beauty, Princess Aurora is cursed to die on which of her birthdays?', 'answer': 'her 16th birthday', 'category': 'Animated'}, {'question': 'What actor played Gilbert in the comedy classic Revenge of the Nerds?', 'answer': 'Anthony Edwards', 'category': 'Comedies'}, {'question': 'Name the 2001 film that was inspired by the life events of John Forbes Nash Jr.', 'answer': 'A Beautiful Mind', 'category': 'Dramas'}, {'question': 'What 1980 Best Picture winner also saw Oscar wins for stars Dustin Hoffman and Meryl Streep?', 'answer': 'Kramer vs. Kramer', 'category': 'Oscars'}, {'question': 'J. A. Bayona directed this 2007 horror film produced by Guillermo del Toro.', 'answer': 'The Orphanage', 'category': 'Horror'}, {'question': 'Name the movie featuring this quote: "I\'m having an old friend for dinner.".', 'answer': 'The Silence of the Lambs', 'category': 'Quotes'}, {'question': "Who won the 1973 Best Actress Oscar for her performance in Bob Fosse's Cabaret?", 'answer': 'Liza Minnelli', 'category': 'Oscars'}, {'question': 'Name the 2005 film with the following premise: a cave diving expedition goes horribly wrong as lurking beneath the crevasses are flesh-eating predators.', 'answer': 'The Descent', 'category': 'Horror'}, {'question': 'Name the movie featuring the quote "I\'ll have what she\'s having.".', 'answer': 'When Harry Met Sally...', 'category': 'Quotes'}, {'question': 'In 17 Again, who plays the younger version of Matthew Perry?', 'answer': 'Zac Efron', 'category': 'Comedies'}, {'question': 'What adventure comedy stars Martin Lawrence as an employee of a medieval-themed amusement park who, after a blow to the head, awakens in 14th century England?', 'answer': 'Black Knight', 'category': 'Comedies'}, {'question': 'Who plays the fuchsia-colored rhino in Death to Smoochy?', 'answer': 'Edward Norton', 'category': 'Comedies'}, {'question': 'Steve Martin and Queen Latifah star in what 2003 comedy-of-errors film?', 'answer': 'Bringing Down the House', 'category': 'Comedies'}, {'question': "Sandra Bullock's identity was erased in which movie?", 'answer': 'The Net', 'category': 'Sandra Bullock'}, {'question': 'Who provides the voice of Mission Control in Gravity?', 'answer': 'Ed Harris', 'category': 'Sandra Bullock'}, {'question': 'Who stars opposite Sandra Bullock in Forces of Nature?', 'answer': 'Ben Affleck', 'category': 'Sandra Bullock'}, {'question': 'In Love Potion No. 9, how was the potion taken?', 'answer': 'as an oral spray', 'category': 'Sandra Bullock'}, {'question': 'Who played the love interest Elsa in The Last Crusade?', 'answer': 'Alison Doody', 'category': 'Indiana Jones'}, {'question': "In 2003's Cheaper by the Dozen, Steve Martin moves his family to Illinois so that he can begin his new job at a local college coaching what sport?", 'answer': 'American football', 'category': 'Family'}, {'question': 'Name the film with the following tagline: "Sex. Clothes. Popularity. Is there a problem here?".', 'answer': 'Clueless', 'category': 'Taglines'}, {'question': 'In what setting is the majority of the 2010 film Devil?', 'answer': 'an elevator', 'category': 'Horror'}, {'question': 'Name a film directed by Peter Jackson before he helmed the Lord of the Rings films.', 'answer': 'Bad Taste, Dead Alive, Heavenly Creatures, Meet the Feebles, The Frighteners', 'category': 'Directors'}, {'question': "What actress won the heart of hard-partying Ryan Reynolds in National Lampoon's Van Wilder?", 'answer': 'Tara Reid', 'category': 'Comedies'}, {'question': 'What was the name of the scary adopted girl in Orphan?', 'answer': 'Esther', 'category': 'Horror'}, {'question': 'Who directed the ensemble cast thriller Contagion?', 'answer': 'Steven Soderbergh', 'category': 'Directors'}, {'question': 'Self-help guru Tony Robbins makes a cameo in which Jack Black comedy?', 'answer': 'Shallow Hal', 'category': 'Comedies'}, {'question': "In Captain America: The Winter Soldier, Cap and Black Widow discover Hydra's secrets in a S.H.I.E.L.D. bunker that is located in what Eastern Seaboard state?", 'answer': 'New Jersey', 'category': 'Comic Book'}, {'question': 'In the film The Incredibles, to what superhero is Mr. Incredible married?', 'answer': 'Elastigirl', 'category': 'Animated'}, {'question': 'From what Oscar-winning screenplay will you find the quote "I\'m already pregnant, so what other kind of shenanigans could I get into?"?', 'answer': 'Juno', 'category': 'Quotes'}, {'question': 'Which comic book movie character has the real name Clint Barton?', 'answer': 'Hawkeye', 'category': 'Comic Book'}, {'question': "Who voiced the legendary sailor in 2003's Sinbad: The Legend of the Seven Seas?", 'answer': 'Brad Pitt', 'category': 'Animated'}, {'question': '"You\'re so ugly you could be a modern art masterpiece!" is from which war movie?', 'answer': 'Full Metal Jacket', 'category': 'Quotes'}, {'question': 'Who directed Scarlett Johansson in the 2005 sci-fi thriller The Island?', 'answer': 'Michael Bay', 'category': 'Scarlett Johansson'}, {'question': 'In which film does Scarlett Johansson play a character with the first name Charlotte?', 'answer': 'Lost in Translation', 'category': 'Scarlett Johansson'}, {'question': 'What other famous actress did Scarlett Johansson portray in the movie Hitchcock?', 'answer': 'Janet Leigh', 'category': 'Scarlett Johansson'}, {'question': 'Which Marvel film was the first appearance of Scarlett Johansson as Natasha Romanoff a.k.a. Black Widow?', 'answer': 'Iron Man 2', 'category': 'Scarlett Johansson'}, {'question': 'Scarlett Johansson plays an assistant named Olivia Wenscombe in early 1900s London in which film?', 'answer': 'The Prestige', 'category': 'Scarlett Johansson'}, {'question': 'How many times has Jon Favreau directed Scarlett Johansson?', 'answer': '3 (Iron Man 2, Chef, The Jungle Book)', 'category': 'Scarlett Johansson'}, {'question': "What 1990s Elijah Wood film saw Tom Hanks serve as the film's narrator?", 'answer': 'Radio Flyer', 'category': 'Tom Hanks'}, {'question': 'This 1987 Tom Hanks film is based on a TV series of the same name about a detective who wants to get the facts.', 'answer': 'Dragnet', 'category': 'Tom Hanks'}, {'question': "In Saving Private Ryan, we learn that, before the war, Tom Hanks' character was a schoolteacher. What subject did he teach?", 'answer': 'English', 'category': 'Tom Hanks'}, {'question': 'Forrest Gump played football at what university?', 'answer': 'the University of Alabama', 'category': 'Tom Hanks'}, {'question': 'In Saving Mr. Banks, Tom Hanks played what famous figure?', 'answer': 'Walt Disney', 'category': 'Tom Hanks'}, {'question': "Who plays Tom Hanks' wife Carol in the comedy The 'Burbs?", 'answer': 'Carrie Fisher', 'category': 'Tom Hanks'}, {'question': 'Name the two actors that have been killed by a Xenomorph, a Predator, and a Terminator.', 'answer': 'Bill Paxton (in Aliens, Predator 2, The Terminator), Lance Henriksen (in Aliens, Alien vs. Predator, The Terminator)', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the film Four Weddings and a Funeral, Hugh Grant is smitten when he meets an American woman played by whom?', 'answer': 'Andie MacDowell', 'category': 'Rom-Coms'}, {'question': "In 2002's Life or Something Like It, a blonde-haired Angelina Jolie has what occupation?", 'answer': 'a TV reporter', 'category': 'Angelina Jolie'}, {'question': "Who starred as Don Johnston, a man who resolves to visit his exes in 2005's Broken Flowers?", 'answer': 'Bill Murray', 'category': 'Dramas'}, {'question': 'Covert government assassin Al Simmons is double crossed and killed in what film?', 'answer': 'Spawn', 'category': 'Comic Book'}, {'question': 'Jonathan Demme won Best Director for this 1991 film.', 'answer': 'The Silence of the Lambs', 'category': 'Oscars'}, {'question': 'Who played Jesus in The Passion of the Christ?', 'answer': 'Jim Caviezel', 'category': 'Dramas'}, {'question': "What character does Wilson Fisk hire to kill Daredevil in 2003's Daredevil?", 'answer': 'Bullseye', 'category': 'Comic Book'}, {'question': 'For what movie did Kevin Spacey win his very first Oscar?', 'answer': 'The Usual Suspects', 'category': 'Oscars'}, {'question': 'Orphan Penny is abducted by the evil Madame Medusa in what 1977 Disney feature?', 'answer': 'The Rescuers', 'category': 'Animated'}, {'question': "Who starred as inventor Alexander Hartdegen in 2002's The Time Machine?", 'answer': 'Guy Pearce', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What Anne Hathaway film has the highest domestic box office? The Princess Diaries, The Dark Knight Rises, Alice in Wonderland, or Interstellar?', 'answer': 'The Dark Knight Rises', 'category': 'Box Office'}, {'question': 'What film features a family with the last name Mousekewitz?', 'answer': 'An American Tail, An American Tail: Fievel Goes West', 'category': 'Animated'}, {'question': 'An unknown force causes Earth to stop rotating in this Aaron Eckhart Hilary Swank movie.', 'answer': 'The Core', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which James Bond film made the highest domestic gross at the box office? GoldenEye, Casino Royale, Skyfall, or Spectre?', 'answer': 'Skyfall', 'category': 'Box Office'}, {'question': 'What celebration does Will Smith refer to as his victory dance in Independence Day?', 'answer': 'smoking a cigar', 'category': 'Will Smith'}, {'question': 'Will Smith sets out to change the lives of strangers and falls in love with Rosario Dawson in which film?', 'answer': 'Seven Pounds', 'category': 'Will Smith'}, {'question': "What model car does Will Smith's Mike Lowrey drive in Bad Boys?", 'answer': 'a Porsche', 'category': 'Will Smith'}, {'question': 'Who directed Will Smith and Gene Hackman in the thriller Enemy of the State?', 'answer': 'Tony Scott', 'category': 'Will Smith'}, {'question': 'Who directed the 2005 drama Jarhead?', 'answer': 'Sam Mendes', 'category': 'War'}, {'question': 'Anthony Mackie co-starred as a member of a bomb disposal unit in what 2009 film?', 'answer': 'The Hurt Locker', 'category': 'War'}, {'question': 'Which war is the backdrop for the 2004 remake of The Manchurian Candidate?', 'answer': 'the Gulf War', 'category': 'War'}, {'question': 'Martin Sheen played Lieutenant Dobbs, and Bob Newhart was Major Major, in what 1970 war film?', 'answer': 'Catch-22', 'category': 'War'}, {'question': 'What 1990s comedy has the tagline "If at first you don\'t succeed, lower your standards."?', 'answer': 'Tommy Boy', 'category': 'Taglines'}, {'question': 'What movie gave Nicole Kidman her only Oscar?', 'answer': 'The Hours', 'category': 'Oscars'}, {'question': "What 90s heartthrob portrayed the titular character's stepbrother in the 1995 comedy Tommy Boy?", 'answer': 'Rob Lowe', 'category': 'Comedies'}, {'question': 'Paul Verhoeven directed which Arnold Schwarzenegger film?', 'answer': 'Total Recall', 'category': 'Directors'}, {'question': 'Frank Grillo appears as which character in Captain America: Civil War?', 'answer': 'Crossbones', 'category': 'Comic Book'}, {'question': 'What 1998 adventure comedy starred Harrison Ford and Anne Heche?', 'answer': 'Six Days, Seven Nights', 'category': 'Comedies'}, {'question': "What director came on to the scene with 1991's dramatic Boyz n the Hood?", 'answer': 'John Singleton', 'category': 'Directors'}, {'question': 'Who played villain Bolivar Trask in X-Men: Days of Future Past?', 'answer': 'Peter Dinklage', 'category': 'Comic Book'}, {'question': 'What is the name of the king in The Little Mermaid?', 'answer': 'Triton', 'category': 'Animated'}, {'question': 'In which film will you find Tom Cruise as the father of two children, one of whom played by Dakota Fanning?', 'answer': 'War of the Worlds', 'category': 'Fantasy/Sci-Fi'}, {'question': "Which Julia Roberts film has the highest gross at the domestic box office? Pretty Woman, Erin Brockovich, Hook, or Ocean's Eleven?", 'answer': "Ocean's Eleven", 'category': 'Box Office'}, {'question': "Rip Torn voices which god in Disney's Hercules?", 'answer': 'Zeus', 'category': 'Animated'}, {'question': 'Dennis Quaid plays climatologist Jack Hall in which Roland Emmerich movie?', 'answer': 'The Day After Tomorrow', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which Shrek film made the most money at the domestic box office? Shrek, Shrek 2, Shrek the Third, or Shrek Forever After?', 'answer': 'Shrek 2', 'category': 'Box Office'}, {'question': 'Who won the Oscar for Best Supporting Actor for Spartacus?', 'answer': 'Peter Ustinov', 'category': 'Stanley Kubrick'}, {'question': 'What was the last film Stanley Kubrick directed before his death?', 'answer': 'Eyes Wide Shut', 'category': 'Stanley Kubrick'}, {'question': 'Which Stanley Kubrick film was remade in 1998 by director Adrian Lyme?', 'answer': 'Lolita', 'category': 'Stanley Kubrick'}, {'question': 'World War III breaks out in which Stanley Kubrick Cold War classic?', 'answer': 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', 'category': 'Stanley Kubrick'}, {'question': 'What Stanley Kubrick movie features the spaceship Discovery One?', 'answer': '2001: A Space Odyssey', 'category': 'Stanley Kubrick'}, {'question': 'Stanley Kubrick directed which World War I film in 1957?', 'answer': 'Paths of Glory', 'category': 'Stanley Kubrick'}, {'question': 'What was the first movie Cameron Diaz starred in?', 'answer': 'The Mask', 'category': 'Cameron Diaz'}, {'question': "What sport do we see Cameron Diaz's character playing in There's Something About Mary?", 'answer': 'golf', 'category': 'Cameron Diaz'}, {'question': "What did Cameron Diaz's character in My Best Friend's Wedding major in at school?", 'answer': 'architecture', 'category': 'Cameron Diaz'}, {'question': 'In Any Given Sunday, Cameron Diaz plays new president and co-owner of a professional football team. What city was this football team in?', 'answer': 'Miami', 'category': 'Cameron Diaz'}, {'question': 'What is the name of the character Cameron Diaz voices in Shrek?', 'answer': 'Fiona', 'category': 'Cameron Diaz'}, {'question': "Who plays Cameron Diaz's boyfriend in Charlie's Angels?", 'answer': 'Luke Wilson', 'category': 'Cameron Diaz'}, {'question': "Who directed and starred as Hamlet in 1996's Hamlet?", 'answer': 'Kenneth Branagh', 'category': '1990s'}, {'question': "Who played the director of NASA in Ridley Scott's The Martian?", 'answer': 'Jeff Daniels', 'category': 'Dramas'}, {'question': 'What is the name of the chimney sweep played by Dick Van Dyke in Mary Poppins?', 'answer': 'Bert', 'category': 'Disney'}, {'question': "Who played Jennifer Lawrence's husband in American Hustle?", 'answer': 'Christian Bale', 'category': 'Jennifer Lawrence'}, {'question': "Who composed the score for Mel Gibson's The Patriot?", 'answer': 'John Williams', 'category': 'Scores & Soundtracks'}, {'question': 'What comedian played the villain in the 1993 Emilio Estevez action thriller Judgment Night?', 'answer': 'Denis Leary', 'category': 'Action/Adventure'}, {'question': 'Molly Ringwald plays Andie, an outcast at her Chicago high school, in which film?', 'answer': 'Pretty in Pink', 'category': '1980s'}, {'question': 'Who lent his voice as John Smith in the Disney film Pocahontas?', 'answer': 'Mel Gibson', 'category': 'Animated'}, {'question': 'Hugh Jackman plays hacker Stanley Jobson in what film?', 'answer': 'Swordfish', 'category': 'Action/Adventure'}, {'question': 'Who played the gorgeous lady of the evening Lana in the film Risky Business?', 'answer': 'Rebecca De Mornay', 'category': '1980s'}, {'question': 'The Princess and the Frog takes place in which American city?', 'answer': 'New Orleans', 'category': 'Animated'}, {'question': 'Who played the accused criminal Mark Sheridan on the run from Sam Gerard in the film U.S. Marshals?', 'answer': 'Wesley Snipes', 'category': 'Action/Adventure'}, {'question': 'Who directed the three Rush Hour films?', 'answer': 'Brett Ratner', 'category': 'Directors'}, {'question': 'In Kicking & Screaming, what sport was Will Ferrell coaching?', 'answer': 'soccer', 'category': 'Comedies'}, {'question': 'Sean Connery has won one Oscar, a Best Supporting statue for which film?', 'answer': 'The Untouchables', 'category': 'Oscars'}, {'question': 'Sydney Pollack directed Tom Cruise in which 1993 thriller?', 'answer': 'The Firm', 'category': 'Directors'}, {'question': 'Method Man and Redman end up at Harvard in which 2001 comedy?', 'answer': 'How High', 'category': 'Comedies'}, {'question': "Who was nominated for Best Supporting Actress for her work in 1989's Steel Magnolias?", 'answer': 'Julia Roberts', 'category': 'Oscars'}, {'question': 'What hero said "I don\'t want to kill anyone. I don\'t like bullies; I don\'t care where they\'re from."?', 'answer': 'Steve Rogers / Captain America (in Captain America: The First Avenger)', 'category': 'Comic Book'}, {'question': "Who played Harry Osborn in Sam Raimi's Spider-Man trilogy?", 'answer': 'James Franco', 'category': 'Comic Book'}, {'question': "In 2013's Man of Steel, Clark Kent's adopted hometown of Smallville is in which state?", 'answer': 'Kansas', 'category': 'Comic Book'}, {'question': 'In Thor: The Dark World, Erik Selvig streaks naked at what landmark?', 'answer': 'Stonehenge', 'category': 'Comic Book'}, {'question': 'Who directed the film Parenthood?', 'answer': 'Ron Howard', 'category': '1980s'}, {'question': 'What is the line that helps Sarah defeat the Goblin King in Labyrinth?', 'answer': 'You have no power over me!', 'category': '1980s'}, {'question': 'Who played the conniving boss Katharine Parker in the 1988 hit Working Girl?', 'answer': 'Sigourney Weaver', 'category': '1980s'}, {'question': 'What is the name of the slimy news reporter in Die Hard?', 'answer': 'Richard Thornburg', 'category': '1980s'}, {'question': 'Morgan Freeman fights an alien force in this film based on a Stephen King story.', 'answer': 'Dreamcatcher', 'category': 'Fantasy/Sci-Fi'}, {'question': 'How was the police commissioner assassinated in The Dark Knight?', 'answer': 'he drank poisoned scotch', 'category': 'DC'}, {'question': '"Raindrops Keep Fallin\' on My Head" was written for what classic film?', 'answer': 'Butch Cassidy and the Sundance Kid', 'category': 'Scores & Soundtracks'}, {'question': 'In which comedy action franchise will you find Detective Billy Rosewood and Sergeant John Taggart?', 'answer': 'Beverly Hills Cop', 'category': 'Comedies'}, {'question': 'Russell Crowe stars as a quick-tempered brutal cop Wendell "Bud" White in which film?', 'answer': 'L.A. Confidential', 'category': 'Crime'}, {'question': 'Name the Disney film in which Honest John leads the title character astray to the sinful Pleasure Island.', 'answer': 'Pinocchio', 'category': 'Disney'}, {'question': 'Name one of the films directed by Roland Emmerich before his 1996 blockbuster Independence Day.', 'answer': 'Universal Soldier, Stargate', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Ever After is a Cinderella story starring who as the protagonist Danielle?', 'answer': 'Drew Barrymore', 'category': 'Famous Actors & Actresses'}, {'question': 'Name the film that paired Gerard Butler and Jennifer Aniston as feuding exes.', 'answer': 'The Bounty Hunter', 'category': 'Rom-Coms'}, {'question': 'Which Terry Gilliam film involves time travel and a humanity-threatening plague?', 'answer': '12 Monkeys', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which gangster film featured Christian Bale as FBI agent Melvin Purvis?', 'answer': 'Public Enemies', 'category': 'Famous Actors & Actresses'}, {'question': 'In Bride Wars, Kate Hudson faces off against her best friend played by whom?', 'answer': 'Anne Hathaway', 'category': 'Rom-Coms'}, {'question': 'Who won an Oscar for the role of Velma Kelly in Chicago?', 'answer': 'Catherine Zeta-Jones', 'category': 'Oscars'}, {'question': 'Book of Secrets is the sequel to what film?', 'answer': 'National Treasure', 'category': 'Action/Adventure'}, {'question': 'What is the highest grossing film for Tom Cruise domestically? Minority Report, War of the Worlds, Interview with the Vampire, or Edge of Tomorrow?', 'answer': 'War of the Worlds', 'category': 'Box Office'}, {'question': 'Who won an Oscar for the role of Javier Rodriguez in the film Traffic?', 'answer': 'Benicio del Toro', 'category': 'Oscars'}, {'question': "Who played Paul Walker's love interest in the 2005 movie Into the Blue?", 'answer': 'Jessica Alba', 'category': 'Action/Adventure'}, {'question': "What is the highest grossing film for Demi Moore domestically? G.I. Jane, Ghost, Charlie's Angels: Full Throttle, or A Few Good Men?", 'answer': 'Ghost', 'category': 'Box Office'}, {'question': 'Piper Laurie plays the mother from hell in what horror classic?', 'answer': 'Carrie', 'category': 'Horror'}, {'question': 'Who played the role of Robert Thorn in the original Omen?', 'answer': 'Gregory Peck', 'category': 'Horror'}, {'question': 'How much money does Marion Crane steal in Psycho?', 'answer': "40,000 dollars in 1960's Psycho; 400,000 dollars in 1998's Psycho", 'category': 'Horror'}, {'question': 'Who directed The Dead Zone?', 'answer': 'David Cronenberg', 'category': 'Horror'}, {'question': 'How many Saw films have been released theatrically as of 2016?', 'answer': '7 (Saw, II, III, IV, V, VI, 3D)', 'category': 'Horror'}, {'question': 'Boris Karloff stars in which 1931 monster film?', 'answer': 'Frankenstein', 'category': 'Horror'}, {'question': 'Johnny Depp goes undercover as what in Donnie Brasco?', 'answer': 'a jewel thief', 'category': '1990s'}, {'question': 'Name the movie in which John Travolta is zapped by a bright light in the sky, leaving him with extrasensory perception.', 'answer': 'Phenomenon', 'category': '1990s'}, {'question': 'In the film Dusk till Dawn, who plays the RV-driving patriarch whose family gets kidnapped by George Clooney and Quentin Tarantino?', 'answer': 'Harvey Keitel', 'category': '1990s'}, {'question': 'Alicia Silverstone plays Cher in what 90s film?', 'answer': 'Clueless', 'category': '1990s'}, {'question': 'In the film Basic Instinct, what is the occupation of suspected murderer Catherine Tramell?', 'answer': 'a crime novelist', 'category': '1990s'}, {'question': "Who played United States President Dale in Tim Burton's Mars Attacks!?", 'answer': 'Jack Nicholson', 'category': '1990s'}, {'question': 'Who plays the singing prince in the live-action animation hybrid Enchanted?', 'answer': 'James Marsden', 'category': 'Disney'}, {'question': 'What actor plays Sergeant Al Powell in Die Hard?', 'answer': 'Reginald VelJohnson', 'category': '1980s'}, {'question': 'Which Marvel character said "If I had a blacklight, this would look like a Jackson Pollock painting."?', 'answer': 'Star-Lord (in Guardians of the Galaxy)', 'category': 'Marvel'}, {'question': 'Who directed Groundhog Day?', 'answer': 'Harold Ramis', 'category': 'Directors'}, {'question': "In Star Wars Episodes II and III, what is Count Dooku's Sith Lord title?", 'answer': 'Darth Tyranus', 'category': 'Star Wars'}, {'question': 'Gargantua is the name given to a black hole in which sci-fi film?', 'answer': 'Interstellar', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the animated A Christmas Carol that featured Jim Carrey as Ebeneezer Scrooge?', 'answer': 'Robert Zemeckis', 'category': 'Animated'}, {'question': 'What actor starred alongside supermodel Cindy Crawford in the 1995 action flick Fair Game?', 'answer': 'William Baldwin', 'category': 'Action/Adventure'}, {'question': 'Name the film that stars Kevin Spacey as legendary singer Bobby Darin.', 'answer': 'Beyond the Sea', 'category': 'Dramas'}, {'question': 'Foulfellow and Gideon get what Disney character into trouble?', 'answer': 'Pinocchio', 'category': 'Animated'}, {'question': 'Mel Gibson plays Porter, a thief double-crossed by his wife and his partner in what 1999 film?', 'answer': 'Payback', 'category': 'Action/Adventure'}, {'question': 'Christian Bale plays an insomniac that inadvertently injures a co-worker in what 2004 film?', 'answer': 'The Machinist', 'category': 'Dramas'}, {'question': 'Which Tom Hanks film was directed by Jonathan Demme?', 'answer': 'Philadelphia', 'category': 'Directors'}, {'question': 'Martin Landau won a statue for playing Bela Lugosi in what film?', 'answer': 'Ed Wood', 'category': 'Oscars'}, {'question': 'Which was the highest-grossing film of 1990 domestically? Home Alone, Dances With Wolves, Ghost, or The Hunt for Red October?', 'answer': 'Home Alone', 'category': 'Box Office'}, {'question': 'Name the movie that marked the first collaboration between director Martin Scorsese and actor Leonardo DiCaprio.', 'answer': 'Gangs of New York', 'category': 'Directors'}, {'question': 'Name the first film that saw Michael Douglas earn a nomination for acting.', 'answer': 'Wall Street', 'category': 'Oscars'}, {'question': 'Not including the Toy Story films, what is the highest domestic total for a Pixar film (as of November 2016)? Finding Nemo, The Incredibles, Inside Out, or Finding Dory?', 'answer': 'Finding Dory', 'category': 'Box Office'}, {'question': 'In the 1986 film Legend, what must the Lord of Darkness destroy to create eternal darkness?', 'answer': 'unicorns', 'category': 'Tom Cruise'}, {'question': 'Tom Cruise received his first Academy Award nomination for which movie?', 'answer': 'Born on the Fourth of July', 'category': 'Tom Cruise'}, {'question': 'What Tom Cruise film co-starred Meryl Streep?', 'answer': 'Lions for Lambs', 'category': 'Tom Cruise'}, {'question': "What is the name of Tom Cruise's short-tempered character in Tropic Thunder?", 'answer': 'Les Grossman', 'category': 'Tom Cruise'}, {'question': '"It seems to me that if there were any logic to our language, trust would be a four letter word." is quoted from which Tom Cruise film?', 'answer': 'Risky Business', 'category': 'Tom Cruise'}, {'question': 'In the first Mission: Impossible, Tom Cruise realizes that the code name of the mole on his IMF team corresponds with a book in the Bible. He used this code name to make first contact with the arms dealer Max. What was the code name?', 'answer': 'Job', 'category': 'Tom Cruise'}, {'question': 'In the movie 500 Days of Summer, Tom studied to be a what?', 'answer': 'an architect', 'category': 'Romance'}, {'question': "What is the occupation of Rachel McAdams' character in Morning Glory?", 'answer': 'a morning show producer', 'category': 'Romance'}, {'question': "Who plays Woody Allen's school-aged girlfriend in 1979's Manhattan?", 'answer': 'Mariel Hemingway', 'category': 'Romance'}, {'question': 'What singer stars in the 1980 remake of The Jazz Singer?', 'answer': 'Neil Diamond', 'category': 'Romance'}, {'question': "In the 1980 romantic fantasy Somewhere in Time, who is Christopher Reeve's co-star?", 'answer': 'Jane Seymour', 'category': 'Romance'}, {'question': 'In the movie An Officer and a Gentleman, who played the drill instructor Sergeant Emil Foley?', 'answer': 'Louis Gossett Jr.', 'category': 'Romance'}, {'question': 'Which animated film features characters such as Dr. Finklestein, Santa Claus, and Oogie Boogie?', 'answer': 'The Nightmare Before Christmas', 'category': 'Animated'}, {'question': 'Who was Darth Vader referring to when he said "Now his failure is complete."?', 'answer': 'Obi-Wan Kenobi (in Return of the Jedi)', 'category': 'Star Wars'}, {'question': 'What actors portray Chicago firefighting brothers Stephen and Brian in Backdraft?', 'answer': 'Kurt Russell, William Baldwin', 'category': '1990s'}, {'question': 'Which Ben Affleck film was directed by John Woo?', 'answer': 'Paycheck', 'category': 'Afflecks'}, {'question': 'Joe Dante directs and Dee Wallace stars as Karen in which 1981 horror fest?', 'answer': 'The Howling', 'category': 'Horror'}, {'question': 'Cab driver Korben Dallas finds the fate of the world in his hands in which sci-fi flick?', 'answer': 'The Fifth Element', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Chris Columbus directed which movie featuring Andrew, a robot purchased to perform household chores?', 'answer': 'Bicentennial Man', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What was the first film in which Harrison Ford played Jack Ryan?', 'answer': 'Patriot Games', 'category': 'Famous Actors & Actresses'}, {'question': 'What actor played Admiral Benson in Hot Shots! and President Benson in Hot Shots! Part Deux?', 'answer': 'Lloyd Bridges', 'category': 'Comedies'}, {'question': 'Which Highlander sequel was called The Final Dimension?', 'answer': '3', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1995 film paired Angela Bassett with Whitney Houston?', 'answer': 'Waiting to Exhale', 'category': 'Famous Actors & Actresses'}, {'question': 'What is the name of the third film in the Austin Powers franchise?', 'answer': 'Austin Powers in Goldmember', 'category': 'Comedies'}, {'question': 'Paul Walker and Steve Zahn get more than they wanted from a CB radio in what 2001 thriller?', 'answer': 'Joy Ride', 'category': 'Horror'}, {'question': 'Pierce Brosnan plays volcanologist Harry Dalton in what film?', 'answer': "Dante's Peak", 'category': 'Action/Adventure'}, {'question': 'Which Russell Crowe film has the highest domestic box office? Man of Steel, Gladiator, Les Misérables, or A Beautiful Mind?', 'answer': 'Man of Steel', 'category': 'Box Office'}, {'question': 'What legendary director was at the helm for Ghosts of Mars?', 'answer': 'John Carpenter', 'category': 'Horror'}, {'question': 'What actor played local sheriff Will Teasle in First Blood?', 'answer': 'Brian Dennehy', 'category': 'Action/Adventure'}, {'question': 'Which is the highest grossing film of 2007 domestically? Spider-Man 3, Transformers, Shrek the Third, or Harry Potter and the Order of the Phoenix?', 'answer': 'Spider-Man 3', 'category': 'Box Office'}, {'question': 'In High Noon, who plays the character of Marshal Will Kane?', 'answer': 'Gary Cooper', 'category': 'Westerns'}, {'question': 'Who plays happy-go-lucky Jake in Silverado?', 'answer': 'Kevin Costner', 'category': 'Westerns'}, {'question': "Which film's characters include the outlaw William Munny?", 'answer': 'Unforgiven', 'category': 'Westerns'}, {'question': 'To which South American country do the title characters flee in Butch Cassidy and the Sundance Kid?', 'answer': 'Bolivia', 'category': 'Westerns'}, {'question': "What year saw the release of John Ford's classic western The Searchers?", 'answer': '1956', 'category': 'Release Dates'}, {'question': 'The American movie Rain Man premiered in what year?', 'answer': '1988', 'category': 'Release Dates'}, {'question': 'What year saw the release of the coming-of-age classic Sixteen Candles?', 'answer': '1984', 'category': 'Release Dates'}, {'question': 'Jim Carrey displayed his dramatic chops in Eternal Sunshine of the Spotless Mind, released in what year?', 'answer': '2004', 'category': 'Release Dates'}, {'question': 'Wilford Brimley played manager Pop Fisher in which baseball flick?', 'answer': 'The Natural', 'category': 'Sports'}, {'question': 'In the film Beowulf, whom does Angelina Jolie play the mother of?', 'answer': 'Grendel', 'category': 'Angelina Jolie'}, {'question': 'What two actors play government agents that are vying for the affection of Reese Witherspoon in This Means War?', 'answer': 'Chris Pine, Tom Hardy', 'category': 'Rom-Coms'}, {'question': 'What year saw the release of the first Toy Story movie?', 'answer': '1995', 'category': 'Release Dates'}, {'question': 'Who directed Jennifer Lawrence for her Oscar-nominated turn in Joy?', 'answer': 'David O. Russell', 'category': 'Jennifer Lawrence'}, {'question': "What actor played the lead villain in 2003's The Italian Job?", 'answer': 'Edward Norton', 'category': 'Action/Adventure'}, {'question': 'Who directed Johnny Depp and company in the film Public Enemies?', 'answer': 'Michael Mann', 'category': 'Directors'}, {'question': "Who won Best Actress for 2006's The Queen?", 'answer': 'Helen Mirren', 'category': 'Oscars'}, {'question': "Who played commanding officer Admiral Reigart, trying to rescue Owen Wilson's character in Behind Enemy Lines?", 'answer': 'Gene Hackman', 'category': 'Action/Adventure'}, {'question': "Who directed 2013's The Bling Ring?", 'answer': 'Sofia Coppola', 'category': 'Directors'}, {'question': 'For which film did Jennifer Connelly win her Academy Award?', 'answer': 'A Beautiful Mind', 'category': 'Oscars'}, {'question': 'David Lynch directed what 1986 flick starring Isabella Rossellini and Dennis Hopper?', 'answer': 'Blue Velvet', 'category': '1980s'}, {'question': 'During which war does Grace move her children to the English coast in The Others?', 'answer': 'World War II', 'category': 'Horror'}, {'question': 'How many children did Daniel Hillard have in Mrs. Doubtfire?', 'answer': '3 children', 'category': 'Family'}, {'question': 'Which 1985 Woody Allen film starred Mia Farrow, Jeff Daniels, and Danny Aiello?', 'answer': 'The Purple Rose of Cairo', 'category': '1980s'}, {'question': 'Geoffrey Rush stars as Steven Price, a billionaire who invites selected guests to stay at a mansion that used to be an insane asylum, in what 1999 horror flick?', 'answer': 'House on Haunted Hill', 'category': 'Horror'}, {'question': 'In the family adventure Homeward Bound, there were some animals on an adventure. How many animals were in this adventure?', 'answer': '3 animals', 'category': 'Family'}, {'question': 'A firefighting cadet, two college professors, and a government scientist work against an alien organism that arrived on Earth inside a meteor in what sci-fi comedy?', 'answer': 'Evolution', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Billy Boyd portrayed which hobbit in the Lord of the Rings trilogy?', 'answer': 'Pippin Took', 'category': 'Fantasy/Sci-Fi'}, {'question': "What Bertie Bott's Every Flavour Beans flavor did Dumbledore have the most unfortunate encounter with when he was younger?", 'answer': 'a vomit-flavored one', 'category': 'Fantasy/Sci-Fi'}, {'question': 'The Chronicles of Narnia movies are based off a series of books by which author?', 'answer': 'C. S. Lewis', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played replicant Roy Batty in Blade Runner?', 'answer': 'Rutger Hauer', 'category': 'Fantasy/Sci-Fi'}, {'question': "What Egyptian god isn't a god, but an alien, in 1994's Stargate?", 'answer': 'Ra', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Toy Story 2, what animal is the mascot for Al's Toy Barn?", 'answer': 'a chicken', 'category': 'Pixar'}, {'question': "Who voiced cranky old man Carl Fredricksen in Pixar's Up?", 'answer': 'Ed Asner', 'category': 'Pixar'}, {'question': 'In Cars, what racing trophy does Lightning McQueen want to win?', 'answer': 'the Piston Cup', 'category': 'Pixar'}, {'question': 'Remy the rat helps a young man named what in Ratatouille?', 'answer': 'Alfredo Linguini', 'category': 'Pixar'}, {'question': "What kind of candy distracts Heimlich the caterpillar during his circus performance in A Bug's Life?", 'answer': 'candy corn', 'category': 'Pixar'}, {'question': "Who voiced Slinky the dog in 1995's Toy Story?", 'answer': 'Jim Varney', 'category': 'Pixar'}, {'question': 'What rocker starred as an alien searching for water to save his planet in The Man Who Fell to Earth?', 'answer': 'David Bowie', 'category': '1970s'}, {'question': "You'll find boutique book seller Kathleen Kelly and corporate chain Fox Books in what 1998 film?", 'answer': "You've Got Mail", 'category': 'Rom-Coms'}, {'question': 'Who was at the helm for the beloved fantasy The Princess Bride?', 'answer': 'Rob Reiner', 'category': 'Directors'}, {'question': 'Who played the lead role of Jack Prescott in the 1976 remake of King Kong?', 'answer': 'Jeff Bridges', 'category': '1970s'}, {'question': 'The tune "Grow Old With You" is performed during the climax of what movie?', 'answer': 'The Wedding Singer', 'category': 'Rom-Coms'}, {'question': 'Brian De Palma directed Sean Penn in what war movie?', 'answer': 'Casualties of War', 'category': 'Directors'}, {'question': "What actress co-starred as scientist Emma Russell in 1997's The Saint?", 'answer': 'Elisabeth Shue', 'category': 'Action/Adventure'}, {'question': 'What type of animal is Manny, voiced by Ray Romano, in the Ice Age films?', 'answer': 'a woolly mammoth', 'category': 'Animated'}, {'question': 'Name the film with the following characters: Tre, Ricky, and Doughboy.', 'answer': 'Boyz n the Hood', 'category': 'Characters'}, {'question': 'Robert De Niro plays ex-intelligence officer Sam, who is tasked with stealing a mysterious briefcase, in what crime action thriller?', 'answer': 'Ronin', 'category': 'Action/Adventure'}, {'question': 'A Hawaiian girl adopts a pet who is actually an extraterrestrial on the run in what film?', 'answer': 'Lilo & Stitch', 'category': 'Animated'}, {'question': 'Name the film with the following characters: Mitch Robbins, Phil Berquist, and Curly Washburn.', 'answer': 'City Slickers', 'category': 'Characters'}, {'question': "Who plays Matt Damon's female traveling companion in The Bourne Identity?", 'answer': 'Franka Potente', 'category': 'Action/Adventure'}, {'question': 'In John Wick, what are the hitmen not allowed to do when staying at the hotel?', 'answer': 'to kill anyone', 'category': 'Action/Adventure'}, {'question': 'Die Hard 2 takes place in which airport?', 'answer': 'Washington Dulles International Airport ', 'category': 'Action/Adventure'}, {'question': 'In Con Air, where do they attempt to land the plane at the end of the film?', 'answer': 'the Las Vegas Strip', 'category': 'Action/Adventure'}, {'question': 'What supermodel-turned-actress played the sexy thief in the 2002 thriller Femme Fatale?', 'answer': 'Rebecca Romijn', 'category': 'Crime'}, {'question': 'Name the movie from the quote: "I always tell the truth. Even when I lie."', 'answer': 'Scarface', 'category': 'Crime'}, {'question': 'Andrew Dominik directed Brad Pitt and Scoot McNairy in which crime film?', 'answer': 'Killing Them Softly', 'category': 'Crime'}, {'question': "For what psychiatric condition does Robert De Niro's character Paul Vitti seek treatment in the movie Analyze This?", 'answer': 'panic attacks', 'category': 'Crime'}, {'question': 'In The Hunger Games, from which district is Katniss Everdeen?', 'answer': 'District 12', 'category': 'Jennifer Lawrence'}, {'question': 'Who played the role of Norman Bates in Psycho?', 'answer': "Anthony Perkins (in 1960's Psycho), Vince Vaughn (in 1998's Psycho)", 'category': 'Horror'}, {'question': 'Where do Will Smith and Eva Mendes go on their first date in Hitch?', 'answer': 'Ellis Island', 'category': 'Rom-Coms'}, {'question': "What is the name of the first sequel to Michael Bay's Transformers?", 'answer': 'Transformers: Revenge of the Fallen', 'category': 'Action/Adventure'}, {'question': 'Which film sees Meg Ryan travel abroad to confront the less-than-faithful Timothy Hutton?', 'answer': 'French Kiss', 'category': 'Rom-Coms'}, {'question': 'Who played a homeless Juilliard-trained musician in The Soloist?', 'answer': 'Jamie Foxx', 'category': 'Famous Actors & Actresses'}, {'question': 'Who played the leader Hannibal Smith in the 2010 film version of The A-Team?', 'answer': 'Liam Neeson', 'category': 'Action/Adventure'}, {'question': "Which cast member meets and hooks up with Marisa Tomei's character in Crazy, Stupid, Love.?", 'answer': 'Steve Carell', 'category': 'Rom-Coms'}, {'question': 'What actor teamed up with Robin Williams to star in the 2009 comedy Old Dogs?', 'answer': 'John Travolta', 'category': 'Famous Actors & Actresses'}, {'question': 'Woody Allen, Sharon Stone, and Gene Hackman all lend their voices to what 1998 DreamWorks animated feature?', 'answer': 'Antz', 'category': 'Animated'}, {'question': 'Who starred as a Muslim ambassador exiled from his homeland in The 13th Warrior?', 'answer': 'Antonio Banderas', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which 2005 film features historical characters including Senator Joseph McCarthy, CBS TV journalist Edward R. Murrow, and TV producer Fred Friendly?', 'answer': 'Good Night, and Good Luck', 'category': 'Names'}, {'question': 'What was the name of the 1999 film based on the popular Nickelodeon cartoon Doug?', 'answer': "Doug's 1st Movie", 'category': 'Animated'}, {'question': 'In which film does Dianne Wiest play the suburban mother of Winona Ryder?', 'answer': 'Edward Scissorhands', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which high school comedy features characters named Cady Heron, Regina George, and Karen Smith?', 'answer': 'Mean Girls', 'category': 'Names'}, {'question': 'What 90s movie stars Kevin Spacey as a police officer who must defuse a hostage situation brought on by a fellow officer who was framed for murder and is played by Samuel L. Jackson?', 'answer': 'The Negotiator', 'category': '1990s'}, {'question': 'What film stars Meg Ryan as a pompous academic, Tim Robbins as the auto mechanic who falls for her, and Walter Matthau as her uncle Albert Einstein?', 'answer': 'I.Q.', 'category': '1990s'}, {'question': 'What 90s action comedy stars Dennis Rodman and Dane Cook?', 'answer': 'Simon Sez', 'category': '1990s'}, {'question': 'Who directed the 1996 fantasy family film Matilda?', 'answer': 'Danny DeVito', 'category': '1990s'}, {'question': 'How long did the thieves have to boost all 50 cars on the list in Gone in 60 Seconds?', 'answer': '3 days', 'category': 'Action/Adventure'}, {'question': 'Mark Strong plays a villain in which Guy Ritchie movie?', 'answer': 'Sherlock Holmes', 'category': 'Action/Adventure'}, {'question': "In Rush Hour 2, what animated character did Chief Inspector Lee say Isabella's tattoo look like?", 'answer': 'Snoopy', 'category': 'Action/Adventure'}, {'question': 'What actress played a call girl and key witness in the action hit Bad Boys?', 'answer': 'Téa Leoni', 'category': 'Action/Adventure'}, {'question': 'Peter Berg directed Dwayne "The Rock" Johnson in what action flick?', 'answer': 'The Rundown', 'category': 'Action/Adventure'}, {'question': 'Name two films for which Kenny Loggins has contributed to the soundtrack.', 'answer': 'Caddyshack, Footloose, Top Gun, Over the Top, Caddyshack II, One Fine Day, The Tigger Movie', 'category': 'Scores & Soundtracks'}, {'question': 'Besides The Incredibles, what other Pixar film was directed by Brad Bird (as of December 2016)?', 'answer': 'Ratatouille', 'category': 'Animated'}, {'question': 'Who played the mysterious manager of the Dolphin hotel in the film 1408?', 'answer': 'Samuel L. Jackson', 'category': 'Horror'}, {'question': 'What comedic film veteran directed Natalie Portman in No Strings Attached?', 'answer': 'Ivan Reitman', 'category': 'Directors'}, {'question': 'What type of creatures keep Quasimodo company in the bell tower in The Hunchback of Notre Dame?', 'answer': 'gargoyles', 'category': 'Animated'}, {'question': 'Which horror remake was the first feature directed by Zack Snyder?', 'answer': 'Dawn of the Dead', 'category': 'Horror'}, {'question': 'Name a sequel that is directed by Steven Soderbergh.', 'answer': "Ocean's Twelve, Ocean's Thirteen", 'category': 'Directors'}, {'question': 'Name the 1991 caper comedy that Bruce Willis co-wrote and starred in.', 'answer': 'Hudson Hawk', 'category': 'Comedies'}, {'question': 'For which movie did Louis Gossett Jr. win his Academy Award for Best Supporting Actor?', 'answer': 'An Officer and a Gentleman', 'category': 'Oscars'}, {'question': 'Before he is accused of killing his wife, Dr. Richard Kimble is a prominent surgeon in what metropolis in The Fugitive?', 'answer': 'Chicago', 'category': 'Towns'}, {'question': 'In The Other Guys, who plays the police captain that also works at Bed Bath & Beyond?', 'answer': 'Michael Keaton', 'category': 'Comedies'}, {'question': 'Name a Clint Eastwood directed film to be nominated for Best Picture released after Million Dollar Baby.', 'answer': 'Letters from Iwo Jima, American Sniper', 'category': 'Oscars'}, {'question': 'In which city do the events of Bad Boys take place?', 'answer': 'Miami', 'category': 'Towns'}, {'question': 'In The Fault in Our Stars, why do Hazel and Gus go to Amsterdam?', 'answer': 'to meet her favorite author', 'category': 'Coming of Age'}, {'question': 'In Dazed and Confused, getting tickets for which concert is the top priority of the summer?', 'answer': 'Aerosmith', 'category': 'Coming of Age'}, {'question': 'In Pretty in Pink, which character lip-syncs in the record store to Otis Redding?', 'answer': 'Duckie', 'category': 'Coming of Age'}, {'question': 'What two Saturday Night Live alumni appear in Adventureland as assistant manager Bobby and his wife and park manager Paulette?', 'answer': 'Bill Hader, Kristen Wiig', 'category': 'Coming of Age'}, {'question': 'Where does Jack Skellington live in The Nightmare Before Christmas?', 'answer': 'Halloween Town', 'category': 'Tim Burton'}, {'question': "Who voiced the caterpillar in Tim Burton's Alice in Wonderland film?", 'answer': 'Alan Rickman', 'category': 'Tim Burton'}, {'question': 'What is the name of the newspaper that Beetlejuice reads while in the cemetery?', 'answer': 'the Afterlife', 'category': 'Tim Burton'}, {'question': 'What industry does Ed Wood work in?', 'answer': 'filmmaking', 'category': 'Tim Burton'}, {'question': 'Ben Stiller, Luke Wilson, and Gwyneth Paltrow play siblings in what comedy?', 'answer': 'The Royal Tenenbaums', 'category': 'Comedies'}, {'question': 'Jason Statham and Jet Li tangled in what one-word titled 2007 flick?', 'answer': 'War', 'category': 'Action/Adventure'}, {'question': 'Name one of the Oscar-nominated stars of the 1998 film Affliction.', 'answer': 'James Coburn, Nick Nolte', 'category': 'Oscars'}, {'question': 'What classic movie features supporting roles by Strother Martin as a sadistic warden and George Kennedy as Dragline?', 'answer': 'Cool Hand Luke', 'category': 'Classics'}, {'question': "What famous actor played the boyfriend of Meryl Streep's Karen Silkwood in the 1983 film Silkwood?", 'answer': 'Kurt Russell', 'category': '1980s'}, {'question': 'Highly intelligent rats help a widowed mouse in 1982 adventure?', 'answer': 'The Secret of NIMH', 'category': 'Animated'}, {'question': 'John Travolta plays Terl in which sci-fi film?', 'answer': 'Battlefield Earth', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays the older brother of Josie in Never Been Kissed?', 'answer': 'David Arquette', 'category': 'Rom-Coms'}, {'question': 'In the Disney film Oliver & Company, what type of animal is Dodger?', 'answer': 'a dog', 'category': 'Animated'}, {'question': 'In Pirates of the Caribbean, Barbossa was captain of which ship for 10 years?', 'answer': 'the Black Pearl', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played the role of Kimberly in 1997's My Best Friend's Wedding?", 'answer': 'Cameron Diaz', 'category': 'Rom-Coms'}, {'question': 'A View to a Kill was the last James Bond movie starring which actor as 007?', 'answer': 'Roger Moore', 'category': 'Action/Adventure'}, {'question': 'Oliver Stone won his second Best Director statue after Platoon for which film?', 'answer': 'Born on the Fourth of July', 'category': 'Oscars'}, {'question': 'In which Northeastern state is the Shawshank State Penitentiary located?', 'answer': 'Maine', 'category': 'Places'}, {'question': "During the film Under Siege, what is Casey Ryback's current role in the U.S. Navy?", 'answer': 'a cook', 'category': 'Action/Adventure'}, {'question': 'Dan Aykroyd has been nominated for one Academy Award, for Best Supporting Actor, for his role as Boolie Werthan, in what 1989 film?', 'answer': 'Driving Miss Daisy', 'category': 'Oscars'}, {'question': 'What state is Marion Crane traveling to in the film Psycho?', 'answer': 'California', 'category': 'Places'}, {'question': "What 2006 movie title was changed to Pacific Air Flight 121 during production then changed back to the original title partly due to the request of the film's star?", 'answer': 'Snakes on a Plane', 'category': 'Mixed Bag'}, {'question': 'In what year was The Godfather Part II released?', 'answer': '1974', 'category': 'Mixed Bag'}, {'question': 'What actor plays Geordi La Forge in Star Trek Generations?', 'answer': 'LeVar Burton', 'category': 'Mixed Bag'}, {'question': 'Who voiced Jessica Rabbit in Who Framed Roger Rabbit?', 'answer': 'Kathleen Turner', 'category': 'Mixed Bag'}, {'question': 'Thelma and Louise want to avoid being on what TV show?', 'answer': 'Geraldo', 'category': 'Mixed Bag'}, {'question': "In The Wizard of Oz, Dorothy's house lands on and kills a wicked witch. From where did the witch hail?", 'answer': 'the East', 'category': 'Mixed Bag'}, {'question': 'What was the name of the Elven king of Mirkwood in the Hobbit trilogy?', 'answer': 'Thranduil', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what film does a New York Jets quarterback save the world?', 'answer': 'Flash Gordon', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What does Harrison Ford find on the floor at the end of Blade Runner?', 'answer': 'an origami unicorn', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the Jodie Foster flick Contact?', 'answer': 'Robert Zemeckis', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Labyrinth, what type of fruit does Jareth instruct Hoggle to give Sarah?', 'answer': 'a peach', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who voiced the character of Treebeard in The Lord of the Rings?', 'answer': 'John Rhys-Davies', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Matthew McConaughey starred in which film directed by Jean-Marc Vallée?', 'answer': 'Dallas Buyers Club', 'category': 'Matthew McConaughey'}, {'question': 'What was the Oscar-nominated disaster movie from 1974 that starred Steve McQueen and Paul Newman?', 'answer': 'The Towering Inferno', 'category': '1970s'}, {'question': "Who plays the young girl that Denzel Washington is charged to protect in 2004's Man on Fire?", 'answer': 'Dakota Fanning', 'category': 'Action/Adventure'}, {'question': 'Josh Lucas plays a coach by the name of Don Haskins in what basketball film?', 'answer': 'Glory Road', 'category': 'Sports'}, {'question': 'Who played the female Elven warrior in the Hobbit films?', 'answer': 'Evangeline Lilly', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played B.A. Baracus in 2010's incarnation of the A-Team?", 'answer': 'Quinton "Rampage" Jackson', 'category': 'Action/Adventure'}, {'question': 'What was the last name of Randy the Ram in The Wrestler?', 'answer': 'Robinson', 'category': 'Sports'}, {'question': "What MCU regular played Orlando Bloom's dad, known as Bootstrap Bill, in Pirates of the Caribbean: Dead Man's Chest?", 'answer': 'Stellan Skarsgård', 'category': 'Fantasy/Sci-Fi'}, {'question': "In what city does heartthrob Mary currently reside in There's Something About Mary?", 'answer': 'Miami', 'category': 'Comedies'}, {'question': 'In what sci-fi classic will you hear the following quote: "I honestly think you ought to sit down calmly, take a stress pill, and think things over."?', 'answer': '2001: A Space Odyssey', 'category': 'Quotes'}, {'question': 'Todd and Margo are the neighbors in what classic 80s holiday comedy?', 'answer': "National Lampoon's Christmas Vacation", 'category': 'Holiday'}, {'question': 'In which film will you find Heather Graham co-starring with Mike Myers?', 'answer': 'Austin Powers: The Spy Who Shagged Me', 'category': 'Comedies'}, {'question': 'Name the movie in which an imaginary Elvis proclaims "I like you, Clarence. Always have. Always will.".', 'answer': 'True Romance', 'category': 'Quotes'}, {'question': 'Who played the concierge at the hotel that Kevin McCallister checked into in Home Alone 2: Lost in New York?', 'answer': 'Tim Curry', 'category': 'Holiday'}, {'question': 'Who played Sirius Black in the Harry Potter franchise?', 'answer': 'Gary Oldman', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In I, Robot, what is the name of the sentient robot voiced by Alan Tudyk?', 'answer': 'Sonny', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played the heroic Theseus in 2011's Immortals?", 'answer': 'Henry Cavill', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who directed 2009's Terminator Salvation?", 'answer': 'McG', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In The Warriors, what area of New York did the Warriors call home?', 'answer': 'Coney Island', 'category': 'Action/Adventure'}, {'question': 'Who plays the rough-edged adventurer Jack Colton in Romancing the Stone?', 'answer': 'Michael Douglas', 'category': 'Action/Adventure'}, {'question': "In Jurassic Park, John Hammond's park is on an island off the coast of what Central American country?", 'answer': 'Costa Rica', 'category': 'Action/Adventure'}, {'question': 'Who directed the 1982 fantasy classic Conan the Barbarian?', 'answer': 'John Milius', 'category': 'Action/Adventure'}, {'question': 'In the film Space Jam, name one of the NBA players who gets his talent stolen by aliens.', 'answer': 'Charles Barkley, Larry Johnson, Muggsy Bogues, Patrick Ewing, Shawn Bradley', 'category': 'Sports'}, {'question': 'Who plays the legendary comedian kidnapped by Robert De Niro in The King of Comedy?', 'answer': 'Jerry Lewis', 'category': 'Robert De Niro'}, {'question': 'What 1980s movie has a character that laments "Why\'s he calling me meat? I\'m the one driving a Porsche."?', 'answer': 'Bull Durham', 'category': 'Quotes'}, {'question': 'The Other Side is the sequel name to what 1980s scary flick?', 'answer': 'Poltergeist', 'category': '1980s'}, {'question': "Name the 2005 sequel to 1998's The Mask of Zorro starring Antonio Banderas.", 'answer': 'The Legend of Zorro', 'category': 'Action/Adventure'}, {'question': 'Who was nominated for Best Director for Lost in Translation?', 'answer': 'Sofia Coppola', 'category': 'Oscars'}, {'question': 'Apartment tenants need to help mechanical alien lifeforms to save their building in what 1987 movie?', 'answer': 'Batteries Not Included', 'category': '1980s'}, {'question': 'James McAvoy learns he is the son of a professional assassin in what movie?', 'answer': 'Wanted', 'category': 'Action/Adventure'}, {'question': 'Billy Bob Thornton won his first Academy Award for which 1996 film?', 'answer': 'Sling Blade (for Screenplay Based on Material Previously Produced or Published)', 'category': 'Oscars'}, {'question': 'Which member of the gang gets stolen by a toy collector in Toy Story 2?', 'answer': 'Woody', 'category': 'Animated'}, {'question': "What is Brooks' job in The Shawshank Redemption?", 'answer': 'a prison librarian', 'category': 'Dramas'}, {'question': 'Will Ferrell plays athlete Jackie Moon in what film?', 'answer': 'Semi-Pro', 'category': 'Comedies'}, {'question': 'The legendary mantle of Dragon Warrior is bestowed upon an unlikely participant in which movie?', 'answer': 'Kung Fu Panda', 'category': 'Animated'}, {'question': 'Anthony Mackie played a battle rapper in which movie?', 'answer': '8 Mile', 'category': 'Dramas'}, {'question': 'The Sitter starred whom as a suspended college kid unwittingly babysitting the kids next door?', 'answer': 'Jonah Hill', 'category': 'Comedies'}, {'question': "What is the name of Sam Rockwell's character in Iron Man 2?", 'answer': 'Justin Hammer', 'category': 'Comic Book'}, {'question': "Who directed 2009's X-Men Origins: Wolverine?", 'answer': 'Gavin Hood', 'category': 'Comic Book'}, {'question': 'Who plays a silent psycho killer Kevin in Sin City?', 'answer': 'Elijah Wood', 'category': 'Comic Book'}, {'question': "Who was Bruce Banner's love interest in The Incredible Hulk?", 'answer': 'Betty Ross', 'category': 'Comic Book'}, {'question': 'In X-Men 2: X-Men United, what do the tattoos on Nightcrawler represent?', 'answer': 'each one of his sins', 'category': 'Comic Book'}, {'question': 'Who played the villainous Dr. Arnim Zola in the Captain America franchise?', 'answer': 'Toby Jones', 'category': 'Comic Book'}, {'question': 'An orphaned musical prodigy uses his unique gifts to find his birth parents, played by Keri Russell and Jonathan Rhys Meyers, in what film?', 'answer': 'August Rush', 'category': 'Dramas'}, {'question': 'Who played the character Nikola Tesla in The Prestige?', 'answer': 'David Bowie', 'category': 'Dramas'}, {'question': 'What Garry Marshall directed film stars Kate Hudson as she becomes the guardian of three children after her sister and brother-in-law die in a car accident?', 'answer': 'Raising Helen', 'category': 'Dramas'}, {'question': 'The 2012 film Anna Karenina takes place primarily in what country?', 'answer': 'Russia', 'category': 'Dramas'}, {'question': 'What film stars Clint Eastwood as a career thief who witnesses a horrific crime involving the U.S. President?', 'answer': 'Absolute Power', 'category': 'Dramas'}, {'question': 'Who co-wrote Rushmore alongside Wes Anderson?', 'answer': 'Owen Wilson', 'category': 'Dramas'}, {'question': 'Frank Langella played which role in Superman Returns?', 'answer': 'Perry White', 'category': 'DC'}, {'question': 'Colin Farrell plays a hitman who accidentally kills a child in which film?', 'answer': 'In Bruges', 'category': 'Crime'}, {'question': 'Which film was the directorial debut for Ben Affleck?', 'answer': 'Gone Baby Gone', 'category': 'Afflecks'}, {'question': 'A magical board game hurls two brothers through outer space in which 2005 film?', 'answer': 'Zathura: A Space Adventure', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who was behind the camera for the Mel Gibson vehicle Ransom?', 'answer': 'Ron Howard', 'category': 'Directors'}, {'question': 'What classic 1980s song do all the characters dance to in 13 Going on 30?', 'answer': 'Thriller', 'category': 'Rom-Coms'}, {'question': 'Name one of the three names given to the ravine featured in Back to the Future III.', 'answer': 'Clayton Ravine, Shonash Ravine, Eastwood Ravine', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Miloš Forman directed Woody Harrelson in what 1996 film?', 'answer': 'The People vs. Larry Flynt', 'category': 'Directors'}, {'question': 'In the beginning of Sleepless in Seattle, Tom Hanks moves to Seattle from what city?', 'answer': 'Chicago', 'category': 'Rom-Coms'}, {'question': 'What was the name of the second Omen movie?', 'answer': 'Damien: Omen II', 'category': 'Horror'}, {'question': "Catherine O'Hara provides the voice of which character in The Nightmare Before Christmas?", 'answer': 'Sally', 'category': 'Animated'}, {'question': '"Oh yes, there will be blood" is a tagline for a film in which horror franchise?', 'answer': 'Saw (for Saw II)', 'category': 'Taglines'}, {'question': 'Which star of the movie also directed the film Frailty?', 'answer': 'Bill Paxton', 'category': 'Horror'}, {'question': 'In Finding Nemo, what city did Nemo find himself imprisoned in?', 'answer': 'Sydney', 'category': 'Animated'}, {'question': 'Name the mid-90s film that features the tagline "cocktails first. questions later.".', 'answer': 'Swingers', 'category': 'Taglines'}, {'question': 'Which film did Matthew McConaughey star in that was based on a John Grisham novel?', 'answer': 'A Time to Kill', 'category': 'Matthew McConaughey'}, {'question': "Who played Matthew McConaughey's mother in the romantic comedy Failure to Launch?", 'answer': 'Kathy Bates', 'category': 'Matthew McConaughey'}, {'question': "Matthew McConaughey stars with Skeet Ulrich, Ethan Hawke, and Vincent D'Onofrio as brothers in which western film?", 'answer': 'The Newton Boys', 'category': 'Matthew McConaughey'}, {'question': "What is Matthew McConaughey's occupation in the comedy Ghosts of Girlfriends Past?", 'answer': 'a photographer', 'category': 'Matthew McConaughey'}, {'question': 'What was the first film that saw Matthew McConaughey get nominated for an Oscar?', 'answer': 'Dallas Buyers Club', 'category': 'Matthew McConaughey'}, {'question': 'Which actress co-starred with Matthew McConaughey in the adventure film Sahara?', 'answer': 'Penélope Cruz', 'category': 'Matthew McConaughey'}, {'question': 'Who voiced Chicken Little in the 2005 film?', 'answer': 'Zach Braff', 'category': 'Animated'}, {'question': '"The Phony King of England" is a song from which Disney movie?', 'answer': 'Robin Hood', 'category': 'Animated'}, {'question': 'In Cloudy with a Chance of Meatballs, Flint Lockwood creates a food palace/castle for his love interest Sam Sparks. What is the food palace/castle made of?', 'answer': 'Jell-O', 'category': 'Animated'}, {'question': 'Who directed the animated film Happy Feet?', 'answer': 'George Miller', 'category': 'Animated'}, {'question': 'In The Little Mermaid, Ariel asks Scuttle about her human treasures, one of which he says is called a dinglehopper. What actually is this item?', 'answer': 'a fork', 'category': 'Animated'}, {'question': 'Where do Winnie the Pooh, Tigger, Eeyore, and Piglet live?', 'answer': 'the Hundred Acre Wood', 'category': 'Animated'}, {'question': 'Who stars opposite Humphrey Bogart in the 1943 romantic classic Casablanca?', 'answer': 'Ingrid Bergman', 'category': 'Romance'}, {'question': 'In Who Framed Roger Rabbit, what is the name of the all-animation city?', 'answer': 'Toontown', 'category': 'N/A'}, {'question': 'The Green Mile is based on a story by whom?', 'answer': 'Stephen King', 'category': 'N/A'}, {'question': 'Who played James Bond in the film Thunderball?', 'answer': 'Sean Connery', 'category': 'N/A'}, {'question': 'Name the film with the following characters: Stork, Hoover.', 'answer': "National Lampoon's Animal House", 'category': 'N/A'}, {'question': 'What Disney animated film features the song "Just Around the Riverbend"?', 'answer': 'Pocahontas', 'category': 'N/A'}, {'question': "Who directed It's a Wonderful Life?", 'answer': 'Frank Capra', 'category': 'Directors'}, {'question': 'William H. Macy plays "Quiz Kid" Donnie Smith in this 1999 ensemble drama.', 'answer': 'Magnolia', 'category': 'Dramas'}, {'question': 'Which actor played Ebenezer Scrooge in The Muppet Christmas Carol?', 'answer': 'Michael Caine', 'category': 'Holiday'}, {'question': "What was the name of Jasmine's pet tiger in Aladdin?", 'answer': 'Rajah', 'category': 'Disney'}, {'question': "In The Nightmare Before Christmas, what was the name of Jack Skellington's pet?", 'answer': 'Zero', 'category': 'Tim Burton'}, {'question': 'What veteran actor plays the father of Joaquin Phoenix and Mark Wahlberg in We Own the Night?', 'answer': 'Robert Duvall', 'category': 'Crime'}, {'question': "While starring on a hugely popular sitcom, who lent their voice as Annie Hughes in 1999's The Iron GIant?", 'answer': 'Jennifer Aniston', 'category': 'Animated'}, {'question': "What actress plays Liam Neeson's wife in the Taken films?", 'answer': 'Famke Janssen', 'category': 'Action/Adventure'}, {'question': "You'll find Dr. Sam Loomis in which horror franchise?", 'answer': "Halloween (in 1978's Halloween, 1981's Halloween II, The Return of Michael Myers, The Revenge of Michael Myers, The Curse of Michael Myers)", 'category': 'Horror'}, {'question': 'Who voiced Mushu in the 1998 film Mulan?', 'answer': 'Eddie Murphy', 'category': 'Animated'}, {'question': 'Which action flick paired Arnold Schwarzenegger with John Leguizamo?', 'answer': 'Collateral Damage', 'category': 'Action/Adventure'}, {'question': 'Which Midwestern state was the setting for the original A Nightmare on Elm Street?', 'answer': 'Ohio', 'category': 'Horror'}, {'question': 'In which war do the events of the film Fury take place?', 'answer': 'World War II', 'category': 'War'}, {'question': 'Tilda Swinton won a Best Supporting Actress trophy for her role in what 2007 film?', 'answer': 'Michael Clayton', 'category': 'Oscars'}, {'question': 'What was the domestic top-grossing movie in the Bourne franchise? The Bourne Identity, The Bourne Supremacy, The Bourne Ultimatum, or Jason Bourne?', 'answer': 'The Bourne Ultimatum', 'category': 'Box Office'}, {'question': "Who played POW and former Olympian Louis Zamperini in 2014's Unbroken?", 'answer': "Jack O'Connell", 'category': 'War'}, {'question': 'Kate Winslet won a Best Actress statue for what 2008 film?', 'answer': 'The Reader', 'category': 'Oscars'}, {'question': "What DC movie currently has the all-time high in domestic box office? The Dark Knight, The Dark Knight Rises, 1989's Batman, or Suicide Squad?", 'answer': 'The Dark Knight', 'category': 'Box Office'}, {'question': 'What command did Emperor Palpatine employ to turn the clone troopers against the Jedi in Revenge of the Sith?', 'answer': 'Order 66', 'category': 'Star Wars'}, {'question': 'Why did Luke want to go to Tosche Station in A New Hope?', 'answer': 'to pick up some power converters', 'category': 'Star Wars'}, {'question': 'In The Phantom Menace, Anakin has a young human friend on Tatooine. What is his name?', 'answer': 'Kitster Chanchani Banai', 'category': 'Star Wars'}, {'question': 'Where does Princess Leia falsely tell Grand Moff Tarkin the Rebel base is located in A New Hope?', 'answer': 'Dantooine', 'category': 'Star Wars'}, {'question': 'Name the film that saw actress Gwyneth Paltrow win the Best Actress Oscar.', 'answer': 'Shakespeare in Love', 'category': 'Oscars'}, {'question': 'Name the film that upset Avatar to win Best Picture at the 2010 Oscar ceremony.', 'answer': 'The Hurt Locker', 'category': 'Oscars'}, {'question': 'Who won the Best Actress Oscar for her role in the 1984 film Places in the Heart?', 'answer': 'Sally Field', 'category': 'Oscars'}, {'question': 'What is the name of the killer that Hannibal Lecter assists the FBI in identifying in The Silence of the Lambs?', 'answer': 'Buffalo Bill', 'category': 'Oscars'}, {'question': 'Who directed Tom Cruise in the war thriller Valkyrie?', 'answer': 'Bryan Singer', 'category': 'War'}, {'question': 'In which movie is the title character aided by Abe Sapien, a merman with psychic powers, and Liz Sherman, a woman with pyrokinesis?', 'answer': 'Hellboy, Hellboy II: The Golden Army', 'category': 'Comic Book'}, {'question': 'Who starred as Karen Blixen in the Best Picture winner Out of Africa?', 'answer': 'Meryl Streep', 'category': 'Oscars'}, {'question': 'In Midnight Cowboy, Jon Voight stars as Joe Buck alongside whom as Ratso Rizzo?', 'answer': 'Dustin Hoffman', 'category': 'Classics'}, {'question': 'Ben Stiller and Malin Åkerman have an ill-fated marriage in which movie?', 'answer': 'The Heartbreak Kid', 'category': 'Rom-Coms'}, {'question': "Who played Flipper, the leading man in 1991's Jungle Fever?", 'answer': 'Wesley Snipes', 'category': '1990s'}, {'question': 'What 90s character loves snack packs, Donkey Kong, and his third-grade teacher?', 'answer': 'Billy Madison', 'category': 'Comedies'}, {'question': "Who directed 1996's Mission: Impossible?", 'answer': 'Brian De Palma', 'category': 'Directors'}, {'question': 'What 2000 Jim Carrey comedy featured the tagline "From gentle to mental"?', 'answer': 'Me, Myself & Irene', 'category': 'Taglines'}, {'question': "What 2006 sequel features main characters named Dante and Randal, and a fictional fast food restaurant called Mooby's?", 'answer': 'Clerks II', 'category': 'Comedies'}, {'question': 'Who directed The Greatest Show on Earth?', 'answer': 'Cecil B. DeMille', 'category': 'Directors'}, {'question': 'What 2003 comedy\'s tagline was "All the fun of college, none of the education."?', 'answer': 'Old School', 'category': 'Taglines'}, {'question': "What is the name of Mrs. Potts' son, who was turned into a cup, in Disney's Beauty and the Beast?", 'answer': 'Chip', 'category': 'Animated'}, {'question': "Who plays Mr. Holland in Mr. Holland's Opus?", 'answer': 'Richard Dreyfuss', 'category': 'Dramas'}, {'question': 'Who played the Elven king in Mirkwood in the Hobbit trilogy?', 'answer': 'Lee Pace', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is Aladdin's first official wish?", 'answer': 'to become a prince', 'category': 'Animated'}, {'question': 'On what historic battlefield did Denzel Washington give an inspirational speech to his mixed-race high school football team in Remember the Titans?', 'answer': 'Gettysburg', 'category': 'Dramas'}, {'question': 'A young boy accidentally joins a band of dwarves as they jump through time looking for treasure in what movie?', 'answer': 'Time Bandits', 'category': 'Fantasy/Sci-Fi'}, {'question': 'After which 80s TV star did Star-Lord name his ship?', 'answer': 'Alyssa Milano', 'category': 'Comic Book'}, {'question': 'What actress was cast as Mary Jane Watson in The Amazing Spider-Man 2 but was ultimately cut from the film?', 'answer': 'Shailene Woodley', 'category': 'Comic Book'}, {'question': "What is the name of Batman's motorcycle in The Dark Knight?", 'answer': 'the Batpod', 'category': 'Comic Book'}, {'question': "In 2007's Fantastic Four: Rise of the Silver Surfer, the Silver Surfer is a harbinger of what evil entity?", 'answer': 'Galactus', 'category': 'Comic Book'}, {'question': "Who played Brad Pitt's best friend Eddie in 2005's Mr. & Mrs. Smith?", 'answer': 'Vince Vaughn', 'category': 'Brad Pitt'}, {'question': 'In what film does Brad Pitt play an on-the-run IRA terrorist that is hiding out in the home of a New York cop?', 'answer': "The Devil's Own", 'category': 'Brad Pitt'}, {'question': "Who played the romantic interest of Brad Pitt's character in Legends of the Fall?", 'answer': 'Julia Ormond', 'category': 'Brad Pitt'}, {'question': "What is Brad Pitt's character's name in the Ocean's series?", 'answer': 'Rusty Ryan', 'category': 'Brad Pitt'}, {'question': 'In the movie I, Robot, what is the name of the sentient robot voiced by Alan Tudyk?', 'answer': 'Sonny', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Red Dawn, a group of Colorado teens fights back against invading Soviet forces. What do they call themselves?', 'answer': 'the Wolverines', 'category': 'N/A'}, {'question': 'Which U.S. state provides the setting for the film 50 First Dates?', 'answer': 'Hawaii', 'category': 'N/A'}, {'question': 'Who composed the score for Tron: Legacy?', 'answer': 'Daft Punk', 'category': 'N/A'}, {'question': "What position did Geena Davis' character play in A League of Their Own?", 'answer': 'a catcher', 'category': 'N/A'}, {'question': 'Who directed the contemporary film noir classic Chinatown?', 'answer': 'Roman Polanski', 'category': 'N/A'}, {'question': 'Name the actor who played a human in Planet of the Apes in 1968 and an ape in Planet of the Apes in 2001.', 'answer': 'Charlton Heston', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who did Louise Fletcher play in One Flew Over the Cuckoo's Nest?", 'answer': 'Nurse Ratched', 'category': 'Classics'}, {'question': 'What was the name of the hockey coach that coached the Ducks in The Mighty Ducks?', 'answer': 'Gordon Bombay', 'category': 'Sports'}, {'question': 'Who played the role of Carol Grady in The Brady Bunch Movie?', 'answer': 'Shelley Long', 'category': 'Family'}, {'question': 'What fairy tale character does Anna Kendrick play in Into the Woods?', 'answer': 'Cinderella', 'category': 'Musicals'}, {'question': 'Who play the two theater instructors at the summer camp in Wet Hot American Summer?', 'answer': 'Amy Poehler, Bradley Cooper', 'category': 'Coming of Age'}, {'question': 'What color of dinosaur is Rex in Toy Story?', 'answer': 'green', 'category': 'Animated'}, {'question': 'Who directed the 2009 drama Precious?', 'answer': 'Lee Daniels', 'category': 'Dramas'}, {'question': "Who plays Grocer, the chief rival to John Cusack's character, in Grosse Pointe Blank?", 'answer': 'Dan Aykroyd', 'category': 'Comedies'}, {'question': 'High Voltage is the sequel subtitle to what action flick?', 'answer': 'Crank', 'category': 'Action/Adventure'}, {'question': 'What is the name of the genetically engineered humanoids hunted by Rick Deckard in Blade Runner?', 'answer': 'replicants', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In It Could Happen to You, what actor plays the cop who wins the lottery opposite Bridget Fonda?', 'answer': 'Nicolas Cage', 'category': 'Rom-Coms'}, {'question': 'Who played Cindy Heller in the heart-wrenching drama Blue Valentine?', 'answer': 'Michelle Williams', 'category': 'Famous Actors & Actresses'}, {'question': 'J. A. Bayona directed which award-contending film that came out in limited release in 2016?', 'answer': 'A Monster Calls', 'category': 'New Releases'}, {'question': 'Who directed The Life Aquatic with Steve Zissou?', 'answer': 'Wes Anderson', 'category': 'Directors'}, {'question': 'Who directed the 2006 drama United 93?', 'answer': 'Paul Greengrass', 'category': 'Directors'}, {'question': "What was the legendary director Cecil B. DeMille's first and only widescreen feature?", 'answer': 'The Ten Commandments', 'category': 'Directors'}, {'question': "What Superman franchise director also helmed the Beatles' first motion picture A Hard Day's Night?", 'answer': 'Richard Lester', 'category': 'Directors'}, {'question': 'Who directed Mulholland Drive?', 'answer': 'David Lynch', 'category': 'Directors'}, {'question': 'Which movie directed by John Ford won the 1942 Oscar for Best Picture?', 'answer': 'How Green Was My Valley', 'category': 'Directors'}, {'question': 'In which year was the monster holiday hit Home Alone released?', 'answer': '1990', 'category': 'Release Dates'}, {'question': 'The Phil Lord Chris Miller hit The Lego Movie was released in this year.', 'answer': '2014', 'category': 'Release Dates'}, {'question': 'What year saw the release of the Kevin Spacey crime drama L.A. Confidential?', 'answer': '1997', 'category': 'Release Dates'}, {'question': "Stanley Kubrick's war opus Full Metal Jacket came out in which year?", 'answer': '1987', 'category': 'Release Dates'}, {'question': "What decade saw the release of Disney's second animated feature Pinocchio?", 'answer': 'the 1940s', 'category': 'Release Dates'}, {'question': "In what year did the landmark coming-of-age movie St. Elmo's Fire hit theaters?", 'answer': '1985', 'category': 'Release Dates'}, {'question': 'Name the actress who plays Ginger, the wife of Robert De Niro, in Casino.', 'answer': 'Sharon Stone', 'category': 'Crime'}, {'question': "What was the name of Leonardo DiCaprio's character in Titanic?", 'answer': 'Jack Dawson', 'category': 'Leonardo DiCaprio'}, {'question': 'Name the actor who plays Atticus Finch in the classic To Kill a Mockingbird.', 'answer': 'Gregory Peck', 'category': 'Classics'}, {'question': 'What was the title of Hellraiser II?', 'answer': 'Hellbound', 'category': 'Horror'}, {'question': "Who won an Oscar for portraying piano prodigy David Helfgott in 1996's Shine?", 'answer': 'Geoffrey Rush', 'category': 'Biopics'}, {'question': 'Name the first Bond film that starred Roger Moore as the superspy.', 'answer': 'Live and Let Die', 'category': 'James Bond'}, {'question': 'What was the name of the meerkat in The Lion King?', 'answer': 'Timon', 'category': 'Animated'}, {'question': 'What actor plays the lone friend to the Mariachi in the beginning of Desperado?', 'answer': 'Steve Buscemi', 'category': 'Action/Adventure'}, {'question': "What actor plays the fiancé to Cameron Diaz's character in the dark comedy Very Bad Things?", 'answer': 'Jon Favreau', 'category': 'Comedies'}, {'question': 'Johnny Depp plays Scottish playwright J. M. Barrie in what film?', 'answer': 'Finding Neverland', 'category': 'Dramas'}, {'question': "Freddy's Dead: The Final Nightmare is which film numerically in the franchise?", 'answer': '6', 'category': 'Horror'}, {'question': 'What was the first film that marked Wes Anderson directing Bill Murray?', 'answer': 'Rushmore', 'category': 'Directors'}, {'question': 'Name the film that saw Julianne Moore win her first Best Actress Oscar.', 'answer': 'Still Alice', 'category': 'Oscars'}, {'question': 'In which film does Sylvester Stallone play a character named Barney Ross?', 'answer': 'The Expendables, The Expendables 2, The Expendables 3', 'category': 'Characters'}, {'question': 'Who recorded the theme from the movie Shaft?', 'answer': 'Isaac Hayes', 'category': 'Scores & Soundtracks'}, {'question': 'What composer did the scores for the following movies: Thor, Rise of the Planet of the Apes, and Brave?', 'answer': 'Patrick Doyle', 'category': 'Scores & Soundtracks'}, {'question': "Who composed the music for 1987's Predator?", 'answer': 'Alan Silvestri', 'category': 'Scores & Soundtracks'}, {'question': 'The song "Up Where We Belong" performed by Joe Cocker won the Oscar for Best Original Song for which 1982 film?', 'answer': 'An Officer and a Gentleman', 'category': 'Scores & Soundtracks'}, {'question': 'What 2002 drama stars Nick Cannon and Zoe Saldana and centers around a university marching band?', 'answer': 'Drumline', 'category': 'Dramas'}, {'question': 'Who played the D.C. homicide detective assigned to the case in Murder at 1600?', 'answer': 'Wesley Snipes', 'category': 'Dramas'}, {'question': 'Sean Penn plays convicted murderer Matthew Poncelet in what film?', 'answer': 'Dead Man Walking', 'category': 'Dramas'}, {'question': 'What 2002 film features Jack Nicholson and Kathy Bates in a hot tub?', 'answer': 'About Schmidt', 'category': 'Dramas'}, {'question': 'Eddie Murphy and Jeff Garlin play buddies in which comedy?', 'answer': 'Daddy Day Care', 'category': 'Comedies'}, {'question': 'Harold Faltermeyer did the score for four iconic 80s comedies. Name one.', 'answer': 'Beverly Hills Cop, Fletch, Beverly Hills Cop II, Fletch Lives', 'category': 'Scores & Soundtracks'}, {'question': "Who played Max, the former partner of Robert De Niro's character, in 1984's Once Upon a Time in America?", 'answer': 'James Woods', 'category': 'Crime'}, {'question': 'What is the name of the 2005 Miyazaki feature film that stars a wizard?', 'answer': "Howl's Moving Castle", 'category': 'Animated'}, {'question': 'Who stars as the architect-turned-vigilante Paul Kersey in Death Wish?', 'answer': 'Charles Bronson', 'category': 'Action/Adventure'}, {'question': 'Which 2006 Mike Judge directed comedy stars Luke Wilson?', 'answer': 'Idiocracy', 'category': 'Comedies'}, {'question': 'Who plays neo-Nazi leader Derek Vinyard in the film American History X?', 'answer': 'Edward Norton', 'category': 'Dramas'}, {'question': 'Who played the well-meaning inventor father in Honey, I Shrunk the Kids?', 'answer': 'Rick Moranis', 'category': 'Family'}, {'question': 'Georgie Henley plays Lucy in what fantasy franchise?', 'answer': 'The Chronicles of Narnia', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played the role of Conrad van Orton in the 1997 thriller The Game?', 'answer': 'Sean Penn', 'category': 'Horror/Thriller'}, {'question': 'In which film will you find a coach named Norman Dale?', 'answer': 'Hoosiers', 'category': 'Characters'}, {'question': 'In what Dirty Harry film does Clint Eastwood utter the line "Go ahead, make my day."?', 'answer': 'Sudden Impact', 'category': 'Quotes'}, {'question': 'In what comedy can you hear the quotes "What was it we had for dinner tonight?", "Well, we had a choice of steak or fish.", and then "Yes, yes, I remember, I had lasagna."?', 'answer': 'Airplane!', 'category': 'Quotes'}, {'question': 'In what 1997 movie can you find the quote "Do you buy all these books retail or do you send away for, like, a shrink kit that comes with all these volumes included?"?', 'answer': 'Good Will Hunting', 'category': 'Quotes'}, {'question': 'In Mean Girls, Regina George tells Gretchen to "stop trying to make ___ happen! It\'s not going to happen!". What is Gretchen trying to make happen?', 'answer': 'fetch', 'category': 'Quotes'}, {'question': 'In what graphic novel inspired film can you hear the quote "An old man dies. A young woman lives. A fair trade."?', 'answer': 'Sin City', 'category': 'Quotes'}, {'question': 'What is the name of the forest that is reportedly haunted by the Blair Witch?', 'answer': 'the Black Hills Forest', 'category': 'Horror'}, {'question': 'What year is shown in the photo at the end of The Shining?', 'answer': '1921', 'category': 'Horror'}, {'question': 'This horror franchise includes a child-collecting demon named Bughuul.', 'answer': 'Sinister', 'category': 'Horror'}, {'question': 'Who directed the 2016 critical hit The Witch?', 'answer': 'Robert Eggers', 'category': 'Horror'}, {'question': "What V/H/S director also directed You're Next and The Guest?", 'answer': 'Adam Wingard', 'category': 'Horror'}, {'question': 'What name is given to the virus in 28 Days Later?', 'answer': 'the Rage Virus', 'category': 'Horror'}, {'question': 'Nelson Mandela is played by whom in the film Invictus?', 'answer': 'Morgan Freeman', 'category': 'Biopics'}, {'question': 'Who conducted the score for the 1995 film Braveheart?', 'answer': 'James Horner', 'category': 'Scores & Soundtracks'}, {'question': "What Oscar-winning actor teams up with Emilio Estevez for a surveillance job in 1987's Stakeout?", 'answer': 'Richard Dreyfuss', 'category': '1980s'}, {'question': 'Which Tim Burton directed film has the tagline "Loving You Is Like Loving The Dead"?', 'answer': 'Corpse Bride', 'category': 'Animated'}, {'question': 'Which martial arts star plays a villain in Lethal Weapon 4?', 'answer': 'Jet Li', 'category': 'Action/Adventure'}, {'question': 'Before he moved to Los Angeles, from what state was Chris Brander, the character played by Ryan Reynolds in Just Friends?', 'answer': 'New Jersey', 'category': 'Comedies'}, {'question': 'The character of Ricky Fitts can be found in what Sam Mendes film?', 'answer': 'American Beauty', 'category': 'Dramas'}, {'question': 'Who played the owner of the Beast in the film The Sandlot?', 'answer': 'James Earl Jones', 'category': 'Family'}, {'question': 'The Prisoner of Azkaban is which film numerically in the Harry Potter universe?', 'answer': '3', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In which Christopher Nolan film does Carrie-Anne Moss play Natalie?', 'answer': 'Memento', 'category': 'Horror/Thriller'}, {'question': "Who played Howell, the drill sergeant of Andrew Garfield's character in Hacksaw Ridge?", 'answer': 'Vince Vaughn', 'category': 'New Releases'}, {'question': 'In A.I. Artificial Intelligence, what is the name of the prototype mecha played by Haley Joel Osment?', 'answer': 'David', 'category': 'Steven Spielberg'}, {'question': 'What does Peter have to do in order to fly in Hook?', 'answer': 'think one happy thought', 'category': 'Steven Spielberg'}, {'question': 'E.T. gets drunk on what brand of beer?', 'answer': 'Coors', 'category': 'Steven Spielberg'}, {'question': 'In Bridge of Spies, what did Donovan tell his family was the purpose of his trip when in actuality he was in the Soviet Union?', 'answer': 'fishing', 'category': 'Steven Spielberg'}, {'question': 'In Pulp Fiction, what is the rumor behind why Marsellus Wallace had Tony Rocky Horror thrown from a four-story balcony?', 'answer': 'he gave Mia Wallace a foot rub', 'category': '1990s'}, {'question': 'In the 1999 Thomas Crown Affair remake, what does Crown steal?', 'answer': 'a painting', 'category': '1990s'}, {'question': 'Which Academy Award nominated film from the 90s featured the following quote: "Neri; go to Rome. Light a candle for the archbishop."?', 'answer': 'The Godfather Part III', 'category': '1990s'}, {'question': 'What Spike Lee movie has a lead character by the name of Jesus Shuttlesworth?', 'answer': 'He Got Game', 'category': '1990s'}, {'question': "What is the name of the character played by James Stewart in It's a Wonderful Life?", 'answer': 'George Bailey', 'category': 'Classics'}, {'question': 'An overweight, abused illiterate enrolls in an alternative school in what 2009 Oscar-nominated film?', 'answer': "Precious: Based on the Novel 'Push' by Sapphire", 'category': 'Oscars'}, {'question': 'In the movie 300, where is the invading army from?', 'answer': 'Persia', 'category': 'Action/Adventure'}, {'question': "What kind of animal did Mickey Rourke's character in Iron Man 2 have as a pet?", 'answer': 'a bird', 'category': 'Comic Book'}, {'question': 'Name one of the three films in which director Joe Wright cast Keira Knightley as his star.', 'answer': 'Pride & Prejudice, Atonement, Anna Karenina', 'category': 'Dramas'}, {'question': 'How did Blade gain the traits of both a human and a vampire?', 'answer': 'his mother was bitten by a vampire when he was in the womb', 'category': 'Marvel'}, {'question': 'In Wreck-It Ralph, Ralph befriends a little girl. What is her name?', 'answer': 'Vanellope von Schweetz', 'category': 'Animated'}, {'question': 'What actor played callsign Viper in Top Gun?', 'answer': 'Tom Skerritt', 'category': 'Action/Adventure'}, {'question': 'In Liar Liar, Jim Carrey is testing his "cannot tell a lie" theory by using a pen of what color?', 'answer': 'blue', 'category': 'Comedies'}, {'question': 'Who starred as Jenna in the 2007 romantic drama Waitress?', 'answer': 'Keri Russell', 'category': 'Dramas'}, {'question': "Who played nefarious oil salesman Tex Richman in 2011's The Muppets?", 'answer': 'Chris Cooper', 'category': 'Family'}, {'question': 'Who plays black market dealer Hannibal Chau in Pacific Rim?', 'answer': 'Ron Perlman', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2005 horror film is based on the true story of a priest who is charged with negligent homicide after performing a failed exorcism?', 'answer': 'The Exorcism of Emily Rose', 'category': 'Horror/Thriller'}, {'question': "What actress stars as outsider teen Casey in M. Night Shyamalan's Split?", 'answer': 'Anya Taylor-Joy', 'category': 'New Releases'}, {'question': 'What dessert does Hamilton "Ham" Porter teach Scotty Smalls to make in The Sandlot?', 'answer': "s'mores", 'category': 'Mixed Bag'}, {'question': 'What was the setting for the film The Last King of Scotland?', 'answer': 'Uganda', 'category': 'Mixed Bag'}, {'question': "In the dramatic comedy Juno, what did Juno leave in Paulie's mailbox as an apology after a fight?", 'answer': 'orange Tic Tacs', 'category': 'Mixed Bag'}, {'question': 'In Witness, where does the Amish boy witness the murder?', 'answer': 'in the bathroom of a train station', 'category': 'Mixed Bag'}, {'question': 'What actor voiced King Baldwin in the movie Kingdom of Heaven?', 'answer': 'Edward Norton', 'category': 'Mixed Bag'}, {'question': "In the classic King Kong adventure film in 1933, what was it that killed the ape beast, according to the film's last line?", 'answer': 'beauty', 'category': 'Mixed Bag'}, {'question': 'What film featured the first performance by Natalie that was nominated for an Oscar?', 'answer': 'Closer', 'category': 'Natalie Portman'}, {'question': "What is the name of Natalie's character in the Thor films?", 'answer': 'Jane Foster', 'category': 'Natalie Portman'}, {'question': "Who played Sam, the presumed dead husband of Portman's character, in the war drama Brothers?", 'answer': 'Tobey Maguire', 'category': 'Natalie Portman'}, {'question': "Who played the overbearing mother to Portman's character in Black Swan?", 'answer': 'Barbara Hershey', 'category': 'Natalie Portman'}, {'question': 'On which planet do Padmé and Anakin share their first kiss?', 'answer': 'Naboo', 'category': 'Natalie Portman'}, {'question': "What actress played Mary to Portman's Anne in The Other Boleyn Girl?", 'answer': 'Scarlett Johansson', 'category': 'Natalie Portman'}, {'question': 'Where do the lions in The Lion King call home?', 'answer': 'Pride Rock', 'category': 'Disney'}, {'question': 'The goalie in The Big Green is played by Patrick Renna, who played a catcher in which other sports movie?', 'answer': 'The Sandlot', 'category': 'Sports'}, {'question': 'You will find DiCaprio playing a character by the name of Calvin Candie in what film?', 'answer': 'Django Unchained', 'category': 'Leonardo DiCaprio'}, {'question': 'What is the name of the speedster son in The Incredibles?', 'answer': 'Dash Parr', 'category': 'Pixar'}, {'question': 'What classic features a young boy named Travis saying "he was my dog. I\'ll do it."?', 'answer': 'Old Yeller', 'category': 'Classics'}, {'question': 'In 2016, Spotlight won Best Picture for 2015. Name one of the seven other films that were nominated for Best Picture.', 'answer': 'Mad Max: Fury Road, The Martian, Bridge of Spies, Room, Brooklyn, The Big Short, The Revenant', 'category': 'Oscars'}, {'question': 'Which Pixar film features a main character with the last name Wazowski?', 'answer': 'Monsters, Inc.; Monsters University', 'category': 'Animated'}, {'question': 'To date, how many movies in the Bourne series have been directed by Paul Greengrass?', 'answer': '3 (The Bourne Supremacy, The Bourne Ultimatum, Jason Bourne)', 'category': 'Action/Adventure'}, {'question': 'What Southern state is the setting for My Cousin Vinny?', 'answer': 'Alabama', 'category': 'Comedies'}, {'question': 'What is the last name of the directing brothers who helmed Menace II Society?', 'answer': 'Hughes', 'category': 'Dramas'}, {'question': 'Alice Kingsleigh is a character in what family film franchise?', 'answer': 'Alice in Wonderland', 'category': 'Family'}, {'question': 'Which Star Wars film marks the first time Han Solo refers to C-3PO as goldenrod?', 'answer': 'The Empire Strikes Back', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which Stephen King film title is also the nickname given to a 1958 Plymouth?', 'answer': 'Christine', 'category': 'Horror/Thriller'}, {'question': 'Michael Fassbender romances whom in The Light Between Oceans?', 'answer': 'Alicia Vikander', 'category': 'New Releases'}, {'question': 'What Dirty Harry movie features the serial killer Scorpio?', 'answer': 'Dirty Harry', 'category': '1970s'}, {'question': "What was the name of the sequel to Michael Crichton's Westworld?", 'answer': 'Futureworld', 'category': '1970s'}, {'question': "In Martin Scorsese's film Taxi Driver, De Niro's character takes his love interest to what kind of a movie?", 'answer': 'a pornographic film', 'category': '1970s'}, {'question': 'How many Golden Tickets did candymaker Willy Wonka hide in his famous Wonka Bars?', 'answer': '5 Golden Tickets', 'category': '1970s'}, {'question': "Who plays the wife of John Travolta's FBI agent Sean Archer in Face/Off?", 'answer': 'Joan Allen', 'category': 'Action/Adventure'}, {'question': 'Actress Michelle Yeoh appeared in which Bond movie?', 'answer': 'Tomorrow Never Dies', 'category': 'Action/Adventure'}, {'question': 'In Broken Arrow, what does test pilot Deakins steal from the government?', 'answer': 'a nuclear warhead', 'category': 'Action/Adventure'}, {'question': 'In the 1990 Teenage Mutant Ninja Turtles film, how did the Shredder meet his fate?', 'answer': 'he is crushed by a trash compactor', 'category': 'Action/Adventure'}, {'question': 'Who played the action heroine simply known as The Bride?', 'answer': 'Uma Thurman', 'category': 'Characters'}, {'question': 'What type of car does Nic Cage steal in The Rock?', 'answer': 'a Ferrari', 'category': 'Action/Adventure'}, {'question': "Who played Robin Williams' partner in The Birdcage?", 'answer': 'Nathan Lane', 'category': 'Comedies'}, {'question': 'Name the rival street gangs in the movie West Side Story.', 'answer': 'the Jets, the Sharks', 'category': 'Classics'}, {'question': 'William Hurt won the Best Actor Oscar for what 1985 movie?', 'answer': 'Kiss of the Spider Woman', 'category': 'Oscars'}, {'question': 'In which James Bond movie do we meet the character Honey Ryder?', 'answer': 'Dr. No', 'category': 'James Bond'}, {'question': 'A boy named Hogarth discovers an unlikely alien friend in what animated film?', 'answer': 'The Iron Giant', 'category': 'Animated'}, {'question': "What is the first name of John McClane's estranged wife in Die Hard?", 'answer': 'Holly', 'category': 'Action/Adventure'}, {'question': "Who played the title character in 1977's Annie Hall?", 'answer': 'Diane Keaton', 'category': 'Comedies'}, {'question': "Who plays William, the father of Susan Parrish, in 1998's Meet Joe Black?", 'answer': 'Anthony Hopkins', 'category': 'Dramas'}, {'question': 'The first film in the Benji franchise was released in which decade?', 'answer': 'the 1970s', 'category': 'Family'}, {'question': 'Which famous horror movie character is played by Warwick Davis?', 'answer': 'the Leprechaun', 'category': 'Horror/Thriller'}, {'question': 'How many films are in the Twilight movie series?', 'answer': '5 (Twilight, New Moon, Eclipse, Breaking Dawn – Part 1, Breaking Dawn – Part 2)', 'category': 'Fantasy/Sci-Fi'}, {'question': "What actor can be seen as Daniel Cleaver in Bridget Jones's Diary?", 'answer': 'Hugh Grant', 'category': 'Rom-Coms'}, {'question': "What is the name of Joel Edgerton's character in The Gift?", 'answer': 'Gordon "Gordo" Mosley', 'category': 'Horror'}, {'question': "In which U.S. city does 2009's Paranormal Activity take place?", 'answer': 'San Diego', 'category': 'Horror'}, {'question': 'What was the name of the child character who becomes possessed in The Exorcist?', 'answer': 'Regan MacNeil', 'category': 'Horror'}, {'question': 'Who played the principal in Scream?', 'answer': 'Henry Winkler', 'category': 'Horror'}, {'question': "What was Norman Bates' hobby in Psycho?", 'answer': 'taxidermy', 'category': 'Horror'}, {'question': 'In The Sixth Sense, what happens when the ghosts get mad or come around?', 'answer': 'it gets cold', 'category': 'Horror'}, {'question': "Who played Juliet opposite Leonardo DiCaprio in 1996's Romeo + Juliet?", 'answer': 'Claire Danes', 'category': 'Leonardo DiCaprio'}, {'question': 'Name the movie from the quote: "As long as you can still grab a breath, you fight. You breathe. Keep breathing.".', 'answer': 'The Revenant', 'category': 'Leonardo DiCaprio'}, {'question': "Which of Leo's films also stars Cameron Diaz and John C. Reilly?", 'answer': 'Gangs of New York', 'category': 'Leonardo DiCaprio'}, {'question': 'What is the name of the insane asylum/hospital in Shutter Island?', 'answer': 'Ashecliffe Hospital', 'category': 'Leonardo DiCaprio'}, {'question': "What state does Leo say he's from in Titanic?", 'answer': 'Wisconsin', 'category': 'Leonardo DiCaprio'}, {'question': 'The adventure drama Blood Diamond told about African civil war and a conflict zone within which specific country?', 'answer': 'Sierra Leone', 'category': 'Leonardo DiCaprio'}, {'question': "Cecil B. DeMille's The Ten Commandments is based on which book of the Holy Bible?", 'answer': 'Exodus', 'category': 'Classics'}, {'question': "Flik and his fellow ants are bullied by what in A Bug's Life?", 'answer': 'grasshoppers', 'category': 'Pixar'}, {'question': 'In which film does Tom Hanks play a Texas congressman?', 'answer': "Charlie Wilson's War", 'category': 'Biopics'}, {'question': 'What classic horror movie from the 1940s was remade in 2010 starring Anthony Hopkins and Emily Blunt?', 'answer': 'The Wolf Man', 'category': 'Horror'}, {'question': 'Who played the character of Oda Mae Brown?', 'answer': 'Whoopi Goldberg (in Ghost)', 'category': 'Characters'}, {'question': 'After getting turned into a llama, a ruler named Kuzco must rely on a peasant to get back to his throne in what film?', 'answer': "The Emperor's New Groove", 'category': 'Animated'}, {'question': 'What is the name of the first sequel to The Fast and the Furious?', 'answer': '2 Fast 2 Furious', 'category': 'Action/Adventure'}, {'question': 'What comedic talent both starred in and directed Best in Show?', 'answer': 'Christopher Guest', 'category': 'Comedies'}, {'question': 'The Joy Luck Club was formed by four women in what West Coast American city?', 'answer': 'San Francisco', 'category': 'Dramas'}, {'question': 'Jason James Richter starred as Jesse in what 1993 family hit?', 'answer': 'Free Willy', 'category': 'Family'}, {'question': "What is the first name of the villain played by Kurtwood Smith in 1987's RoboCop?", 'answer': 'Clarence', 'category': 'Fantasy/Sci-Fi'}, {'question': "What actress and music star is featured opposite Sean Penn in 1997's thriller U Turn?", 'answer': 'Jennifer Lopez', 'category': 'Horror/Thriller'}, {'question': 'What is the most recent theatrical release by director Morten Tyldum?', 'answer': 'Passengers', 'category': 'New Releases'}, {'question': 'In Grease, where is Sandy originally from?', 'answer': 'Australia', 'category': '1970s'}, {'question': 'In what movie do sweethearts Brad and Janet, stuck with a flat tire during a storm, discover the eerie mansion of Dr. Frank-N-Furter?', 'answer': 'The Rocky Horror Picture Show', 'category': '1970s'}, {'question': "What was the dog's name in Smokey and the Bandit?", 'answer': 'Fred', 'category': '1970s'}, {'question': "What newspaper did Woodward and Bernstein win for in All the President's Men?", 'answer': 'The Washington Post', 'category': '1970s'}, {'question': "The 1970s saw the release of five James Bond films, the first of which was Sean Connery's final performance of Bond for Eon Productions in 1971. What film was this?", 'answer': 'Diamonds Are Forever', 'category': '1970s'}, {'question': 'What 1978 film features Meryl Streep, Christopher Walken, and John Savage?', 'answer': 'The Deer Hunter', 'category': '1970s'}, {'question': "What is the title of the film in which Ashton Kutcher meets his fiancée's father, played by Bernie Mac?", 'answer': 'Guess Who', 'category': 'Comedies'}, {'question': 'What 1989 film starred Michael Keaton, Christopher Lloyd, Peter Boyle, and Stephen Furst as four sanitarium patients stranded in New York City?', 'answer': 'The Dream Team', 'category': 'Comedies'}, {'question': "In 2005's Fun with Dick and Jane, Jim Carrey played Dick. Who played Jane?", 'answer': 'Téa Leoni', 'category': 'Comedies'}, {'question': 'Robin Williams and Cheryl Hines play a married couple in which comedy?', 'answer': 'RV', 'category': 'Comedies'}, {'question': 'The fictional band of Infant Sorrow appears in what movie?', 'answer': 'Forgetting Sarah Marshall, Get Him to the Greek', 'category': 'Comedies'}, {'question': "What was the name of a woman who became the object of Lloyd and Harry's desires and affections in Dumb and Dumber?", 'answer': 'Mary Swanson', 'category': 'Comedies'}, {'question': 'In Lethal Weapon 2, Murtaugh kills two men in his home with what construction tool?', 'answer': 'a nail gun', 'category': 'Action/Adventure'}, {'question': 'Name a film that earned an Oscar nomination for Jennifer Lawrence.', 'answer': "Winter's Bone, Silver Linings Playbook, American Hustle, Joy", 'category': 'N/A'}, {'question': 'Kate Hudson plays whom in Almost Famous?', 'answer': 'Penny Lane', 'category': 'N/A'}, {'question': 'Name the fourth film in the Die Hard franchise.', 'answer': 'Live Free or Die Hard', 'category': 'N/A'}, {'question': "The character Douglas Quaid is played by whom in 2012's Total Recall?", 'answer': 'Colin Farrell', 'category': 'N/A'}, {'question': 'Name a film besides The Bodyguard starring Whitney Houston.', 'answer': "Waiting to Exhale, The Preacher's Wife, Sparkle", 'category': 'N/A'}, {'question': 'What is the name of the robot that WALL-E falls for and chases across the galaxy?', 'answer': 'EVE', 'category': 'Pixar'}, {'question': "James Bond's CIA connection and friend Felix Leiter was played by whom in Casino Royale and Quantum of Solace?", 'answer': 'Jeffrey Wright', 'category': 'James Bond'}, {'question': 'What George Lucas movie was the source of inspiration for the 2005 movie The Island?', 'answer': 'THX 1138', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays Michael Corleone's daughter in The Godfather Part III?", 'answer': 'Sofia Coppola', 'category': 'Crime'}, {'question': "In Good Luck Chuck, what is the reason for Chuck's nickname?", 'answer': 'after sleeping with him, women find the loves of their lives', 'category': 'Rom-Coms'}, {'question': 'What character has been portrayed by Kirk Douglas and Dennis Quaid?', 'answer': 'Doc Holliday (Douglas in Gunfight at the O.K. Corral, Quaid in Wyatt Earp)', 'category': 'Characters'}, {'question': 'Who directed Tom Hanks in the movie Big?', 'answer': 'Penny Marshall', 'category': 'N/A'}, {'question': 'Who played Rachel Lapp, mother to the young Amish boy, in Witness?', 'answer': 'Kelly McGillis', 'category': 'N/A'}, {'question': "Luc Besson's The Messenger is about what historical figure?", 'answer': 'Joan of Arc', 'category': 'N/A'}, {'question': 'Who directed the swashbuckling misfire Cutthroat Island?', 'answer': 'Renny Harlin', 'category': 'N/A'}, {'question': 'In which decade was the first FernGully film released?', 'answer': 'the 1990s', 'category': 'Animated'}, {'question': 'Norman Reedus and Sean Patrick Flanery play fraternal twins in what film?', 'answer': 'The Boondock Saints', 'category': 'Action/Adventure'}, {'question': "What is the first name of Dr. Evil's son in the Austin Powers films?", 'answer': 'Scott', 'category': 'Comedies'}, {'question': 'Consigliere Tom Hagen is played by whom in the Godfather films?', 'answer': 'Robert Duvall', 'category': 'Dramas'}, {'question': 'James Cromwell plays Farmer Hoggett in what movie?', 'answer': 'Babe, Babe: Pig in the City', 'category': 'Family'}, {'question': 'An invading army of aliens are called Mimics in what 2014 sci-fi flick?', 'answer': 'Edge of Tomorrow', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which thriller has an ensemble cast including John Cusack as a limo driver and Amanda Peet as a Las Vegas prostitute?', 'answer': 'Identity', 'category': 'Horror/Thriller'}, {'question': 'Name a star of the 2005 Rob Reiner film Rumor Has It.', 'answer': 'Jennifer Aniston, Kevin Costner, Mark Ruffalo, Mena Suvari, Richard Jenkins, Shirley MacLaine', 'category': 'Rom-Coms'}, {'question': 'In what U.S. city does the film The Craft take place?', 'answer': 'Los Angeles', 'category': '1990s'}, {'question': "What was the main hobby of the Dude and Walter in the Coen Brothers' The Big Lebowski?", 'answer': 'bowling', 'category': '1990s'}, {'question': "What conflict served as the backdrop for 1998's The Mask of Zorro?", 'answer': 'the Mexican War of Independence', 'category': '1990s'}, {'question': "What was Jim Carrey's character's full name in The Truman Show?", 'answer': 'Truman Burbank', 'category': '1990s'}, {'question': 'This 1974 comedy features Kenneth Mars, Marty Feldman, and Madeline Kahn. Name the film.', 'answer': 'Young Frankenstein', 'category': '1970s'}, {'question': "What 1971 film's protagonist is a half-Caucasian half-American Navajo Indian, a Green Beret Vietnam War vet, and a hapkido master?", 'answer': 'Billy Jack', 'category': '1970s'}, {'question': 'What 1970s thriller directed by John Schlesinger starred Roy Scheider, Laurence Olivier, and William Devane?', 'answer': 'Marathon Man', 'category': '1970s'}, {'question': "Who played Sonny's bank robbing partner Sal in 1975's Dog Day Afternoon?", 'answer': 'John Cazale', 'category': '1970s'}, {'question': 'Who composed the score for Back to the Future?', 'answer': 'Alan Silvestri', 'category': 'Scores & Soundtracks'}, {'question': "The 1993 biopic What's Love Got to Do with It is about what acclaimed musician's rise to stardom?", 'answer': 'Tina Turner', 'category': 'Biopics'}, {'question': 'In what 2008 film does Leo play alongside Russell Crowe as a CIA operative by the name of Roger Ferris who is attempting to hunt down a terrorist in the Middle East?', 'answer': 'Body of Lies', 'category': 'Leonardo DiCaprio'}, {'question': 'A character named Lucy Wilde uses a lipstick taser in which film franchise?', 'answer': 'Despicable Me', 'category': 'Animated'}, {'question': 'Jason Statham plays Frank Martin in what film series?', 'answer': 'Transporter', 'category': 'Action/Adventure'}, {'question': 'In what city does the climactic bowling tournament take place in Kingpin?', 'answer': 'Reno', 'category': 'Comedies'}, {'question': 'Who starred as Tom Booker in the 1998 film The Horse Whisperer?', 'answer': 'Robert Redford', 'category': 'Dramas'}, {'question': "Name the Being John Malkovich director who also helmed 2009's Where the Wild Things Are.", 'answer': 'Spike Jonze', 'category': 'Family'}, {'question': 'You will find the Hornburg fortress in what movie franchise?', 'answer': 'The Lord of the Rings', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actress starred opposite Alec Baldwin in the 1996 legal thriller The Juror?', 'answer': 'Demi Moore', 'category': 'Horror/Thriller'}, {'question': 'With the release of Underworld: Blood Wars, how many total films are in the Underworld series?', 'answer': '5 (Underworld, Evolution, Rise of the Lycans, Awakening, Blood Wars)', 'category': 'New Releases'}, {'question': 'What is the name of the "Boy Genius" from the 2001 animated film from Nickelodeon that led to a TV series of the same name?', 'answer': 'Jimmy Neutron', 'category': 'Animated'}, {'question': 'In which Disney animated film do you hear the song "Go the Distance"?', 'answer': 'Hercules', 'category': 'Animated'}, {'question': 'Dawn of the Dinosaurs is an entry in which animated franchise?', 'answer': 'Ice Age', 'category': 'Animated'}, {'question': 'Who provided the voice of Queen Lillian in Shrek 2 and Shrek the Third?', 'answer': 'Julie Andrews', 'category': 'Animated'}, {'question': 'Which creature, according to a 1990s horror film, appeared if you said his name five times before a mirror?', 'answer': 'the Candyman', 'category': 'Mixed Bag'}, {'question': 'Based on the 1974 book, what 1977 movie tells the story of the World War II Allied military operation entitled Operation Market Garden?', 'answer': 'A Bridge Too Far', 'category': 'Mixed Bag'}, {'question': 'Hook, Sleeping with the Enemy, and The Addams Family were released in what year?', 'answer': '1991', 'category': 'Mixed Bag'}, {'question': 'What gesture of support does the entire Notre Dame team do to ensure Rudy gets to dress for a game in Rudy?', 'answer': 'they hand the coach their jerseys', 'category': 'Mixed Bag'}, {'question': "What actor played oncologist Dr. Lawrence Gordon in 2004's Saw?", 'answer': 'Cary Elwes', 'category': 'Horror/Thriller'}, {'question': 'What is the name of the character played by Robert Shaw in Jaws?', 'answer': 'Quint', 'category': 'N/A'}, {'question': 'In what film will you find a news anchor named Veronica Corningstone?', 'answer': 'Anchorman: The Legend of Ron Burgundy, Anchorman 2: The Legend Continues', 'category': 'N/A'}, {'question': 'How long do you have to live after seeing the tape in The Ring?', 'answer': '7 days', 'category': 'N/A'}, {'question': 'Name a film starring Matt Damon released before Good Will Hunting.', 'answer': 'Mystic Pizza, School Ties, Geronimo: An American Legend, Glory Daze, Courage Under Fire, Chasing Amy, The Rainmaker', 'category': 'N/A'}, {'question': 'Who directed Pretty Woman?', 'answer': 'Garry Marshall', 'category': 'N/A'}, {'question': 'In Rookie of the Year, which MLB team does young Henry Rowengartner play for?', 'answer': 'the Chicago Cubs', 'category': 'Sports'}, {'question': 'You hear Marlon Brando yell "Stella!" in what film?', 'answer': 'A Streetcar Named Desire', 'category': 'Classics'}, {'question': 'Tony Perkis, played by Ben Stiller, is the name of the fitness guru that takes over summer camp in what movie?', 'answer': 'Heavyweights', 'category': 'Family'}, {'question': 'Which film sees Jennifer Lopez and Billy Campbell in a failing, abusive relationship?', 'answer': 'Enough', 'category': 'Dramas'}, {'question': "What is the name of the location that houses the Genie's lamp in Aladdin?", 'answer': 'the Cave of Wonders', 'category': 'N/A'}, {'question': "Who directed The 'Burbs?", 'answer': 'Joe Dante', 'category': 'Directors'}, {'question': "In Kubo and the Two Strings, how many strings are originally on Kubo's guitar?", 'answer': '3 strings', 'category': 'Animated'}, {'question': 'In which flick did Angelina Jolie play an assassin named Fox?', 'answer': 'Wanted', 'category': 'Action'}, {'question': 'Who starred as Claude Banks opposite Eddie Murphy in the prison comedy Life?', 'answer': 'Martin Lawrence', 'category': 'Comedies'}, {'question': 'Which film features Michael Keaton and Marisa Tomei struggling to save their business owned by Jason Robards?', 'answer': 'The Paper', 'category': 'Dramas'}, {'question': "Who starred as young Mike in 1992's Radio Flyer?", 'answer': 'Elijah Wood', 'category': 'Family'}, {'question': 'Back to the Future II takes us forward to 2015. What is the next year Marty visits in the film?', 'answer': '1985', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which 1992 Stephen King work features a mother and son as shapeshifting vampires who can transform into werecats?', 'answer': 'Sleepwalkers', 'category': 'Horror/Thriller'}, {'question': "Name the director of movies such as Julie & Julia, You've Got Mail, and Mixed Nuts.", 'answer': 'Nora Ephron', 'category': 'Directors'}, {'question': "Who played the villainous Fernand Mondego in 2002's The Count of Monte Cristo?", 'answer': 'Guy Pearce', 'category': 'Action/Adventure'}, {'question': 'What is the first name of the character played by Nicolas Cage in the movie Con Air?', 'answer': 'Cameron', 'category': 'Action/Adventure'}, {'question': 'In Raiders of the Lost Ark, how does Marion allegedly die before Indy finds her later in a Nazi camp?', 'answer': 'in an exploding truck', 'category': 'Action/Adventure'}, {'question': 'What 2001 adventure movie asks the question "Can a man change the stars?"?', 'answer': "A Knight's Tale", 'category': 'Action/Adventure'}, {'question': 'What was the name of the mechanic and software designer played by Chad Lindberg in The Fast and the Furious?', 'answer': 'Jesse', 'category': 'Action/Adventure'}, {'question': 'In 300, at what age is a boy taken away from his mother to train as a Spartan in a world of violence?', 'answer': '7 years old', 'category': 'Action/Adventure'}, {'question': 'The Pixar classic Finding Nemo was released in what year?', 'answer': '2003', 'category': 'Release Dates'}, {'question': 'RoboCop was released in which year?', 'answer': '1987', 'category': 'Release Dates'}, {'question': "Batman Forever introduced the world to Val Kilmer's Bruce Wayne in what year?", 'answer': '1995', 'category': 'Release Dates'}, {'question': "Taxi Driver, Carrie, and All the President's Men were released in what year?", 'answer': '1976', 'category': 'Release Dates'}, {'question': 'What year saw the release of the hit comedy Bridesmaids?', 'answer': '2011', 'category': 'Release Dates'}, {'question': "Singin' in the Rain hit screens in what year?", 'answer': '1952', 'category': 'Release Dates'}, {'question': 'In what film does Eddie Murphy play a character named Billy Ray Valentine?', 'answer': 'Trading Places', 'category': '1980s'}, {'question': 'What type of household item was Cogsworth in Beauty and the Beast?', 'answer': 'a pendulum clock', 'category': 'Animated'}, {'question': 'Who played young Indy in the beginning of Indiana Jones and the Last Crusade?', 'answer': 'River Phoenix', 'category': 'Action'}, {'question': 'Name the Saturday Night Live film starring Molly Shannon as Mary Katherine Gallagher.', 'answer': 'Superstar', 'category': 'Comedies'}, {'question': 'In what branch of service were the characters of Tom Cruise and Demi Moore in A Few Good Men?', 'answer': 'the Navy', 'category': 'Dramas'}, {'question': 'Name the actor who played Inspector Gadget in the 1999 family film.', 'answer': 'Matthew Broderick', 'category': 'Family'}, {'question': 'The outset of which war provides the backdrop in The Rocketeer?', 'answer': 'World War II', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor played the famed monster in I, Frankenstein?', 'answer': 'Aaron Eckhart', 'category': 'Horror/Thriller'}, {'question': 'What film franchise saw a new chapter in 2016 entitled Origin of Evil?', 'answer': 'Ouija', 'category': 'New Releases'}, {'question': 'Dan Aykroyd, Ned Beatty, and John Belushi starred in this 1979 Spielberg film.', 'answer': '1941', 'category': 'Steven Spielberg'}, {'question': 'Cornetto trilogy veterans Simon Pegg and Nick Frost both appeared in which Spielberg film?', 'answer': 'The Adventures of Tintin', 'category': 'Steven Spielberg'}, {'question': 'In War Horse, before the war, thoroughbred Joey is sold at auction to a Devon farmer. For what task does the farmer need a new horse?', 'answer': 'ploughing', 'category': 'Steven Spielberg'}, {'question': "What is the only moment of color in the otherwise black-and-white Schindler's List?", 'answer': 'a girl wears a read coat', 'category': 'Steven Spielberg'}, {'question': 'Who played the lead character Christy Brown in the film My Left Foot?', 'answer': 'Daniel Day-Lewis', 'category': 'Biopics'}, {'question': 'Who directed the 2005 biopic Capote?', 'answer': 'Bennett Miller', 'category': 'Biopics'}, {'question': 'What Civil War battle was the setting for the climax of 1989 biopic Glory?', 'answer': 'the Second Battle of Fort Wagner', 'category': 'Biopics'}, {'question': 'Who played the role of author Harvey Pekar in American Splendor?', 'answer': 'Paul Giamatti', 'category': 'Biopics'}, {'question': 'What is the nickname of the oldest member of the new fraternity in Old School?', 'answer': 'Blue', 'category': 'Comedies'}, {'question': 'Who played Dr. Newton Geiszler in Pacific Rim?', 'answer': 'Charlie Day', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the westerns A Fistful of Dollars, For a Few Dollars More, and The Good, the Bad and the Ugly?', 'answer': 'Sergio Leone', 'category': 'Westerns'}, {'question': 'In Just My Luck, Chris Pine plays a stranger whose kiss changes the fortune of Ashley, played by whom?', 'answer': 'Lindsay Lohan', 'category': 'Rom-Coms'}, {'question': "What is the name of the prince Aladdin claims to be in Disney's Aladdin?", 'answer': 'Ali Ababwa', 'category': 'Animated'}, {'question': "What is the name of David Carradine's character in Kill Bill?", 'answer': 'Bill', 'category': 'Action/Adventure'}, {'question': 'Which actor played the new brother-in-law of Chris Farley in Tommy Boy?', 'answer': 'Rob Lowe', 'category': 'Comedies'}, {'question': 'Craig Brewer directed Terrence Howard in what 2005 film?', 'answer': 'Hustle & Flow', 'category': 'Dramas'}, {'question': 'In The Ghost and Mr. Chicken, who plays the role of Luther Heggs a.k.a. Mr. Chicken?', 'answer': 'Don Knotts', 'category': 'Family'}, {'question': 'Billy Crudup tells Albert Finney "You\'re like Santa Claus and the Easter Bunny combined - just as charming, and just as fake." in what movie?', 'answer': 'Big Fish', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the name of the second installment in the Robert Langdon trilogy, based on novels by Dan Brown?', 'answer': 'Angels & Demons', 'category': 'Horror/Thriller'}, {'question': 'Who directed the 2016 Marvel Cinematic Universe film Doctor Strange?', 'answer': 'Scott Derrickson', 'category': 'New Releases'}, {'question': "What is the name of the dog in Tim Burton's Corpse Bride?", 'answer': 'Scraps', 'category': 'Tim Burton'}, {'question': "In Big Fish, what is Sandra's favorite flower?", 'answer': 'daffodils', 'category': 'Tim Burton'}, {'question': 'In Dark Shadows, Carolyn is what kind of mythical creature?', 'answer': 'a werewolf', 'category': 'Tim Burton'}, {'question': 'You will find the character of Lydia Deetz in what Tim Burton film?', 'answer': 'Beetlejuice', 'category': 'Tim Burton'}, {'question': 'Who directed the Tim Burton produced film The Nightmare Before Christmas?', 'answer': 'Henry Selick', 'category': 'Tim Burton'}, {'question': 'In what Tim Burton film does the main character defeat a terrible monster known as the Jabberwocky?', 'answer': 'Alice in Wonderland', 'category': 'Tim Burton'}, {'question': "Who played the title character in 1992's Hoffa?", 'answer': 'Jack Nicholson', 'category': 'Biopics'}, {'question': 'What Oliver Stone 2004 epic film starring Colin Farrell depicts the life and times of a famed world leader?', 'answer': 'Alexander', 'category': 'Biopics'}, {'question': 'Which acclaimed actor director was behind the camera for two famed biopics Gandhi and Chaplin?', 'answer': 'Richard Attenborough', 'category': 'Biopics'}, {'question': 'Which actor portrayed famous magician Harry Houdini in the biographical film Houdini?', 'answer': 'Tony Curtis', 'category': 'Biopics'}, {'question': 'Which Pixar character provides advice through the line "just keep swimming, just keep swimming"?', 'answer': 'Dory (in Finding Nemo, Finding Dory)', 'category': 'Animated'}, {'question': 'What was the name of the first film sequel to The Hunger Games?', 'answer': 'The Hunger Games: Catching Fire', 'category': 'Action/Adventure'}, {'question': 'Sam feels overlooked because her older sister Ginny is about to be married in what 80s comedy?', 'answer': 'Sixteen Candles', 'category': 'Comedies'}, {'question': 'What 1981 film mirrors real life by having Henry and Jane Fonda play a father and daughter?', 'answer': 'On Golden Pond', 'category': 'Dramas'}, {'question': 'Reepicheep is a diminutive yet prominent character in what film franchise?', 'answer': 'The Chronicles of Narnia', 'category': 'Family'}, {'question': 'In The X-Files: Fight the Future, who gets stung by a genetic bee?', 'answer': 'Dana Scully', 'category': 'Fantasy/Sci-Fi'}, {'question': "Which legendary actor played John Ferguson in Alfred Hitchcock's Vertigo?", 'answer': 'James Stewart', 'category': 'Horror/Thriller'}, {'question': 'Which law school does Elle Woods attend in Legally Blonde?', 'answer': 'Harvard Law School', 'category': 'Rom-Coms'}, {'question': "What type of animal is Tantor in Disney's Tarzan?", 'answer': 'an elephant', 'category': 'Animated'}, {'question': "What is the name of the prince in Disney's Sleeping Beauty?", 'answer': 'Phillip', 'category': 'Animated'}, {'question': "Who voiced the character of Metro Man in 2010's Megamind?", 'answer': 'Brad Pitt', 'category': 'Animated'}, {'question': "In Spirited Away, Chihiro's parents are transformed into what kind of animals?", 'answer': 'pigs', 'category': 'Animated'}, {'question': 'Who wrote the screenplay for the 1981 film An American Werewolf in London?', 'answer': 'John Landis', 'category': 'Horror'}, {'question': 'Why were the villains terrorizing Luke Wilson and Kate Beckinsale in Vacancy?', 'answer': 'they were making snuff films', 'category': 'Horror'}, {'question': "What is Jeff Goldblum's character's full name in The Fly?", 'answer': 'Seth Brundle', 'category': 'Horror'}, {'question': "In Child's Play, what is the name of the boy that the killer attempts to possess?", 'answer': 'Andy Barclay', 'category': 'Horror'}, {'question': 'Who directed the classic zombie thriller Night of the Living Dead?', 'answer': 'George A. Romero', 'category': 'Horror'}, {'question': 'Daniel Day-Lewis, Martin Scorsese, and U2 all received Oscar nominations for what film?', 'answer': 'Gangs of New York', 'category': 'Oscars'}, {'question': 'Heather Graham plays the love interest to Corey Haim in what comedy?', 'answer': 'License to Drive', 'category': '1980s'}, {'question': 'Who played the lead role as horseman expert Frank Hopkins in the 2004 film Hidalgo?', 'answer': 'Viggo Mortensen', 'category': 'Biopics'}, {'question': 'What is the name of the home planet of the Green Lantern Corps?', 'answer': 'Oa', 'category': 'Comic Book'}, {'question': 'Who is the main character in the animated film An American Tail?', 'answer': 'Fievel Mousekewitz', 'category': 'Animated'}, {'question': "In X2: X-Men United, who responds to Bobby Drake's parents that they teach art at the school?", 'answer': 'Wolverine', 'category': 'Action/Adventure'}, {'question': "What was the first name of John Goodman's character in The Big Lebowski?", 'answer': 'Walter', 'category': 'Comedies'}, {'question': 'Hal Holbrook plays Deep Throat in what classic political drama?', 'answer': "All the President's Men", 'category': 'Dramas'}, {'question': 'What is the name of the boy who falls in the chocolate river in Willy Wonka & the Chocolate Factory?', 'answer': 'Augustus Gloop', 'category': 'Family'}, {'question': "Brendan Gleeson's character General Brigham assigns Tom Cruise to the front lines in which movie?", 'answer': 'Edge of Tomorrow', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What horror franchise includes sequels titled The Final Chapter and The New Blood?', 'answer': 'Friday the 13th', 'category': 'Horror/Thriller'}, {'question': 'Who directed comedy hits such as The Birdcage, Working Girl, and The Graduate?', 'answer': 'Mike Nichols', 'category': 'Directors'}, {'question': 'Name the actor who won Best Actor for Network in 1977.', 'answer': 'Peter Finch', 'category': 'Oscars'}, {'question': 'Mel Brooks won his only Academy Award for Original Screenplay for which film?', 'answer': 'The Producers', 'category': 'Oscars'}, {'question': "One of the cons in 2013's American Hustle involved catching politicians taking illegal bribes. What state were these politicians from?", 'answer': 'New Jersey', 'category': 'Oscars'}, {'question': 'What musical based on a Charles Dickens novel won the Academy Award for Best Picture in 1969?', 'answer': 'Oliver!', 'category': 'Oscars'}, {'question': "What leading lady won her first Best Actress Oscar for her role in 1992's Howards End?", 'answer': 'Emma Thompson', 'category': 'Oscars'}, {'question': 'Who directed the 2003 Best Picture winner Chicago?', 'answer': 'Rob Marshall', 'category': 'Oscars'}, {'question': "What is Bradley Cooper's character's profession in 2008's The Midnight Meat Train?", 'answer': 'a photographer', 'category': 'Horror/Thriller'}, {'question': 'In what film will you find the very special meat pies made by Mrs. Lovett?', 'answer': 'Sweeney Todd: The Demon Barber of Fleet Street', 'category': 'Horror/Thriller'}, {'question': 'Who directed The Dead Zone starring Christopher Walken?', 'answer': 'David Cronenberg', 'category': 'Horror/Thriller'}, {'question': 'Vanished author Sutter Cane wrote a novel whose events are actually happening in what 1995 flick?', 'answer': 'In the Mouth of Madness', 'category': 'Horror/Thriller'}, {'question': 'Besides Misery, what other film based on Stephen King material stars Kathy Bates?', 'answer': 'Dolores Claiborne', 'category': 'Horror/Thriller'}, {'question': 'Eli Roth has directed one sequel. What is it?', 'answer': 'Hostel: Part II', 'category': 'Horror/Thriller'}, {'question': 'What animal distracts the dog in Up?', 'answer': 'squirrels', 'category': 'Pixar'}, {'question': "What was Russell Crowe's character's name in Gladiator?", 'answer': 'Maximus Decimus Meridius', 'category': 'Oscars'}, {'question': "What is the name of Owen Wilson's character in Midnight in Paris?", 'answer': 'Gil Pender', 'category': 'Dramas'}, {'question': 'Which Disney movie features a dog named Pongo and his owner Roger?', 'answer': 'One Hundred and One Dalmatians', 'category': 'Animated'}, {'question': 'What actor starred as Crocodile Dundee?', 'answer': 'Paul Hogan', 'category': 'Action/Adventure'}, {'question': 'Name the film that sees Jack Black work at a store called Championship Vinyl.', 'answer': 'High Fidelity', 'category': 'Comedies'}, {'question': 'Will Smith plays struggling entrepreneur Chris Gardner in what movie?', 'answer': 'The Pursuit of Happyness', 'category': 'Dramas'}, {'question': "Which Beauty and the Beast animated cast member also plays a central role in 1971's Bedknobs and Broomsticks?", 'answer': 'Angela Lansbury', 'category': 'Family'}, {'question': 'The Shard is the missing piece of crystal in what 1980s fantasy film?', 'answer': 'The Dark Crystal', 'category': 'Fantasy/Sci-Fi'}, {'question': "You'll find Hillcrest Avenue and Hillcrest Academy as settings for what horror franchise?", 'answer': 'Halloween', 'category': 'Horror/Thriller'}, {'question': 'What was the title of the most recent Ninja Turtles film, released in June 2016?', 'answer': 'Teenage Mutant Ninja Turtles: Out of the Shadows', 'category': 'New Releases'}, {'question': 'In The Wizard of Oz, besides her dog Toto, what does Dorothy carry with her to Oz?', 'answer': 'a basket', 'category': 'Classics'}, {'question': "Who played criminal Max Cady in 1962's Cape Fear?", 'answer': 'Robert Mitchum', 'category': 'Classics'}, {'question': "Who directed 1957's 12 Angry Men?", 'answer': 'Sidney Lumet', 'category': 'Classics'}, {'question': "What was the name of Sam Spade's partner in the 1941 classic The Maltese Falcon?", 'answer': 'Miles Archer', 'category': 'Classics'}, {'question': 'In what film did Van Damme play twin brothers?', 'answer': 'Double Impact', 'category': 'Mixed Bag'}, {'question': "What was the name of Marvin Berry's band that performed at the Enchantment Under the Sea dance in Back to the Future?", 'answer': 'Marvin Berry and the Starlighters', 'category': 'Mixed Bag'}, {'question': "In the 2003 film Open Range, Robert Duvall portrayed Boss Spearman. What was the character's real name?", 'answer': 'Bluebonnet Spearman', 'category': 'Mixed Bag'}, {'question': 'Trainspotting is a movie about addiction to what drug?', 'answer': 'heroin', 'category': 'Mixed Bag'}, {'question': 'What 2006 Ron Howard movie opens with a murder in the Louvre?', 'answer': 'The Da Vinci Code', 'category': 'Action/Adventure'}, {'question': 'Name the 80s adventure movie from the quote: "Death cannot stop true love. All it can do is delay it for a while.".', 'answer': 'The Princess Bride', 'category': 'Quotes'}, {'question': 'Who ends up with the Aether after the events of Thor: The Dark World?', 'answer': 'the Collector', 'category': 'Marvel'}, {'question': 'Angelina Jolie provides the voice of Tigress in which film franchise?', 'answer': 'Kung Fu Panda', 'category': 'Animated'}, {'question': "What is Indiana Jones' real first name?", 'answer': 'Henry', 'category': 'Action/Adventure'}, {'question': 'Which number in the series is the Austin Powers film The Spy Who Shagged Me?', 'answer': '2', 'category': 'Comedies'}, {'question': 'Who played the title role of Summer in 500 Days of Summer?', 'answer': 'Zooey Deschanel', 'category': 'Dramas'}, {'question': 'Middle schooler Greg Heffley joins the Safety Patrol in an effort to be cool in what 2010 movie?', 'answer': 'Diary of a Wimpy Kid', 'category': 'Family'}, {'question': "Who played Dom's extraction partner Arthur in Inception?", 'answer': 'Joseph Gordon-Levitt', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Justin Long and Gina Philips play siblings that battle an ancient being named the Creeper in what movie?', 'answer': 'Jeepers Creepers', 'category': 'Horror/Thriller'}, {'question': "Who played Miss Peregrine in Miss Peregrine's Home for Peculiar Children?", 'answer': 'Eva Green', 'category': 'New Releases'}, {'question': 'How many times has Tom Hanks been nominated for an acting Oscar (as of March 2017)?', 'answer': '5 (for Big, Philadelphia, Forrest Gump, Saving Private Ryan, Cast Away)', 'category': 'Tom Hanks'}, {'question': 'In Sleepless in Seattle, what film did Tom Hanks say scared every man in America?', 'answer': 'Fatal Attraction', 'category': 'Tom Hanks'}, {'question': 'Sally Field co-starred with Tom Hanks in Forrest Gump. They also shared the screen in what 80s comedy?', 'answer': 'Punchline', 'category': 'Tom Hanks'}, {'question': 'Apollo 13 was released in what year?', 'answer': '1995', 'category': 'Tom Hanks'}, {'question': 'What movie did Lori Singer co-star with Tom Hanks?', 'answer': 'The Man with One Red Shoe', 'category': 'Tom Hanks'}, {'question': 'In That Thing You Do!, Mr. White worked for what record label?', 'answer': 'Playtone Records', 'category': 'Tom Hanks'}, {'question': 'In The Rocketeer, what item does Peevy use to patch the bullet hole in the rocket pack?', 'answer': 'chewing gum', 'category': '1990s'}, {'question': 'When Neo experiences déjà vu in The Matrix, what animal does he see twice?', 'answer': 'a cat', 'category': '1990s'}, {'question': 'In which movie does Sylvester Stallone play a character named Angelo "Snaps" Provolone?', 'answer': 'Oscar', 'category': '1990s'}, {'question': 'In Ace Ventura: Pet Detective, what kind of animal was Ace seeking throughout the majority of the film?', 'answer': 'a bottlenose dolphin', 'category': '1990s'}, {'question': "In the climactic scene of 1993's Free Willy, what does Willy jump over to reach freedom?", 'answer': 'a breakwater', 'category': '1990s'}, {'question': 'In what film does Hulk Hogan play an interstellar bounty hunter?', 'answer': 'Suburban Commando', 'category': '1990s'}, {'question': 'Which Terrence Malick film was released the same year as Saving Private Ryan and also centered around World War II?', 'answer': 'The Thin Red Line', 'category': 'War'}, {'question': 'What year saw the release of Spider-Man 2?', 'answer': '2004', 'category': 'Release Dates'}, {'question': "In which movie will you find Litwak's Family Fun Center and Arcade?", 'answer': 'Wreck-It Ralph', 'category': 'Animated'}, {'question': 'Channing Tatum helped rescue the President played by whom in White House Down?', 'answer': 'Jamie Foxx', 'category': 'Action/Adventure'}, {'question': 'Name one of the three lead actresses from The First Wives Club.', 'answer': 'Bette Midler, Diane Keaton, Goldie Hawn', 'category': 'Comedies'}, {'question': 'Who played Lisa Rowe in the award-contending film Girl, Interrupted?', 'answer': 'Angelina Jolie', 'category': 'Dramas'}, {'question': 'Fatso, Stinkie, and Stretch are the names of the "Ghostly Trio" of pranksters in what family film?', 'answer': 'Casper', 'category': 'Family'}, {'question': 'Stellan Skarsgård plays Bootstrap Bill in which franchise?', 'answer': 'Pirates of the Caribbean', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the 1987 horror flick Hellraiser?', 'answer': 'Clive Barker', 'category': 'Horror/Thriller'}, {'question': 'Which 2016 animated film features the songs "Where You Are" and "You\'re Welcome"?', 'answer': 'Moana', 'category': 'New Releases'}, {'question': 'Which Star Wars film features the crawl text with the opening line: "Turmoil has engulfed the Galactic Republic. The taxation of trade routes to outlying star systems is in dispute."?', 'answer': 'Star Wars: Episode I – The Phantom Menace', 'category': 'Star Wars'}, {'question': 'Whose DNA was used in the creation of the clone army?', 'answer': 'Jango Fett', 'category': 'Star Wars'}, {'question': 'Lobot is a valued assistant to which Star Wars character?', 'answer': 'Lando Calrissian', 'category': 'Star Wars'}, {'question': "How far does Luke initially offer to take Obi-Wan after seeing Princess Leia's distress message?", 'answer': 'as far as Anchorhead', 'category': 'Star Wars'}, {'question': 'What is the actual name of the city in Sin City?', 'answer': 'Basin City', 'category': 'Comic Book'}, {'question': "In Sam Raimi's Spider-Man, which famous singer is performing during the parade scene?", 'answer': 'Macy Gray', 'category': 'Comic Book'}, {'question': 'Who directed Superman III?', 'answer': 'Richard Lester', 'category': 'Comic Book'}, {'question': 'Whom does Jaimie Alexander play in the Thor films?', 'answer': 'Sif', 'category': 'Comic Book'}, {'question': 'Who directed Crouching Tiger, Hidden Dragon?', 'answer': 'Ang Lee', 'category': 'Action/Adventure'}, {'question': 'Who played the Thing / Ben Grimm in the 2005 and 2007 Fantastic Four films?', 'answer': 'Michael Chiklis', 'category': 'Marvel'}, {'question': 'Who co-starred as Karen Walden with Denzel in Courage Under Fire?', 'answer': 'Meg Ryan', 'category': 'Denzel Washington'}, {'question': 'Name the buddy picture in which Robert De Niro threateningly tells Charles Grodin "if you don\'t cooperate, you\'re gonna suffer from \'fistophobia\'.".', 'answer': 'Midnight Run', 'category': 'Crime'}, {'question': "Who will chase you down if you flee in Logan's Run?", 'answer': 'the Sandmen', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Shenzi, Banzai, and Ed are what kind of animals in The Lion King?', 'answer': 'spotted hyenas', 'category': 'Animated'}, {'question': 'Hero Jack Ryan uncovers a secret war being waged by the U.S. government in Colombia in which movie?', 'answer': 'Clear and Present Danger', 'category': 'Action/Adventure'}, {'question': "For what social event does John Cusack's hitman return to his hometown in Grosse Pointe Blank?", 'answer': 'a high school reunion', 'category': 'Comedies'}, {'question': "In what 2013 odd romantic drama will you find Theodore Twombly, a writer of other people's love letters?", 'answer': 'Her', 'category': 'Dramas'}, {'question': 'Other than the Pirates movies, name a film based on a Disney theme park attraction.', 'answer': 'Mission to Mars, The Country Bears, The Haunted Mansion, Tomorrowland', 'category': 'Family'}, {'question': 'In The Princess Bride, which character has been searching for the six-fingered man for 20 years?', 'answer': 'Inigo Montoya', 'category': 'Fantasy/Sci-Fi'}, {'question': 'When owning a Mogwai, there are three rules: never feed them after midnight, avoid sunlight, and what else?', 'answer': 'do not let them come in contact with water', 'category': 'Horror/Thriller'}, {'question': "What was the name of Eddie Redmayne's character in Fantastic Beasts and Where to Find Them?", 'answer': 'Newt Scamander', 'category': 'New Releases'}, {'question': 'In which flick does Denzel play a train conductor named Frank?', 'answer': 'Unstoppable', 'category': 'Denzel Washington'}, {'question': 'Who played Colonel Robert Gould Shaw in Glory?', 'answer': 'Matthew Broderick', 'category': 'Denzel Washington'}, {'question': 'Which Denzel vehicle was based on a novel by Walter Mosley?', 'answer': 'Devil in a Blue Dress', 'category': 'Denzel Washington'}, {'question': 'How many total Oscars have been won by Denzel?', 'answer': '2 (for Glory, Training Day)', 'category': 'Denzel Washington'}, {'question': "What is the name of the fortune telling machine that turns Josh into an adult in 1988's Big?", 'answer': 'Zoltar', 'category': '1980s'}, {'question': 'In Beverly Hills Cop, what city was Eddie Murphy based in before he moved out to Beverly Hills?', 'answer': 'Detroit', 'category': '1980s'}, {'question': 'What song was the gopher dancing to at the end of Caddyshack?', 'answer': "I'm Alright", 'category': '1980s'}, {'question': "In Lethal Weapon 2, what famous restaurant chain messed up Leo Getz's order?", 'answer': 'Subway', 'category': '1980s'}, {'question': 'Which MCU movie involves a fight scene caught on tape at Culver University in Virginia?', 'answer': 'The Incredible Hulk', 'category': 'Marvel'}, {'question': 'In Tangled, Flynn Ryder takes Rapunzel to a pub named the Snuggly what?', 'answer': 'Duckling', 'category': 'Disney'}, {'question': 'The Dallas Knights host the climactic playoff game in what sports movie?', 'answer': 'Any Given Sunday', 'category': 'Sports'}, {'question': 'What actress cameos as the jilted lover of Jake in The Blues Brothers?', 'answer': 'Carrie Fisher', 'category': '1980s'}, {'question': 'Name the 2006 drama thriller that saw Angelina co-star with Matt Damon and Robert De Niro.', 'answer': 'The Good Shepherd', 'category': 'Angelina Jolie'}, {'question': 'Who plays Captain Jack Aubrey in Master and Commander?', 'answer': 'Russell Crowe', 'category': 'Action/Adventure'}, {'question': 'What Japanese animated cult classic has cyberpunk biker gangs menacing Tokyo?', 'answer': 'Akira', 'category': 'Animated'}, {'question': 'Who played Agent Smith in the Matrix trilogy?', 'answer': 'Hugo Weaving', 'category': 'Fantasy/Sci-Fi'}, {'question': 'How much is the ransom demand in the movie Ransom?', 'answer': '2 million dollars', 'category': 'Dramas'}, {'question': 'To counteract their illegal activities, the characters in what 2008 comedy film find themselves LARPing?', 'answer': 'Role Models', 'category': 'Comedies'}, {'question': "In addition to surviving the island and fending off wild animals, what else must the Robinson family fend off in Disney's Swiss Family Robinson?", 'answer': 'pirates', 'category': 'Family'}, {'question': "What 2007 film was a modern remake of Hitchcock's Rear Window?", 'answer': 'Disturbia', 'category': 'Horror/Thriller'}, {'question': "What acclaimed director's daughter starred in the M. Night Shyamalan movies The Village and Lady in the Water?", 'answer': 'Ron Howard', 'category': 'N/A'}, {'question': 'Who plays struggling young actor Andrew Largeman in Garden State?', 'answer': 'Zach Braff', 'category': 'Mixed Bag'}, {'question': 'Who plays the blind monk in Young Frankenstein?', 'answer': 'Gene Hackman', 'category': 'Mixed Bag'}, {'question': 'What year was the sci-fi action film Aliens released?', 'answer': '1986', 'category': 'Mixed Bag'}, {'question': 'Alan Ladd played a skilled and mysterious gunfighter in what classic western?', 'answer': 'Shane', 'category': 'Mixed Bag'}, {'question': 'Who played the villainous Mr. Phelps in Mission: Impossible?', 'answer': 'Jon Voight', 'category': 'Mixed Bag'}, {'question': 'In what 2009 romantic comedy were Scarlett Johansson and Bradley Cooper romantically involved?', 'answer': "He's Just Not That into You", 'category': 'Mixed Bag'}, {'question': "Who voiced Fear in 2015's Inside Out?", 'answer': 'Bill Hader', 'category': 'Disney'}, {'question': "In Mary Poppins, what animal, that also spoke, was on the end of Mary Poppins' umbrella?", 'answer': 'a bird', 'category': 'Disney'}, {'question': 'In what animated feature would you find a villain named Sykes?', 'answer': 'Oliver & Company', 'category': 'Disney'}, {'question': 'What Firefly and Serenity star has provided their voice to Wreck-It Ralph, Frozen, Big Hero 6, and Zootopia?', 'answer': 'Alan Tudyk', 'category': 'Disney'}, {'question': "In Disney's Bolt, who voiced the titular character?", 'answer': 'John Travolta', 'category': 'Disney'}, {'question': 'In The Lion King, what is the name of the place that Simba is forbidden to go to?', 'answer': 'the Elephant Graveyard', 'category': 'Disney'}, {'question': "Who played Jim Morrison in 1991's biographical film The Doors?", 'answer': 'Val Kilmer', 'category': 'Biopics'}, {'question': "What is the name of Jango Fett's ship?", 'answer': 'Slave I', 'category': 'Star Wars'}, {'question': 'What 1968 war film revolves around a mission to kidnap a North Vietnamese general?', 'answer': 'The Green Berets', 'category': 'War'}, {'question': 'In Dazed and Confused, what do the senior guys do to the incoming freshman boys?', 'answer': 'they paddle them', 'category': 'Coming of Age'}, {'question': 'Chad Kroeger of Nickelback recorded the song "Hero" for what comic book film?', 'answer': 'Spider-Man', 'category': 'Scores & Soundtracks'}, {'question': 'Name two of the four Hitchcock films starring Jimmy Stewart.', 'answer': 'Rope, Rear Window, The Man Who Knew Too Much, Vertigo', 'category': 'Horror/Thriller'}, {'question': 'In which Disney film will you find Princess Aurora?', 'answer': 'Sleeping Beauty', 'category': 'Animated'}, {'question': "What is the name of the sequel to 2009's Sherlock Holmes, starring Robert Downey Jr.?", 'answer': 'Sherlock Holmes: A Game of Shadows', 'category': 'Action/Adventure'}, {'question': 'Who plays Richard Hoover, the father of pageant contestant Olive, in Little Miss Sunshine?', 'answer': 'Greg Kinnear', 'category': 'Comedies'}, {'question': 'Who plays small-town detective Marge Gunderson in the 1996 film Fargo?', 'answer': 'Frances McDormand', 'category': 'Dramas'}, {'question': "Emile Hirsch's character suits up for a high-octane adventure with mechanic Sparky and girlfriend Trixie in which film?", 'answer': 'Speed Racer', 'category': 'Family'}, {'question': "Name one of the two male leads in 2015's Ex Machina.", 'answer': 'Domhnall Gleeson, Oscar Isaac', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Bridget Fonda gets creeped out by a terrorizing roommate Jennifer Jason Leigh in what 1992 thriller?', 'answer': 'Single White Female', 'category': 'Horror/Thriller'}, {'question': 'Who directed the Stephen King adaptation of a killer automobile Christine?', 'answer': 'John Carpenter', 'category': 'Directors'}, {'question': 'Name the movie that carried the tagline "Vampires. No Interviews.".', 'answer': 'From Dusk till Dawn', 'category': 'Taglines'}, {'question': 'What 1999 film had the tagline "The show has been cancelled... But the adventure has only begun."?', 'answer': 'Galaxy Quest', 'category': 'Taglines'}, {'question': 'What 80s film had the tagline "The thing that won\'t die, in the nightmare that won\'t end."?', 'answer': 'The Terminator', 'category': 'Taglines'}, {'question': 'What stop-motion animated film had the tagline "Escape or Die Frying"?', 'answer': 'Chicken Run', 'category': 'Taglines'}, {'question': 'Which sorority was Elle Woods from Legally Blonde president of?', 'answer': 'Delta Nu', 'category': 'Rom-Coms'}, {'question': 'In which movie does Hugh Grant declare love for Andie MacDowell?', 'answer': 'Four Weddings and a Funeral', 'category': 'Rom-Coms'}, {'question': "Which M&M's are Steve's favorite in The Wedding Planner?", 'answer': "brown M&M's", 'category': 'Rom-Coms'}, {'question': 'Who plays the older Jenna in the 2004 movie 13 Going on 30?', 'answer': 'Jennifer Garner', 'category': 'Rom-Coms'}, {'question': 'What company did Chuck Noland work for in Cast Away?', 'answer': 'FedEx', 'category': 'Dramas'}, {'question': 'Jean Dujardin played George Valentin in which Best Picture winner?', 'answer': 'The Artist', 'category': 'Oscars'}, {'question': 'What is the name of the sequel to Lara Croft: Tomb Raider?', 'answer': 'Lara Croft: Tomb Raider – The Cradle of Life', 'category': 'Angelina Jolie'}, {'question': 'Upon which birthday does the curse of sleep kick in for Sleeping Beauty?', 'answer': 'her 16th birthday', 'category': 'Disney'}, {'question': "In Hoosiers, Coach Norman Dale's past includes his collegiate coaching career and what regrettable incident?", 'answer': 'he hit a player', 'category': 'Sports'}, {'question': "What famous detective is Basil of Baker Street based off of in Disney's The Great Mouse Detective?", 'answer': 'Sherlock Holmes', 'category': 'Animated'}, {'question': "In Wayne's World 2, Wayne sees Jim Morrison in a dream and is told to set up a legendary concert. What does Wayne call that concert?", 'answer': 'Waynestock', 'category': 'Comedies'}, {'question': 'What was the unique characteristic of the killer in The Fugitive?', 'answer': 'he had a prosthetic arm', 'category': 'Dramas'}, {'question': 'Who directed The Dead Zone starring Christopher Walken?', 'answer': 'David Cronenberg', 'category': 'Horror/Thriller'}, {'question': "Who played the ship's chef in 2005's King Kong?", 'answer': 'Andy Serkis', 'category': 'Action/Adventure'}, {'question': 'A professor discovers a rubberlike super bouncy substance in this 1997 family film.', 'answer': 'Flubber', 'category': 'Family'}, {'question': 'Who played the younger version of Bilbo in the Hobbit films?', 'answer': 'Martin Freeman', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Ralph Fiennes provided the voice of what character in The Lego Batman Movie?', 'answer': 'Alfred Pennyworth', 'category': 'New Releases'}, {'question': 'What sports drama sees Kenny Rogers as a race car driver who takes in orphan children to be his pit crew?', 'answer': 'Six Pack', 'category': 'Sports'}, {'question': 'Who played scout Ernie Capadino in A League of Their Own?', 'answer': 'Jon Lovitz', 'category': 'Sports'}, {'question': 'In the movie Eddie, Whoopi Goldberg is a fan who wins a contest to become the coach of what NBA team?', 'answer': 'the New York Knicks', 'category': 'Sports'}, {'question': 'What is the name of the sports comedy starring Scott Bakula, Sinbad, and Jason Bateman about a down-on-their-luck Texas college football team?', 'answer': 'Necessary Roughness', 'category': 'Sports'}, {'question': 'Who plays the character introduced as Miranda Tate in The Dark Knight Rises?', 'answer': 'Marion Cotillard', 'category': 'Comic Book'}, {'question': "In Iron Man 3, what is the name of Aldrich Killian's formula that enhances human DNA?", 'answer': 'Extremis', 'category': 'Comic Book'}, {'question': 'Who played Captain Stacy in Spider-Man 3?', 'answer': 'James Cromwell', 'category': 'Comic Book'}, {'question': 'What villain said "I believe, whatever doesn\'t kill you, simply makes you... stranger."?', 'answer': 'the Joker (in The Dark Knight)', 'category': 'Comic Book'}, {'question': 'In what year was the iconic Pulp Fiction released?', 'answer': '1994', 'category': 'Release Dates'}, {'question': "Who played Goose's wife in Top Gun?", 'answer': 'Meg Ryan', 'category': '1980s'}, {'question': 'Who directed Kathy Bates in the Stephen King story Misery?', 'answer': 'Rob Reiner', 'category': 'Directors'}, {'question': 'Who played bobsledding coach Irv Blitzer in Cool Runnings?', 'answer': 'John Candy', 'category': 'Sports'}, {'question': 'What 1930s romantic comedy paired Clark Gable and Claudette Colbert?', 'answer': 'It Happened One Night', 'category': 'Rom-Coms'}, {'question': 'What is the name of the pizza place that delivers pizza to the McCallisters multiple times in Home Alone?', 'answer': "Little Nero's Pizza", 'category': 'Family'}, {'question': 'What Russell Crowe movie had the tagline "One man\'s extraordinary fight to save the family he loved."?', 'answer': 'Cinderella Man', 'category': 'N/A'}, {'question': "Who played the George Cloooney role in the original version of Ocean's Eleven?", 'answer': 'Frank Sinatra', 'category': 'N/A'}, {'question': 'Naval chef Casey Ryback is the hero in what 1992 high seas flick?', 'answer': 'Under Siege', 'category': 'Action/Adventure'}, {'question': 'Si and Am are cats in what Disney film?', 'answer': 'Lady and the Tramp', 'category': 'Animated'}, {'question': 'Who played Leeloo in The Fifth Element?', 'answer': 'Milla Jovovich', 'category': 'Fantasy/Sci-Fi'}, {'question': 'How many Oscars did Titanic win?', 'answer': '11 (for Picture, Director, Art Direction, Cinematography, Costume Design, Film Editing, Original Dramatic Score, Original Song, Sound, Sound Effects, Visual Effects)', 'category': 'Dramas'}, {'question': 'What 2001 comedy\'s tagline was "563 miles. 9 people. $2 million. 1001 problems!"?', 'answer': 'Rat Race', 'category': 'Comedies'}, {'question': "Who played Daniel LaRusso's girlfriend in The Karate Kid?", 'answer': 'Elizabeth Shue', 'category': 'Family'}, {'question': 'Who plays the devil in the Arnold Schwarzenegger film End of Days?', 'answer': 'Gabriel Byrne', 'category': 'Horror/Thriller'}, {'question': 'What is the name of the mall at the end of Back to the Future where Marty meets Doc Brown?', 'answer': 'Lone Pine Mall', 'category': '1980s'}, {'question': "Where did Rick hide the transit papers in 1943's classic Casablanca?", 'answer': 'in a piano', 'category': 'Classics'}, {'question': "Who was Bing Crosby's co-star in the 1942 film Holiday Inn?", 'answer': 'Fred Astaire', 'category': 'Classics'}, {'question': 'What is the only Wooden Allen film with Mia Farrow and Diane Keaton?', 'answer': 'Radio Days', 'category': 'Classics'}, {'question': 'Who starred opposite Natalie Wood in Splendor in the Grass?', 'answer': 'Warren Beatty', 'category': 'Classics'}, {'question': 'Which classic film is set in New Orleans and features a character named Blanche DuBois?', 'answer': 'A Streetcar Named Desire', 'category': 'Classics'}, {'question': 'Which 1963 film about Allied POWs starred James Garner and Steve McQueen?', 'answer': 'The Great Escape', 'category': 'Classics'}, {'question': "Oskar Schindler runs what kind of factory in Schindler's List?", 'answer': 'an enamelware factory', 'category': 'Steven Spielberg'}, {'question': 'Matthew McConaughey and Morgan Freeman co-star in this 1997 Spielberg film.', 'answer': 'Amistad', 'category': 'Steven Spielberg'}, {'question': "In 2005's War of the Worlds, Ray and his daughter Rachel seek shelter in a farmhouse occupied by Harlan Ogilvy, a former soldier. Who played Harlan?", 'answer': 'Tim Robbins', 'category': 'Steven Spielberg'}, {'question': "What is the name of Oprah Winfrey's character in the 1985 drama The Color Purple?", 'answer': 'Sofia', 'category': 'Steven Spielberg'}, {'question': 'What Spielberg movie starred John Malkovich?', 'answer': 'Empire of the Sun', 'category': 'Steven Spielberg'}, {'question': 'In Minority Report, what is the name of the nonlethal weapon used by PreCrime officers to incapacitate perpetrators?', 'answer': 'Sick Sticks', 'category': 'Steven Spielberg'}, {'question': 'What 1999 movie features a man with supernatural powers and a mouse named Mr. Jingles?', 'answer': 'The Green Mile', 'category': '1990s'}, {'question': "Which director's films were satirized in the Mel Brooks film High Anxiety?", 'answer': 'Alfred Hitchcock', 'category': 'Directors'}, {'question': 'What 1965 movie asks the musical question "How do you solve a problem like Maria?"?', 'answer': 'The Sound of Music', 'category': 'Classics'}, {'question': 'The famous line "Can I borrow your underpants for ten minutes?" was spoken in which coming-of-age teen comedy?', 'answer': 'Sixteen Candles', 'category': 'Coming of Age'}, {'question': "What was Scorsese's first feature film?", 'answer': "Who's That Knocking at My Door", 'category': 'Martin Scorsese'}, {'question': 'Who played Allan Quatermain in The League of Extraordinary Gentlemen?', 'answer': 'Sean Connery', 'category': 'Action/Adventure'}, {'question': 'What famed director voiced Z, the main character of the animated film Antz?', 'answer': 'Woody Allen', 'category': 'Animated'}, {'question': 'According to Jack Sparrow in Pirates of the Caribbean, who came up with "parley"?', 'answer': 'the French', 'category': 'Fantasy/Sci-Fi'}, {'question': "Where was Stephen from in 1995's Braveheart?", 'answer': 'Ireland', 'category': 'Dramas'}, {'question': 'Who plays the Irish traveler boxer in Snatch?', 'answer': 'Brad Pitt', 'category': 'Comedies'}, {'question': 'In Remember the Titans, what kind of fruit did Coach Boone toss to rival Coach Tyrell after their game?', 'answer': 'a banana', 'category': 'Family'}, {'question': 'Who co-starred with Mel Gibson in the 1997 thriller Conspiracy Theory?', 'answer': 'Julia Roberts', 'category': 'Horror/Thriller'}, {'question': "Who is Jennifer Lopez's co-star in Maid in Manhattan?", 'answer': 'Ralph Fiennes', 'category': 'Rom-Coms'}, {'question': 'Who played Lt. James "Rhodey" Rhodes in 2008\'s Iron Man?', 'answer': 'Terrence Howard', 'category': 'Comic Book'}, {'question': 'Who played Lana Lang in Superman III?', 'answer': "Annette O'Toole", 'category': 'Comic Book'}, {'question': "In what year does the majority of 2009's Watchmen take place?", 'answer': '1985', 'category': 'Comic Book'}, {'question': 'In Deadpool, Stan Lee made a cameo doing what?', 'answer': 'being a strip club emcee', 'category': 'Comic Book'}, {'question': 'Paddington Bear of the 2014 film Paddington is originally a native of what South American country?', 'answer': 'Peru', 'category': 'Family'}, {'question': 'In Jumanji, a brother and sister find the game and release chaos onto their town as well as a trapped player Alan Parrish. Who played the sister?', 'answer': 'Kirsten Dunst', 'category': 'Family'}, {'question': "What U.S. hero is played by Patrick Swayze in 1995's Tall Tale?", 'answer': 'Pecos Bill', 'category': 'Family'}, {'question': 'In what film do a bunch of kids create a fake summer camp in order to fool their parents?', 'answer': 'Camp Nowhere', 'category': 'Family'}, {'question': 'Who played Eazy-E in Straight Outta Compton?', 'answer': 'Jason Mitchell', 'category': 'Biopics'}, {'question': 'For which two films has Quentin Tarantino received Best Director Academy Award nominations (as of April 2017)?', 'answer': 'Pulp Fiction, Inglourious Basterds', 'category': 'Quentin Tarantino'}, {'question': "In 2000's Gone in 60 Seconds, the dog eats the car keys to what brand of car?", 'answer': 'a Mercedes Benz', 'category': 'Action/Adventure'}, {'question': "Name the third film in Robert Rodriguez's so-called Mariachi trilogy.", 'answer': 'Once Upon a Time in Mexico', 'category': 'Action/Adventure'}, {'question': 'What type of animal is voiced by Chris Rock in the Madagascar films?', 'answer': 'a plains zebra', 'category': 'Animated'}, {'question': "Will Ferrell's character is surprisingly married to Eva Mendes in what 2010 comedy?", 'answer': 'The Other Guys', 'category': 'Comedies'}, {'question': "Rachel McAdams loses her memory and can't recall ever meeting her husband Channing Tatum in what romantic drama?", 'answer': 'The Vow', 'category': 'Dramas'}, {'question': 'Asa Butterfield plays the title role in what Martin Scorsese movie?', 'answer': 'Hugo', 'category': 'Family'}, {'question': 'Who directed the movie Harry Potter and the Prisoner of Azkaban?', 'answer': 'Alfonso Cuarón', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actress played Carrie White in the 2013 remake of the classic horror flick Carrie?', 'answer': 'Chloë Grace Moretz', 'category': 'Horror/Thriller'}, {'question': 'Name a film in which Steve McQueen directed Michael Fassbender.', 'answer': 'Hunger, Shame, 12 Years a Slave', 'category': 'Directors'}, {'question': 'What year did The Lord of the Rings: The Two Towers come out?', 'answer': '2002', 'category': 'Release Dates'}, {'question': "Robin Williams gave life to the Genie in Disney's Aladdin in what year?", 'answer': '1992', 'category': 'Release Dates'}, {'question': "The following rom-coms were released in what year: Notting Hill, She's All That, and Never Been Kissed?", 'answer': '1999', 'category': 'Release Dates'}, {'question': 'The sword and sorcery film The Beastmaster was released in what year?', 'answer': '1982', 'category': 'Release Dates'}, {'question': "Scorsese's early triumph Mean Streets was released in what year?", 'answer': '1973', 'category': 'Release Dates'}, {'question': "Edgar Wright's Shaun of the Dead was released in what year?", 'answer': '2004', 'category': 'Release Dates'}, {'question': 'Will has been nominated for an Oscar twice, for Ali and which other film?', 'answer': 'The Pursuit of Happyness', 'category': 'Will Smith'}, {'question': "What was Will's occupation in Enemy of the State?", 'answer': 'a labor lawyer', 'category': 'Will Smith'}, {'question': 'Will co-stars with Kevin Kline in which movie?', 'answer': 'Wild Wild West', 'category': 'Will Smith'}, {'question': 'In Bad Boys, Marcus says he would never eat from what restaurant?', 'answer': "Denny's", 'category': 'Will Smith'}, {'question': 'Name the film that paired experienced con artist Will Smith with pilfering newcomer Margot Robbie.', 'answer': 'Focus', 'category': 'Will Smith'}, {'question': "What was Will's job in Independence Day?", 'answer': 'a fighter pilot', 'category': 'Will Smith'}, {'question': 'Who plays the title role in the 2003 black comedy Bad Santa?', 'answer': 'Billy Bob Thornton', 'category': 'Comedies'}, {'question': "Who was Denzel's adversary in Crimson Tide?", 'answer': 'Gene Hackman', 'category': 'Denzel Washington'}, {'question': 'Violet, Doralee, and Judy are office workers in which comedy?', 'answer': '9 to 5', 'category': '1980s'}, {'question': 'Who played master magician Eisenheim in the 2006 drama The Illusionist?', 'answer': 'Edward Norton', 'category': 'Dramas'}, {'question': 'Name one of the two lead actors in the remake of The Taking of Pelham One Two Three.', 'answer': 'Denzel Washington, John Travolta', 'category': 'Action/Adventure'}, {'question': "You'll find a jealous butler by the name of Edgar in what Disney animated classic?", 'answer': 'The Aristocats', 'category': 'Animated'}, {'question': 'What is the name of the dwarf that accompanies Sarah through her journey in Labyrinth?', 'answer': 'Hoggle', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name one of the two actresses that play Aunt Jet and Aunt Frances in the 1998 film Practical Magic.', 'answer': 'Dianne Wiest, Stockard Channing', 'category': 'Dramas'}, {'question': 'In The Hangover, stripper and escort Jade is played by what actress?', 'answer': 'Heather Graham', 'category': 'Comedies'}, {'question': 'Set on a farm, this 1973 animated musical is based on a book by E. B. White.', 'answer': "Charlotte's Web", 'category': 'Family'}, {'question': 'Who portrayed Carrie in the original Carrie?', 'answer': 'Sissy Spacek', 'category': 'Horror/Thriller'}, {'question': 'Who voiced Disgust in Inside Out?', 'answer': 'Mindy Kaling', 'category': 'Pixar'}, {'question': 'Who was Zorro before passing it onto Antonio Banderas in The Mask of Zorro?', 'answer': 'Anthony Hopkins', 'category': '1990s'}, {'question': 'Who plays God in the 1999 movie Dogma?', 'answer': 'Alanis Morissette', 'category': '1990s'}, {'question': 'In Pulp Fiction, Jules ritually recites a verse from what book of the Bible before executing someone?', 'answer': 'Ezekiel', 'category': '1990s'}, {'question': "Who played Doc Brown's love interest in Back to the Future Part III?", 'answer': 'Mary Steenburgen', 'category': '1990s'}, {'question': "What is Sharon Stone's profession in the 1992 thriller Basic Instinct?", 'answer': 'a crime novelist', 'category': 'Horror/Thriller'}, {'question': "In 2004's Van Helsing, what monster did Van Helsing find living in the cave below the burned-down windmill?", 'answer': "Frankenstein's monster", 'category': 'Horror/Thriller'}, {'question': 'In American Psycho, what does Patrick Bateman kill Paul Allen with?', 'answer': 'an axe', 'category': 'Horror/Thriller'}, {'question': "In 1996's Scream, what is the name of the news program that Gale Weathers is a reporter for?", 'answer': 'Top Story', 'category': 'Horror/Thriller'}, {'question': "Who played Bruce Wayne's love interest in Batman Forever?", 'answer': 'Nicole Kidman', 'category': 'Comic Book'}, {'question': "What is the name of Daniel Day-Lewis' character in Gangs of New York?", 'answer': 'William "Bill the Butcher" Cutting', 'category': 'Martin Scorsese'}, {'question': 'Who won the Oscar for Best Actor for On the Waterfront?', 'answer': 'Marlon Brando', 'category': 'Classics'}, {'question': 'In Down Periscope, who did Kelsey Grammer make walk the plank?', 'answer': 'Rob Schneider', 'category': '1990s'}, {'question': 'In the 2014 film 2 Guns, which actor played on-the-run DEA agent Bobby Trench?', 'answer': 'Denzel Washington', 'category': 'Action/Adventure'}, {'question': 'In the Shrek franchise, King Harold is actually what type of animal?', 'answer': 'a frog', 'category': 'Animated'}, {'question': "What actress played Miami Dolphins representative and Ace's love interest in Ace Ventura: Pet Detective?", 'answer': 'Courteney Cox', 'category': 'Comedies'}, {'question': "Which famed historical figure was played by Kirsten Dunst in Sofia Coppola's 2006 movie?", 'answer': 'Marie Antoinette', 'category': 'Dramas'}, {'question': 'Who directed the first film in the Spy Kids franchise?', 'answer': 'Robert Rodriguez', 'category': 'Family'}, {'question': 'A prophecy states that a female child with a special birthmark will be born to end the reign of Queen Bavmorda in what 1988 fantasy film?', 'answer': 'Willow', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Crispin Glover plays a reclusive man who leads an army of rats in what 2003 creepfest?', 'answer': 'Willard', 'category': 'Horror/Thriller'}, {'question': "What actor played the albino mutant Caliban in this year's (2017's) Logan?", 'answer': 'Stephen Merchant', 'category': 'New Releases'}, {'question': "What song plays during Jennifer Beals' training montage in Flashdance?", 'answer': 'Maniac', 'category': 'Scores & Soundtracks'}, {'question': "Who composed the new music for 2006's Superman Returns?", 'answer': 'John Ottman', 'category': 'Scores & Soundtracks'}, {'question': 'Which 90s film had a smash hit soundtrack featuring "Burn" by the Cure and "Big Empty" by Stone Temple Pilots?', 'answer': 'The Crow', 'category': 'Scores & Soundtracks'}, {'question': 'Who composed the score for Gremlins?', 'answer': 'Jerry Goldsmith', 'category': 'Scores & Soundtracks'}, {'question': 'In Young Guns, the Regulators are comprised of Emilio Estevez, Charlie Sheen, Keifer Sutherland, Lou Diamond Phillips, Casey Siemaszko, and whom?', 'answer': 'Dermot Mulroney', 'category': 'Westerns'}, {'question': "What happens at twelve o'clock in the classic High Noon?", 'answer': 'a villain arrives on a train', 'category': 'Westerns'}, {'question': "What name did Clint Eastwood's mysterious character go by in Pale Rider?", 'answer': 'the Preacher', 'category': 'Westerns'}, {'question': 'What was the first western to win the Academy Award for Best Picture?', 'answer': 'Cimarron', 'category': 'Westerns'}, {'question': 'In which film does Julia Roberts play the character Darby Shaw?', 'answer': 'The Pelican Brief', 'category': 'Julia Roberts'}, {'question': 'Wayne and Garth were not worthy of which musical artist after his concert in Milwaukee?', 'answer': 'Alice Cooper', 'category': 'N/A'}, {'question': 'Name the actress who stars in the following movies: The Crush, Excess Baggage, Clueless.', 'answer': 'Alicia Silverstone', 'category': 'N/A'}, {'question': 'How many James Bond films starred Pierce Brosnan?', 'answer': '4 (GoldenEye, Tomorrow Never Dies, The World Is Not Enough, Die Another Day)', 'category': 'N/A'}, {'question': 'Which film features the following characters: Billy, Gale, Sidney, Dewey, Tatum, Cotton, Ghostface?', 'answer': 'Scream', 'category': 'N/A'}, {'question': 'Name a film directed by Oliver Stone that was released after the year 2000.', 'answer': 'Alexander, World Trade Center, W., Wall Street: Money Never Sleeps, Savages, Snowden', 'category': 'N/A'}, {'question': 'Who stars in and produced the 2012 baseball movie Trouble with the Curve?', 'answer': 'Clint Eastwood', 'category': 'Sports'}, {'question': 'In which Pixar movie will you find Helen Mirren as the voice of Dean Abigail Hardscrabble?', 'answer': 'Monsters University', 'category': 'Pixar'}, {'question': "Arnold Schwarzenegger's character Jack Slater takes on a host of baddies including the Ripper in what action fantasy?", 'answer': 'Last Action Hero', 'category': 'Action/Adventure'}, {'question': 'Other than Denzel Washington, name two other actors that portrayed members of the Magnificent Seven in the 2016 remake.', 'answer': "Byung-hun Lee, Chris Pratt, Ethan Hawke, Manuel Garcia-Rulfo, Martin Sensmeier, Vincent D'Onofrio", 'category': 'Westerns'}, {'question': "What actor starred in 2005's King Kong and also provided voices for the animated features Shark Tale and Ice Age?", 'answer': 'Jack Black', 'category': 'Famous Actors & Actresses'}, {'question': "In Ant-Man, who plays Maggie Lang, the mother of Scott's daughter?", 'answer': 'Judy Greer', 'category': 'Marvel'}, {'question': "In which film does Jack Ryan's family get targeted by a splinter faction of the IRA?", 'answer': 'Patriot Games', 'category': 'Action/Adventure'}, {'question': 'The townspeople of Swallow Falls can afford to eat only sardines at the outset of what movie?', 'answer': 'Cloudy with a Chance of Meatballs', 'category': 'Animated'}, {'question': "In Being John Malkovich, John Cusack's character Craig is married to Lotte, played by whom?", 'answer': 'Cameron Diaz', 'category': 'Comedies'}, {'question': "Ren McCormack moves to a sleepy southern town from what northern U.S. city in 2011's Footloose?", 'answer': 'Boston', 'category': 'Dramas'}, {'question': 'The slightly nerdy Szalinskis are headed by an inventor father in what 80s family classic?', 'answer': 'Honey, I Shrunk the Kids', 'category': 'Family'}, {'question': 'I Want to Believe is the title of what sci-fi movie sequel?', 'answer': 'The X-Files: I Want to Believe', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which James Wan spun horror series revolves around demons praying upon the Lambert family?', 'answer': 'Insidious', 'category': 'Horror/Thriller'}, {'question': 'Which actress played Katherine Johnson alongside co-stars Octavia Spencer and Janelle Monáe in Hidden Figures?', 'answer': 'Taraji P. Henson', 'category': 'New Releases'}, {'question': 'What city does Kat travel to be a maid of honor for her younger sister in The Wedding Date?', 'answer': 'London', 'category': 'Rom-Coms'}, {'question': 'What character punches Joey in the face in 10 Things I Hate About You?', 'answer': 'Bianca Stratford', 'category': 'Rom-Coms'}, {'question': "What is Vivian's best friend's name in Pretty Woman?", 'answer': 'Kit De Luca', 'category': 'Rom-Coms'}, {'question': "Aldous Snow moves in on Peter's actress ex-girlfriend in this 2008 film.", 'answer': 'Forgetting Sarah Marshall', 'category': 'Rom-Coms'}, {'question': 'Freddie Prinze Jr. stars as big man on campus Zack Siler in what 90s rom-com?', 'answer': "She's All That", 'category': 'Rom-Coms'}, {'question': 'Katherine Heigl and Gerard Butler work in what industry in The Ugly Truth?', 'answer': 'morning show television', 'category': 'Rom-Coms'}, {'question': 'The Wolverine and Man of Steel were released in what year?', 'answer': '2013', 'category': 'Comic Book'}, {'question': 'Where did Iron Man first face off against Whiplash in Iron Man 2?', 'answer': 'the Monaco Grand Prix', 'category': 'Comic Book'}, {'question': "What did Peggy Carter promise to Steve Rogers before he crashed Red Skull's bomber?", 'answer': 'a dance', 'category': 'Comic Book'}, {'question': 'Who played Senator Hammond in Green Lantern?', 'answer': 'Tim Robbins', 'category': 'Comic Book'}, {'question': 'Who played Sue Storm a.k.a. the Invisible Woman in the 2005 and 2007 Fantastic Four films?', 'answer': 'Jessica Alba', 'category': 'Comic Book'}, {'question': 'Who portrayed Wallace Keefe, the victim who lost his legs in the Metropolis Incident in BvS?', 'answer': 'Scoot McNairy', 'category': 'Comic Book'}, {'question': "Who played Mel Gibson's father in 1994's Maverick?", 'answer': 'James Garner', 'category': 'Westerns'}, {'question': 'What Danny Boyle movie took home the Best Picture Oscar in 2009?', 'answer': 'Slumdog Millionaire', 'category': 'Oscars'}, {'question': "Which ancient philosopher gets to time travel in Bill & Ted's Excellent Adventure?", 'answer': 'Socrates', 'category': '1980s'}, {'question': "Which movie stars Susan Sarandon and Ed Harris as a divorced couple and Julia Roberts as Harris' younger flame?", 'answer': 'Stepmom', 'category': 'Dramas'}, {'question': 'In Toy Story, what classic board game does Slinky the dog like to play?', 'answer': 'checkers', 'category': 'Animated'}, {'question': 'What 90s spoof film features Charlie Sheen, Jon Cryer, and Ryan Stiles?', 'answer': 'Hot Shots!', 'category': 'Comedies'}, {'question': 'Who played astronaut John Glenn in The Right Stuff?', 'answer': 'Ed Harris', 'category': 'Dramas'}, {'question': 'Who directed the 2001 thriller starring Naomi Watts, Mulholland Drive?', 'answer': 'David Lynch', 'category': 'Horror/Thriller'}, {'question': "Name one of the three actors who play a friend to Heath Ledger's William Thatcher in A Knight's Tale.", 'answer': 'Alan Tudyk, Mark Addy, Paul Bettany', 'category': 'Action/Adventure'}, {'question': 'What 1994 film centers around an optimistic equine hero that was based on a 1877 novel?', 'answer': 'Black Beauty', 'category': 'Family'}, {'question': "In 1998's Dark City, who played Inspector Frank Bumstead?", 'answer': 'William Hurt', 'category': 'Fantasy/Sci-Fi'}, {'question': 'George Cukor directed Audrey Hepburn in what classic film?', 'answer': 'My Fair Lady', 'category': 'Directors'}, {'question': 'Who plays the mysterious Father Lucas Trevant in the 2011 exorcism movie The Rite?', 'answer': 'Anthony Hopkins', 'category': 'Horror/Thriller'}, {'question': "Which ballplayer's signature was on the Louisville Slugger bat Wendy wielded against crazed husband Jack in The Shining?", 'answer': 'Carl Yastrzemski', 'category': 'Horror/Thriller'}, {'question': 'Who directed the film Let Me In?', 'answer': 'Matt Reeves', 'category': 'Horror/Thriller'}, {'question': "In 1986's The Hitcher, name the actor who picks up our title character, played by Rutger Hauer.", 'answer': 'C. Thomas Howell', 'category': 'Horror/Thriller'}, {'question': "In Errol Flynn's The Adventures of Robin Hood, who played Prince John?", 'answer': 'Claude Rains', 'category': 'Classics'}, {'question': 'Who played the sultry Sugar Kane in Some Like It Hot?', 'answer': 'Marilyn Monroe', 'category': 'Classics'}, {'question': "This James Stewart romantic comedy inspired a remake in 1998 titled You've Got Mail.", 'answer': 'The Shop Around the Corner', 'category': 'Classics'}, {'question': 'What film stars Steve McQueen as a young poker player on his way to the big time in 1930s New Orleans?', 'answer': 'The Cincinnati Kid', 'category': 'Classics'}, {'question': 'In the 2003 remake of Freaky Friday, who played the daughter who switched places with her mother?', 'answer': 'Lindsay Lohan', 'category': 'Family'}, {'question': 'In what movie did Jude Law and Ed Harris play enemy snipers during World War II?', 'answer': 'Enemy at the Gates', 'category': 'War'}, {'question': 'Who won the 1996 Best Adapted Screenplay Oscar for Sense and Sensibility and was also nominated for her acting in the film?', 'answer': 'Emma Thompson', 'category': 'Oscars'}, {'question': "What is Buzz Lightyear's catchphrase in the original Toy Story?", 'answer': 'To infinity, and beyond!', 'category': 'Pixar'}, {'question': 'What surname was Adonis going by in Creed?', 'answer': 'Johnson', 'category': 'Sports'}, {'question': 'What is the only film directed by famed author Stephen King?', 'answer': 'Maximum Overdrive', 'category': 'Horror/Thriller'}, {'question': 'Who plays the love interest of Martin Riggs in Lethal Weapon 3 and 4?', 'answer': 'Rene Russo', 'category': 'Action/Adventure'}, {'question': 'Zach Braff voices a farm animal convinced that an alien invasion is imminent in what film?', 'answer': 'Chicken Little', 'category': 'Animated'}, {'question': 'What is the first name shared by the two corporate consultants in Office Space?', 'answer': 'Bob', 'category': 'Comedies'}, {'question': 'Richard Madden plays a prince in what Disney live-action film?', 'answer': 'Cinderella', 'category': 'Family'}, {'question': 'In Under the Tuscan Sun, who played the lead role of Frances Mayes?', 'answer': 'Diane Lane', 'category': 'Dramas'}, {'question': 'In which James Cameron film will you find the drilling platform known as Deep Core?', 'answer': 'The Abyss', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2013 zombie horrorfest was directed by Marc Forster?', 'answer': 'World War Z', 'category': 'Horror/Thriller'}, {'question': 'Name the recent comedy in which teachers Charlie Day and Ice Cube have an impending face-off after school.', 'answer': 'Fist Fight', 'category': 'New Releases'}, {'question': 'Who directed The Seventh Seal?', 'answer': 'Ingmar Bergman', 'category': 'Directors'}, {'question': "Sofia Coppola's first feature film as a director featured Kirsten Dunst as one of five sisters and was set in the 1950s. Name the film.", 'answer': 'The Virgin Suicides', 'category': 'Directors'}, {'question': 'What film did Rob Reiner both appear in and direct?', 'answer': 'This Is Spinal Tap, Misery, The Story of Us, Alex & Emma, And So It Goes', 'category': 'Directors'}, {'question': 'Who directed The Wizard of Oz?', 'answer': 'Victor Fleming', 'category': 'Directors'}, {'question': 'Mark Wahlberg gets framed in Shooter. Who directed Shooter?', 'answer': 'Antoine Fuqua', 'category': 'Directors'}, {'question': "What film was Iron Man director Jon Favreau's directorial debut?", 'answer': 'Made', 'category': 'Directors'}, {'question': 'Who played the sick War Boy named Nux in Mad Max: Fury Road?', 'answer': 'Nicholas Hoult', 'category': 'Action/Adventure'}, {'question': 'What Oscar-nominated actress plays Moneypenny in recent Bond films Skyfall and Spectre?', 'answer': 'Naomie Harris', 'category': 'Action/Adventure'}, {'question': 'In which film will you find Samuel L. Jackson playing elite LAPD operative Hondo Harrelson?', 'answer': 'S.W.A.T.', 'category': 'Action/Adventure'}, {'question': "Which action star played nefarious Andrei in 1988's Black Eagle?", 'answer': 'Jean-Claude Van Damme', 'category': 'Action/Adventure'}, {'question': 'In 300, how did the Spartans respond to the Persian emissaries warning that their arrows would blot out the sun?', 'answer': 'Then we will fight in the shade.', 'category': 'Action/Adventure'}, {'question': "In Kill Bill, Uma Thurman's character is known as the Bride. What is her real name?", 'answer': 'Beatrix Kiddo', 'category': 'Action/Adventure'}, {'question': 'Which film marked the first collaboration between Ron Howard the director and Russell Crowe the star?', 'answer': 'A Beautiful Mind', 'category': 'Dramas'}, {'question': 'In what year was the first Harry Potter movie released?', 'answer': '2001', 'category': 'Release Dates'}, {'question': 'What was the first Pixar franchise after Toy Story to get a sequel?', 'answer': 'Cars', 'category': 'Pixar'}, {'question': 'William Wyler directed what 1959 classic starring Charlton Heston?', 'answer': 'Ben-Hur', 'category': 'Directors'}, {'question': 'Name a film other than Fences directed by Denzel Washington.', 'answer': 'Antwone Fisher, The Great Debaters', 'category': 'Denzel Washington'}, {'question': 'What 1970 war film won Best Adapted Screenplay at the Oscars?', 'answer': 'M*A*S*H', 'category': 'Oscars'}, {'question': 'Who voices the title character of Balto in the 1995 film Balto?', 'answer': 'Kevin Bacon', 'category': 'N/A'}, {'question': 'Cloverfield, Hellboy II: The Golden Army, and Gran Torino were all released in what year?', 'answer': '2008', 'category': 'N/A'}, {'question': 'Jodie Foster loses her daughter on a plane in what movie?', 'answer': 'Flightplan', 'category': 'N/A'}, {'question': 'What actor played characters named Farmer Ted, Brian Johnson, and Gary Wallace in 1980s teen comedies?', 'answer': 'Anthony Michael Hall (in Sixteen Candles, The Breakfast Club, Weird Science)', 'category': 'N/A'}, {'question': 'Who composed scores for Vertigo, North by Northwest, and Psycho?', 'answer': 'Bernard Herrmann', 'category': 'N/A'}, {'question': 'In the movie The Great White Hope, James Earl Jones played what boxer?', 'answer': 'Jack Jefferson', 'category': 'N/A'}, {'question': 'Who played more than one role in the Stanley Kubrick classic Dr. Strangelove?', 'answer': 'Peter Sellers', 'category': 'N/A'}, {'question': "The Maltese Falcon and Disney's Dumbo were both released in what decade?", 'answer': 'the 1940s', 'category': 'N/A'}, {'question': 'Which veteran tough guy voiced Bad Cop / Good Cop in The Lego Movie?', 'answer': 'Liam Neeson', 'category': 'Animated'}, {'question': 'Name the film that stars Matt Damon and Greg Kinnear as Siamese twins.', 'answer': 'Stuck on You', 'category': 'Comedies'}, {'question': "Name a film directed by Denis Villeneuve before last year's (2016's) Arrival.", 'answer': 'Maelström, Incendies, Prisoners, Enemy', 'category': 'Dramas'}, {'question': 'Vera Farmiga stars as Lorraine Warren in what horror franchise?', 'answer': 'The Conjuring', 'category': 'Horror/Thriller'}, {'question': 'For what reason does Rambo go back to Vietnam in First Blood Part II?', 'answer': 'to photograph prisoners of war', 'category': 'Action/Adventure'}, {'question': "Who starred as Amy Adams' boyfriend Gary in 2011's The Muppets?", 'answer': 'Jason Segel', 'category': 'Family'}, {'question': 'In The Matrix, what is the name of the character played by Carrie-Anne Moss?', 'answer': 'Trinity', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1980 teen comedy features a sleazy nightclub, a guy named Meat, and a girl with the nickname Lassie?', 'answer': "Porky's", 'category': '1980s'}, {'question': 'Tropic Thunder features actors posing as soldiers in what war?', 'answer': 'the Vietnam War', 'category': 'Comedies'}, {'question': 'Who directed the 2000 film Bedazzled starring Elizabeth Hurley and Brendan Fraser?', 'answer': 'Harold Ramis', 'category': 'Comedies'}, {'question': "What is the name of Elle's dog in Legally Blonde?", 'answer': 'Bruiser Woods', 'category': 'Comedies'}, {'question': "Known as Mr. Las Vegas, who appears in Vegas Vacation and makes a surprise cameo in the slideshow at the end of 2009's The Hangover?", 'answer': 'Wayne Newton', 'category': 'Comedies'}, {'question': 'Who played King Arthur in the 1975 film Monty Python and the Holy Grail?', 'answer': 'Graham Chapman', 'category': '1970s'}, {'question': 'Who plays the character of Katie opposite Robert Redford in the 1973 romantic drama The Way We Were?', 'answer': 'Barbra Streisand', 'category': '1970s'}, {'question': 'In what 1970s adventure comedy will you find a trucker and brawler by the name of Philo Beddoe roaming the American West in search of a lost love?', 'answer': 'Every Which Way but Loose', 'category': '1970s'}, {'question': 'What film director played the role of Noah Cross in Chinatown?', 'answer': 'John Huston', 'category': '1970s'}, {'question': "In All the President's Men, who played Woodward and Bernstein?", 'answer': 'Robert Redford, Dustin Hoffman', 'category': '1970s'}, {'question': "Who plays Tom Hanks' love interest in You've Got Mail?", 'answer': 'Meg Ryan', 'category': 'N/A'}, {'question': 'Who directed the 2013 movie Elysium?', 'answer': 'Neill Blomkamp', 'category': 'N/A'}, {'question': 'What actress starred as a tough cop in Blue Steel?', 'answer': 'Jamie Lee Curtis', 'category': 'N/A'}, {'question': 'In what comedy does a sexy foreign student named Nadia move to town?', 'answer': 'American Pie', 'category': 'N/A'}, {'question': "Who plays Paulie, the father of Juno MacGuff's child in Juno?", 'answer': 'Michael Cera', 'category': 'N/A'}, {'question': 'What was unique about the putter gifted to Happy by Chubbs in Happy Gilmore?', 'answer': 'it was shaped like a hockey stick', 'category': 'Comedies'}, {'question': 'Be careful not to cross the crazed hunter Van Pelt in this family adventure film.', 'answer': 'Jumanji', 'category': 'Family'}, {'question': "Melanie has to return home to finalize her divorce so she can marry the son of New York's mayor in what film?", 'answer': 'Sweet Home Alabama', 'category': 'Rom-Coms'}, {'question': "What is Bruce Willis' job in Unbreakable?", 'answer': 'a security guard', 'category': 'Dramas'}, {'question': 'Who directed the 1994 big-screen adaptation of the ABC television series Maverick?', 'answer': 'Richard Donner', 'category': 'Westerns'}, {'question': 'What Oscar-nominated actress appears as nurse Brenda in Catch Me If You Can?', 'answer': 'Amy Adams', 'category': 'Famous Actors & Actresses'}, {'question': "Seinfeld's Patrick Warburton voices the character of Kronk in what Disney film?", 'answer': "The Emperor's New Groove", 'category': 'Animated'}, {'question': 'In what city does the first Speed film take place?', 'answer': 'Los Angeles', 'category': 'Action/Adventure'}, {'question': 'What actress stars as a literal fish out of water in the mermaid classic Splash?', 'answer': 'Daryl Hannah', 'category': 'Comedies'}, {'question': 'Christian Bale won acclaim for his haunting role as insomniac Trevor Reznik in what 2004 film?', 'answer': 'The Machinist', 'category': 'Dramas'}, {'question': 'What comedic actor played wedding consultant Franck in the Father of the Bride movies?', 'answer': 'Martin Short', 'category': 'Family'}, {'question': 'Who directed the Jake Gyllenhaal Michelle Monaghan time travel thriller Source Code?', 'answer': 'Duncan Jones', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What movie starred Julia Roberts as an employee of the mysterious Dr. Jekyll?', 'answer': 'Mary Reilly', 'category': 'Horror/Thriller'}, {'question': 'Which Straight Outta Compton cast member recently played geologist Houston Brooks in Kong: Skull Island?', 'answer': 'Corey Hawkins', 'category': 'New Releases'}, {'question': 'Dan Stevens introduces himself by what name in the action horror thriller The Guest?', 'answer': 'David Collins', 'category': 'Horror/Thriller'}, {'question': "What was Jim's occupation before the outbreak in 28 Days Later?", 'answer': 'a bicycle courier', 'category': 'Horror/Thriller'}, {'question': 'In American Psycho, Patrick tells the detective that he has a lunch meeting at the Four Seasons with what famous sitcom character name?', 'answer': 'Cliff Huxtable', 'category': 'Horror/Thriller'}, {'question': 'In Psycho, where does Norman Bates hide his mother?', 'answer': 'in the cellar', 'category': 'Horror/Thriller'}, {'question': "In the creepy horror thriller The Others, what was the cause of the house servants' deaths?", 'answer': 'tuberculosis', 'category': 'Horror/Thriller'}, {'question': 'Who played Wendy Torrance in The Shining?', 'answer': 'Shelley Duvall', 'category': 'Horror/Thriller'}, {'question': "In Bad Boys, Marcus is amazed that Mike's Porsche doesn't have what?", 'answer': 'a cup holder', 'category': 'Action/Adventure'}, {'question': 'What real-life organization does the character James Bond work for?', 'answer': 'MI6', 'category': 'Action/Adventure'}, {'question': "In Lethal Weapon 2, what does Riggs shoot while in Arjen Rudd's office?", 'answer': 'a fish tank', 'category': 'Action/Adventure'}, {'question': "In Furious 7, the bomb that blows up Dom's house came in a package shipped from what city?", 'answer': 'Tokyo', 'category': 'Action/Adventure'}, {'question': 'In the 1981 film Condorman, what is the occupation of the main character Woody Wilkins?', 'answer': 'a comic book writer and illustrator', 'category': 'Action/Adventure'}, {'question': "In The Last Boy Scout, Damon Wayans' character Jimmy Dix used to play for what fictitious pro football team?", 'answer': 'the Los Angeles Stallions', 'category': 'Action/Adventure'}, {'question': 'Name the movie from the quote: "If there\'s one thing this last week has taught me, it\'s better to have a gun and not need it than to need a gun and not have it.".', 'answer': 'True Romance', 'category': 'Crime'}, {'question': "What was the name of the follow-up film to Pee-wee's Big Adventure?", 'answer': 'Big Top Pee-wee', 'category': 'N/A'}, {'question': 'Roddy McDowall plays Peter Vincent in what 1980s thrillfest?', 'answer': 'Fright Night', 'category': 'N/A'}, {'question': 'In what action movie does Gary Busey play a villain that teams with Tommy Lee Jones named Commander Krill?', 'answer': 'Under Siege', 'category': 'N/A'}, {'question': 'Kate Winslet and Leonardo DiCaprio star as a young couple in a Connecticut suburb in what movie?', 'answer': 'Revolutionary Road', 'category': 'N/A'}, {'question': "Who plays forensic psychologist Alex Cross in 1997's Kiss the Girls?", 'answer': 'Morgan Freeman', 'category': 'N/A'}, {'question': 'Who directed the 2007 film American Gangster?', 'answer': 'Ridley Scott', 'category': 'Crime'}, {'question': 'What actress starred in Roman Holiday, Sabrina, and Funny Face in the 1950s?', 'answer': 'Audrey Hepburn', 'category': 'Classics'}, {'question': 'Who directed the Evil Dead remake?', 'answer': 'Fede Álvarez', 'category': 'Horror/Thriller'}, {'question': 'Who played the conductor of the train, Minister Wilford, in Snowpiercer?', 'answer': 'Ed Harris', 'category': 'Dramas'}, {'question': 'Which decade saw the release of Disney favorites The Fox and the Hound and The Little Mermaid?', 'answer': 'the 1980s', 'category': 'Animated'}, {'question': 'Callahan Auto Parts is the family business on the ropes in this 1995 road trip comedy.', 'answer': 'Tommy Boy', 'category': 'Comedies'}, {'question': "What is the trick to pulling off Christian Bale's appearing and reappearing act in The Prestige?", 'answer': 'he has an identical twin', 'category': 'Dramas'}, {'question': 'Death slowly walks towards whomever had sexual intercourse most recently in what 2015 thriller?', 'answer': 'It Follows', 'category': 'Horror/Thriller'}, {'question': 'Which Die Hard installment features the lead villain played by William Sadler?', 'answer': 'Die Hard 2', 'category': 'Action/Adventure'}, {'question': "What legendary actor plays Meacham, the elder patriarch convinced a dragon actually lives in the woods in 2016's Pete's Dragon?", 'answer': 'Robert Redford', 'category': 'Family'}, {'question': 'The Pevensie children help save a faraway realm in what fantasy movie based on classic novels?', 'answer': 'The Chronicles of Narnia: The Lion, the Witch and the Wardrobe, The Chronicles of Narnia: Prince Caspian', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played the Human Torch in the 2005 and 2007 Fantastic Four films?', 'answer': 'Chris Evans', 'category': 'Comic Book'}, {'question': "In The Prestige, just before Borden is hanged for Angier's murder, what does he say when asked if he has any last words?", 'answer': 'Abracadabra', 'category': 'Christopher Nolan'}, {'question': 'Who played Detective Ellie Burr in Insomnia?', 'answer': 'Hilary Swank', 'category': 'Christopher Nolan'}, {'question': 'In Inception, the dreamers use an object to distinguish dreams from reality. This object was officially referred to as what in the film?', 'answer': 'a totem', 'category': 'Christopher Nolan'}, {'question': 'The protagonist in Memento suffers from what?', 'answer': 'anterograde amnesia', 'category': 'Christopher Nolan'}, {'question': 'What is the name of the district of Gotham City where Batman aids the police in fighting the escaped Arkham Asylum convicts in Batman Begins?', 'answer': 'the Narrows', 'category': 'Christopher Nolan'}, {'question': "Who played McConaughey's father-in-law in Interstellar?", 'answer': 'John Lithgow', 'category': 'Christopher Nolan'}, {'question': "In National Lampoon's Vacation, the Griswolds set out in their station wagon toward a fun-filled time at what?", 'answer': 'Walley World', 'category': '1980s'}, {'question': "Who delivered pizza as Mookie in 1989's Do the Right Thing?", 'answer': 'Spike Lee', 'category': '1980s'}, {'question': 'Name the 1989 film based on the synopsis: an accident puts the consciousness of an elderly dream researcher into the body of a bratty teenager. The problem? The kid prefers the dreamworld limbo to real life.', 'answer': 'Dream a Little Dream', 'category': '1980s'}, {'question': 'Other than his synthesizer, what instrument does Ferris Bueller play while waiting for Cameron to pick him up?', 'answer': 'a clarinet', 'category': '1980s'}, {'question': 'In what movie do Christopher Walken and Sean Penn play father and son?', 'answer': 'At Close Range', 'category': '1980s'}, {'question': "Which actress played Darien, the object of Bud Fox's affection in the film Wall Street?", 'answer': 'Daryl Hannah', 'category': '1980s'}, {'question': 'What 1987 chick flick had a 2004 sequel that was subtitled Havana Nights?', 'answer': 'Dirty Dancing', 'category': 'Dramas'}, {'question': 'What was the name of the sequel to the classic Chinatown?', 'answer': 'The Two Jakes', 'category': 'Crime'}, {'question': 'Which musical features songs such as "Climb Ev\'ry Mountain" and "My Favorite Things"?', 'answer': 'The Sound of Music', 'category': 'Scores & Soundtracks'}, {'question': 'In what town does Lightning McQueen find himself when he meets Sally and Mater in Cars?', 'answer': 'Radiator Springs', 'category': 'Pixar'}, {'question': 'Idealistic Chris Taylor discovers the horrors of Vietnam and infighting between Sergeants Barnes and Elias in this war movie.', 'answer': 'Platoon', 'category': 'War'}, {'question': 'In which Northwestern U.S. state does the 1998 film Clay Pigeons take place?', 'answer': 'Montana', 'category': '1990s'}, {'question': 'In Kubo and the Two Strings, the character of Hanzo is of what relation to Kubo?', 'answer': 'his father', 'category': 'Animated'}, {'question': 'Matt Bomer played the assassin John Boy in what 2016 film?', 'answer': 'The Nice Guys', 'category': 'Comedies'}, {'question': 'Who played the rig supervisor Jimmy Harrell in Deepwater Horizon?', 'answer': 'Kurt Russell', 'category': 'Dramas'}, {'question': 'How often does the creature in Jeepers Creepers awaken and feed?', 'answer': 'every 23 years', 'category': 'Horror/Thriller'}, {'question': "By what legendary name did Mark Strong's character go by in Kingsman: The Secret Service?", 'answer': 'Merlin', 'category': 'Action/Adventure'}, {'question': 'What country did the Turtles time travel back to in Teenage Mutant Ninja Turtles III?', 'answer': 'Japan', 'category': 'Family'}, {'question': "Who plays Tom Cruise's unit commander Master Sergeant Farell in Edge of Tomorrow?", 'answer': 'Bill Paxton', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Director Jonathan Lynn collaborated with what famed comedy director on the screenplay for Clue?', 'answer': 'John Landis', 'category': '1980s'}, {'question': 'Who play the two main vampires in Interview with the Vampire?', 'answer': 'Brad Pitt, Tom Cruise', 'category': '1990s'}, {'question': 'In Jurassic Park, a modified shaving cream can was used by Dennis to smuggle out dinosaur embryos. What brand of shaving cream was it?', 'answer': 'Barbasol', 'category': '1990s'}, {'question': 'What 90s movie features Bruce Willis playing a Pittsburgh cop named Tom Hardy?', 'answer': 'Striking Distance', 'category': '1990s'}, {'question': "In The Shawshank Redemption, what bombshell was on the poster in Andy's cell?", 'answer': 'Rita Hayworth', 'category': '1990s'}, {'question': 'Who plays the wicked Queen in Snow White and the Huntsman?', 'answer': 'Charlize Theron', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played protagonist Tristan Thorn in 2007's Stardust?", 'answer': 'Charlie Cox', 'category': 'Fantasy/Sci-Fi'}, {'question': "What do the aliens give Danny Glover's character in Predator 2?", 'answer': 'a flintlock pistol', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the futuristic 1982 film Blade Runner, what is a blade runner?', 'answer': 'a person who retires replicants', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Snow White and the Seven Dwarfs, where do the dwarfs work?', 'answer': 'in a mine', 'category': 'Disney'}, {'question': 'What popstar originally recorded the song "Colors of the Wind" for Disney\'s Pocahontas?', 'answer': 'Vanessa Williams', 'category': 'Scores & Soundtracks'}, {'question': 'What 2006 title character asks in prayer "Precious Father, why have you given me this desire to wrestle and then made me such a stinky warrior?"?', 'answer': 'Nacho Libre', 'category': 'Quotes'}, {'question': "In the movie Commando, what is the name of the island where the evil dictator is holding John Matrix's daughter?", 'answer': 'Val Verde', 'category': 'Action/Adventure'}, {'question': "How many brothers does Merida have in Pixar's Brave?", 'answer': '3 brothers', 'category': 'Animated'}, {'question': 'Who directed Children of Men?', 'answer': 'Alfonso Cuarón', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In A Few Good Men, what order does Jack Nicholson give his men that led to the death of Marine Private Santiago?', 'answer': 'a code red', 'category': 'Dramas'}, {'question': 'Which cast member of A Fish Called Wanda also wrote the screenplay?', 'answer': 'John Cleese', 'category': 'Comedies'}, {'question': "Tim Allen plays a businessman who learns he has a 13-year-old son who's been raised in the jungle whom he brings back to his home in New York City in this family comedy.", 'answer': 'Jungle 2 Jungle', 'category': 'Family'}, {'question': 'The Ghost Dimension is an entry in which horror franchise?', 'answer': 'Paranormal Activity', 'category': 'Horror/Thriller'}, {'question': 'In Back to the Future, George McFly fell out of a tree into the middle of the street. Why was he in the tree?', 'answer': 'he was spying on Lorraine', 'category': '1980s'}, {'question': 'What year was Caddyshack released?', 'answer': '1980', 'category': 'N/A'}, {'question': 'Name the 90s comedy with the tagline "Trust Me".', 'answer': 'Liar Liar', 'category': 'Comedies'}, {'question': "In Superbad, what state does McLovin's fake driver's license state that he is from?", 'answer': 'Hawaii', 'category': 'Comedies'}, {'question': 'In Zombieland, Eisenberg and Harrelson find a Hostess truck full of snacks. What kind of snack came tumbling out when they opened the door?', 'answer': 'Sno Balls', 'category': 'Comedies'}, {'question': 'Who played Gloria, the nyphomaniac who is obsessed with Jeremy in Wedding Crashers?', 'answer': 'Isla Fisher', 'category': 'Comedies'}, {'question': 'Hans Zimmer won his only Academy Award for Best Original Score for which film?', 'answer': 'The Lion King', 'category': 'Scores & Soundtracks'}, {'question': 'What hit song was written and performed by R. Kelly for Space Jam?', 'answer': 'I Believe I Can Fly', 'category': 'Scores & Soundtracks'}, {'question': "Who composed the score for 1960's The Magnificent Seven?", 'answer': 'Elmer Bernstein', 'category': 'Scores & Soundtracks'}, {'question': 'What group recorded "Don\'t You (Forget About Me)" for The Breakfast Club?', 'answer': 'Simple Mind', 'category': 'Scores & Soundtracks'}, {'question': 'Who is the proprietor of the tavern that Han Solo, Rey, and Finn visit in The Force Awakens?', 'answer': 'Maz Kanata', 'category': 'Star Wars'}, {'question': 'What Schwarzenegger film had the following tagline: "This isn\'t the movies anymore."?', 'answer': 'Last Action Hero', 'category': 'Sly & Arnie'}, {'question': 'What two comedic actors teamed up for Silver Streak, Stir Crazy, and See No Evil, Hear No Evil?', 'answer': 'Gene Wilder, Richard Pryor', 'category': 'Famous Actors & Actresses'}, {'question': 'The Bond girl Pussy Galore appears in what Bond movie?', 'answer': 'Goldfinger', 'category': 'Action/Adventure'}, {'question': 'In That Thing You Do!, the band the Wonders hail from which state?', 'answer': 'Pennsylvania', 'category': '1990s'}, {'question': 'In what 80s war film does Bruce Willis play an emotionally battered Vietnam War vet?', 'answer': 'In Country', 'category': 'War'}, {'question': 'What Game of Thrones star voices the dragon trapper Eret who sells captured dragons to Drago in How to Train Your Dragon 2?', 'answer': 'Kit Harington', 'category': 'Animated'}, {'question': 'What meal that was offered to the passengers in Airplane! made everyone sick?', 'answer': 'fish', 'category': 'Comedies'}, {'question': 'In which film does Jake Gyllenhaal ride around Los Angeles in a Dodge Challenger?', 'answer': 'Nightcrawler', 'category': 'Dramas'}, {'question': 'Mary Elizabeth Winstead played Arctic-bound paleontologist Kate Lloyd in what 2011 thriller?', 'answer': 'The Thing', 'category': 'Horror/Thriller'}, {'question': "In 2008's Wanted, what MCU star plays Barry, Wesley's friend and colleague that has a side relationship with Wesley's girlfriend?", 'answer': 'Chris Pratt', 'category': 'Action/Adventure'}, {'question': 'Tim Curry plays the devious Cardinal Richelieu in what 1993 Disney film?', 'answer': 'The Three Musketeers', 'category': 'Family'}, {'question': 'In Looper, who plays Sara, the woman who lives on the farm with her son where young Joe takes refuge?', 'answer': 'Emily Blunt', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Texas Midlands Banks are being targeted by robbers in what 2016 flick?', 'answer': 'Hell or High Water', 'category': 'New Releases'}, {'question': 'What 1986 movie begins with the narrative line "I was 12 going on 13 the first time I saw a dead human being."?', 'answer': 'Stand by Me', 'category': 'N/A'}, {'question': "In the 2011 biopic Moneyball, which American League Central team did the Oakland A's play in their attempt to win 20 consecutive games?", 'answer': 'the Kansas City Royals', 'category': 'Biopics'}, {'question': 'Who played the role of Althea Flynt in The People vs. Larry Flynt?', 'answer': 'Courtney Love', 'category': 'Biopics'}, {'question': "Liam Neeson played this Irish patriot in Neil Jordan's 1996 film.", 'answer': 'Michael Collins', 'category': 'Biopics'}, {'question': 'Who plays Della Bea Robinson in Ray?', 'answer': 'Kerry Washington', 'category': 'Biopics'}, {'question': "Who plays Frida Kahlo's husband, Diego Rivera, in the movie Frida?", 'answer': 'Alfred Molina', 'category': 'Biopics'}, {'question': 'Which outlet of print media did Steve Glass work for in the 2003 biographical drama Shattered Glass?', 'answer': 'The New Republic', 'category': 'Biopics'}, {'question': "What word of advice is whispered to Dustin Hoffman in 1967's The Graduate?", 'answer': 'plastics', 'category': 'Coming of Age'}, {'question': 'Who plays teenage Rolling Stone reporter William Miller in Almost Famous?', 'answer': 'Patrick Fugit', 'category': 'Coming of Age'}, {'question': 'Jeff Daniels and Laura Linney play a couple separating in what 2005 dramedy?', 'answer': 'The Squid and the Whale', 'category': 'Coming of Age'}, {'question': 'James Ponsoldt directed Miles Teller in which film?', 'answer': 'The Spectacular Now', 'category': 'Coming of Age'}, {'question': 'Who played the character of Chris Chambers in the film Stand by Me?', 'answer': 'River Phoenix', 'category': 'Coming of Age'}, {'question': "What is Ferris Bueller's key to faking out parents?", 'answer': 'clammy hands', 'category': 'Coming of Age'}, {'question': "What movie's soundtrack features a tune by its own fictional band the Soggy Bottom Boys?", 'answer': 'O Brother, Where Art Thou?', 'category': 'Scores & Soundtracks'}, {'question': 'Who played swashbuckler Captain Blood in the 1935 film Captain Blood?', 'answer': 'Errol Flynn', 'category': 'Classics'}, {'question': "Who plays Dalton's trusted ally Wade Garrett in the classic Road House?", 'answer': 'Sam Elliott', 'category': 'Action/Adventure'}, {'question': 'In Toy Story 3, what is the name of the child that Andy gives his toys to?', 'answer': 'Bonnie Anderson', 'category': 'Pixar'}, {'question': 'Who played Dade Murphy a.k.a. Crash Override alongside Angelina in the 1995 film Hackers?', 'answer': 'Jonny Lee Miller', 'category': 'Angelina Jolie'}, {'question': 'Who played Professor Brody, who was conducting research to cure dog allergies in Cats & Dogs?', 'answer': 'Jeff Goldblum', 'category': 'Family'}, {'question': 'On Stranger Tides is which entry in the Pirates of the Caribbean film franchise?', 'answer': '4', 'category': 'Action/Adventure'}, {'question': 'In the film Balto, what kind of animal is Balto?', 'answer': 'a wolfdog', 'category': 'Animated'}, {'question': 'What office rom-com stars Melanie Griffith, Sigourney Weaver, and Harrison Ford?', 'answer': 'Working Girl', 'category': 'Comedies'}, {'question': 'For what film did Hilary Swank win her first Oscar?', 'answer': "Boys Don't Cry", 'category': 'Dramas'}, {'question': 'Name the award-winning actress who played the titular character in Nanny McPhee.', 'answer': 'Emma Thompson', 'category': 'Family'}, {'question': 'In what blockbuster 1982 flick does Dee Wallace play the mother of three children?', 'answer': 'E.T. the Extra-Terrestrial', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the bloody cautionary tale for anyone traveling abroad, Hostel?', 'answer': 'Eli Roth', 'category': 'Horror/Thriller'}, {'question': 'In Guardians of the Galaxy, Chris Pratt plays Star-Lord, whose birth name is what?', 'answer': 'Peter Quill', 'category': 'Comic Book'}, {'question': 'Sydney Pollack won the Best Director Oscar for which film?', 'answer': 'Out of Africa', 'category': 'Oscars'}, {'question': 'For which film did singer actress Cher win her only Academy Award?', 'answer': 'Moonstruck', 'category': 'Oscars'}, {'question': 'In which film does Barbra Streisand sing the Academy Award nominated song "Papa, Can You Hear Me?"?', 'answer': 'Yentl', 'category': 'Oscars'}, {'question': 'In the Oscar-winning film Argo, who plays John Chambers, a Hollywood makeup artist who had previously crafted disguises for the CIA?', 'answer': 'John Goodman', 'category': 'Oscars'}, {'question': 'Jack Nicholson has received 12 Oscar nominations. What film did he receive his first nomination for?', 'answer': 'Easy Rider', 'category': 'Oscars'}, {'question': 'Actress Ingrid Bergman won her Best Actress Academy Award for which film?', 'answer': 'Anastasia', 'category': 'Oscars'}, {'question': 'In the 90s film Get Shorty, who plays mobster Ray Barboni?', 'answer': 'Dennis Farina', 'category': '1990s'}, {'question': 'Who played Birdie in the 1994 basketball drama Above the Rim?', 'answer': 'Tupac Shakur', 'category': '1990s'}, {'question': 'Robin Williams won an Oscar for Best Supporting Actor for what 90s film?', 'answer': 'Good Will Hunting', 'category': '1990s'}, {'question': 'Who played Albert Einstein in the 1994 romantic comedy I.Q.?', 'answer': 'Walter Matthau', 'category': '1990s'}, {'question': 'Who stars opposite Harrison Ford in the film Six Days, Seven Nights?', 'answer': 'Anne Heche', 'category': '1990s'}, {'question': "Who plays the beautiful scientist Dr. Emma Russell in 1997's The Saint?", 'answer': 'Elisabeth Shue', 'category': '1990s'}, {'question': 'Billy Joel voices the streetwise Dodger in what 1988 animated film?', 'answer': 'Oliver & Company', 'category': 'Disney'}, {'question': 'Who played the overachieving high schooler Tracy Flick in the movie Election?', 'answer': 'Reese Witherspoon', 'category': 'Rom-Coms'}, {'question': 'Who did Paul Newman play in The Left Handed Gun?', 'answer': 'Billy the Kid', 'category': 'Westerns'}, {'question': 'State of the Union is the sequel title to what movie?', 'answer': 'XXX', 'category': 'Action/Adventure'}, {'question': 'Dakota Fanning voices a girl who discovers a doorway to a world that closely resembles her own in what 2009 animated fantasy?', 'answer': 'Coraline', 'category': 'Animated'}, {'question': 'What character did Raul Julia play in the Addams Family movies?', 'answer': 'Gomez Addams', 'category': 'Comedies'}, {'question': 'Sean Penn earned an Oscar nomination for playing a mentally challenged father trying to raise his daughter in what 2001 film?', 'answer': 'I Am Sam', 'category': 'Dramas'}, {'question': 'Danny Glover manages a Major League Baseball team that includes pitcher Tony Danza in what 1994 flick?', 'answer': 'Angels in the Outfield', 'category': 'Family'}, {'question': 'In the Marvel hit Ant-Man, who played the role of Hope, the daughter of Hank Pym?', 'answer': 'Evangeline Lilly', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What actress stepped into the famous role of Clarice Starling for the film Hannibal?', 'answer': 'Julianne Moore', 'category': 'Horror/Thriller'}, {'question': 'Name a film directed by Ivan Reitman that featured Arnold Schwarzenegger.', 'answer': 'Twins, Kindergarten Cop, Dave, Junior', 'category': 'Directors'}, {'question': "In Armageddon, what is Ben Affleck's character's first name?", 'answer': 'A.J.', 'category': 'Action/Adventure'}, {'question': "In Commando, what is Cindy's occupation?", 'answer': 'a flight attendant', 'category': 'Action/Adventure'}, {'question': 'In Furious 7, what is the name of the tech that Dom, Brian, and crew must acquire and protect from getting into the hands of mercenaries?', 'answer': "the God's Eye", 'category': 'Action/Adventure'}, {'question': 'In The Losers, the team is betrayed by one of their own. Who played the betrayer, Rogue?', 'answer': 'Idris Elba', 'category': 'Action/Adventure'}, {'question': "In Ocean's Eleven, George Clooney is trying to win Julia back from which actor who plays Benedict?", 'answer': 'Andy García', 'category': 'Julia Roberts'}, {'question': "For whom is Julia pining for in My Best Friend's Wedding?", 'answer': 'Dermot Mulroney', 'category': 'Julia Roberts'}, {'question': "What was the name of Julia's character in Steel Magnolias?", 'answer': 'Shelby Eatenton-Latcherie', 'category': 'Julia Roberts'}, {'question': "Which actor, who has also appeared in a Batman movie, plays Julia's motorcyclist boyfriend in Erin Brockovich?", 'answer': 'Aaron Eckhart', 'category': 'Julia Roberts'}, {'question': 'What was the first feature film originally presented with sound?', 'answer': 'The Jazz Singer', 'category': 'Classics'}, {'question': "What is Michael Imperioli's character's name in Goodfellas?", 'answer': 'Spider', 'category': 'Crime'}, {'question': 'What Jolie film has the tagline "Born into Wealth. Groomed by the Elite. Trained for Combat."?', 'answer': 'Lara Croft: Tomb Raider', 'category': 'Angelina Jolie'}, {'question': 'Alex Owens is a steel worker by day and a burlesque dancer by night in this 80s drama.', 'answer': 'Flashdance', 'category': '1980s'}, {'question': 'What is the name of the pizza restaurant in the Toy Story films?', 'answer': 'Pizza Planet', 'category': 'Animated'}, {'question': 'What was the name of the huge character in Police Academy played by NFL star Bubba Smith?', 'answer': 'Moses Hightower', 'category': 'Comedies'}, {'question': "In The Imitation Game, who plays Joan Clarke, a Cambridge graduate that surpasses Turing's test, but her parents won't allow her to work with the male cryptographers?", 'answer': 'Keira Knightley', 'category': 'Dramas'}, {'question': "You'll find health inspector Matthew Bennell in this 1970s horror film.", 'answer': 'Invasion of the Body Snatchers', 'category': 'Horror/Thriller'}, {'question': "In Mission: Impossible – Ghost Protocol, who played the female operative on Ethan's team, Jane Carter?", 'answer': 'Paula Patton', 'category': 'Action/Adventure'}, {'question': "Who provided the voice of Shere Khan, the villain tiger in 2016's The Jungle Book?", 'answer': 'Idris Elba', 'category': 'Family'}, {'question': 'Who plays Deputy Jackson Lamb in Super 8?', 'answer': 'Kyle Chandler', 'category': 'Fantasy/Sci-Fi'}, {'question': "Kyra Sedgwick plays Hailee Steinfeld's mother in what 2016 acclaimed drama?", 'answer': 'The Edge of Seventeen', 'category': 'New Releases'}, {'question': 'What was the first film to receive an Academy Award nomination in each of the four performance categories?', 'answer': 'My Man Godfrey', 'category': 'Oscars'}, {'question': 'Titanic and La La Land are tied with what other film for the most Oscar nominations ever at 14?', 'answer': 'All About Eve', 'category': 'Oscars'}, {'question': 'Michael Douglas won his first Oscar for producing which film?', 'answer': "One Flew Over the Cuckoo's Nest", 'category': 'Oscars'}, {'question': 'What Oscar-nominated actor played Richard Nixon in the 2008 drama Frost/Nixon?', 'answer': 'Frank Langella', 'category': 'Oscars'}, {'question': 'The action films The Fifth Element, Con Air, and Batman & Robin were all released in what year?', 'answer': '1997', 'category': 'Release Dates'}, {'question': 'The original Ghostbusters movie was released in June of what year?', 'answer': '1984', 'category': 'Release Dates'}, {'question': 'What year saw the release of the instant classic Toy Story 3?', 'answer': '2010', 'category': 'Release Dates'}, {'question': 'The Sean Penn thriller Mystic River was released in what year?', 'answer': '2003', 'category': 'Release Dates'}, {'question': "What is the name of Kane's private estate in Citizen Kane?", 'answer': 'Xanadu', 'category': 'Classics'}, {'question': 'Although they both appeared in The Godfather Part II, Al Pacino and Robert De Niro had never shared a scene together until what movie?', 'answer': 'Heat', 'category': 'Crime'}, {'question': 'Who directed School of Rock?', 'answer': 'Richard Linklater', 'category': 'Directors'}, {'question': 'In X-Men: First Class, what real event do the X-Men try to prevent from happening in the 1960s?', 'answer': 'the Cuban Missile Crisis', 'category': 'Comic Book'}, {'question': 'What was the name of the man who took Marty in shortly after he arrived in the Old West in Back to the Future III?', 'answer': 'Seamus McFly', 'category': 'Back to the Future'}, {'question': 'Kevin Spacey voices a villainous grasshopper in which Pixar flick?', 'answer': "A Bug's Life", 'category': 'Pixar'}, {'question': "What is the name of Kristoff's reindeer pal in Disney's Frozen?", 'answer': 'Sven', 'category': 'Animated'}, {'question': 'What is the name of the backpack-like piece of equipment and its apparatus used to capture ghosts in the original Ghostbusters film?', 'answer': 'a proton pack', 'category': 'Comedies'}, {'question': 'In The Martian, what kind of vegetable does Mark Watney grow on Mars?', 'answer': 'potatoes', 'category': 'Dramas'}, {'question': 'A Book of the Dead and a remote Tennessee cabin were major elements of which 1983 horror film?', 'answer': 'The Evil Dead', 'category': 'Horror/Thriller'}, {'question': 'Who plays Gamemaker Plutarch Heavensbee in Catching Fire?', 'answer': 'Philip Seymour Hoffman', 'category': 'Action/Adventure'}, {'question': "In 2011's The Muppets, what comedy celebrity did the Muppets kidnap for their show?", 'answer': 'Jack Black', 'category': 'Family'}, {'question': 'Who played the character known as Ava in Ex Machina?', 'answer': 'Alicia Vikander', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the movies Dallas Buyers Club, Wild, and Demolition?', 'answer': 'Jean-Marc Vallée', 'category': 'Directors'}, {'question': 'In Dumbo, where is Mrs. Jumbo when the stork delivers her baby?', 'answer': 'on a circus train', 'category': 'Animated'}, {'question': 'In Shrek 2, the voice of Doris the ugly stepsister is provided by what talk show host?', 'answer': 'Larry King', 'category': 'Animated'}, {'question': 'What is the name of the character voiced by David Schwimmer in the Madagascar series?', 'answer': 'Melman', 'category': 'Animated'}, {'question': "Which of Mrs. Brisby's children is sick with pneumonia in Don Bluth's The Secret of NIMH?", 'answer': 'Timothy Brisby', 'category': 'Animated'}, {'question': 'In Arrival, in what U.S. state does the alien ship choose to park?', 'answer': 'Montana', 'category': 'New Releases'}, {'question': "In Get Out, who did Chris' friend Rod work for?", 'answer': 'the TSA', 'category': 'New Releases'}, {'question': 'In La La Land, to tease Sebastian, what song did Mia request the 80s cover band to play at the party?', 'answer': 'I Ran (So Far Away)', 'category': 'New Releases'}, {'question': 'Who provided the voice for Barbara Gordon in The Lego Batman Movie?', 'answer': 'Rosario Dawson', 'category': 'New Releases'}, {'question': "Who composed the score for Sam Raimi's 2002 hit Spider-Man?", 'answer': 'Danny Elfman', 'category': 'Scores & Soundtracks'}, {'question': "On which holiday do Sam and Annie meet at the end of 1993's Sleepless in Seattle?", 'answer': "Valentine's Day", 'category': 'Rom-Coms'}, {'question': 'What actress was cast alongside Arnold Schwarzenegger in Total Recall?', 'answer': 'Sharon Stone', 'category': 'Fantasy/Sci-Fi'}, {'question': '"Once Upon a Dream" is a song from what Disney animated film?', 'answer': 'Sleeping Beauty', 'category': 'Disney'}, {'question': 'Who played the twins Quicksilver and Scarlet Witch in Avengers: Age of Ultron?', 'answer': 'Aaron Taylor-Johnson, Elizabeth Olsen', 'category': 'Marvel'}, {'question': 'Name the 2008 drama where Angelina Jolie starred as a grief-stricken mother who tries to pass off an imposter as her own missing child.', 'answer': 'Changeling', 'category': 'Angelina Jolie'}, {'question': "Who plays Ichabod Crane in Tim Burton's Sleepy Hollow?", 'answer': 'Johnny Depp', 'category': 'Horror/Thriller'}, {'question': "What comedian voiced Horton the Elephant in 2008's Horton Hears a Who!?", 'answer': 'Jim Carrey', 'category': 'Animated'}, {'question': 'What 2000s film starred Michael Douglas, Catherine Zeta-Jones, and Benicio del Toro?', 'answer': 'Traffic', 'category': 'Dramas'}, {'question': "What is the name of Tony Stark's personal assistant and possible love interest in Iron Man?", 'answer': 'Virginia "Pepper" Potts', 'category': 'Comic Book'}, {'question': 'In what funny flick does Arnold Schwarzenegger have a pet ferret?', 'answer': 'Kindergarten Cop', 'category': 'Action Comedy'}, {'question': 'Which actress plays Barbara Maitland in the Tim Burton classic Beetlejuice?', 'answer': 'Geena Davis', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What film stars Woody Harrelson as a bowler that loses his hand in an accident?', 'answer': 'Kingpin', 'category': 'Comedies'}, {'question': 'Which Tom Cruise movie had the tagline "When he pours, he reigns."?', 'answer': 'Cocktail', 'category': 'Taglines'}, {'question': 'Which actor has lost the most times after being nominated for an Academy Award?', 'answer': "Peter O'Toole (for Lawrence of Arabia; Becket; The Lion in Winter; Goodbye, Mr. Chips; The Ruling Class; The Stunt Man; My Favorite Year; Venus)", 'category': 'Famous Actors & Actresses'}, {'question': "Which actor played identical twins in David Cronenberg's Dead Ringers?", 'answer': 'Jeremy Irons', 'category': 'Famous Actors & Actresses'}, {'question': 'Which famous actress changed her name from Norma Jeane Mortenson?', 'answer': 'Marilyn Monroe', 'category': 'Famous Actors & Actresses'}, {'question': 'Which actress stars in Foul Play, Wildcats, and Death Becomes Her?', 'answer': 'Goldie Hawn', 'category': 'Famous Actors & Actresses'}, {'question': 'What actor has appeared in all the following three franchises: James Bond, Lord of the Rings, and Star Wars?', 'answer': 'Christopher Lee (in The Man with the Golden Gun; The Fellowship of the Ring, The Two Towers; Attack of the Clones, Revenge of the Sith)', 'category': 'Famous Actors & Actresses'}, {'question': "Who played Amber Waves in director Paul Thomas Anderson's breakout hit Boogie Nights?", 'answer': 'Julianne Moore', 'category': 'Famous Actors & Actresses'}, {'question': 'In what Stallone action film does he utter the line "You\'re a disease, and I\'m the cure."?', 'answer': 'Cobra', 'category': 'Action/Adventure'}, {'question': "Who played Guinevere in 1995's First Knight?", 'answer': 'Julia Ormond', 'category': 'Action/Adventure'}, {'question': "What is Jason Statham's character's first name in The Transporter?", 'answer': 'Frank', 'category': 'Action/Adventure'}, {'question': 'Nukem is the name of the fictional board game advertised in what 1987 action flick?', 'answer': 'RoboCop', 'category': 'Action/Adventure'}, {'question': 'In Jurassic Park, when Alan Grant is talking about the Velociraptor at the beginning of the film, the boy compares the dinosaur to a six-foot what?', 'answer': 'turkey', 'category': 'Action/Adventure'}, {'question': "What singer made her acting debut in 2012's Battleship?", 'answer': 'Rihanna', 'category': 'Action/Adventure'}, {'question': "Who directed the Ocean's trilogy?", 'answer': 'Steven Soderbergh', 'category': 'Directors'}, {'question': "What NFL team's mascot was Ace Ventura hired to find in Ace Ventura: Pet Detective?", 'answer': 'the Miami Dolphins', 'category': 'Comedies'}, {'question': "Ed O'Neill and Rick Moranis are football coaches at odds in what 1990s movie?", 'answer': 'Little Giants', 'category': 'Family'}, {'question': 'Which actress played Mother Superior in Sister Act?', 'answer': 'Maggie Smith', 'category': '1990s'}, {'question': 'Jim Carrey has starred in three superhero movies. Name two of the three movies.', 'answer': 'The Mask, Batman Forever, Kick-Ass 2', 'category': 'Comic Book'}, {'question': 'Complete the phrase from the 1948 classic The Treasure of the Sierra Madre: "Badges?... We ain\'t got no badges. We don\'t need no badges. I don\'t have to show you any" what?', 'answer': 'stinking badges', 'category': 'Quotes'}, {'question': "Who plays the title role in 1939's Mr. Smith Goes to Washington?", 'answer': 'James Stewart', 'category': 'Dramas'}, {'question': 'Christian Bale plays John Connor in which Terminator film?', 'answer': 'Terminator Salvation', 'category': 'Fantasy/Sci-Fi'}, {'question': "What was the name of the monkey in Disney's Aladdin?", 'answer': 'Abu', 'category': 'Animated'}, {'question': 'Name the movie featuring the quote "greed, for lack of a better word, is good.".', 'answer': 'Wall Street', 'category': 'Quotes'}, {'question': 'Which Marvel film marks the first appearance of Scarlett Johansson as Black Widow?', 'answer': 'Iron Man 2', 'category': 'Action/Adventure'}, {'question': 'Who starred as the male lead in the 2005 supernatural thriller White Noise?', 'answer': 'Michael Keaton', 'category': 'Horror/Thriller'}, {'question': 'Name the movie from the description: a family determined to get their young daughter into the finals of a beauty pageant take a cross-country trip in their Volkswagen bus.', 'answer': 'Little Miss Sunshine', 'category': 'Comedies'}, {'question': 'What 80s comedy features an EM-50 Urban Assault Vehicle, a road trip into Czechoslovakia, and the "Aunt Jemima treatment"?', 'answer': 'Stripes', 'category': '1980s'}, {'question': "Who plays assistant coach Red Dawson in 2006's We Are Marshall?", 'answer': 'Matthew Fox', 'category': 'Sports'}, {'question': "What high school subject did Joel Edgerton's character teach in the 2011 film Warrior?", 'answer': 'physics', 'category': 'Sports'}, {'question': 'In the 1989 movie Major League, what was the profession of Rachel Phelps prior to inheriting ownership of the Cleveland Indians?', 'answer': 'a Las Vegas showgirl', 'category': 'Sports'}, {'question': "What Talladega Nights actor also starred in 1990's Days of Thunder?", 'answer': 'John C. Reilly', 'category': 'Sports'}, {'question': "In 1978's Superman, how did Pa Kent die?", 'answer': 'a heart attack', 'category': 'Comic Book'}, {'question': "Who played Gwen Stacy in Sam Raimi's Spider-Man 3?", 'answer': 'Bryce Dallas Howard', 'category': 'Comic Book'}, {'question': 'In X-Men: First Class, what university did Charles Xavier graduate from?', 'answer': 'the University of Oxford', 'category': 'Comic Book'}, {'question': 'In Iron Man, in which casino was Tony supposed to accept his award?', 'answer': 'Caesars Palace', 'category': 'Comic Book'}, {'question': 'Besides Anne Hathaway, who was nominated for an Oscar for Les Misérables?', 'answer': 'Hugh Jackman', 'category': 'Famous Actors & Actresses'}, {'question': 'Who played the Russian doctor delivering a baby in the Hugh Grant comedy Nine Months?', 'answer': 'Robin Williams', 'category': 'Comedies'}, {'question': "Who played Tim Allen's boss at the toy company in The Santa Clause?", 'answer': 'Peter Boyle', 'category': 'Holiday'}, {'question': 'Cinderella had one wicked stepmother and how many jealous stepsisters?', 'answer': '2 jealous stepsisters', 'category': 'Animated'}, {'question': 'What acclaimed actress played ex-Marine teacher LouAnne Johnson in the hit film Dangerous Minds?', 'answer': 'Michelle Pfeiffer', 'category': 'Dramas'}, {'question': 'Who starred as ex-intelligence officer Sam in the 1998 crime thriller Ronin?', 'answer': 'Robert De Niro', 'category': 'Action/Adventure'}, {'question': 'What was the name of the demigod played by the Rock in the Disney hit Moana?', 'answer': 'Maui', 'category': 'New Releases'}, {'question': 'Who directed, and had a supporting role as producer Fred Friendly in, the 2005 critically acclaimed drama Good Night, and Good Luck?', 'answer': 'George Clooney', 'category': 'Directors'}, {'question': 'Who starred as the freshly dumped Hawaii-bound Peter Bretter in Forgetting Sarah Marshall?', 'answer': 'Jason Segel', 'category': 'Comedies'}, {'question': "What actress plays Pandora resident Neytiri, the Na'vi who falls in love with Jake Sully in Avatar?", 'answer': 'Zoe Saldana', 'category': 'Fantasy/Sci-Fi'}, {'question': 'A creepy nun and what other popular childhood terror are featured in The Conjuring 2?', 'answer': 'the Crooked Man', 'category': 'Horror/Thriller'}, {'question': 'Which actor plays the conniving Eric Gordon in Billy Madison?', 'answer': 'Bradley Whitford', 'category': 'N/A'}, {'question': 'What comedy icon died while filming Wagons East?', 'answer': 'John Candy', 'category': 'Westerns'}, {'question': 'Who portrays gunfighter Jack Wilson in the 1953 classic Shane?', 'answer': 'Jack Palance', 'category': 'Westerns'}, {'question': "A small-time rancher agrees to hold a captured outlaw who's awaiting a train to go to court in Yuma in 2007's 3:10 to Yuma. Who played the rancher?", 'answer': 'Christian Bale', 'category': 'Westerns'}, {'question': "Who provided the score for Sergio Leone's classic The Good, the Bad and the Ugly?", 'answer': 'Ennio Morricone', 'category': 'Westerns'}, {'question': 'Kevin Kline, Danny Glover, and Kevin Costner team up to fight the corruption in what western?', 'answer': 'Silverado', 'category': 'Westerns'}, {'question': 'In Tombstone, what does each member of the "Cowboys" gang wear?', 'answer': 'a red sash', 'category': 'Westerns'}, {'question': "Who played Soviet sub commander Marko Ramius in 1990's The Hunt for Red October?", 'answer': 'Sean Connery', 'category': 'Action/Adventure'}, {'question': "In what foreign country does Maggie Grace's character get kidnapped in the hit film Taken?", 'answer': 'France', 'category': 'Action/Adventure'}, {'question': 'Lucy Liu plays O-Ren Ishii in what action flick?', 'answer': 'Kill Bill: Volume 1', 'category': 'Action/Adventure'}, {'question': 'What year saw the theatrical releases of famous action movies Lethal Weapon, RoboCop, and Predator?', 'answer': '1987', 'category': 'Action/Adventure'}, {'question': "Kelly McGillis' Top Gun character Charlotte Blackwood goes by what nickname?", 'answer': 'Charlie', 'category': 'Action/Adventure'}, {'question': 'Which basketball star co-starred with Van Damme in the 1997 action film Double Team?', 'answer': 'Dennis Rodman', 'category': 'Action/Adventure'}, {'question': 'Who directed the disaster film 2012?', 'answer': 'Roland Emmerich', 'category': 'Directors'}, {'question': 'Name the British actress best known for playing Southern women in Gone with the Wind and A Streetcar Named Desire.', 'answer': 'Vivien Leigh', 'category': 'Classics'}, {'question': 'What actor plays Western University basketball coach Pete Bell in Blue Chips?', 'answer': 'Nick Nolte', 'category': 'Sports'}, {'question': 'Which Al Pacino film features the quote "You\'re out of order! You\'re out of order! The whole trial is out of order! They\'re out of order!"?', 'answer': '...And Justice for All.', 'category': 'Quotes'}, {'question': 'Herbie Rides Again was the sequel to what Disney classic?', 'answer': 'The Love Bug', 'category': 'Disney'}, {'question': 'What type of product do salesmen Paul Rudd and Seann William Scott hock in Role Models?', 'answer': 'energy drinks', 'category': 'Comedies'}, {'question': 'John Cho and Kal Penn play which two characters who have had stonerrific adventures in a trilogy of films?', 'answer': 'Harold Lee, Kumar Patel', 'category': 'Comedies'}, {'question': 'The Long Kiss Goodnight stars which actress as a schoolteacher who has a past as an assassin?', 'answer': 'Geena Davis', 'category': 'Action/Adventure'}, {'question': 'What Oscar-winning actress played Jinx opposite Pierce Brosnan in the Bond film Die Another Day?', 'answer': 'Halle Berry', 'category': 'Famous Actors & Actresses'}, {'question': 'Name the film that earned both stars Denzel Washington and Viola Davis Oscar nominations.', 'answer': 'Fences', 'category': 'New Releases'}, {'question': 'You\'ll find veteran groupie and self-proclaimed "Band-Aid" Penny Lane in what 2001 drama?', 'answer': 'Almost Famous', 'category': 'Dramas'}, {'question': 'Jim Dear gives his wife Darling a Cocker Spaniel puppy for Christmas in which Disney classic?', 'answer': 'Lady and the Tramp', 'category': 'Animated'}, {'question': "What actor stars as Roy Neary, the witness of a UFO in 1977's Close Encounters of the Third Kind?", 'answer': 'Richard Dreyfuss', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Robert Eggers directed what 2016 horror film based on 1600s New England folklore?', 'answer': 'The Witch', 'category': 'Horror/Thriller'}, {'question': 'In Raiders of the Lost Ark, Sallah prevents Indy from eating poisoned food. What was the food that was poisoned?', 'answer': 'dates', 'category': 'N/A'}, {'question': 'In When Harry Met Sally..., while driving to New York, Harry and Sally debate the ending of what classic film?', 'answer': 'Casablanca', 'category': 'Rom-Coms'}, {'question': "What comedy starring Channing Tatum and Amanda Bynes is an adaptation of Shakespeare's Twelfth Night?", 'answer': "She's the Man", 'category': 'Rom-Coms'}, {'question': 'In Bridesmaids, after the engagement party, Annie goes home and bakes what for herself?', 'answer': 'a cupcake', 'category': 'Rom-Coms'}, {'question': "In 500 Days of Summer, what is Tom's favorite place in all of Los Angeles?", 'answer': 'a park bench', 'category': 'Rom-Coms'}, {'question': "Who played Terry Leather in 2008's The Bank Job?", 'answer': 'Jason Statham', 'category': 'Crime'}, {'question': 'In the movie The Untouchables, actor Sean Connery, as Jim Malone, tells Kevin Costner\'s Eliot Ness that if Al Capone "sends one of yours to the hospital, you send one of his to" what place?', 'answer': 'the morgue', 'category': 'Crime'}, {'question': 'Name the movie from the quote: "You try to get something to eat around here and some son of a bitch comes up to you with a meat cleaver.".', 'answer': 'Bonnie and Clyde', 'category': 'Crime'}, {'question': 'Whose organization was finally able to take down Pacino in Scarface?', 'answer': 'Alejandro Sosa', 'category': 'Crime'}, {'question': "For how many years does the Genie tell Aladdin he's been trapped in the lamp?", 'answer': '10,000 years', 'category': 'Disney'}, {'question': "You'll find the gym Average Joe's and its owner Peter LaFleur in what film?", 'answer': 'Dodgeball: A True Underdog Story', 'category': 'Sports'}, {'question': 'What is the name of the young dinosaur protagonist in The Good Dinosaur?', 'answer': 'Arlo', 'category': 'Pixar'}, {'question': 'In the 2006 film Click, who played Morty, the mysterious man who gives Adam Sandler a remote that can control time and space?', 'answer': 'Christopher Walken', 'category': 'Comedies'}, {'question': 'What movie starring Don Cheadle depicts a hotel manager providing shelter to Tutsi refugees against the Hutu militia?', 'answer': 'Hotel Rwanda', 'category': 'Dramas'}, {'question': 'What Disney villain has a penchant for furs, smokes incessantly, and hates dogs?', 'answer': 'Cruella De Vil', 'category': 'Animated'}, {'question': 'How many total Rambo films have been released in theaters (as of June 2017)?', 'answer': '4 (First Blood, Rambo: First Blood Part II, Rambo III, Rambo)', 'category': 'Action/Adventure'}, {'question': "Who starred opposite Mel Gibson as Jimmy Shaker, an NYPD detective turned kidnapper in 1996's Ransom?", 'answer': 'Gary Sinise', 'category': '1990s'}, {'question': 'Name the movie from the quote: "Good morning, and in case I don\'t see ya, good afternoon, good evening, and good night!".', 'answer': 'The Truman Show', 'category': 'Quotes'}, {'question': 'In Sweet Home Alabama, what does Jake sell in his shop?', 'answer': 'glass sculptures', 'category': 'Rom-Coms'}, {'question': 'Who played Suzie Toller in the 1998 thriller Wild Things, along with Denise Richards and Matt Dillon?', 'answer': 'Neve Campbell', 'category': 'Horror/Thriller'}, {'question': "In 2016's Snowden, who played the lead role of Edward Snowden?", 'answer': 'Joseph Gordon-Levitt', 'category': 'New Releases'}, {'question': 'In Sing Street, what song do the boys shoot their first music video for?', 'answer': 'The Riddle of the Model', 'category': 'New Releases'}, {'question': 'In Fantastic Beasts and Where to Find Them, who played the nefarious Percival Graves?', 'answer': 'Colin Farrell', 'category': 'New Releases'}, {'question': 'What stand-up comedian voices Snowball the bunny in The Secret Life of Pets?', 'answer': 'Kevin Hart', 'category': 'New Releases'}, {'question': "Who played Judah Ben-Hur in 2016's Ben-Hur?", 'answer': 'Jack Huston', 'category': 'New Releases'}, {'question': "What was the subtitle for 2017's Underworld film?", 'answer': 'Blood Wars', 'category': 'New Releases'}, {'question': 'What is the name given to the birdlike creature in Up?', 'answer': 'Kevin', 'category': 'Pixar'}, {'question': 'What does the Abominable Snowman make for Mike and Sulley after they have been banished in Monsters, Inc.?', 'answer': 'snow cones', 'category': 'Pixar'}, {'question': 'Who voiced Sally the Porsche in the Pixar films Cars, Cars 2, and Cars 3?', 'answer': 'Bonnie Hunt', 'category': 'Pixar'}, {'question': 'In WALL-E, the lonely robot learns about love from watching a live-action clip of the song "It Only Takes a Moment" from what classic musical film?', 'answer': 'Hello, Dolly!', 'category': 'Pixar'}, {'question': 'In The Incredibles, Mr. Incredible hides behind the skeleton of a former superhero to avoid detection. What was the name of the superhero?', 'answer': 'Gazerbeam', 'category': 'Pixar'}, {'question': 'From which Pixar franchise is this quote: "Authority should derive from the consent of the governed, not from threat of force!"?', 'answer': 'Toy Story (in Toy Story 3)', 'category': 'Pixar'}, {'question': 'How many total RoboCop films have been released theatrically?', 'answer': "4 (1987's RoboCop, 2, 3, 2014's RoboCop)", 'category': 'Action/Adventure'}, {'question': 'Martin Scorsese lost Best Director for Goodfellas to what famous actor-turned-director in 1991 for a 1990 film?', 'answer': 'Kevin Costner (for Dances with Wolves)', 'category': 'Oscars'}, {'question': 'Who directed the 2014 Scarlett Johansson action flick Lucy?', 'answer': 'Luc Besson', 'category': 'Action/Adventure'}, {'question': 'What 2002 movie garnered Oscar nominations for writer Charlie Kaufman and his fictional brother Donald?', 'answer': 'Adaptation', 'category': 'Oscars'}, {'question': 'Who played the mild-mannered, bumbling bureaucrat Wikus van de Merwe in District 9?', 'answer': 'Sharlto Copley', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name one of the three veteran actors that starred in the Zach Braff directed heist movie Going in Style.', 'answer': 'Alan Arkin, Michael Caine, Morgan Freeman', 'category': 'New Releases'}, {'question': "What film had Daryl Hannah's character wooed by a big-nosed fire chief?", 'answer': 'Roxanne', 'category': 'Comedies'}, {'question': 'What lead actor made his feature film debut as Stanley in Holes?', 'answer': 'Shia LaBeouf', 'category': 'Family'}, {'question': 'Who plays Lars, who falls in love with a doll he orders online, in Lars and the Real Girl?', 'answer': 'Ryan Gosling', 'category': 'Rom-Coms'}, {'question': 'Liam Neeson plays Dr. David Morrow, who intends to study the psychological response to fear, in what 90s supernatural horror film?', 'answer': 'The Haunting', 'category': 'Horror/Thriller'}, {'question': "What is the name of Gal Gadot's character in the Fast and the Furious franchise?", 'answer': 'Gisele Yashar', 'category': 'Action/Adventure'}, {'question': "Who co-starred opposite Geena Davis in 1995's Cutthroat Island?", 'answer': 'Matthew Modine', 'category': 'Action/Adventure'}, {'question': 'What is the first name of the computer expert and best friend to Benjamin Gates in National Treasure?', 'answer': 'Riley', 'category': 'Action/Adventure'}, {'question': '1984 saw the release of Romancing the Stone. What is the name of the sequel?', 'answer': 'The Jewel of the Nile', 'category': 'Action/Adventure'}, {'question': 'In the 1993 movie Gettysburg, who portrayed General Robert E. Lee?', 'answer': 'Martin Sheen', 'category': '1990s'}, {'question': "Who played Billy Crystal's son in City Slickers?", 'answer': 'Jake Gyllenhaal', 'category': '1990s'}, {'question': 'In The Rocketeer, what does Cliff disguise himself as at the South Seas Club in order to get to Jenny?', 'answer': 'a waiter', 'category': '1990s'}, {'question': 'Who directed the Daniel Day-Lewis masterpiece The Last of the Mohicans?', 'answer': 'Michael Mann', 'category': '1990s'}, {'question': "Who played Bradley Cooper's wife in American Sniper?", 'answer': 'Sienna Miller', 'category': 'War'}, {'question': "Who played Principal Roz Mullins in 2003's School of Rock?", 'answer': 'Joan Cusack', 'category': 'Comedies'}, {'question': 'Who directed the 1998 family film Babe: Pig in the City?', 'answer': 'George Miller', 'category': '1990s'}, {'question': "You'll find Robert De Niro playing the character of Johnny Boy in this 1970s crime drama.", 'answer': 'Mean Streets', 'category': 'Crime'}, {'question': 'What name did the operating system voiced by Scarlett Johansson give herself in Her?', 'answer': 'Samantha', 'category': 'Dramas'}, {'question': 'Name one of the Disney animated films to be theatrically released in the 1950s.', 'answer': 'Cinderella, Alice in Wonderland, Peter Pan, Lady and the Tramp, Sleeping Beauty', 'category': 'Animated'}, {'question': 'What precocious young actor played the son of Brie Larson in the critically hailed Room?', 'answer': 'Jacob Tremblay', 'category': 'Dramas'}, {'question': 'In which flick will you find Nicolas Cage playing protagonist Cameron Poe?', 'answer': 'Con Air', 'category': 'Action/Adventure'}, {'question': 'Name the Just Friends actress that also starred in the college comedy The House Bunny.', 'answer': 'Anna Faris', 'category': 'Comedies'}, {'question': 'Who directed the hard-hitting 2016 drama Manchester by the Sea?', 'answer': 'Kenneth Lonergan', 'category': 'New Releases'}, {'question': 'Jennifer Connelly and Russell Crowe starred as a married couple in what 2001 film based on a true story?', 'answer': 'A Beautiful Mind', 'category': 'Famous Actors & Actresses'}, {'question': 'Shelley Duvall plays wife and mother Wendy Torrance in what horror flick?', 'answer': 'The Shining', 'category': 'Horror/Thriller'}, {'question': 'Who is the first character to ignite a lightsaber on screen in The Empire Strikes Back?', 'answer': 'Luke Skywalker', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the 1954 musical Seven Brides for Seven Brothers, what is the name of the youngest Pontipee brother?', 'answer': 'Gideon Pontipee', 'category': 'N/A'}, {'question': "Jackie Gleason played Paul Newman's rival in which 1960s film?", 'answer': 'The Hustler', 'category': 'Sports'}, {'question': 'What major golf tournament is the site of the climax for Tin Cup?', 'answer': 'the U.S. Open', 'category': 'Sports'}, {'question': 'North Dallas Forty stars what actor as pro wide receiver Phil Elliot?', 'answer': 'Nick Nolte', 'category': 'Sports'}, {'question': 'What sport is the focus of the film Blades of Glory?', 'answer': 'figure skating', 'category': 'Sports'}, {'question': 'In Rocky II, what product does Rocky promote for his first TV commercial?', 'answer': 'aftershave', 'category': 'Sports'}, {'question': 'Which boxing match is spotlighted in the 1996 documentary When We Were Kings?', 'answer': 'the Rumble in the Jungle', 'category': 'Sports'}, {'question': 'The protagonists in the film Super Troopers are state officers in what U.S. state?', 'answer': 'Vermont', 'category': 'Comedies'}, {'question': 'In 21 Jump Street, the undercover bust went down during which school event?', 'answer': 'a school prom', 'category': 'Comedies'}, {'question': 'Who played Undercover Brother in the 2002 comedy Undercover Brother?', 'answer': 'Eddie Griffin', 'category': 'Comedies'}, {'question': 'In Rush Hour, what gift does Lee give to the young girl, Soo Yung, at the beginning of the film?', 'answer': 'a necklace', 'category': 'Comedies'}, {'question': 'What is the nickname of Judge Stephen Wexler in Ghostbusters II?', 'answer': 'the Hammer', 'category': 'Comedies'}, {'question': 'Which real-life race car driver makes a cameo appearance in the 2004 comedy film Taxi?', 'answer': 'Jeff Gordon', 'category': 'Comedies'}, {'question': 'At the climactic bout in Rocky Balboa, which real-life boxer taunts the champ at ringside?', 'answer': 'Mike Tyson', 'category': 'Sports'}, {'question': 'What is the name of the fictional California town that Marty McFly is from?', 'answer': 'Hill Valley', 'category': 'N/A'}, {'question': 'Harry and Sally finally get together during what holiday?', 'answer': "New Year's Eve", 'category': 'N/A'}, {'question': 'In The Last Crusade, who plays Indiana Jones as a younger version?', 'answer': 'River Phoenix', 'category': 'N/A'}, {'question': 'Angela Bassett plays Tina Turner in what biopic?', 'answer': "What's Love Got to Do with It", 'category': 'N/A'}, {'question': 'In The Number 23, what actor is obsessed with a novel?', 'answer': 'Jim Carrey', 'category': 'N/A'}, {'question': 'In the film Blank Check, for how much does young Preston fill out the blank check he received?', 'answer': '1 million dollars', 'category': 'Family'}, {'question': 'In the first Home Alone, what name of notoriety does Marv give to himself and Harry?', 'answer': 'the Wet Bandits', 'category': 'Holiday'}, {'question': 'In what film does Meryl Streep play a ruthless fashion magazine editor?', 'answer': 'The Devil Wears Prada', 'category': 'Comedies'}, {'question': 'What 2015 film starring Henry Cavill and Armie Hammer was a big-screen adaptation of a 60s TV series?', 'answer': 'The Man from U.N.C.L.E.', 'category': 'Action/Adventure'}, {'question': 'Jackie Earle Haley stepped into a reboot of which iconic horror franchise in a 2010 remake?', 'answer': 'A Nightmare on Elm Street', 'category': 'Horror/Thriller'}, {'question': 'Who plays the role of Winston "The Wolf" Wolfe in Pulp Fiction?', 'answer': 'Harvey Keitel', 'category': 'Dramas'}, {'question': "Who directed National Lampoon's Vacation?", 'answer': 'Harold Ramis', 'category': 'Directors'}, {'question': "In what movie does Jake Gyllenhaal's character send a manuscript to his ex-wife, played by Amy Adams?", 'answer': 'Nocturnal Animals', 'category': 'New Releases'}, {'question': 'What actor played the role of Beast for the first time in X-Men: First Class?', 'answer': 'Nicholas Hoult', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Charlie Day voiced Benny the astronaut in what 2014 animated smash hit?', 'answer': 'The Lego Movie', 'category': 'Animated'}, {'question': 'Detective Alonzo Harris is assigned a young officer to evaluate played by whom in Training Day?', 'answer': 'Ethan Hawke', 'category': 'Denzel Washington'}, {'question': "Who directed 1996's The Preacher's Wife?", 'answer': 'Penny Marshall', 'category': 'Denzel Washington'}, {'question': 'Denzel Washington received his first Oscar nomination for acting in what film?', 'answer': 'Cry Freedom', 'category': 'Denzel Washington'}, {'question': "Who plays the criminal mastermind that Denzel is trying to apprehend in 2006's Inside Man?", 'answer': 'Clive Owen', 'category': 'Denzel Washington'}, {'question': 'What veteran action director was at the helm for the 2006 sci-fi thriller Déjà Vu?', 'answer': 'Tony Scott', 'category': 'Denzel Washington'}, {'question': "Who plays Betty Shabazz, wife to Malcolm X, in 1992's Malcolm X?", 'answer': 'Angela Bassett', 'category': 'Denzel Washington'}, {'question': "In the film At Close Range, who plays Sean Penn's absentee father?", 'answer': 'Christopher Walken', 'category': '1980s'}, {'question': 'In Trading Places, the partners of the firm Louis worked for had a wager concerning both Louis and Billy Ray. What was the value of this wager?', 'answer': '1 dollar', 'category': '1980s'}, {'question': 'In Ghostbusters, Bill Murray equates mass hysteria to human sacrifice and what?', 'answer': 'dogs and cats living together', 'category': '1980s'}, {'question': "What was the nickname of Sean Astin's character Clarence in 1987's Like Father Like Son?", 'answer': 'Trigger', 'category': '1980s'}, {'question': 'In Back to the Future II, the Chicago Cubs win the World Series in the future timeline that Marty and Doc Brown visit. From what city was the team that they beat from?', 'answer': 'Miami', 'category': '1980s'}, {'question': 'Who appeared as a singing waitress, Mrs. Murphy, in The Blues Brothers?', 'answer': 'Aretha Franklin', 'category': '1980s'}, {'question': 'What is the name of the actor who voices the spaceship in Flight of the Navigator?', 'answer': 'Paul Reubens', 'category': '1980s'}, {'question': 'Who plays Professor Arnold, who is kidnapped at the outset of the movie, in Kingsman: The Secret Service?', 'answer': 'Mark Hamill', 'category': 'Comic Book'}, {'question': "Who plays Hugh Jackman's love interest in Real Steel?", 'answer': 'Evangeline Lilly', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played Tom Hanks' character's son in the movie Road to Perdition?", 'answer': 'Tyler Hoechlin', 'category': 'Crime'}, {'question': 'Screen legend Christopher Plummer finally won his first Academy Award for his supporting role in what film?', 'answer': 'Beginners', 'category': 'Oscars'}, {'question': "In what Rob Reiner film does Daphne Zuniga play John Cusack's love interest?", 'answer': 'The Sure Thing', 'category': 'Dance'}, {'question': 'What 2005 film starred Scarlett Johansson opposite Ewan McGregor?', 'answer': 'The Island', 'category': 'Action/Adventure'}, {'question': 'Which Kubrick film features a monolith?', 'answer': '2001: A Space Odyssey', 'category': 'Directors'}, {'question': "What is the name of E.T.'s 10-year-old friend in E.T.?", 'answer': 'Elliott', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 90s film is about a scheme to cover up a presidential scandal by producing a fake war?', 'answer': 'Wag the Dog', 'category': 'Dramas'}, {'question': 'In what comedy would you hear the line "Husband? Wait a minute. What was all that `one in a million` talk?"?', 'answer': 'Dumb and Dumber', 'category': 'Comedies'}, {'question': "What is the name of the whale in Disney's Pinocchio?", 'answer': 'Monstro', 'category': 'Animated'}, {'question': 'Jack Nicholson, Helen Hunt, and Greg Kinnear received Oscar nominations for what 90s film?', 'answer': 'As Good as It Gets', 'category': 'Oscars'}, {'question': 'Frank Darabont directed Thomas Jane in which movie based on a Stephen King story?', 'answer': 'The Mist', 'category': 'Horror/Thriller'}, {'question': 'Who voiced Smaug and the Necromancer in the Hobbit films?', 'answer': 'Benedict Cumberbatch', 'category': 'Fantasy/Sci-Fi'}, {'question': "In the sci-fi classic Logan's Run, nobody is allowed to live past what age?", 'answer': '30 years old', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played the pawn shop owner, Jeebs, in Men in Black?', 'answer': 'Tony Shalhoub', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played Humphrey, Tristan's romantic rival, in Stardust?", 'answer': 'Henry Cavill', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who composed the scores for Road to Perdition, Finding Nemo, and Skyfall?', 'answer': 'Thomas Newman', 'category': 'Scores & Soundtracks'}, {'question': 'In The Perks of Being a Wallflower, what David Bowie song blasts as Patrick and Charlie drive through the tunnel while Sam stands in the back of a pickup with her arms outstretched?', 'answer': 'Heroes', 'category': 'Scores & Soundtracks'}, {'question': 'Who composed the scores for the action flicks Lethal Weapon, Die Hard, and Licence to Kill?', 'answer': 'Michael Kamen', 'category': 'Scores & Soundtracks'}, {'question': 'Besides the first two Terminator films, what other James Cameron movie had its score composed by Brad Fiedel?', 'answer': 'True Lies', 'category': 'Scores & Soundtracks'}, {'question': 'Sam Mendes directed which film that turned out to be the last live-action feature film role of legend Paul Newman?', 'answer': 'Road to Perdition', 'category': 'Crime'}, {'question': "What sport is the focus in 2000's Bring It On?", 'answer': 'cheerleading', 'category': 'Sports'}, {'question': 'What wind instrument does Bill play while sitting outside the church where Beatrix is getting married?', 'answer': 'a flute', 'category': 'Quentin Tarantino'}, {'question': 'Who played the model Ingrid that gets taken into protective custody by Marion Cobretti in the Stallone flick Cobra?', 'answer': 'Brigitte Nielsen', 'category': 'Sly & Arnie'}, {'question': 'What two actors won Oscars for playing the same character?', 'answer': 'Marlon Brando (Vito Corleone in The Godfather), Robert De Niro (Vito in The Godfather Part II)', 'category': 'Oscars'}, {'question': 'What esteemed composer was nominated for an Academy Award for his score on L.A. Confidential?', 'answer': 'Jerry Goldsmith', 'category': 'Scores & Soundtracks'}, {'question': 'What comedian voiced comic book fan and team mascot Fred in Big Hero 6?', 'answer': 'T.J. Miller', 'category': 'Animated'}, {'question': 'In this 2013 comedy, Seth Rogen, Jay Baruchel, James Franco, and others star as themselves during the apocalypse.', 'answer': 'This Is the End', 'category': 'Comedies'}, {'question': "A character called Buggin' Out gets upset when a pizzeria wall of fame doesn't represent black actors in what landmark drama comedy?", 'answer': 'Do the Right Thing', 'category': 'Dramas'}, {'question': 'In which film in the Jurassic Park franchise are we introduced to the Indominus rex?', 'answer': 'Jurassic World', 'category': 'Action/Adventure'}, {'question': 'What gory 2006 horror movie sees travelers Josh, Paxton, and Óli drawn unwittingly into a deadly game after being lured into a Slovakian hotel by prostitutes?', 'answer': 'Hostel', 'category': 'Horror/Thriller'}, {'question': 'Rinko Kikuchi plays Mori, the female co-pilot in what Guillermo del Toro film?', 'answer': 'Pacific Rim', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the Al Pacino tour de force Serpico?', 'answer': 'Sidney Lumet', 'category': 'Directors'}, {'question': 'What 2004 comedy features the line "It\'s terrible! She has beautiful eyes! And her hair smells like cinnamon!"?', 'answer': 'Anchorman: The Legend of Ron Burgundy', 'category': 'Quotes'}, {'question': "What is the name of Loki's army in The Avengers?", 'answer': 'the Chitauri', 'category': 'Comic Book'}, {'question': 'In which Eastern European country was Magneto hiding in at the beginning of X-Men: Apocalypse?', 'answer': 'Poland', 'category': 'Comic Book'}, {'question': 'Who played the Green Goblin in The Amazing Spider-Man 2?', 'answer': 'Dane DeHaan', 'category': 'Comic Book'}, {'question': 'Who directed Green Lantern?', 'answer': 'Martin Campbell', 'category': 'Comic Book'}, {'question': "Donald Pleasence's character in Halloween, Dr. Sam Loomis, shares a name with a character from what 60s chiller?", 'answer': 'Psycho', 'category': 'Horror/Thriller'}, {'question': 'Who plays the "great vampire killer" Peter Vincent in the 1985 film Fright Night?', 'answer': 'Roddy McDowall', 'category': 'Horror/Thriller'}, {'question': 'Which 1980 horror film stars Adrienne Barbeau as local radio DJ Stevie Wayne?', 'answer': 'The Fog', 'category': 'Horror/Thriller'}, {'question': 'Which 1981 thriller stars John Travolta as a sound technician who secretly records a political assassination?', 'answer': 'Blow Out', 'category': 'Horror/Thriller'}, {'question': 'Who played the title role in the 1996 film Evita?', 'answer': 'Madonna', 'category': 'Biopics'}, {'question': "Who plays the brilliant mathematician who studies under G.H. Hardy in 2016's The Man Who Knew Infinity?", 'answer': 'Dev Patel', 'category': 'Biopics'}, {'question': 'The 1993 film Shadowlands stars Anthony Hopkins as which famous author?', 'answer': 'C. S. Lewis', 'category': 'Biopics'}, {'question': 'Who directed the 1991 crime thriller Bugsy, starring Warren Beatty and Annette Bening?', 'answer': 'Barry Levinson', 'category': 'Biopics'}, {'question': 'What 2006 movie stars Emma Thompson as a writer, Queen Latifah as her assistant, and Will Ferrell as her main character?', 'answer': 'Stranger than Fiction', 'category': 'Dramas'}, {'question': "Molly Ringwald's first starring role was as Samantha in what teen comedy?", 'answer': 'Sixteen Candles', 'category': 'N/A'}, {'question': 'Forrest Gump goes into the shrimping business to honor what fallen comrade?', 'answer': 'Bubba', 'category': 'N/A'}, {'question': 'Name an actress that plays one of the wives in the 2005 drama Brokeback Mountain.', 'answer': 'Anne Hathaway, Michelle Williams', 'category': 'N/A'}, {'question': "Whta is the first name of Uma Thurman's character in the Tarantino film Pulp Fiction?", 'answer': 'Mia', 'category': 'N/A'}, {'question': 'Who played the President of the United States in the film Deep Impact?', 'answer': 'Morgan Freeman', 'category': 'N/A'}, {'question': 'What year saw the release of the Mel Gibson and Helen Hunt film What Women Want?', 'answer': '2000', 'category': 'Release Dates'}, {'question': "Steve Buscemi's character went by the nickname Rockhound in what 1998 adventure?", 'answer': 'Armageddon', 'category': 'Action/Adventure'}, {'question': 'What brand of underwear was Marty wearing in Back to the Future?', 'answer': 'Calvin Klein', 'category': 'Back to the Future'}, {'question': 'Who plays Darcy, the owner of the bar and leader of skinheads, in the horror thriller Green Room?', 'answer': 'Patrick Stewart', 'category': 'Horror/Thriller'}, {'question': 'What Tim Burton film has the quotes "Hold me." and "I can\'t."?', 'answer': 'Edward Scissorhands', 'category': 'Quotes'}, {'question': 'What actor played murderous outlaw Tom Chaney in the 2010 film True Grit?', 'answer': 'Josh Brolin', 'category': 'Westerns'}, {'question': "Who played Bruce Willis' wife Maggie in Surrogates?", 'answer': 'Rosamund Pike', 'category': 'Comic Book'}, {'question': "Before being remade with Jude Law, what actor starred as Alfie Elkins in 1966's Alfie?", 'answer': 'Michael Caine', 'category': 'Famous Actors & Actresses'}, {'question': 'Who played the role of V in V for Vendetta?', 'answer': 'Hugo Weaving', 'category': 'Action/Adventure'}, {'question': 'Drew Barrymore plays Josie Geller, who gets the nickname Josie Grossie, in what movie?', 'answer': 'Never Been Kissed', 'category': 'Romance'}, {'question': 'Who directed the 1997 sci-fi mystery film starring Jodie Foster, Contact?', 'answer': 'Robert Zemeckis', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays the younger brother of Edward Norton's character in 1998's American History X?", 'answer': 'Edward Furlong', 'category': 'Dramas'}, {'question': 'Who voices Po the panda in Kung Fu Panda?', 'answer': 'Jack Black', 'category': 'Animated'}, {'question': 'Samuel L. Jackson plays the manager of the Dolphin hotel in what supernatural thriller?', 'answer': '1408', 'category': 'Horror/Thriller'}, {'question': 'What actor romances Diane Lane in the 2008 flick Nights in Rodanthe?', 'answer': 'Richard Gere', 'category': 'Famous Actors & Actresses'}, {'question': 'The Hanson brothers rough up countless people both on and off the ice in this comedy.', 'answer': 'Slap Shot', 'category': 'Comedies'}, {'question': 'Peter Ustinov won an Oscar for Best Supporting Actor for what 1960 all-time classic?', 'answer': 'Spartacus', 'category': 'N/A'}, {'question': 'How many times has Michael Keaton been nominated for an Oscar?', 'answer': '1 (for Birdman or (The Unexpected Virtue of Ignorance))', 'category': 'Famous Actors & Actresses'}, {'question': 'Scarlett Johannsson and Jonathan Rhys Meyers star in which Woody Allen film?', 'answer': 'Match Point', 'category': 'Famous Actors & Actresses'}, {'question': "Who was Jennifer Aniston's co-star in 1998's The Object of My Affection?", 'answer': 'Paul Rudd', 'category': 'Famous Actors & Actresses'}, {'question': 'What Lord of the Rings actor played a sailor in Master and Commander?', 'answer': 'Billy Boyd', 'category': 'Famous Actors & Actresses'}, {'question': 'In The Princess Bride, who plays Vizzini?', 'answer': 'Wallace Shawn', 'category': 'Comedies'}, {'question': 'Who plays the villainous character "the Big Guy" in the film Paul?', 'answer': 'Sigourney Weaver', 'category': 'Comedies'}, {'question': "What is Stephen Furst's character called in Animal House?", 'answer': 'Flounder', 'category': 'Comedies'}, {'question': 'Who played police captain Ed Hocken in the Naked Gun series?', 'answer': 'George Kennedy', 'category': 'Comedies'}, {'question': 'The underwater science fiction movie Sphere is based on a novel by which author?', 'answer': 'Michael Crichton', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the name of the little girl taken in by Ellen Ripley in 1986's Aliens?", 'answer': 'Rebecca "Newt" Jorden', 'category': 'N/A'}, {'question': 'In The Departed, who plays Colin Sullivan, the crooked criminal who infiltrates the Boston police?', 'answer': 'Matt Damon', 'category': 'N/A'}, {'question': 'Sean Penn plays a stoner named Spicoli in what 80s comedy?', 'answer': 'Fast Times at Ridgemont High', 'category': 'N/A'}, {'question': 'What is the name of the elite group of cool kids in the Lindsay Lohan movie Mean Girls?', 'answer': 'the Plastics', 'category': 'N/A'}, {'question': 'In The Matrix, what color is the pill that will allow Neo to learn the truth about the Matrix?', 'answer': 'red', 'category': 'N/A'}, {'question': "Who played the Kingpin in Ben Affleck's Daredevil?", 'answer': 'Michael Clarke Duncan', 'category': 'Marvel'}, {'question': 'The following quote is from which romantic comedy: "I\'ll have what she\'s having."?', 'answer': 'When Harry Met Sally...', 'category': 'Rom-Coms'}, {'question': 'In what Steve Martin comedy does a magical freeway sign pose the riddle "U will know what 2 do when U unscramble \'How daddy is doing\'"?', 'answer': 'L.A. Story', 'category': '1990s'}, {'question': 'What 1970s sports film won Best Director for John G. Avildsen?', 'answer': 'Rocky', 'category': 'Oscars'}, {'question': 'Name the actor who played true crime writer Ellison Oswalt in Sinister.', 'answer': 'Ethan Hawke', 'category': 'Horror/Thriller'}, {'question': "In which Fast and the Furious movie did it appear that Michelle Rodriguez's character Letty had died?", 'answer': 'Fast & Furious', 'category': 'Action/Adventure'}, {'question': "Who played Jackie Robinson in 2013's 42?", 'answer': 'Chadwick Boseman', 'category': 'Sports'}, {'question': 'What comedian provides the voice of the parrot Iago in Aladdin?', 'answer': 'Gilbert Gottfried', 'category': 'Animated'}, {'question': 'Who was the director of the 2014 film Whiplash?', 'answer': 'Damien Chazelle', 'category': 'Directors'}, {'question': "Who played the title character in 2017's King Arthur: Legend of the Sword?", 'answer': 'Charlie Hunnam', 'category': 'New Releases'}, {'question': 'The word "parley" is used in order to stop a fight and talk things out in what Disney adventure?', 'answer': 'Pirates of the Caribbean: The Curse of the Black Pearl', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what city does the primary action take place in Cloverfield?', 'answer': 'New York City', 'category': 'Horror/Thriller'}, {'question': 'In what 1997 comedy do British steelworkers form a male stripper act?', 'answer': 'The Full Monty', 'category': 'Comedies'}, {'question': "Who played Harrison Ford's love interest, Kay Chandler, in the 1999 film Random Hearts?", 'answer': 'Kristin Scott Thomas', 'category': '1990s'}, {'question': "Which actor played the character of Mumbles in 1990's Dick Tracy?", 'answer': 'Dustin Hoffman', 'category': '1990s'}, {'question': "What is the name of the head elf in 1994's The Santa Clause?", 'answer': 'Bernard', 'category': '1990s'}, {'question': 'Who directed the 1995 thriller Outbreak?', 'answer': 'Wolfgang Petersen', 'category': '1990s'}, {'question': 'In Invictus, which team does South Africa beat in the Cup Final?', 'answer': 'New Zealand', 'category': 'Sports'}, {'question': 'The 1995 family film The Big Green centers around what sport?', 'answer': 'soccer', 'category': 'Sports'}, {'question': "In the movie Days of Thunder, what is the name of Cole Trickle's teammate/rival played by Cary Elwes?", 'answer': 'Russ Wheeler', 'category': 'Sports'}, {'question': "What is the subject of director Stacy Peralta's documentary Riding Giants?", 'answer': 'surfing', 'category': 'Sports'}, {'question': "What was Judd Apatow's directorial debut?", 'answer': 'The 40-Year-Old Virgin', 'category': 'Directors'}, {'question': 'What film stars Leslie Nielsen as Agent WD-40?', 'answer': 'Spy Hard', 'category': 'Comedies'}, {'question': 'John C. McGinley plays FBI Agent Ben Harp, and Tom Sizemore has a small role as DEA Agent Deets, in what 1991 action flick?', 'answer': 'Point Break', 'category': 'Action/Adventure'}, {'question': 'What X-Files actor stars alongside Orlando Jones and Seann William Scott in the Ivan Reitman film Evolution?', 'answer': 'David Duchovny', 'category': 'Comedies'}, {'question': "Who played the villainous Rita Repulsa in 2017's Power Rangers?", 'answer': 'Elizabeth Banks', 'category': 'New Releases'}, {'question': "Michael Shannon's character Roy seeks out the help of his childhood friend, Lucas, as they try to unravel the mystery of his son's abilities. Which 2016 film does this describe?", 'answer': 'Midnight Special', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who is the only actor from Jurassic Park to return for Jurassic World?', 'answer': 'BD Wong', 'category': 'Action/Adventure'}, {'question': 'In The Grand Budapest Hotel, Tony Revolori plays the lobby boy. What was his name?', 'answer': 'Zero Moustafa', 'category': 'Dramas'}, {'question': "What actor played a corpse opposite Paul Dano's stranded character in Swiss Army Man?", 'answer': 'Daniel Radcliffe', 'category': 'Famous Actors & Actresses'}, {'question': 'What film stars Matt Damon as a young war veteran who golfs and Will Smith as his caddy?', 'answer': 'The Legend of Bagger Vance', 'category': 'Sports'}, {'question': 'To date, how many theatrically released Paranormal Activity films have there been?', 'answer': '6 (Paranormal Activity, 2, 3, 4, The Marked Ones, The Ghost Dimension)', 'category': 'Horror/Thriller'}, {'question': 'During the current school year, how many times was Ferris Bueller absent from school?', 'answer': '9 times', 'category': 'N/A'}, {'question': 'Who directed the critically acclaimed Hell or High Water?', 'answer': 'David Mackenzie', 'category': 'New Releases'}, {'question': "Which actress plays Officer Saunders' wife in 2017's Patriots Day?", 'answer': 'Michelle Monaghan', 'category': 'New Releases'}, {'question': 'In Moana, Maui tells Moana that sailing is called what?', 'answer': 'wayfinding', 'category': 'New Releases'}, {'question': "Who played the Beast in 2017's Beauty and the Beast?", 'answer': 'Dan Stevens', 'category': 'New Releases'}, {'question': 'In 10 Cloverfield Lane, what beverage does Howard cool with the CO2 from an aerosol can?', 'answer': 'vodka', 'category': 'New Releases'}, {'question': "In Arrival, other than his wife's dying words, what does General Shang give to Louise at the party?", 'answer': 'his private phone number', 'category': 'New Releases'}, {'question': "Who plays David's old crush, Millie, in the 2008 sci-fi action film Jumper?", 'answer': 'Rachel Bilson', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played Skeletor in 1987's Masters of the Universe?", 'answer': 'Frank Langella', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What was the name of the evil corporation in the Resident Evil film series?', 'answer': 'the Umbrella Corporation', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays geophysicist Dr. Josh Keyes, leader of the expedition to restart the rotation of the Earth's core in the 2003 sci-fi disaster flick The Core?", 'answer': 'Aaron Eckhart', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Waterworld, what is the name of the pirate gang led by Dennis Hopper's character?", 'answer': 'the Smokers', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played the title character in the 2013 fantasy film Jack the Giant Slayer?', 'answer': 'Nicholas Hoult', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2006 movie asked "What If You Had A Universal Remote... That Controlled Your Universe?"?', 'answer': 'Click', 'category': 'Taglines'}, {'question': 'Who made their directorial debut with the hard-hitting drama Boyz n the Hood?', 'answer': 'John Singleton', 'category': 'Directors'}, {'question': "In Ferris Bueller's Day Off, Ferris and his friends borrowed Cameron's father's prize car. What kind of car was it?", 'answer': 'a 1961 Ferrari 250 GT California Spyder', 'category': '1980s'}, {'question': 'In what 2003 comedy will you find characters named Blue, Beanie, Weensie, and Spanish?', 'answer': 'Old School', 'category': 'Comedies'}, {'question': '1998 saw Armageddon and what other blockbuster disaster movie hit theaters?', 'answer': 'Deep Impact', 'category': 'Action/Adventure'}, {'question': 'In what state does the Al Pacino Robin Williams suspense film Insomnia primarily take place?', 'answer': 'Alaska', 'category': 'Horror/Thriller'}, {'question': "In Pretty Woman, who plays Richard Gere's attorney?", 'answer': 'Jason Alexander', 'category': 'Rom-Coms'}, {'question': "What former Punk'd star directed and starred in the 2017 action comedy CHiPs?", 'answer': 'Dax Shepard', 'category': 'New Releases'}, {'question': "In Disney's The Little Mermaid, how many sisters does Ariel have?", 'answer': '6 sisters (Adella, Alana, Andrina, Aquata, Arista, Attina)', 'category': 'Animated'}, {'question': 'Who played Luigi in the 1993 video game monstrosity Super Mario Bros. movie?', 'answer': 'John Leguizamo', 'category': 'Family'}, {'question': 'Name the comedy movie from the quote: "By Grabthar\'s hammer, by the suns of Worvan, you shall be avenged.".', 'answer': 'Galaxy Quest', 'category': 'Comedies'}, {'question': 'Who starred as the title character in the 2008 video game adaptation Max Payne?', 'answer': 'Mark Wahlberg', 'category': '2000s'}, {'question': "Who plays the lead character Toula Portokalos in 2002's My Big Fat Greek Wedding?", 'answer': 'Nia Vardalos', 'category': '2000s'}, {'question': 'What 2002 action comedy is about two very different cops who are forced to team up on a new reality-based TV cop show?', 'answer': 'Showtime', 'category': '2000s'}, {'question': "Who co-stars with Ben Affleck as Doyle Gipson, a recovering alcoholic insurance salesman, in 2002's dramatic thriller Changing Lanes?", 'answer': 'Samuel L. Jackson', 'category': '2000s'}, {'question': 'In Dirty Dancing, what does Baby help Billy carry up to the staff dance party?', 'answer': 'a watermelon', 'category': 'Dance'}, {'question': 'In Coyote Ugly, what is the name of the lead character played by Piper Perabo?', 'answer': 'Violet Sanford', 'category': 'Dance'}, {'question': "In 1984's Footloose, what do the cops take from Ren when they pull him over?", 'answer': 'a casette tape', 'category': 'Dance'}, {'question': 'Who plays Big Dick Richie in the Magic Mike films?', 'answer': 'Joe Manganiello', 'category': 'Dance'}, {'question': 'Dustin Hoffman and Meryl Streep played an estranged married couple in what Oscar-winning film?', 'answer': 'Kramer vs. Kramer', 'category': '1970s'}, {'question': 'What 1996 film, directed by Nora Ephron, stars John Travolta as a boozy archangel?', 'answer': 'Michael', 'category': '1990s'}, {'question': 'How many Disney films were made about a hockey team called the Mighty Ducks?', 'answer': '3 (The Mighty Ducks, D2, D3)', 'category': 'Disney'}, {'question': 'Major Boothroyd, from the James Bond series, is better known by what code name?', 'answer': 'Q', 'category': 'James Bond'}, {'question': 'Which Bourne movie did not star Matt Damon as the lead?', 'answer': 'The Bourne Legacy', 'category': 'Action/Adventure'}, {'question': 'What 2016 Richard Linklater film did he call the spiritual sequel to Dazed and Confused?', 'answer': 'Everybody Wants Some!!', 'category': 'Comedies'}, {'question': "Who portrayed King George VI in the Oscar-winning movie The King's Speech?", 'answer': 'Colin Firth', 'category': 'Dramas'}, {'question': 'Finish the movie quote from The Godfather: "Leave the gun. Take the" what?', 'answer': 'cannoli', 'category': 'Quotes'}, {'question': 'Which 1982 horror movie received a remake in 2015?', 'answer': 'Poltergeist', 'category': 'Horror/Thriller'}, {'question': 'In The Amazing Spider-Man, which villain did Spider-Man go up against?', 'answer': 'the Lizard', 'category': 'Comic Book'}, {'question': 'The Lion, the Witch and the Wardrobe was a movie adapted from a novel written by whom?', 'answer': 'C. S. Lewis', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What martial arts legend voiced Monkey in the Kung Fu Panda franchise?', 'answer': 'Jackie Chan', 'category': 'Animated'}, {'question': "What type of baked goods is actress Keri Russell's specialty in the dramedy Waitress?", 'answer': 'pies', 'category': 'N/A'}, {'question': 'Who played the Rhino in The Amazing Spider-Man 2?', 'answer': 'Paul Giamatti', 'category': 'Comic Book'}, {'question': 'In Avengers: Age of Ultron, which of the original six Avengers did Scarlet Witch not subdue with haunting visions?', 'answer': 'Hawkeye', 'category': 'Comic Book'}, {'question': 'Who played Det. Jack "Jackie Boy" Rafferty in Sin City?', 'answer': 'Benicio del Toro', 'category': 'Comic Book'}, {'question': 'In Suicide Squad, who bartends when the Squad stops off for a drink?', 'answer': 'Harley Quinn', 'category': 'Comic Book'}, {'question': "What comedic actor cameos as Natalie Portman's date in Thor: The Dark World?", 'answer': "Chris O'Dowd", 'category': 'Comic Book'}, {'question': 'In Man of Steel, how old was Clark Kent when General Zod arrived on Earth?', 'answer': '33 years old', 'category': 'Comic Book'}, {'question': 'The 2000s comedy Balls of Fury revolves around what sport?', 'answer': 'table tennis', 'category': 'Comedies'}, {'question': "In Shanghai Noon, Owen Wilson's character went under the alias of Roy O'Bannon. What was the character's real name?", 'answer': 'Wyatt Earp', 'category': 'Comedies'}, {'question': 'Who played Darren Silverman in the 2001 comedy Saving Silverman?', 'answer': 'Jason Biggs', 'category': 'Comedies'}, {'question': 'Jack Nicholson plays a therapist to what actor in the 2003 comedy Anger Management?', 'answer': 'Adam Sandler', 'category': 'Comedies'}, {'question': 'What Andy Griffith Show actor played the villain General Rancor in the Leslie Nielsen comedy Spy Hard?', 'answer': 'Andy Griffith', 'category': 'Comedies'}, {'question': "In 1991's City Slickers, Mitch, Ed, and Phil go on a two-week vacation to New Mexico to participate in what?", 'answer': 'a cattle drive', 'category': 'Comedies'}, {'question': 'What Star Wars actor played Moses in the 2011 sci-fi film Attack the Block?', 'answer': 'John Boyega', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played Ice Cube in the movie Straight Outta Compton?', 'answer': "O'Shea Jackson Jr.", 'category': 'Biopics'}, {'question': "Who starred opposite Hugh Jackman in 2001's Kate & Leopold?", 'answer': 'Meg Ryan', 'category': 'Rom-Coms'}, {'question': 'Finish the movie quote: "You know, I have one simple request, and that is to have sharks with frickin\' ___ attached to their heads!".', 'answer': 'laser beams (in Austin Powers: International Man of Mystery)', 'category': 'Quotes'}, {'question': 'What was the title of the sequel of Ace Ventura: Pet Detective?', 'answer': 'Ace Ventura: When Nature Calls', 'category': 'Comedies'}, {'question': 'In what year was the first Shrek film released?', 'answer': '2001', 'category': 'Animated'}, {'question': 'In Saturday Night Fever, which New York borough does disco-loving Tony Manero call home?', 'answer': 'Brooklyn', 'category': 'Dramas'}, {'question': 'Who won an Academy Award for their role in A Fish Called Wanda?', 'answer': 'Kevin Kline (for Supporting Actor)', 'category': 'Oscars'}, {'question': 'Which movie spans the globe from Queens, New York to the fictional nation of Zamunda?', 'answer': 'Coming to America', 'category': '1980s'}, {'question': 'Who plays the title character in the 1999 film The 13th Warrior?', 'answer': 'Antonio Banderas', 'category': 'Action/Adventure'}, {'question': 'Who provides the voice of the villain in Despicable Me 3?', 'answer': 'Trey Parker', 'category': 'New Releases'}, {'question': 'In Hacksaw Ridge, Desmond Doss refused to carry a weapon on religious grounds. What Protestant denomination did he belong to?', 'answer': 'the Seventh-day Adventist Church', 'category': 'New Releases'}, {'question': 'Who directed the film King Arthur: Legend of the Sword?', 'answer': 'Guy Ritchie', 'category': 'New Releases'}, {'question': "What is the first name of Elizabeth Banks' character in Power Rangers?", 'answer': 'Rita', 'category': 'New Releases'}, {'question': 'How many James Bond movies did the villain named Jaws appear in?', 'answer': '2 (The Spy Who Loved Me, Moonraker)', 'category': 'Spy'}, {'question': 'Jason Bourne eliminates CIA asset Desh Bouksani by suffocating him with a towel in what Bourne film?', 'answer': 'The Bourne Ultimatum', 'category': 'Spy'}, {'question': 'Who plays Luther Stickell in the Mission: Impossible franchise?', 'answer': 'Ving Rhames', 'category': 'Spy'}, {'question': 'Who directed the 2015 film The Man from U.N.C.L.E.?', 'answer': 'Guy Ritchie', 'category': 'Spy'}, {'question': 'Which year saw the release of blockbuster comedies Liar Liar and Austin Powers: International Man of Mystery?', 'answer': '1997', 'category': 'Release Dates'}, {'question': "What traditionally comedic actor portrayed Steve Wozniak in 2015's Steve Jobs?", 'answer': 'Seth Rogen', 'category': 'Dramas'}, {'question': 'Norma Desmond is a washed-up actress in what classic Hollywood tale?', 'answer': 'Sunset Boulevard', 'category': 'Classics'}, {'question': 'Who played Frida Kahlo in the 2002 film Frida?', 'answer': 'Salma Hayek', 'category': 'Biopics'}, {'question': 'What two comic book sequels have been directed by Guillermo del Toro?', 'answer': 'Blade II, Hellboy II: The Golden Army', 'category': 'Comic Book'}, {'question': 'What James Spader 90s sci-fi film went on to spawn a 10-season-long TV series and two spin-off series?', 'answer': 'Stargate', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the action comedy trilogy Rush Hour?', 'answer': 'Brett Ratner', 'category': 'Action/Adventure'}, {'question': "Who plays Bluto in National Lampoon's Animal House?", 'answer': 'John Belushi', 'category': 'Comedies'}, {'question': "Who played the blind man in the 2016 breakout hit Don't Breathe?", 'answer': 'Stephen Lang', 'category': 'Horror/Thriller'}, {'question': 'In what film does Jake Gyllenhaal play an aspiring rocket scientist inspired by Wernher von Braun?', 'answer': 'October Sky', 'category': 'Dramas'}, {'question': "What happens to Goldie Hawn's character when she falls overboard in Overboard?", 'answer': 'she loses her memory', 'category': '1980s'}, {'question': "What was Dorothy's last name in The Wizard of Oz?", 'answer': 'Gale', 'category': 'Classics'}, {'question': 'For what film did actress Audrey Hepburn win her one and only Academy Award for acting?', 'answer': 'Roman Holiday', 'category': 'Oscars'}, {'question': 'What were the aliens in Arrival called?', 'answer': 'Abbott, Costello; heptapods', 'category': 'N/A'}, {'question': "Who plays Vada's father Harry Sultenfuss in 1991's My Girl?", 'answer': 'Dan Aykroyd', 'category': 'Coming of Age'}, {'question': 'What is the last name of Cady, played by Lindsay Lohan, in Mean Girls?', 'answer': 'Heron', 'category': 'Coming of Age'}, {'question': 'Who played opposite James Dean as Judy in Rebel Without a Cause?', 'answer': 'Natalie Wood', 'category': 'Coming of Age'}, {'question': 'Who plays the strict father Mr. Perry in Dead Poets Society?', 'answer': 'Kurtwood Smith', 'category': 'Coming of Age'}, {'question': 'Who played Joe Gage in The Hateful Eight?', 'answer': 'Michael Madsen', 'category': 'Quentin Tarantino'}, {'question': "In Inglourious Basterds, what is Sgt. Donny Donowitz's trademark weapon?", 'answer': 'a baseball bat', 'category': 'Quentin Tarantino'}, {'question': 'How many Oscars has Tarantino won?', 'answer': '2 (Original Screenplay for Pulp Fiction, Django Unchained)', 'category': 'Quentin Tarantino'}, {'question': 'In Pulp Fiction, what is the name of the restaurant where Mia Wallace and Vincent Vega go to dinner?', 'answer': 'Jack Rabbit Slim’s', 'category': 'Quentin Tarantino'}, {'question': 'What actor starred as peculiar teen Lane Myer in the 1985 cult classic Better Off Dead?', 'answer': 'John Cusack', 'category': '1980s'}, {'question': 'What Brad Pitt movie asks the question "Are You In Or Out?"?', 'answer': "Ocean's Eleven", 'category': 'Taglines'}, {'question': "Who plays Barry's love interest, Lena Leonard, in Punch-Drunk Love?", 'answer': 'Emily Watson', 'category': 'Rom-Coms'}, {'question': 'What Hollywood legend played Kurtz in Apocalypse Now?', 'answer': 'Marlon Brando', 'category': 'War'}, {'question': 'Name the stars of the 1993 comedy Made in America who, at the time, were romantically involved off-screen as well as on.', 'answer': 'Ted Danson, Whoopi Goldberg', 'category': 'Famous Actors & Actresses'}, {'question': 'Michael J. Fox, James Garner, and Leonard Nimoy provided the voices for characters in what Disney animated feature?', 'answer': 'Atlantis: The Lost Empire', 'category': 'Disney'}, {'question': 'Who plays Secret Service Agent Frank Horrigan in the 1993 film In the Line of Fire?', 'answer': 'Clint Eastwood', 'category': 'Dramas'}, {'question': 'A misunderstood boy takes on ghosts, zombies, and grown-ups to save his town from a centuries-old curse in what 2012 stop-motion animated film?', 'answer': 'ParaNorman', 'category': 'Animated'}, {'question': "What is the name of the Lone Ranger's horse?", 'answer': 'Silver', 'category': 'Action/Adventure'}, {'question': 'Who played Tatum Riley in Scream and would go on to appear in Grindhouse and Death Proof?', 'answer': 'Rose McGowan', 'category': 'Horror/Thriller'}, {'question': "Who directed 1972's Cabaret?", 'answer': 'Bob Fosse', 'category': 'Directors'}, {'question': "In 2002's Orange County, who plays Shaun's loony brother Lance?", 'answer': 'Jack Black', 'category': 'Comedies'}, {'question': 'What comedy has the tagline "Trapped in time. Surrounded by evil. Low on gas"?', 'answer': 'Army of Darkness', 'category': 'Taglines'}, {'question': 'Who played Percy Jackson in the Percy Jackson family fantasy films?', 'answer': 'Logan Lerman', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played the lead Michael Roark, director of L.A.'s Office of Emergency Management, in Volcano?", 'answer': 'Tommy Lee Jones', 'category': 'Disaster'}, {'question': "Who plays Jake Gyllenhaal's love interest in the 2004 disaster flick The Day After Tomorrow?", 'answer': 'Emmy Rossum', 'category': 'Disaster'}, {'question': 'Name the 1970s disaster film about a group of ocean liner passengers who struggle to survive and escape when their ship capsizes at sea.', 'answer': 'The Poseidon Adventure', 'category': 'Disaster'}, {'question': 'Who co-stars with Paul Newman in the 1970s action drama disaster film The Towering Inferno?', 'answer': 'Steve McQueen', 'category': 'Disaster'}, {'question': 'Who played Roy Nord, a rich sports celebrity known for doing commercials for an extreme sports company in Daylight?', 'answer': 'Viggo Mortensen', 'category': 'Disaster'}, {'question': 'Who directed the found footage monster film Cloverfield?', 'answer': 'Matt Reeves', 'category': 'Disaster'}, {'question': 'What was the nickname given to the quarterback who moved in from California in Remember the Titans?', 'answer': 'Sunshine', 'category': 'Sports'}, {'question': 'Who played Reggie Dunlop, the coach of the Charlestown Chiefs in the hockey flick Slap Shot?', 'answer': 'Paul Newman', 'category': 'Sports'}, {'question': 'Who played the AFFA Football Commissioner in the sports drama Any Given Sunday?', 'answer': 'Charlton Heston', 'category': 'Sports'}, {'question': 'In the movie Dodgeball, the championship match was broadcast on what fictional TV network?', 'answer': 'ESPN 8', 'category': 'Sports'}, {'question': 'What country did Eddie Edwards compete for in the Winter Olympics in Eddie the Eagle?', 'answer': 'Great Britain', 'category': 'Sports'}, {'question': "Who directed 2010's The Fighter?", 'answer': 'David O. Russell', 'category': 'Sports'}, {'question': 'In Citizen Kane, what is Rosebud?', 'answer': 'a sled', 'category': 'Classics'}, {'question': 'Who directed the Ben Affleck led film Gone Girl?', 'answer': 'David Fincher', 'category': 'N/A'}, {'question': 'Finish the movie quote: "On Wednesdays we wear" what?', 'answer': 'pink (in Mean Girls)', 'category': 'N/A'}, {'question': 'Name one of the three romantic comedy films that Tom Hanks and Meg Ryan have starred in together.', 'answer': "Joe Versus the Volcano, Sleepless in Seattle, You've Got Mail", 'category': 'N/A'}, {'question': "Who played Dr. Jonathan Crane, a.k.a. the Scarecrow, in Christopher Nolan's Batman films?", 'answer': 'Cillian Murphy', 'category': 'N/A'}, {'question': "Who played Le Chiffre in 2006's Casino Royale?", 'answer': 'Mads Mikkelsen', 'category': 'N/A'}, {'question': "Who starred as Billy, a frat boy turned dad, and rockin' saxophonist, in St. Elmo's Fire?", 'answer': 'Rob Lowe', 'category': '1980s'}, {'question': 'What is the name the Transformers give to the cube that creates Transformers in the 2000s film Transformers?', 'answer': 'the AllSpark', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed Jurassic Park III?', 'answer': 'Joe Johnston', 'category': 'Directors'}, {'question': 'What 1967 classic had the following tagline: "This is Benjamin. He\'s a little worried about his future."?', 'answer': 'The Graduate', 'category': 'Taglines'}, {'question': 'Who played the brave whistleblower Dr. Jeffrey Wigand in the 1999 film The Insider?', 'answer': 'Russell Crowe', 'category': 'Biopics'}, {'question': 'What Western U.S. city do Riley and her family move to in Inside Out?', 'answer': 'San Francisco', 'category': 'Pixar'}, {'question': 'In what 90s comedy will you hear the following quote: "We got no food, we got no jobs... our pets\' heads are falling off!"?', 'answer': 'Dumb and Dumber', 'category': 'N/A'}, {'question': 'Who plays rising journalist and new E! correspondent Alison Scott in the hit comedy Knocked Up?', 'answer': 'Katherine Heigl', 'category': 'Comedies'}, {'question': 'What movie features a police officer named Jim Kurring, a former child game show star named Donnie Smith, and a controversial motivational speaker named T.J. Mackey?', 'answer': 'Magnolia', 'category': 'Dramas'}, {'question': 'What NBA superstar played the genie Kazaam in Kazaam?', 'answer': "Shaquille O'Neal", 'category': 'Family'}, {'question': 'In Sherlock Holmes: A Game of Shadows, Stephen Fry plays Mycroft. How is he related to Holmes?', 'answer': "Holmes' brother", 'category': 'Action/Adventure'}, {'question': 'Who provided the voice for the fast-talking meerkat, Timon, in The Lion King?', 'answer': 'Nathan Lane', 'category': 'Animated'}, {'question': "Comedy legend Madeline Kahn plays which character in 1985's Clue?", 'answer': 'Mrs. White', 'category': '1980s'}, {'question': 'What was the only year in which both a Star Trek film and a Star Wars film were released?', 'answer': '2002, 2016', 'category': 'Star Wars'}, {'question': 'What acclaimed director has made cameos in Gremlins, The Blues Brothers, and Vanilla Sky?', 'answer': 'Steven Spielberg', 'category': 'Directors'}, {'question': 'Who directed Vanilla Sky?', 'answer': 'Cameron Crowe', 'category': 'Tom Cruise'}, {'question': "What is Tom's character's last name in Cocktail?", 'answer': 'Flanagan', 'category': 'Tom Cruise'}, {'question': 'From what prestigious law school did Mitch McDeere graduate in The Firm?', 'answer': 'Harvard Law School', 'category': 'Tom Cruise'}, {'question': "Who played the young stepmother of Tom Cruise's character Frank T.J. Mackey in Magnolia?", 'answer': 'Julianne Moore', 'category': 'Tom Cruise'}, {'question': 'Who directed Tom Cruise in one of his earlier roles in the film The Outsiders?', 'answer': 'Francis Ford Coppola', 'category': 'Tom Cruise'}, {'question': "Who played Tom Cruise's wife in The Firm?", 'answer': 'Jeanne Tripplehorn', 'category': 'Tom Cruise'}, {'question': "Who was the only performer to be nominated for an Oscar in 1970's Little Big Man?", 'answer': 'Chief Dan George', 'category': 'Oscars'}, {'question': "Who won an Oscar for portraying an Oscar-winning actress in 2004's The Aviator?", 'answer': 'Cate Blanchett', 'category': 'Oscars'}, {'question': 'What was the first Disney movie to win an Oscar for Best Original Song?', 'answer': 'Pinocchio (for "When You Wish Upon a Star")', 'category': 'Oscars'}, {'question': 'Other than Chaplin, what is the only other film for which Robert Downey Jr. has been nominated for an Academy Award?', 'answer': 'Tropic Thunder', 'category': 'Oscars'}, {'question': 'For what film did Jimmy Stewart receive his only Best Actor win at the Academy Awards?', 'answer': 'The Philadelphia Story', 'category': 'Oscars'}, {'question': 'What actress won an Oscar for her role as Mona Lisa in My Cousin Vinny?', 'answer': 'Marisa Tomei', 'category': 'Oscars'}, {'question': 'Susan Sarandon plays a lawyer going up against Tommy Lee Jones in what movie based on a John Grisham novel?', 'answer': 'The Client', 'category': 'Dramas'}, {'question': 'Which Star Trek alum played lunar base commander Buck Murdock in Airplane II: The Sequel?', 'answer': 'William Shatner', 'category': '1980s'}, {'question': 'Who played Pvt. J. T. "Joker" Davis in the movie Full Metal Jacket?', 'answer': 'Matthew Modine', 'category': 'War'}, {'question': "Who played legendary comedian Lenny Bruce in Bob Fosse's 1974 film Lenny?", 'answer': 'Dustin Hoffman', 'category': '1970s'}, {'question': "Name the actor who played a prisoner who tried to break literal chains in The Defiant Ones and a doctor who broke societal ones in Guess Who's Coming to Dinner.", 'answer': 'Sidney Poitier', 'category': 'Famous Actors & Actresses'}, {'question': "Name the only dwarf that wore glasses in Disney's Snow White and the Seven Dwarfs.", 'answer': 'Doc', 'category': 'Animated'}, {'question': "Who played young soap actress Julie, who was mentored by Dustin Hoffman's character Dorothy in Tootsie?", 'answer': 'Jessica Lange', 'category': 'Comedies'}, {'question': 'Paul Giamatti, Sandra Oh, Virginia Madsen, and what other actor round out the starring cast of wine dramedy Sideways?', 'answer': 'Thomas Haden Church', 'category': 'Dramas'}, {'question': 'To date, how many Scream films have been released?', 'answer': '4', 'category': 'Horror/Thriller'}, {'question': "What was the name of the character played by Christopher Lambert in 1995's Mortal Kombat?", 'answer': 'Raiden', 'category': 'Action/Adventure'}, {'question': 'What was the first movie for which Tom Hanks won an Academy Award for acting?', 'answer': 'Philadelphia (for Actor)', 'category': 'Oscars'}, {'question': 'Name the character who narrates the prologue of The Lord of the Rings: The Fellowship of the Ring.', 'answer': 'Galadriel', 'category': 'Fantasy/Sci-Fi'}, {'question': "What acclaimed director's earlier efforts include Flirting with Disaster, Three Kings, and I Heart Huckabees?", 'answer': 'David O. Russell', 'category': 'Directors'}, {'question': 'Who played Lois Lane in Superman Returns?', 'answer': 'Kate Bosworth', 'category': 'Comic Book'}, {'question': 'In how many films does Agent of S.H.I.E.L.D. Phil Coulson appear (as of August 2017)?', 'answer': '4  (Iron Man, Iron Man 2, Thor, The Avengers)', 'category': 'Comic Book'}, {'question': 'Who provided the voice of the aquatic empath Abe Sapien in Hellboy II: The Golden Army?', 'answer': 'Doug Jones', 'category': 'Comic Book'}, {'question': 'What was the name of the group of mercenaries who raised Star-Lord?', 'answer': 'the Ravagers', 'category': 'Comic Book'}, {'question': 'In Watchmen, who plays Rorschach?', 'answer': 'Jackie Earle Haley', 'category': 'Comic Book'}, {'question': "In Ant-Man, what Southern rapper co-stars as one of Scott Lang's crew members?", 'answer': 'T.I.', 'category': 'Comic Book'}, {'question': '"My Dearest Catherine" are the words that begin the love letters at the center of what Kevin Costner film, based on a Nicholas Sparks novel?', 'answer': 'Message in a Bottle', 'category': 'Dramas'}, {'question': 'Adrien Brody won an Oscar for what Roman Polanski directed film?', 'answer': 'The Pianist', 'category': 'Dramas'}, {'question': "In 1992's Pure Country, which country music artist took on the starring role as musician Dusty Chandler?", 'answer': 'George Strait', 'category': 'Dramas'}, {'question': "What did Russell Crowe's character find in his mailbox in 1999's The Insider?", 'answer': 'a bullet', 'category': 'Dramas'}, {'question': 'Who played Coast Guard crewman Bernie Webber in the 2016 historical drama The Finest Hours?', 'answer': 'Chris Pine', 'category': 'Dramas'}, {'question': 'In the movie Fargo, what is Jean doing before she gets kidnapped?', 'answer': 'knitting', 'category': 'Dramas'}, {'question': 'What Spielberg film was based on a novel by Alice Walker and stars Whoopi Goldberg?', 'answer': 'The Color Purple', 'category': 'Directors'}, {'question': 'What sci-fi comedy had the following tagline: "Protecting the Earth from the scum of the universe"?', 'answer': 'Men in Black', 'category': 'Taglines'}, {'question': "Name one of Cinderella's two evil stepsisters from the 1950 animated film.", 'answer': 'Anastasia, Drizella', 'category': 'Disney'}, {'question': 'Name the two main villain characters in Iron Man 2.', 'answer': 'Justin Hammer, Whiplash', 'category': 'Comic Book'}, {'question': 'What 1996 Disney movie involves a cathedral, gargoyles, and gypsies?', 'answer': 'The Hunchback of Notre Dame', 'category': 'Animated'}, {'question': 'Name the classic comedy that has the final lines "But you don\'t understand, Osgood! Ohh... I\'m a man!" and "Well, nobody\'s perfect!"?', 'answer': 'Some Like it Hot', 'category': 'Comedies'}, {'question': 'What 90s film features wrongfully accused convict Andy Dufresne?', 'answer': 'The Shawshank Redemption', 'category': 'Dramas'}, {'question': "What famous musician plays Sebastian's rival and eventual bandmate Keith in La La Land?", 'answer': 'John Legend', 'category': 'Oscars'}, {'question': 'White House Down and Olympus Has Fallen were released in the same year. Which one hit the theaters first?', 'answer': 'Olympus Has Fallen', 'category': 'Action/Adventure'}, {'question': 'What classic western movie do Charles Xavier and X-23 watch together in the movie Logan?', 'answer': 'Shane', 'category': 'Comic Book'}, {'question': 'Gary Sinise, Don Cheadle, Tim Robbins, and Connie Nielsen are astronauts exploring the mysteries of our solar system in what 2000s sci-fi film?', 'answer': 'Mission to Mars', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who co-starred as the friend / love interest of Mila Kunis in 2011's Friends with Benefits?", 'answer': 'Justin Timberlake', 'category': 'Rom-Coms'}, {'question': 'What 2003 legal thriller based on a John Grisham novel stars John Cusack and Gene Hackman?', 'answer': 'Runaway Jury', 'category': 'Dramas'}, {'question': 'Which movie is based on the life of undercover FBI agent Joe Pistone?', 'answer': 'Donnie Brasco', 'category': 'Crime'}, {'question': "What was the name of George Hamilton's character in The Godfather Part III?", 'answer': 'B.J. Harrison', 'category': 'Crime'}, {'question': 'Who played Libby, the woman accused of murdering her husband in the film Double Jeopardy?', 'answer': 'Ashley Judd', 'category': 'Crime'}, {'question': 'Who played criminal Charlie Croker in the original 1969 caper film The Italian Job?', 'answer': 'Michael Caine', 'category': 'Crime'}, {'question': 'Who directed the 2002 erotic thriller Femme Fatale?', 'answer': 'Brian De Palma', 'category': 'Crime'}, {'question': "In the 2006 film The Departed, Jack Nicholson's character, Frank Costello, was based on what real-life Boston criminal?", 'answer': 'Whitey Bulger', 'category': 'Crime'}, {'question': 'Who played the stranded astronaut in the 2005 science-fiction film Zathura?', 'answer': 'Dax Shepard', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Mo has an amazing talent to bring characters out of their books, but he must try to stop a freed villain from destroying his family, in what 2000s fantasy adventure?', 'answer': 'Inkheart', 'category': 'Fantasy/Sci-Fi'}, {'question': 'As of the current date in 2017, how many Planet of the Apes films have been released in theaters?', 'answer': "9 (1968's Planet of the Apes, Beneath, Escape, Conquest, Battle, 2001's Planet of the Apes, Rise, Dawn)", 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which 1981 fantasy stars Peter MacNicol and features a mystical beast named Vermithrax Pejorative?', 'answer': 'Dragonslayer', 'category': 'Fantasy/Sci-Fi'}, {'question': "In 2007's Transformers, Sam says that Captain Witwicky was one of the first to explore what location?", 'answer': 'the Arctic Circle', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In An American Tail: Fievel Goes West, which legendary actor voices the character of Sheriff Wylie Burp?', 'answer': 'James Stewart', 'category': 'Animated'}, {'question': 'Who plays Agent 99 in the motion picture Get Smart?', 'answer': 'Anne Hathaway', 'category': 'Comedies'}, {'question': 'Hugh Jackman plays a desperate father looking for his missing daughter in Prisoners. Who plays his friend Franklin, whose daughter also went missing?', 'answer': 'Terrence Howard', 'category': 'Dramas'}, {'question': 'Tippi Hedren played young socialite Melanie Daniels in which Alfred Hitchcock flick?', 'answer': 'The Birds', 'category': 'Horror/Thriller'}, {'question': 'What movie starring Patrick Swayze and Charlie Sheen centered around resistance fighters during a World War III style scenario?', 'answer': 'Red Dawn', 'category': 'Action/Adventure'}, {'question': "How did a toon kill Eddie Valiant's brother in Who Framed Roger Rabbit?", 'answer': 'a toon dropped a piano on him', 'category': 'Family'}, {'question': 'What is the name of one of the two main competing a cappella groups in Pitch Perfect?', 'answer': 'the Barden Bellas, the Treblemakers', 'category': 'Rom-Coms'}, {'question': 'In the Lord of the Rings trilogy, how many Ringwraiths, a.k.a. Black Riders, a.k.a. Nazgûl, were there?', 'answer': '9 Ringwraiths', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Bridesmaids, what was the name of Annie's bakery that failed in the recession?", 'answer': 'Cake Baby', 'category': 'Comedies'}, {'question': 'What is the name of the band that Scott plays in in the film Scott Pilgrim vs. the World?', 'answer': 'Sex Bob-Omb', 'category': 'Comedies'}, {'question': "Who plays Pam's ex-fiancé Kevin in Meet the Parents?", 'answer': 'Owen Wilson', 'category': 'Comedies'}, {'question': 'Who plays the title character in the 2001 comedy Joe Dirt?', 'answer': 'David Spade', 'category': 'Comedies'}, {'question': "Who plays Simon Skinner, manager of the local supermarket in 2007's Hot Fuzz?", 'answer': 'Timothy Dalton', 'category': 'Comedies'}, {'question': "Who plays Martin Lawrence's undercover partner in 2000's Big Momma's House?", 'answer': 'Paul Giamatti', 'category': 'Comedies'}, {'question': 'What movie had the villain falling to his death from the torch on the Statue of Liberty?', 'answer': 'Saboteur', 'category': 'Alfred Hitchcock'}, {'question': 'Which Hitchcock movie featured a scene with 12 minutes of music, no dialogue, and 124 different shots in the sequence?', 'answer': 'The Man Who Knew Too Much', 'category': 'Alfred Hitchcock'}, {'question': 'What Hitchcock movie had a scene filmed on Mt. Rushmore?', 'answer': 'North by Northwest', 'category': 'Alfred Hitchcock'}, {'question': "Who played Marion Crane's sister Lila Crane in Psycho?", 'answer': 'Vera Miles', 'category': 'Alfred Hitchcock'}, {'question': 'What movie starred Marlene Dietrich with Jane Wyman as her maid?', 'answer': 'Stage Fright', 'category': 'Alfred Hitchcock'}, {'question': 'What Hitchcock-directed film features Tippi Hedren and Sean Connery about a young woman who has a pension for stealing?', 'answer': 'Marnie', 'category': 'Alfred Hitchcock'}, {'question': 'What is the 2013 movie that Jennifer Lawrence starred with Bradley Cooper in?', 'answer': 'American Hustle', 'category': 'Jennifer Lawrence'}, {'question': "In Coraline, in the alternate world, what are her mother's eyes made out of?", 'answer': 'buttons', 'category': 'Animated'}, {'question': "In the recently released Baby Driver, who played Baby's love interest Debora?", 'answer': 'Lily James', 'category': 'Action/Adventure'}, {'question': 'Who portrayed the high school math teacher Jaime Escalante in Stand and Deliver?', 'answer': 'Edward James Olmos', 'category': 'Biopics'}, {'question': 'Name a sports movie besides Bull Durham directed by Ron Shelton.', 'answer': "White Men Can't Jump, Cobb, Tin Cup, Play It to the Bone", 'category': 'Directors'}, {'question': 'In the movie Demolition Man, what items have replaced toilet paper?', 'answer': 'seashells', 'category': '1990s'}, {'question': "Who plays Dr. Watson in 2009's Sherlock Holmes?", 'answer': 'Jude Law', 'category': 'Action/Adventure'}, {'question': 'What 2014 comedy stars Seth Rogen and James Franco as journalists recruited to assassinate Kim Jong-un?', 'answer': 'The Interview', 'category': 'Comedies'}, {'question': 'What was the weapon of choice used by the killer that Michael Douglas is trying to track down in Basic Instinct?', 'answer': 'an ice pick', 'category': 'Dramas'}, {'question': "Who played Sebastian Caine a.k.a. the invisible man in 2000's Hollow Man?", 'answer': 'Kevin Bacon', 'category': 'Horror/Thriller'}, {'question': "What musician played the role of villain Feyd-Rautha in David Lynch's Dune?", 'answer': 'Sting', 'category': 'Fantasy/Sci-Fi'}, {'question': "What veteran actor played Bud Fox's father in the film Wall Street?", 'answer': 'Martin Sheen', 'category': '1980s'}, {'question': 'What is the name of the individual that runs the Weapon X program in the X-Men franchise?', 'answer': 'William Stryker', 'category': 'Comic Book'}, {'question': 'Ant-Man director Peyton Reed also directed what film that is about champion high school cheerleading?', 'answer': 'Bring It On', 'category': 'Directors'}, {'question': "Director John Ford's dramatic comedy Mister Roberts marked the last feature film performance of what actor?", 'answer': 'William Powell', 'category': 'Classics'}, {'question': 'What is the name of the 1963 romantic mystery starring Cary Grant and Audrey Hepburn?', 'answer': 'Charade', 'category': 'Classics'}, {'question': "What Billy Wilder film noir was the basis for the plot in director Lawrence Kasdan's neo-noir Body Heat starring Kathleen Turner and William Hurt?", 'answer': 'Double Indemnity', 'category': 'Classics'}, {'question': 'Who played the Wizard in The Wizard of Oz?', 'answer': 'Frank Morgan', 'category': 'Classics'}, {'question': 'In which crime drama did Humphrey Bogart portray an embittered ex-G.I. who became trapped in a southern hotel of both a hurricane and a group of mobsters?', 'answer': 'Key Largo', 'category': 'Classics'}, {'question': 'Who directed the 1960 historical epic Spartacus?', 'answer': 'Stanley Kubrick', 'category': 'Classics'}, {'question': 'Doctor Strange uses what form of magic to assist Christine Palmer in his own surgery?', 'answer': 'astral projection', 'category': 'Comic Book'}, {'question': 'Which comic book movie had characters thinking that Earth was called planet Houston?', 'answer': 'Superman II', 'category': 'Comic Book'}, {'question': "In X-Men: First Class, in what South American country does Erik find the two Nazis he's been searching for?", 'answer': 'Argentina', 'category': 'Comic Book'}, {'question': 'In The Avengers, Tony Stark is shown wearing a T-shirt featuring a popular heavy metal band. What band was it?', 'answer': 'Black Sabbath', 'category': 'Comic Book'}, {'question': 'What name was given to the superhuman created by Lex Luthor in Superman IV: The Quest for Peace?', 'answer': 'Nuclear Man', 'category': 'Comic Book'}, {'question': 'What is the name of the Ghost Rider sequel?', 'answer': 'Ghost Rider: Spirit of Vengeance', 'category': 'Comic Book'}, {'question': 'What classic Disney character baked a gooseberry pie while singing "Someday My Prince Will Come"?', 'answer': 'Snow White (in Snow White and the Seven Dwarfs)', 'category': 'Disney'}, {'question': 'Who played R. L. Stine in Goosebumps?', 'answer': 'Jack Black', 'category': 'Family'}, {'question': "In 2009's hit film Zombieland, Emma Stone goes by the name of what Midwestern city?", 'answer': 'Wichita', 'category': 'Horror/Thriller'}, {'question': 'In which science-fiction drama does Karen Allen play a widower named Jenny Hayden?', 'answer': 'Starman', 'category': '1980s'}, {'question': 'Name the two actors who have played long-distance runner Steve Prefontaine.', 'answer': 'Billy Crudup (in Without Limits), Jared Leto (in Prefontaine)', 'category': 'Sports'}, {'question': 'Who directed Shakespeare in Love?', 'answer': 'John Madden', 'category': 'Directors'}, {'question': 'Which 2010 film was based on a Hanna-Barbera series and featured the voice talents of Dan Aykroyd and Justin Timberlake?', 'answer': 'Yogi Bear', 'category': 'Animated'}, {'question': 'Who plays Sarah Marshall in Forgetting Sarah Marshall?', 'answer': 'Kristen Bell', 'category': 'Comedies'}, {'question': 'The following quote comes from what classic 1975 comedy: "I fart in your general direction; Your mother was a hamster, and your father smelt of elderberries."?', 'answer': 'Monty Python and the Holy Grail', 'category': 'Quotes'}, {'question': 'Who directed From Dusk till Dawn?', 'answer': 'Robert Rodriguez', 'category': 'Horror/Thriller'}, {'question': 'Who played Blackbeard in Pirates of the Caribbean: On Stranger Tides?', 'answer': 'Ian McShane', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played First Lady Mary Todd Lincoln in Steven Spielberg's Lincoln?", 'answer': 'Sally Field', 'category': 'Dramas'}, {'question': 'How many films are in the Death Wish series starring Charles Bronson?', 'answer': '5 (Death Wish, II, 3, The Crackdown, The Face of Death)', 'category': 'Action/Adventure'}, {'question': 'What famous actor played a vampire in 1994, the Grim Reaper in 1998, and a Greek hero in 2004?', 'answer': 'Brad Pitt (in Interview with the Vampire, Meet Joe Black, Troy)', 'category': 'Famous Actors & Actresses'}, {'question': "Who played Charlie Simms in 1992's Scent of a Woman?", 'answer': "Chris O'Donnell", 'category': 'Famous Actors & Actresses'}, {'question': 'What Friends cast member appeared in the first Leprechaun movie in 1993?', 'answer': 'Jennifer Aniston', 'category': 'Famous Actors & Actresses'}, {'question': 'Name the movie in which Robert Downey Jr., Michael Douglas, and Tobey Maguire star.', 'answer': 'Wonder Boys', 'category': 'Famous Actors & Actresses'}, {'question': 'Actor director Brian Goodman played a motel owner in which Steven Spielberg directed film?', 'answer': 'Catch Me If You Can', 'category': 'Famous Actors & Actresses'}, {'question': 'The 2003 drama It Runs in the Family features three generations of actors from what acting family?', 'answer': 'Douglas (Kirk, Michael, Cameron)', 'category': 'Famous Actors & Actresses'}, {'question': "What Oscar-winning actor played Ben Gates' grandfather John Adams Gates in National Treasure?", 'answer': 'Christopher Plummer', 'category': 'Famous Actors & Actresses'}, {'question': 'Backbeat is a dramatic take on the early days of what famous band?', 'answer': 'the Beatles', 'category': 'Biopics'}, {'question': "A man's coerced confession to an IRA bombing he did not commit results in his false imprisonment, and an English lawyer fights to free him in what 90s biographical drama?", 'answer': 'In the Name of the Father', 'category': 'Biopics'}, {'question': 'Who plays John Merrick the "Elephant Man" in 1980\'s The Elephant Man?', 'answer': 'John Hurt', 'category': 'Biopics'}, {'question': 'Tobey Maguire stars as prodigy Bobby Fischer in what movie?', 'answer': 'Pawn Sacrifice', 'category': 'Biopics'}, {'question': 'Who directed the 2014 biopic Mr. Turner starring Timothy Spall as the eccentric British painter J. M. W. Turner?', 'answer': 'Mike Leigh', 'category': 'Biopics'}, {'question': 'Who played explorer Sir Walter Raleigh in the 2007 historical drama Elizabeth: The Golden Age?', 'answer': 'Clive Owen', 'category': 'Biopics'}, {'question': "What was the main objective of Operation Valkyrie in Bryan Singer's 2008 film Valkyrie?", 'answer': 'to assassinate Adolf Hitler', 'category': 'War'}, {'question': "In The Matrix, what is Keanu Reeves' character's full real name?", 'answer': 'Thomas A. Anderson', 'category': 'Fantasy/Sci-Fi'}, {'question': "Erin Brockovich is based on true events, in which a power company was accused of polluting a city's water supply in what state?", 'answer': 'California', 'category': 'Biopics'}, {'question': 'What 2004 drama\'s tagline asks the question "Would you erase me?"?', 'answer': 'Eternal Sunshine of the Spotless Mind', 'category': 'Taglines'}, {'question': 'Who plays Faye, the love interest of the lead guitarist / singer Jimmy in That Thing You Do!?', 'answer': 'Liv Tyler', 'category': '1990s'}, {'question': 'Who provides the voice of Remy the rat in Ratatouille?', 'answer': 'Patton Oswalt', 'category': 'Animated'}, {'question': "Who played the hunky Tad Hamilton in 2004's Win a Date with Tad Hamilton!?", 'answer': 'Josh Duhamel', 'category': 'Comedies'}, {'question': "In Gladiator, who plays Commodus' older sister Lucilla?", 'answer': 'Connie Nielsen', 'category': 'Oscars'}, {'question': "What famous country music singer plays the wife in the survivalist couple, Heather Gummer, in 1990's Tremors?", 'answer': 'Reba McEntire', 'category': 'Horror/Thriller'}, {'question': 'What was the name of the sequel to The Fugitive?', 'answer': 'U.S. Marshals', 'category': 'Action/Adventure'}, {'question': 'Who directed The Usual Suspects?', 'answer': 'Bryan Singer', 'category': 'Directors'}, {'question': 'Name the actor that plays the terrifying T-1000 in Terminator 2: Judgment Day.', 'answer': 'Robert Patrick', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2015 crime drama was directed by Denis Villeneuve and starred Emily Blunt?', 'answer': 'Sicario', 'category': 'Dramas'}, {'question': 'Who played Earl Bassett in the 1990 horror comedy Tremors?', 'answer': 'Fred Ward', 'category': 'Horror'}, {'question': 'Who plays FBI special agent Jennifer Marsh, who investigates a serial killer who rigs contraptions that kill his victims based on website hits in the 2008 thriller Untraceable?', 'answer': 'Diane Lane', 'category': 'Horror'}, {'question': 'Modern horror greats The Cabin in the Woods and Get Out share which actor?', 'answer': 'Bradley Whitford', 'category': 'Horror'}, {'question': 'What 2014 Dracula movie starred Luke Evans as the vampire?', 'answer': 'Dracula Untold', 'category': 'Horror'}, {'question': 'What state was the setting for the filming in The Blair Witch Project?', 'answer': 'Maryland', 'category': 'Horror'}, {'question': 'In the 1974 film Black Christmas, where does the killer hide for the majority of the film?', 'answer': 'the attic', 'category': 'Horror'}, {'question': "What do a bunch of bullying teenagers rub into the Amish men's faces when they are in town in Witness?", 'answer': 'ice cream', 'category': 'Dramas'}, {'question': 'Who directed 8 Mile?', 'answer': 'Curtis Hanson', 'category': 'Dramas'}, {'question': 'Spike Lee directed Ed Norton in what film?', 'answer': '25th Hour', 'category': 'Dramas'}, {'question': 'How does Mikey die at the end of The Ice Storm?', 'answer': 'he is electrocuted', 'category': 'Dramas'}, {'question': 'In the movie Arrival, Louise tells Colonel Weber that what word came about from a misunderstanding with Aborigines?', 'answer': 'kangaroo', 'category': 'Dramas'}, {'question': 'What Clint Eastwood film was shot and set in the Detroit metropolitan area?', 'answer': 'Gran Torino', 'category': 'Dramas'}, {'question': "Which 2015 comedy is based on a popular series of children's books and stars Jack Black?", 'answer': 'Goosebumps', 'category': 'Horror/Thriller'}, {'question': 'The coastal town of Sweethaven is the setting for which 1980 musical comedy?', 'answer': 'Popeye', 'category': '1980s'}, {'question': 'Who played the first lady in Olympus Has Fallen?', 'answer': 'Ashley Judd', 'category': 'Action/Adventure'}, {'question': 'Which actor plays Zorg in The Fifth Element?', 'answer': 'Gary Oldman', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who directed 2005's Fantastic Four?", 'answer': 'Tim Story', 'category': 'Comic Book'}, {'question': 'Who plays Jessica Martin, a teacher who is held hostage in her own home in the 2004 crime thriller Cellular?', 'answer': 'Kim Basinger', 'category': 'Horror/Thriller'}, {'question': "You'll find the character of Stanley Ipkiss in what 1990s comedy?", 'answer': 'The Mask', 'category': 'Comedies'}, {'question': 'Who plays Dr. Alan Grant, the paleontologist that Hammond invites to help inspect the park in the original Jurassic Park?', 'answer': 'Sam Neill', 'category': 'Action/Adventure'}, {'question': "Who provided the voice of Mulan in Disney's Mulan?", 'answer': 'Ming-Na Wen', 'category': 'Animated'}, {'question': 'Who played Emperor Marcus Aurelius in Gladiator?', 'answer': 'Richard Harris', 'category': 'Oscars'}, {'question': "Who played Michael Keaton's best friend and lawyer Jake in Birdman?", 'answer': 'Zach Galifianakis', 'category': 'Dramas'}, {'question': 'Who plays the title role in the 1955 film Mister Roberts?', 'answer': 'Henry Fonda', 'category': 'Classics'}, {'question': "In Gone with the Wind, what is the name of the plantation where Scarlett O'Hara grew up?", 'answer': 'Tara', 'category': 'Classics'}, {'question': 'Who played the title character in the 1960 historical epic Spartacus?', 'answer': 'Kirk Douglas', 'category': 'Classics'}, {'question': 'In what film does Orson Welles play black market dealer Harry Lime?', 'answer': 'The Third Man', 'category': 'Classics'}, {'question': 'What future Hollywood star played 12-year-old Velvet Brown in the 1945 horse racing drama National Velvet?', 'answer': 'Elizabeth Taylor', 'category': 'Classics'}, {'question': 'A Streetcar Named Desire is set in what city?', 'answer': 'New Orleans', 'category': 'Classics'}, {'question': 'What was the name of the psychotic serial killer in the vigilante crime film Dirty Harry?', 'answer': 'Scorpio', 'category': '1970s'}, {'question': 'In Blazing Saddles, what seems to be the last name of everybody in the town of Rock Ridge?', 'answer': 'Johnson', 'category': '1970s'}, {'question': 'What film stars James Brolin, Sam Waterston, and O. J. Simpson as three astronauts who are forced to take part in a fake Mars landing?', 'answer': 'Capricorn One', 'category': '1970s'}, {'question': "Who played the title character in 1971's Shaft?", 'answer': 'Richard Roundtree', 'category': '1970s'}, {'question': "In the 1977 adventure film The Deep, what was the object of everyone's scuba diving underwater search?", 'answer': 'bottles of morphine', 'category': '1970s'}, {'question': 'Who directed the 1970s horror classic Suspiria?', 'answer': 'Dario Argento', 'category': '1970s'}, {'question': "Who plays business-focused Linus Larrabee in 1995's Sabrina?", 'answer': 'Harrison Ford', 'category': 'Rom-Coms'}, {'question': 'Name two of the three actors that played the Three Amigos from Three Amigos.', 'answer': 'Chevy Chase, Martin Short, Steve Martin', 'category': '1980s'}, {'question': 'What 2007 crime drama had the following tagline: "There\'s more than one way to lose your life to a killer"?', 'answer': 'Zodiac', 'category': 'Taglines'}, {'question': 'What MCU director also directed The Rocketeer?', 'answer': 'Joe Johnston', 'category': 'Directors'}, {'question': 'Name one of the three lead Minions in the hit movie spin-off Minions.', 'answer': 'Bob, Kevin, Stuart', 'category': 'Animated'}, {'question': 'Who plays mysterious scientist Nathan in the sci-fi thriller Ex Machina?', 'answer': 'Oscar Isaac', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What actor plays Scott Evil, the son of Dr. Evil, in the Austin Powers franchise?', 'answer': 'Seth Green', 'category': 'Comedies'}, {'question': 'Who plays Sheriff Ed Tom Bell in No Country for Old Men?', 'answer': 'Tommy Lee Jones', 'category': 'Crime'}, {'question': 'In what film does Nicolas Cage play historian and codebreaker Ben Gates?', 'answer': 'National Treasure, National Treasure: Book of Secrets', 'category': 'Action/Adventure'}, {'question': 'Name the 2007 film that sees Emile Hirsch as Christopher McCandless, a young man who ventures to the Alaskan wilderness.', 'answer': 'Into the Wild', 'category': 'Dramas'}, {'question': 'What insects frequently accompany an appearance by the lead villain in Candyman?', 'answer': 'bees', 'category': 'Horror/Thriller'}, {'question': 'Holly Hunter won a Best Actress Academy Award for which 1993 film?', 'answer': 'The Piano', 'category': 'Oscars'}, {'question': "What Oscar-winning actor plays Private First Class Edward Montesquieu Garlick, Cronauer's radio assistant in Good Morning, Vietnam?", 'answer': 'Forest Whitaker', 'category': '1980s'}, {'question': "In Coming to America, Darryl is living off his father's invention of a hair product. What is the name of that product?", 'answer': 'Soul Glo', 'category': '1980s'}, {'question': 'U.S. Army Command Sergeant Major Zack Carey fights back against a corrupt Georgia sheriff and his police force using his old vintage Sherman tank in what 1980s film?', 'answer': 'Tank', 'category': '1980s'}, {'question': 'What is the real name of Iceman in the movie Top Gun?', 'answer': 'Tom Kazansky', 'category': '1980s'}, {'question': 'What Hollywood legend made his final film appearance in the 1980 film Xanadu?', 'answer': 'Gene Kelly', 'category': '1980s'}, {'question': 'The song "I\'m into Something Good" by Herman\'s Hermits plays over a montage in what 80s movie?', 'answer': 'The Naked Gun: From the Files of Police Squad!', 'category': '1980s'}, {'question': 'Who played Zeus in Percy Jackson & the Olympians?', 'answer': 'Sean Bean', 'category': 'Fantasy/Sci-Fi'}, {'question': 'The NSEA Protector is a space vessel from what 90s comedy sci-fi film?', 'answer': 'Galaxy Quest', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1986 action fantasy has sequels entitled The Quickening, The Final Dimension, and Endgame?', 'answer': 'Highlander', 'category': 'Fantasy/Sci-Fi'}, {'question': "In The Empire Strikes Back, whom does Luke call out to first when he's hanging below Cloud City?", 'answer': 'Obi-Wan Kenobi', 'category': 'Fantasy/Sci-Fi'}, {'question': 'The movie Stardust is based on a short story by what author?', 'answer': 'Neil Gaiman', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who directed 1995's 12 Monkeys?", 'answer': 'Terry Gilliam', 'category': 'Fantasy/Sci-Fi'}, {'question': "Jennifer Lawrence has been nominated for four Oscars; she's won once for what film?", 'answer': 'Silver Linings Playbook', 'category': 'Jennifer Lawrence'}, {'question': "What was Aladdin's second official wish?", 'answer': 'that the Genie rescue him from drowning', 'category': 'Disney'}, {'question': 'Who played partners Remy and Jake in the 2010 sci-fi action thriller Repo Men?', 'answer': 'Jude Law, Forest Whitaker', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What screen name does Mark Wahlberg give himself in Boogie Nights?', 'answer': 'Dirk Diggler', 'category': 'Dramas'}, {'question': 'Which Star Trek star directed Three Men and a Baby?', 'answer': 'Leonard Nimoy', 'category': 'Comedies'}, {'question': 'What is the name of the Yakuza army in Kill Bill: Volume 1?', 'answer': 'the Crazy 88', 'category': 'Action/Adventure'}, {'question': 'Who directed the 2009 Mark Wahlberg drama The Lovely Bones?', 'answer': 'Peter Jackson', 'category': 'Directors'}, {'question': "Who plays the computer hacker Lisbeth Salander in David Fincher's The Girl with the Dragon Tattoo?", 'answer': 'Rooney Mara', 'category': 'Horror/Thriller'}, {'question': 'Who directed the 2011 sci-fi western Cowboys & Aliens?', 'answer': 'Jon Favreau', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played Hellboy in 2004's Hellboy?", 'answer': 'Ron Perlman', 'category': 'Comic Book'}, {'question': "In 2016's The Edge of Seventeen, Nadine forms a special bond with one of her teachers, Mr. Bruner. Who plays Mr. Bruner?", 'answer': 'Woody Harrelson', 'category': 'Coming of Age'}, {'question': 'The musical Grease was released in what year?', 'answer': '1978', 'category': 'N/A'}, {'question': 'In the film Frequency, who plays NYPD detective John Sullivan, who contacts his father in the past via an old ham radio?', 'answer': 'Jim Caviezel', 'category': '2000s'}, {'question': "Who played the 243-year-old Mr. Magorium in Mr. Magorium's Wonder Emporium?", 'answer': 'Dustin Hoffman', 'category': '2000s'}, {'question': "What is the name of the character played by Snoop Dogg in 2004's Starsky & Hutch?", 'answer': 'Huggy Bear', 'category': '2000s'}, {'question': "Who played Patrick Wilson's wife in the 2008 thriller Lakeview Terrace?", 'answer': 'Kerry Washington', 'category': '2000s'}, {'question': 'In The Whole Nine Yards, Bruce Willis plays an infamous contract killer who shares a nickname with what kind of flower?', 'answer': 'a tulip', 'category': '2000s'}, {'question': "Who plays Captain James Wilkins of the British Army, who was forced to burn a church full of people in 2000's The Patriot?", 'answer': 'Adam Baldwin', 'category': '2000s'}, {'question': 'In what 1970s science-fiction film does Bruce Dern star as ecologist Freeman Lowell?', 'answer': 'Silent Running', 'category': '1970s'}, {'question': "Who played the robot gunslinger in 1973's Westworld?", 'answer': 'Yul Brynner', 'category': '1970s'}, {'question': "In 1975's The Man Who Would Be King, what song does Sean Connery's character sing before he tumbles to his death?", 'answer': 'The Minstrel Boy', 'category': '1970s'}, {'question': 'What was the final movie in the Planet of the Apes series to be released in the 1970s?', 'answer': 'Battle for the Planet of the Apes', 'category': '1970s'}, {'question': "Who stars as a critic obsessed with Casablanca in Herbert Ross' Play It Again, Sam?", 'answer': 'Woody Allen', 'category': '1970s'}, {'question': 'In Deliverance, who plays Lewis, who suffers a bad leg break?', 'answer': 'Burt Reynolds', 'category': '1970s'}, {'question': "Who directed 2002's The Ring?", 'answer': 'Gore Verbinski', 'category': 'Horror/Thriller'}, {'question': "Name the James Ponsoldt film that stars Miles Teller as a freewheeling high school student who parties hard and wakes up on Shailene Woodley's lawn.", 'answer': 'The Spectacular Now', 'category': 'Coming of Age'}, {'question': 'Two actors have won Best Actor in consecutive years. Tom Hanks was one. Who was the other one?', 'answer': 'Spencer Tracy (for Captains Courageous, Boys Town)', 'category': 'Oscars'}, {'question': 'What Rocky Horror Picture Show alum also provides the voice for the evil Hexxus in FernGully: The Last Rainforest?', 'answer': 'Tim Curry', 'category': 'Animated'}, {'question': 'Who played Andrew Clark, the jock, in The Breakfast Club?', 'answer': 'Emilio Estevez', 'category': 'Coming of Age'}, {'question': "In what romantic drama does Mel Gibson play a pilot from the 1930s who's frozen in a cryogenics test and awakens in 1992?", 'answer': 'Forever Young', 'category': 'Dramas'}, {'question': 'Who played Jyn Erso in Rogue One: A Star Wars Story?', 'answer': 'Felicity Jones', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played thief Simon Templar in 1997's The Saint?", 'answer': 'Val Kilmer', 'category': 'Action/Adventure'}, {'question': 'For what film has Natalie Portman won an Oscar?', 'answer': 'Black Swan', 'category': 'Oscars'}, {'question': 'Who plays the father and husband George Lutz in the 2005 remake of The Amityville Horror?', 'answer': 'Ryan Reynolds', 'category': 'Horror/Thriller'}, {'question': "Name both of the two co-leads in Dude, Where's My Car?.", 'answer': 'Ashton Kutcher, Seann Wiliam Scott', 'category': 'Comedies'}, {'question': "What is the name of Martin Riggs' dog in the Lethal Weapon franchise?", 'answer': 'Sam', 'category': 'N/A'}, {'question': "Who directed 2013's The Wolverine?", 'answer': 'James Mangold', 'category': 'Comic Book'}, {'question': 'Who played the bumbling computer genius Gus Gorman in Superman III?', 'answer': 'Richard Pryor', 'category': 'Comic Book'}, {'question': 'Tony Stark mistakes Stan Lee for what real-life person in the first Iron Man?', 'answer': 'Hugh Hefner', 'category': 'Comic Book'}, {'question': 'Who played Doctor Curt Connors a.k.a. the Lizard in The Amazing Spider-Man?', 'answer': 'Rhys Ifans', 'category': 'Comic Book'}, {'question': 'In Iron Man 3, what was the name of the organization that was established by the villainous Aldrich Killian?', 'answer': 'A.I.M.', 'category': 'Comic Book'}, {'question': "In 2013's Man of Steel, General Zod attempts to terraform the Earth into a new Krypton by deploying world engines to Metropolis and what body of water?", 'answer': 'the Indian Ocean', 'category': 'Comic Book'}, {'question': 'In what film did Leonardo play a character called Frank Abagnale Jr.?', 'answer': 'Catch Me If You Can', 'category': 'Leonardo DiCaprio'}, {'question': 'Who plays fisherman Soloman Vandy in Blood Diamond?', 'answer': 'Djimon Hounsou', 'category': 'Leonardo DiCaprio'}, {'question': 'Who played Captain George Ellerby in The Departed?', 'answer': 'Alec Baldwin', 'category': 'Leonardo DiCaprio'}, {'question': 'What historical figure is portrayed by Josh Lucas in J. Edgar?', 'answer': 'Charles Lindbergh', 'category': 'Leonardo DiCaprio'}, {'question': 'Which movie star was mentioned to have been the President in the action film Demolition Man?', 'answer': 'Arnold Schwarzenegger', 'category': 'Action/Adventure'}, {'question': 'Who plays Police Captain Ed Ramey, who tries to negotiate with Colin Farrell in the thriller Phone Booth?', 'answer': 'Forest Whitaker', 'category': 'Horror/Thriller'}, {'question': "Who played Eddie's ski jumping coach in Eddie the Eagle?", 'answer': 'Hugh Jackman', 'category': 'Dramas'}, {'question': "Who plays Serleena's two-headed servant Scrad in Men in Black 2?", 'answer': 'Johnny Knoxville', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played Dick Grayson in Batman Forever?', 'answer': "Chris O'Donnell", 'category': 'Comic Book'}, {'question': 'What 1990s movie had the following tagline: "Her life was in their hands. Now her toe is in the mail."?', 'answer': 'The Big Lebowski', 'category': 'Taglines'}, {'question': "Who plays Irene Waters, the woman Jim Carrey's character falls for in Me, Myself & Irene?", 'answer': 'Renée Zellweger', 'category': 'Comedies'}, {'question': 'Who played private investigator Eddie Valiant, who teamed up with Roger Rabbit in Who Framed Roger Rabbit?', 'answer': 'Bob Hoskins', 'category': 'Animated'}, {'question': "In director Billy Wilder's romantic comedy Love in the Afternoon, what musical instrument did Audrey Hepburn play?", 'answer': 'the cello', 'category': 'Classics'}, {'question': 'Who plays Brooklyn Dodgers team executive Branch Rickey in 42?', 'answer': 'Harrison Ford', 'category': 'Sports'}, {'question': 'In the 2004 Disney film Miracle, which European country did Team U.S.A. compete against in the Oslo exhibition game?', 'answer': 'Norway', 'category': 'Sports'}, {'question': 'How many rounds did the final fight between Rocky and Clubber Lang last in Rocky III?', 'answer': '3 rounds', 'category': 'Sports'}, {'question': 'Who played the coach in Ladybugs?', 'answer': 'Rodney Dangerfield', 'category': 'Sports'}, {'question': 'What team does Billy Beane turn down for a job at the end of Moneyball?', 'answer': 'the Boston Red Sox', 'category': 'Sports'}, {'question': 'What classic film star made his final performance in Field of Dreams as Archibald "Moonlight" Graham?', 'answer': 'Burt Lancaster', 'category': 'Sports'}, {'question': 'For which Woody Allen movie did Dianne Wiest win a Best Supporting Actress Oscar?', 'answer': 'Hannah and Her Sisters', 'category': 'Oscars'}, {'question': 'For what movie did Julie Andrews receive her Best Actress Oscar?', 'answer': 'Mary Poppins', 'category': 'Oscars'}, {'question': 'For which film did Emma Thompson win her first Oscar?', 'answer': 'Howards End (for Actress)', 'category': 'Oscars'}, {'question': 'For which film did Sidney Poitier receive his only Oscar?', 'answer': 'Lilies of the Field (for Actor)', 'category': 'Oscars'}, {'question': 'Who won an Oscar for Best Actress for the 1971 film Klute?', 'answer': 'Jane Fonda', 'category': 'Oscars'}, {'question': 'Who won an Academy Award for writing Argo?', 'answer': 'Chris Terrio (for Adapted Screenplay)', 'category': 'Oscars'}, {'question': 'In what 2000s film do you hear the quote "I am a golden god!"?', 'answer': 'Almost Famous', 'category': 'Quotes'}, {'question': 'Which actress plays Captain Carmen Ibáñez in the 1997 sci-fi romp Starship Troopers?', 'answer': 'Denise Richards', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played Dr. Martin Heiss, a paranormal debunker, in 2016's Ghostbusters?", 'answer': 'Bill Murray', 'category': 'Famous Actors & Actresses'}, {'question': 'Name the 1987 sci-fi comedy that starred Meg Ryan, Dennis Quaid, and Martin Short.', 'answer': 'Innerspace', 'category': '1980s'}, {'question': 'In which movie did Matthew McConaughey take on the role of historical figure Roger Sherman Baldwin?', 'answer': 'Amistad', 'category': 'Matthew McConaughey'}, {'question': 'What Oscar-nominated actress plays Bernadine "Bernie" Harris, who discovers her husband is leaving her, in Waiting to Exhale?', 'answer': 'Angela Bassett', 'category': 'Characters'}, {'question': 'Who directed Dances with Wolves?', 'answer': 'Kevin Costner', 'category': 'Directors'}, {'question': "Who plays Dana's neighbor, accountant Louis Tully, in 1984's Ghostbusters?", 'answer': 'Rick Moranis', 'category': 'Comedies'}, {'question': 'In the fantasy comedy Pleasantville, name the two actors that played David and Jennifer, who get sucked into the 50s sitcom.', 'answer': 'Tobey Maguire, Reese Witherspoon', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Christine Brown gets a curse placed on her soul when she denies an old woman a mortgage extension in what Sam Raimi thriller?', 'answer': 'Drag Me to Hell', 'category': 'Horror/Thriller'}, {'question': 'Who directed Lethal Weapon?', 'answer': 'Richard Donner', 'category': 'Action/Adventure'}, {'question': 'Who won an Academy Award for playing accused spy Rudolf Abel in Bridge of Spies?', 'answer': 'Mark Rylance', 'category': 'Oscars'}, {'question': "Who voiced Lumière in 1991's Beauty and the Beast?", 'answer': 'Jerry Orbach', 'category': 'Animated'}, {'question': 'What dark comedy stars Meryl Streep, Goldie Hawn, and Bruce Willis?', 'answer': 'Death Becomes Her', 'category': 'Famous Actors & Actresses'}, {'question': 'What is the first film to win the Academy Award for Best Picture?', 'answer': 'Wings', 'category': 'N/A'}, {'question': "Based off the characters created by George A. Romero, what now popular director wrote the screenplay for 2004's Dawn of the Dead?", 'answer': 'James Gunn', 'category': 'Horror/Thriller'}, {'question': "Who plays FBI Agent Will Graham in 2002's Red Dragon?", 'answer': 'Edward Norton', 'category': 'Horror/Thriller'}, {'question': 'What does Hank set ablaze at the end of A Simple Plan?', 'answer': 'money', 'category': 'Horror/Thriller'}, {'question': 'What is the name of the novelties company in Halloween III: Season of the WItch?', 'answer': 'Silver Shamrock Novelties', 'category': 'Horror/Thriller'}, {'question': 'In A Nightmare on Elm Street, what was the first item Nancy brought back from her dream?', 'answer': 'Freddy Krueger’s hat', 'category': 'Horror/Thriller'}, {'question': "Who played Paul Walker's father, Judge Litten Mandrake, in The Skulls?", 'answer': 'Craig T. Nelson', 'category': 'Horror/Thriller'}, {'question': "In the 80s, River Phoenix played a teenage version of Harrison Ford in Indiana Jones and the Last Crusade. In what film did he play Ford's son?", 'answer': 'The Mosquito Coast', 'category': '1980s'}, {'question': 'Who plays the rookie pitcher in Bull Durham?', 'answer': 'Tim Robbins', 'category': '1980s'}, {'question': 'In which 1980s comedy do Dan Aykroyd and John Candy play bickering brother-in-laws on vacation?', 'answer': 'The Great Outdoors', 'category': '1980s'}, {'question': 'What 80s action comedy features the characters of Jack Walsh, Jonathan Mardukas, and Marvin Dorfler?', 'answer': 'Midnight Run', 'category': '1980s'}, {'question': 'Which member of the Goonies in the wishing well says the following: "Yeah, but you know what? This one, this one right here. This was my dream, my wish. And it didn\'t come true. So I\'m taking it back. I\'m taking them all back."?', 'answer': 'Mouth', 'category': '1980s'}, {'question': 'What is the name of the large beast that Sarah befriends in Labyrinth?', 'answer': 'Ludo', 'category': '1980s'}, {'question': 'In Home Alone, who plays Gus Polinski, a polka band player who offers to take Kate back to Chicago?', 'answer': 'John Candy', 'category': 'Holiday'}, {'question': 'Who was opposite Julia Roberts in Notting Hill?', 'answer': 'Hugh Grant', 'category': 'Rom-Coms'}, {'question': 'In Toy Story 3, who voiced the Ken doll?', 'answer': 'Michael Keaton', 'category': 'Pixar'}, {'question': 'Lisa Loeb\'s Gen X hit "Stay" plays over the closing credits of what Winona Ryder movie?', 'answer': 'Reality Bites', 'category': 'Scores & Soundtracks'}, {'question': 'What Firefly and Serenity star provided the voice of one of the Kyln prisoners in Guardians of the Galaxy?', 'answer': 'Nathan Fillion', 'category': 'Comic Book'}, {'question': "Name the film in which you'll find suburban characters with names like Lester Burnham and Frank Fitts.", 'answer': 'American Beauty', 'category': 'Characters'}, {'question': 'What is the name of the region of Middle-earth where the hobbits live in the Lord of the Rings films?', 'answer': 'the Shire', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In 21 Jump Street, who plays Deputy Chief Hardy, who reassigns Schmidt and Jenko to Jump Street?', 'answer': 'Nick Offerman', 'category': 'Comedies'}, {'question': 'In the movie Pulp Fiction, what is the color of the glow coming from the briefcase when it is open?', 'answer': 'gold', 'category': 'Crime'}, {'question': "Who plays Keanu Reeves' partner in Speed?", 'answer': 'Jeff Daniels', 'category': 'Action/Adventure'}, {'question': 'What classic Disney animated film begin with the songs "Whistle Stop" and "Oo-De-Lally"?', 'answer': 'Robin Hood', 'category': 'Animated'}, {'question': 'What 1999 movie stars John Travolta and Madeleine Stowe as investigators of a murder in the Army?', 'answer': "The General's Daughter", 'category': 'Dramas'}, {'question': 'What actor said the famous line "That\'s what I love about these high school girls, man. I get older, they stay the same age."?', 'answer': 'Matthew McConaughey (in Dazed and Confused)', 'category': 'Quotes'}, {'question': 'What traditionally comedic actor has played a homeless man in 1991, an experimental teacher in 1997, and a kid show host in 2002?', 'answer': 'Robin Williams (in The Fisher King, Flubber, Death to Smoochy)', 'category': 'Famous Actors & Actresses'}, {'question': 'Road House, Field of Dreams, and Ghostbusters II share what release year?', 'answer': '1989', 'category': 'Release Dates'}, {'question': 'In what year was The Amazing Spider-Man released?', 'answer': '2012', 'category': 'Release Dates'}, {'question': "Tarantino's Inglourious Basterds was released in what year?", 'answer': '2009', 'category': 'Release Dates'}, {'question': "Bram Stoker's Dracula was released in what year?", 'answer': '1992', 'category': 'Release Dates'}, {'question': 'Rain Man, Coming to America, and Bull Durham were all released in what year?', 'answer': '1988', 'category': 'Release Dates'}, {'question': 'What year was Oscar-nominated film The Kids Are All Right released?', 'answer': '2010', 'category': 'Release Dates'}, {'question': 'In Street Fighter, who played General M. Bison in his final theatrical role?', 'answer': 'Raul Julia', 'category': 'Action/Adventure'}, {'question': "Who directed Smokin' Aces?", 'answer': 'Joe Carnahan', 'category': 'Action/Adventure'}, {'question': "What actress replaced Rachel Weisz as Brendan Fraser's wife Evelyn in The Mummy: Tomb of the Dragon Emperor?", 'answer': 'Maria Bello', 'category': 'Action/Adventure'}, {'question': 'Who plays Tiberias, the Marshal of Jerusalem in Kingdom of Heaven?', 'answer': 'Jeremy Irons', 'category': 'Action/Adventure'}, {'question': 'What year saw the release of the Bruce Lee classic Enter the Dragon?', 'answer': '1973', 'category': 'Action/Adventure'}, {'question': 'Chris Evans and Dakota Fanning star in what 2000s action thriller that centers around a group of people born with various superhuman abilities?', 'answer': 'Push', 'category': 'Action/Adventure'}, {'question': 'Kevin Costner and Annette Bening star in which western?', 'answer': 'Open Range', 'category': 'Westerns'}, {'question': 'In what 2012 movie will you find Matthew McConaughey play a character named Dallas?', 'answer': 'Magic Mike', 'category': 'Matthew McConaughey'}, {'question': 'What actress played the role of Miss Marquez in the 1996 film Jack?', 'answer': 'Jennifer Lopez', 'category': 'Comedies'}, {'question': '"I\'m kind of a big deal" can be heard in what 2004 comedy?', 'answer': 'Anchorman: The Legend of Ron Burgundy', 'category': 'Quotes'}, {'question': "What primary villain does Spidey square off against in 2002's Spider-Man?", 'answer': 'the Green Goblin', 'category': 'Marvel'}, {'question': "Who directed and starred as the lead in 1996's Hamlet?", 'answer': 'Kenneth Branagh', 'category': 'Dramas'}, {'question': "Who played Muriel Heslop in the film Muriel's Wedding?", 'answer': 'Toni Collette', 'category': 'Rom-Coms'}, {'question': 'What 90s animated adventure film stars the talents of Christopher Lloyd, Patrick Stewart, Whoopi Goldberg, and Macaulay Culkin?', 'answer': 'The Pagemaster', 'category': 'Animated'}, {'question': 'The Dream Master is the subtitle of a sequel in what horror franchise?', 'answer': 'A Nightmare on Elm Street', 'category': 'Horror/Thriller'}, {'question': 'Who plays Sam in the John Frankenheimer directed spy action thriller Ronin?', 'answer': 'Robert De Niro', 'category': 'Action/Adventure'}, {'question': 'Which cast member of The Hangover played Stu, who makes his living as a dentist?', 'answer': 'Ed Helms', 'category': 'Comedies'}, {'question': 'What alien invasion film starred a host of stars including Jack Nicholson, Glenn Close, Pierce Brosnan, and Sarah Jessica Parker?', 'answer': 'Mars Attacks!', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In The Sandlot, what nickname did the boys give the large dog that lived next door to the ball field that would steal their baseballs?', 'answer': 'the Beast', 'category': 'Family'}, {'question': 'Who plays Shakespeare in Shakespeare in Love?', 'answer': 'Joseph Fiennes', 'category': 'Romance'}, {'question': "What song does Audrey Hepburn sing in Breakfast at Tiffany's?", 'answer': 'Moon River', 'category': 'Romance'}, {'question': 'In 500 Days of Summer, which member of the Beatles does Summer say is the best?', 'answer': 'Ringo Starr', 'category': 'Romance'}, {'question': "What is the subject of Bill Murray's play in 1982's Tootsie?", 'answer': 'Love Canal', 'category': 'Romance'}, {'question': 'What actor plays Jack Trainer, the man Melanie Griffith and Sigourney Weaver fight over in Working Girl?', 'answer': 'Harrison Ford', 'category': 'Romance'}, {'question': 'Where did Clementine tell Joel to meet her after his memory got erased in Eternal Sunshine of the Spotless Mind?', 'answer': 'Montauk', 'category': 'Romance'}, {'question': 'In what film does Glen Campbell play a lawman joining the mission to bring in Tom Chaney?', 'answer': 'True Grit', 'category': 'Classics'}, {'question': 'Who directed Cary Grant in the 1944 comedy Arsenic and Old Lace?', 'answer': 'Frank Capra', 'category': 'Classics'}, {'question': 'Who played Robin Hood in the 1938 classic The Adventures of Robin Hood?', 'answer': 'Errol Flynn', 'category': 'Classics'}, {'question': 'Who played Major T. J. "King" Kong in Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb?', 'answer': 'Slim Pickens', 'category': 'Classics'}, {'question': "What iconic horror actor who was known as the Man of a Thousand Faces played the title role in 1925's The Phantom of the Opera?", 'answer': 'Lon Chaney', 'category': 'Classics'}, {'question': "Who played Mr. Potter in It's a Wonderful Life?", 'answer': 'Lionel Barrymore', 'category': 'Classics'}, {'question': 'Laurence Fishburne plays what character in Man of Steel?', 'answer': 'Perry White', 'category': 'Comic Book'}, {'question': 'Who plays Princess Giselle in the modern-day fairy tale Enchanted?', 'answer': 'Amy Adams', 'category': 'Family'}, {'question': 'Who directed Die Hard with a Vengeance?', 'answer': 'John McTiernan', 'category': 'Action/Adventure'}, {'question': "Which actress plays the unfaithful girlfriend to Joseph Gordon-Levitt's cancer-stricken character at the outset of 50/50?", 'answer': 'Bryce Dallas Howard', 'category': 'Rom-Coms'}, {'question': 'Robert De Niro played Jack Walsh in what 1980s comedy flick?', 'answer': 'Midnight Run', 'category': 'Comedies'}, {'question': 'In Beauty and the Beast, during the song "Gaston", how many dozens of eggs did Gaston say he eats everyday as a grown man?', 'answer': '5 dozen eggs', 'category': 'Animated'}, {'question': 'In Scott Pilgrim vs. the World, two members of the League of Evil Exes have portrayed superheroes on the big screen. Name one of them.', 'answer': 'Brandon Routh (in Superman Returns), Chris Evans (in Fantastic Four, Fantastic Four: Rise of the Silver Surfer, Captain America: The First Avenger, The Avengers, Thor: The Dark World, Captain America: The Winter Soldier, Avengers: Age of Ultron, Ant-Man, Captain America: Civil War, Spider-Man: Homecoming)', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played Dr. Jonathan Crane, a.k.a. the Scarecrow, in Christopher Nolan's Batman films?", 'answer': 'Cillian Murphy', 'category': 'Comic Book'}, {'question': 'Ong-Bak was the 2003 breakout movie for what martial artist?', 'answer': 'Tony Jaa', 'category': 'Action/Adventure'}, {'question': 'Which Wes Craven horror film was remade in 2006 and focuses on a family of cannibals?', 'answer': 'The Hills Have Eyes', 'category': 'Horror/Thriller'}, {'question': 'Gene Hackman plays Captain Frank Ramsey in what flick?', 'answer': 'Crimson Tide', 'category': '1990s'}, {'question': "Who played FBI Special Agent Richard DesLauriers in 2016's Patriots Day?", 'answer': 'Kevin Bacon', 'category': 'Dramas'}, {'question': 'What actor plays Detective McFee, who takes part in killing the man in the bathroom in Witness?', 'answer': 'Danny Glover', 'category': 'Dramas'}, {'question': 'Who co-stars with Robin Williams as Albert, his guide in the afterlife, in What Dreams May Come?', 'answer': 'Cuba Gooding Jr.', 'category': 'Dramas'}, {'question': 'What actress played the childhood friend of Jason Patric and Brad Pitt as an adult in the film Sleepers?', 'answer': 'Minnie Driver', 'category': 'Dramas'}, {'question': "In The Grand Budapest Hotel, many of the Lutz Police Militia have an image of what animal's head on their hats?", 'answer': 'wolves', 'category': 'Dramas'}, {'question': 'Who played enthusiastic linebacker Alan Bosley in Remember the Titans?', 'answer': 'Ryan Gosling', 'category': 'Sports'}, {'question': 'What film follows the perfect game performance of an aging baseball star in what could be his final game in professional baseball?', 'answer': 'For Love of the Game', 'category': 'Sports'}, {'question': 'In Happy Gilmore, what fast food chain does GIlmore become a spokesperson for?', 'answer': 'Subway', 'category': 'Sports'}, {'question': 'Against which team did Notre Dame\'s Daniel "Rudy" Ruettiger get a sack against in Rudy?', 'answer': 'Georgia Tech', 'category': 'Sports'}, {'question': 'In 1993\'s Rookie of the Year, what team were the Chicago Cubs playing against in the film\'s "big game", the final game of the regular season?', 'answer': 'the New York Mets', 'category': 'Sports'}, {'question': "What are Simon Pegg and Nick Frost's profession in Hot Fuzz?", 'answer': 'police constables', 'category': 'N/A'}, {'question': 'What 1989 comedy stars John Travolta, Kirstie Alley, and a baby with the voice of Bruce Willis?', 'answer': "Look Who's Talking", 'category': 'N/A'}, {'question': 'Who voiced the title character in Fantastic Mr. Fox?', 'answer': 'George Clooney', 'category': 'N/A'}, {'question': 'Which movie was the feature film directorial debut of F. Gary Gray?', 'answer': 'Friday', 'category': 'N/A'}, {'question': 'Who portrayed the role of Texas Ranger LaBoeuf in the 2010 remake of True Grit?', 'answer': 'Matt Damon', 'category': 'N/A'}, {'question': 'John Carter takes place on Earth and where?', 'answer': 'Mars', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What was Henry Hill selling when he got arrested the first time as a kid in Goodfellas?', 'answer': 'cigarettes', 'category': 'Martin Scorsese'}, {'question': 'Who directed Meryl in Ricki and the Flash?', 'answer': 'Jonathan Demme', 'category': 'Meryl Streep'}, {'question': 'What is the name of the bartender in The Shining?', 'answer': 'Lloyd', 'category': 'Horror/Thriller'}, {'question': 'Who directed The Great Escape?', 'answer': 'John Sturges', 'category': 'War'}, {'question': 'Which veteran actor lent his talents to Zootopia as the voice of Mayor Lionheart?', 'answer': 'J. K. Simmons', 'category': 'Disney'}, {'question': "What popular TV actress plays Jon Favreau's estranged wife in Chef?", 'answer': 'Sofía Vergara', 'category': 'Dramas'}, {'question': "What is the name of Ariel's father in Disney's The Little Mermaid?", 'answer': 'Triton', 'category': 'Animated'}, {'question': 'In Zoolander, which music legend judges the walk-off between Derek and Hansel?', 'answer': 'David Bowie', 'category': 'Comedies'}, {'question': 'Shadowy elements in the NSA target a nine-year-old autistic savant for death when he is able to decipher a top secret code in what 90s thriller starring Bruce Willis?', 'answer': 'Mercury Rising', 'category': 'Horror/Thriller'}, {'question': 'Who directed the fifth Mission: Impossible film, Rogue Nation?', 'answer': 'Christopher McQuarrie', 'category': 'Action/Adventure'}, {'question': 'What sci-fi thriller, starring Matt Damon and Emily Blunt, revolves around the affair between a politician and a contemporary dancer that is affected by mysterious forces keeping the lovers apart?', 'answer': 'The Adjustment Bureau', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Josh Lucas plays Jake, a former flame to Reese Witherspoon, in what movie?', 'answer': 'Sweet Home Alabama', 'category': 'Rom-Coms'}, {'question': 'Elijah Wood is sent off to spend the summer with his Uncle Porter in the 1996 family film Flipper. What Aussie plays Porter?', 'answer': 'Paul Hogan', 'category': 'Family'}, {'question': "Who plays Jared Leto's mother in Requiem for a Dream?", 'answer': 'Ellen Burstyn', 'category': '2000s'}, {'question': 'The attempted assassination of the American President is told and retold from several different perspectives in what 2008 drama?', 'answer': 'Vantage Point', 'category': '2000s'}, {'question': 'Who played rookie director Damien Cockburn in Tropic Thunder?', 'answer': 'Steve Coogan', 'category': '2000s'}, {'question': 'In which sci-fi thriller does Denzel Washington pursue a homicidal virtual reality character who escapes into the real world?', 'answer': 'Virtuosity', 'category': 'Denzel Washington'}, {'question': 'What 1998 thriller sees Denzel Washington play Detective John Hobbes, who investigates a series of supernatural murders?', 'answer': 'Fallen', 'category': 'Denzel Washington'}, {'question': "What city's sanitation department does Denzel Washington work for in Fences?", 'answer': 'Pittsburgh', 'category': 'Denzel Washington'}, {'question': 'In Bad Teacher, Cameron Diaz tries to win over substitute teacher Scott Delacorte. Who plays Scott?', 'answer': 'Justin Timberlake', 'category': 'Cameron Diaz'}, {'question': 'Cameron Diaz plays June Havens in what action film?', 'answer': 'Knight and Day', 'category': 'Cameron Diaz'}, {'question': "What is the name of Cameron Diaz's character in the Shrek films?", 'answer': 'Fiona', 'category': 'Cameron Diaz'}, {'question': 'In Lethal Weapon 2, the man driving the truck that Riggs is hanging onto eventually gets killed by what beach sporting good?', 'answer': 'a surfboard', 'category': 'Action/Adventure'}, {'question': "Who played the villainous Senator Quintus Corvus in 2014's Pompeii?", 'answer': 'Kiefer Sutherland', 'category': 'Action/Adventure'}, {'question': 'Which director, also known for his work in the Die Hard franchise, shares a director credit on the historical fiction action film The 13th Warrior?', 'answer': 'John McTiernan', 'category': 'Action/Adventure'}, {'question': 'Who played the role of real-life Irish republican Bobby Sands in the 2008 film Hunger?', 'answer': 'Michael Fassbender', 'category': '2000s'}, {'question': 'Who plays U.N. interpreter Silvia Broome, who overhears two men discussing an international assassination plot in the 2005 political thriller The Interpreter?', 'answer': 'Nicole Kidman', 'category': '2000s'}, {'question': "A mentally disturbed young woman takes a job at a posh country club and falls in with a clique of wealthy college kids where she's taken under the wing of the clique's twisted leader, in what 2000 teen thriller?", 'answer': 'The In Crowd', 'category': '2000s'}, {'question': 'Who starred as Jane Austen in the 2007 film Becoming Jane?', 'answer': 'Anne Hathaway', 'category': 'Dramas'}, {'question': 'What movie features Dustin Hoffman as Mumbles, Mandy Patinkin as 88 Keys, and Al Pacino as Big Boy Caprice?', 'answer': 'Dick Tracy', 'category': 'Crime'}, {'question': 'Dr. Otto Octavius loses which family member in a failed fusion experiment in Spider-Man 2?', 'answer': 'his wife', 'category': 'Comic Book'}, {'question': 'What state do the Simpsons retreat to in The Simpsons Movie?', 'answer': 'Alaska', 'category': 'Animated'}, {'question': 'Complete the phrase from Jumanji: "In the jungle, you must wait \'til the dice read ___.".', 'answer': 'five or eight', 'category': 'Family'}, {'question': "Who provided the voice of GERTY the robotic companion in 2009's Moon?", 'answer': 'Kevin Spacey', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In 2004, what actor and actress received Razzies individually for Worst Actor and Worst Actress and together for Worst Screen Couple?', 'answer': 'Ben Affleck, Jennifer Lopez (for Gigli)', 'category': 'Famous Actors & Actresses'}, {'question': 'Tom Hanks has directed two feature films. Name them.', 'answer': 'That Thing You Do!, Larry Crowne', 'category': 'Tom Hanks'}, {'question': 'What legendary composer was played by Gary Oldman in the film Immortal Beloved?', 'answer': 'Ludwig van Beethoven', 'category': '1990s'}, {'question': 'Which western film was released first: Tombstone or Wyatt Earp?', 'answer': 'Tombstone', 'category': 'Westerns'}, {'question': 'Released in the year 2000, what film starred Leo and was directed by Danny Boyle?', 'answer': 'The Beach', 'category': 'Leonardo DiCaprio'}, {'question': 'What Alfred Hitchcock thriller inspired the Danny DeVito comedy Throw Momma from the Train?', 'answer': 'Strangers on a Train', 'category': 'Directors'}, {'question': 'Annie Lennox performed the Academy Award winning song "Into the West" for which 2003 film?', 'answer': 'The Lord of the Rings: The Return of the King', 'category': 'Scores & Soundtracks'}, {'question': 'In what 1995 epic will you hear the following quote: "Do it, and let the English see you do it."?', 'answer': 'Braveheart', 'category': 'Quotes'}, {'question': 'What actor played the groom Ian in the smash hit My Big Fat Greek Wedding?', 'answer': 'John Corbett', 'category': 'Rom-Coms'}, {'question': 'Who co-stars with Robert De Niro in the 2002 spoof buddy cop film Showtime?', 'answer': 'Eddie Murphy', 'category': 'Comedies'}, {'question': "What was the name of the sequel to Disney's The Rescuers?", 'answer': 'The Rescuers Down Under', 'category': 'Animated'}, {'question': 'In Sicario, who oversees the special joint task force that Emily Blunt is recruited for to apprehend a cartel lieutenant?', 'answer': 'Josh Brolin', 'category': 'Dramas'}, {'question': 'Who directed the 2001 sequel to The Silence of the Lambs, Hannibal?', 'answer': 'Ridley Scott', 'category': 'Horror/Thriller'}, {'question': "Sharlto Copley played which character in 2010's The A-Team?", 'answer': 'H.M. "Howling Mad" Murdock', 'category': 'Action/Adventure'}, {'question': 'Who stars as the enforcer Doug \'The Thug" Glatt in the hockey film Goon?', 'answer': 'Seann William Scott', 'category': 'Sports'}, {'question': 'Who directed the fantasy found footage film Chronicle?', 'answer': 'Josh Trank', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What actor made his feature directorial debut in 2013 with the comedy drama Don Jon?', 'answer': 'Joseph Gordon-Levitt', 'category': 'Famous Actors & Actresses'}, {'question': 'What drama won Best Picture for movies released in 1996?', 'answer': 'The English Patient', 'category': 'Oscars'}, {'question': 'What Barbra Streisand directed film was nominated for Best Picture?', 'answer': 'The Prince of Tides', 'category': 'Oscars'}, {'question': 'Who played Commodus in the Oscar-winning film Gladiator?', 'answer': 'Joaquin Phoenix', 'category': 'Oscars'}, {'question': 'Who won an Oscar for Best Actress for the 1971 film Klute?', 'answer': 'Jane Fonda', 'category': 'Oscars'}, {'question': 'Which film marked the first collaboration between greats John Ford and John Wayne?', 'answer': 'Stagecoach', 'category': 'Directors'}, {'question': 'What well-known stand-up comedian wrote and directed Pootie Tang?', 'answer': 'Louis C.K.', 'category': 'Directors'}, {'question': 'Who wrote and directed both Silverado and Wyatt Earp?', 'answer': 'Lawrence Kasdan', 'category': 'Directors'}, {'question': 'Nicolas Cage and Jason Schwartzman are both nephews of which famous director?', 'answer': 'Francis Ford Coppola', 'category': 'Directors'}, {'question': 'Ellen Burstyn and Jared Leto play mother and son in what 2000 drug-fueled Darren Aronofsky film?', 'answer': 'Requiem for a Dream', 'category': 'Dramas'}, {'question': 'Natalie Portman, James Franco, and Danny McBride star in what 2011 fantasy comedy?', 'answer': 'Your Highness', 'category': 'Fantasy/Sci-Fi'}, {'question': "What film of Zack Snyder's was Michael Fassbender's feature film debut?", 'answer': '300', 'category': 'Famous Actors & Actresses'}, {'question': "You'll find Hilary Swank playing a local Alaskan detective Ellie Burr in what 2002 film?", 'answer': 'Insomnia', 'category': 'Characters'}, {'question': 'What veteran actor plays Taylor, who runs the boat for the two ladies cage diving in 47 Meters Down?', 'answer': 'Matthew Modine', 'category': 'New Releases'}, {'question': 'Name the comedic actor who stars as Tennessee in the 2017 thriller Alien: Covenant.', 'answer': 'Danny McBride', 'category': 'New Releases'}, {'question': "In Broken Arrow, who plays Riley Hale, a pilot who hopes to foil John Travolta's plot to steal a nuclear weapon?", 'answer': 'Christian Slater', 'category': 'Action/Adventure'}, {'question': 'In the Oscar-nominated Vicky Cristina Barcelona, name one of the actresses who played either Vicky or Cristina.', 'answer': 'Rebecca Hall, Scarlett Johansson', 'category': 'Oscars'}, {'question': "Garry Marshall directed Valentine's Day, Mother's Day, and what other film named after a holiday?", 'answer': "New Year's Eve", 'category': 'Rom-Coms'}, {'question': 'Robert Pattinson joins the circus and romances Reese Witherspoon in what 2011 period piece?', 'answer': 'Water for Elephants', 'category': 'Dramas'}, {'question': 'Which Beetlejuice star played Donna Hawthorne in the 2006 mind-bender A Scanner Darkly?', 'answer': 'Winona Ryder', 'category': 'Horror/Thriller'}, {'question': 'What kind of animal are the animated waiters who show up to share the screen with Julie Andrews and Dick Van Dyke in Mary Poppins?', 'answer': 'penguins', 'category': 'Family'}, {'question': 'What year saw Arnold Schwarzenegger star in the action romp True Lies and the goofball comedy Junior?', 'answer': '1994', 'category': 'Release Dates'}, {'question': 'Who plays stage engineer John Cutter, who works with both Borden and Angier, in The Prestige?', 'answer': 'Michael Caine', 'category': 'Christopher Nolan'}, {'question': "In Inception, what is Joseph Gordon-Levitt's character's first name?", 'answer': 'Arthur', 'category': 'Christopher Nolan'}, {'question': 'At the end of Batman Begins, Jim Gordon holds what rank in the GCPD?', 'answer': 'Lieutenant', 'category': 'Christopher Nolan'}, {'question': 'Who plays Teddy, the man in the photo who was shot, in Memento?', 'answer': 'Joe Pantoliano', 'category': 'Christopher Nolan'}, {'question': 'What character actor played the President of the United States in National Treasure: Book of Secrets?', 'answer': 'Bruce Greenwood', 'category': 'Action/Adventure'}, {'question': "Who played Guinevere in 2004's King Arthur?", 'answer': 'Keira Knightley', 'category': 'Action/Adventure'}, {'question': 'In Commando, John Matrix gets Bennett to put down his gun by convincing him to fight with what?', 'answer': 'a knife', 'category': 'Action/Adventure'}, {'question': 'Who played Alex West, a tomb raider with unscrupulous methods, in Lara Croft: Tomb Raider?', 'answer': 'Daniel Craig', 'category': 'Action/Adventure'}, {'question': 'Who plays Mr. Brown in Reservoir Dogs?', 'answer': 'Quentin Tarantino', 'category': 'Dramas'}, {'question': 'Who played George Henderson in the family comedy Harry and the Hendersons?', 'answer': 'John Lithgow', 'category': 'Comedies'}, {'question': 'Who plays quarterback Jonathan "Mox" Moxon in Varsity Blues?', 'answer': 'James Van Der Beek', 'category': 'Sports'}, {'question': 'In the Friday the 13th film series, what is the nickname given to Camp Crystal Lake?', 'answer': 'Camp Blood', 'category': 'Horror/Thriller'}, {'question': "In John Wick 2, who played Cassian, Gianna's chief bodyguard?", 'answer': 'Common', 'category': 'Action/Adventure'}, {'question': 'What Oscar-nominated animated film features the voice talents of Charlize Theron, Matthew McConaughey, and Ralph Fiennes?', 'answer': 'Kubo and the Two Strings', 'category': 'Animated'}, {'question': 'Name the sci-fi thriller starring Bradley Cooper, who takes a drug which allows him to fully utilize his brain and improve his lifestyle.', 'answer': 'Limitless', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the two movies Analyze This and Analyze That?', 'answer': 'Harold Ramis', 'category': 'Directors'}, {'question': 'In the 1990 movie Days of Thunder, who plays the doctor with whom Cole Trickle has a romance?', 'answer': 'Nicole Kidman', 'category': 'Tom Cruise'}, {'question': 'The Color of Money is a sequel of sorts to what earlier film?', 'answer': 'The Hustler', 'category': 'Tom Cruise'}, {'question': 'In Rock of Ages, who plays Sherrie Christian, a young woman from Oklahoma who comes to L.A. with dreams of becoming a singer?', 'answer': 'Julianne Hough', 'category': 'Tom Cruise'}, {'question': "Who plays Stefan's girlfriend Lisa Lietzke in All the Right Moves?", 'answer': 'Lea Thompson', 'category': 'Tom Cruise'}, {'question': "What is the license plate number on the Ghostbusters' car?", 'answer': 'ECTO-1', 'category': '1980s'}, {'question': 'Before losing his job, Michael Keaton is an engineer with what company in Mr. Mom?', 'answer': 'Ford Motor Company', 'category': '1980s'}, {'question': 'What Arnold movie features the line "Don\'t disturb my friend, he\'s dead tired."?', 'answer': 'Commando', 'category': '1980s'}, {'question': 'What coming-of-age movie is set in the fictional town of Castle Rock, Oregon?', 'answer': 'Stand by Me', 'category': '1980s'}, {'question': 'What 1999 movie had the following tagline "Reality is a thing of the past."?', 'answer': 'The Matrix', 'category': 'Taglines'}, {'question': 'Who won the Best Actress Oscar at the 2007 Academy Awards for her lead role in The Queen?', 'answer': 'Helen Mirren', 'category': '2000s'}, {'question': "Who directed the Peter O'Toole epic Lawrence of Arabia?", 'answer': 'David Lean', 'category': 'Classics'}, {'question': 'What hip hop legend plays cameraman Danny Rich in the 1997 action thriller Anaconda?', 'answer': 'Ice Cube', 'category': 'Action/Adventure'}, {'question': "Other than Optimus Prime, name two of the Autobots that appeared in Michael Bay's 2007 Transformers film.", 'answer': 'Bumblebee, Ironhide, Jazz, Ratchet', 'category': 'Fantasy/Sci-Fi'}, {'question': 'The final question in Slumdog Millionaire is about the characters in what book?', 'answer': 'The Three Musketeers', 'category': 'Dramas'}, {'question': "What actress played Rabbit's mom Stephanie in 2002's 8 Mile?", 'answer': 'Kim Basinger', 'category': 'N/A'}, {'question': 'Who won an Oscar for their performance in the 2006 film Dreamgirls?', 'answer': 'Jennifer Hudson', 'category': 'N/A'}, {'question': 'Who played the young astronomer Leo Beiderman, who co-discovered the comet headed towards Earth in Deep Impact?', 'answer': 'Elijah Wood', 'category': 'N/A'}, {'question': "In Insomnia, cops Will Dormer and Hap Eckhart are visiting detectives from what city's police department?", 'answer': 'Los Angeles', 'category': 'N/A'}, {'question': 'Who plays Thulsa Doom in the original Conan the Barbarian?', 'answer': 'James Earl Jones', 'category': 'N/A'}, {'question': 'In Apollo 13, which actor played the role of Jack Swigert, who replaced astronaut Ken Mattingly, played by Gary Sinise, at the last minute?', 'answer': 'Kevin Bacon', 'category': 'N/A'}, {'question': 'In the Ben Affleck action attempt Reindeer Games, who played Ashley, his love interest and prison pen pal?', 'answer': 'Charlize Theron', 'category': 'Action/Adventure'}, {'question': 'Which Spike Lee joint sees Harvey Keitel investigate a drug-related shooting involving Mekhi Phifer and Isaiah Washington?', 'answer': 'Clockers', 'category': 'Dramas'}, {'question': 'In Monty Python and the Holy Grail, which character succeeds in cutting off the arms and legs of the Black Knight?', 'answer': 'King Arthur', 'category': 'Comedies'}, {'question': 'Which Hitchcock film starred Kim Novak and James Stewart as a detective forced to retire partially due to his fear of heights?', 'answer': 'Vertigo', 'category': 'Horror/Thriller'}, {'question': 'What was the silent movie sensation that won Best Picture at the 2012 Oscars?', 'answer': 'The Artist', 'category': 'Oscars'}, {'question': 'Enough Said is one of the last screen performances from James Gandolfini. Who plays his co-star and romantic interest?', 'answer': 'Julia Louis-Dreyfus', 'category': 'Rom-Coms'}, {'question': "What color was Luke Skywalker's callsign at the end of Star Wars: A New Hope?", 'answer': 'red', 'category': 'Fantasy/Sci-Fi'}, {'question': "Name an actor that is featured as a student in the 1989 drama Dead Poet's Society.", 'answer': 'Allelon Ruggiero, Dylan Kussman, Ethan Hawke, Gale Hansen, James Waterston, Josh Charles, Robert Sean Leonard', 'category': 'Coming of Age'}, {'question': 'How many replicants was Deckard tasked to kill in Blade Runner?', 'answer': '4 replicants (Leon Kowalski, Pris, Roy Batty, Zhora)', 'category': 'N/A'}, {'question': 'What is the end song performed at the finale of the film Whiplash?', 'answer': 'Caravan', 'category': 'Festival Darlings'}, {'question': 'Which character discovers he is color blind in Little Miss Sunshine?', 'answer': 'Dwayne Hoover', 'category': 'Festival Darlings'}, {'question': 'In The Diary of a Teenage Girl, Minnie aspires to a career as a what?', 'answer': 'a cartoonist', 'category': 'Festival Darlings'}, {'question': "What instrument does Dawn's brother play in his band in Welcome to the Dollhouse?", 'answer': 'the clarinet', 'category': 'Festival Darlings'}, {'question': "Who plays a former IRA sniper named Declan Mulqueen in 1997's The Jackal?", 'answer': 'Richard Gere', 'category': '1990s'}, {'question': 'In the 1997 movie In & Out, who plays Cameron Drake, the actor who "outs" his English teacher as being gay in his Best Actor acceptance speech at the Oscars?', 'answer': 'Matt Dillon', 'category': '1990s'}, {'question': "Who played Drew Barrymore's evil stepmother in Ever After?", 'answer': 'Anjelica Huston', 'category': '1990s'}, {'question': 'What is the name of the American submarine captained by Scott Glenn in The Hunt for Red October?', 'answer': 'the USS Dallas', 'category': '1990s'}, {'question': 'Brick Top, Bullet Tooth Tony, and Boris the Blade are all characters in what 2000s gangster comedy?', 'answer': 'Snatch', 'category': 'Crime'}, {'question': 'Name two David Fincher movies starring Brad Pitt.', 'answer': 'Seven, Fight Club, The Curious Case of Benjamin Button', 'category': 'Directors'}, {'question': 'In The Martian, who played the director of media relations of NASA?', 'answer': 'Kristen Wiig', 'category': 'Dramas'}, {'question': 'In The Princess Bride, according to Vizzini, what is the most famous of the classic blunders?', 'answer': 'never get involved in a land war in Asia', 'category': '1980s'}, {'question': 'In the film Looper, who plays Abe Mitchell, the man who manages the loopers?', 'answer': 'Jeff Daniels', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What was the name of the piggy bank in the Toy Story films?', 'answer': 'Hamm', 'category': 'Animated'}, {'question': "Who plays the mother that wants to adopt Juno's baby in the film Juno?", 'answer': 'Jennifer Garner', 'category': 'Comedies'}, {'question': 'Who directed the 1984 sports drama The Natural?', 'answer': 'Barry Levinson', 'category': 'Dramas'}, {'question': "What is the name of Woody Harrelson's character in the horror comedy Zombieland?", 'answer': 'Tallahassee', 'category': 'Horror/Thriller'}, {'question': 'Who was the lead actress in the rom-com 27 Dresses?', 'answer': 'Katherine Heigl', 'category': 'Famous Actors & Actresses'}, {'question': 'In The Boondock Saints, who plays FBI Agent Paul Smecker, who is assigned to the murders linked to the MacManus brothers?', 'answer': 'Willem Dafoe', 'category': 'Action/Adventure'}, {'question': 'In Terminator Salvation, who played Marcus Wright, a human-terminator hybrid experiment?', 'answer': 'Sam Worthington', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Sissy Spacek received her only Academy Award win for Best Actress for what film?', 'answer': "Coal Miner's Daughter", 'category': 'Oscars'}, {'question': "In what film does Sandra Bullock romance Chris O'Donnell during World War I?", 'answer': 'In Love and War', 'category': 'Sandra Bullock'}, {'question': 'In what film does Bullock play a homicide detective hunting down Ryan Gosling and Michael Pitt?', 'answer': 'Murder by Numbers', 'category': 'Sandra Bullock'}, {'question': 'Comedian, and friend of the show, Adam Ray plays a bad guy in what buddy cop movie starring Sandra Bullock?', 'answer': 'The Heat', 'category': 'Sandra Bullock'}, {'question': "Who plays Bullock's father in Divine Secrets of the Ya-Ya Sisterhood?", 'answer': 'James Garner', 'category': 'Sandra Bullock'}, {'question': 'Actor Jack Lemmon won his sole Best Actor Oscar for which film?', 'answer': 'Save the Tiger', 'category': 'Oscars'}, {'question': 'Whoopi Goldberg won an Academy Award for what film?', 'answer': 'Ghost', 'category': 'Oscars'}, {'question': 'Who was the first African American to be nominated for the Best Director Academy Award?', 'answer': 'John Singleton (for Boyz n the Hood)', 'category': 'Oscars'}, {'question': 'For what movie did Steven Soderbergh receive his Best Director Oscar?', 'answer': 'Traffic', 'category': 'Oscars'}, {'question': 'Name the hotel featured in The Shining.', 'answer': 'the Overlook Hotel', 'category': 'Horror/Thriller'}, {'question': 'In which film will you find Gene Hackman playing Detective Popeye Doyle?', 'answer': 'The French Connection', 'category': '1970s'}, {'question': 'In 2015, Domhnall Gleeson played a major role in four films. Name one of them.', 'answer': 'Ex Machina, Brooklyn, Star Wars: The Force Awakens, The Revenant', 'category': 'Famous Actors & Actresses'}, {'question': 'Russell Crowe portrays gang leader Ben Wade in the 2007 remake of 3:10 to Yuma. Who portrayed the same character in the original 1957 film?', 'answer': 'Glenn Ford', 'category': 'Westerns'}, {'question': 'Who provided the voice of the cowardly, orange tabby cat in the American Tail films?', 'answer': 'Dom DeLuise', 'category': 'Animated'}, {'question': 'Stanley Tucci plays Nigel Kipling in which Anne Hathaway movie?', 'answer': 'The Devil Wears Prada', 'category': 'Comedies'}, {'question': "Who plays composer and high school music teacher Glenn Holland in Mr. Holland's Opus?", 'answer': 'Richard Dreyfuss', 'category': 'Dramas'}, {'question': 'What actress plays Claire Spencer, who has a seemingly idyllic marriage to Harrison Ford, in What Lies Beneath?', 'answer': 'Michelle Pfeiffer', 'category': 'Horror/Thriller'}, {'question': 'What Hollywood icon played Jay Gatsby in the 1974 romantic drama The Great Gatsby?', 'answer': 'Robert Redford', 'category': 'Romance'}, {'question': 'What 2012 war film was notable for using active duty U.S. Navy SEALs in its cast?', 'answer': 'Act of Valor', 'category': 'War'}, {'question': 'Who directed Fast & Furious, Fast Five, and Fast & Furious 6?', 'answer': 'Justin Lin', 'category': 'Action/Adventure'}, {'question': 'Who plays Jedi Master Qui-Gon Jinn in Star Wars: Episode I – The Phantom Menace?', 'answer': 'Liam Neeson', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In which movie did Bruce Willis co-star with Tom Hanks?', 'answer': 'The Bonfire of the Vanities', 'category': 'Tom Hanks'}, {'question': 'Jim Belushi co-starred with Tom Hanks in which movie?', 'answer': 'The Man with One Red Shoe', 'category': 'Tom Hanks'}, {'question': 'Who played Miguel Álvarez in Philadelphia?', 'answer': 'Antonio Banderas', 'category': 'Tom Hanks'}, {'question': 'Frank Darabont directed Tom Hanks in which movie?', 'answer': 'The Green Mile', 'category': 'Tom Hanks'}, {'question': "In Ratatouille, how does Remy control Linguini's cooking?", 'answer': 'he pulls his hair', 'category': 'Pixar'}, {'question': "What was the Doberman Pinscher leader's name in Up?", 'answer': 'Alpha', 'category': 'Pixar'}, {'question': "What sitcom actor voices Molt, Hopper's dimwitted brother in A Bug's Life, and Bing Bong in Inside Out?", 'answer': 'Richard Kind', 'category': 'Pixar'}, {'question': 'What kind of dinosaurs were the cattle rustlers in The Good Dinosaur?', 'answer': 'Velociraptors', 'category': 'Pixar'}, {'question': 'Name the two actresses to star as Sarah Connor in the big-screen Terminator movies.', 'answer': 'Linda Hamilton (in The Terminator, Judgment Day), Emilia Clarke (in Genisys)', 'category': 'Famous Actors & Actresses'}, {'question': 'According to a song from the film, which Disney character went from "zero to hero"?', 'answer': 'Hercules', 'category': 'Disney'}, {'question': "What is the name of Jason Voorhees' mother?", 'answer': 'Pamela Voorhees', 'category': 'Horror/Thriller'}, {'question': 'What film starring Charlton Heston won Best Picture?', 'answer': 'Ben-Hur', 'category': 'Oscars'}, {'question': "Name one of the two performers who play bickering spouses taken hostage by Denis Leary on Christmas Eve in 1994's The Ref.", 'answer': 'Judy Davis, Kevin Spacey', 'category': 'Holiday'}, {'question': 'In what film will you find Jack Black playing the energetic Dewey Finn?', 'answer': 'School of Rock', 'category': 'Characters'}, {'question': 'Who plays student Max Fischer in the movie Rushmore?', 'answer': 'Jason Schwartzman', 'category': 'Comedies'}, {'question': 'Who directed Monsters, Inc.?', 'answer': 'Pete Docter', 'category': 'Animated'}, {'question': 'What is the name of the fourth Harry Potter film?', 'answer': 'Harry Potter and the Goblet of Fire', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What character became Venom in Spider-Man 3?', 'answer': 'Eddie Brock', 'category': 'Comic Book'}, {'question': 'In Air Force One, who played the leader of the Russian terrorists who hijacked the plane?', 'answer': 'Gary Oldman', 'category': 'Action/Adventure'}, {'question': 'Who plays the creepy next-door neighbor in the movie Disturbia?', 'answer': 'David Morse', 'category': 'Horror/Thriller'}, {'question': 'What is the signature drink of the Dude in The Big Lebowski?', 'answer': 'White Russians', 'category': '1990s'}, {'question': 'Who played the lead role of Nadine in the 2016 film Edge of Seventeen?', 'answer': 'Hailee Steinfeld', 'category': 'Dramas'}, {'question': 'The Final Conflict is the subtitle to the third film in which horror series?', 'answer': 'The Omen', 'category': 'Horror/Thriller'}, {'question': 'Who plays journalist Paul Avery in the 2007 mystery thriller Zodiac?', 'answer': 'Robert Downey Jr.', 'category': 'Horror/Thriller'}, {'question': "You'll find Mort Rainey, a depressed author suffering from writer's block who caught his wife having an affair in this psychological thriller.", 'answer': 'Secret Window', 'category': 'Horror/Thriller'}, {'question': 'What is the only Alfred Hitchcock film to win a Best Picture Oscar?', 'answer': 'Rebecca', 'category': 'Horror/Thriller'}, {'question': 'Who directed the 1998 film Hope Floats?', 'answer': 'Forest Whitaker', 'category': '1990s'}, {'question': "In 1991's Father of the Bride, Steve Martin's character owns a company that produces what?", 'answer': 'athletic shoes', 'category': '1990s'}, {'question': "Who played Kevin McCallister's mother in Home Alone and Home Alone 2?", 'answer': "Catherine O'Hara", 'category': '1990s'}, {'question': "What movie starred Tommy Lee Jones as a parole officer who supervises Ashley Judd's character?", 'answer': 'Double Jeopardy', 'category': '1990s'}, {'question': 'Adrien Brody won an Oscar for what Roman Polanski directed film?', 'answer': 'The Pianist', 'category': 'Oscars'}, {'question': 'In The Mighty Ducks, Gordon Bombay is forced to coach a local youth hockey team as punishment for drunk driving. What was his profession?', 'answer': 'a defense attorney', 'category': 'Sports'}, {'question': 'Who plays the character nicknamed "Bible" in David Ayer\'s Fury?', 'answer': 'Shia LaBeouf', 'category': 'War'}, {'question': "Who plays Meryl Streep's husband in the 1994 crime thriller The River Wild?", 'answer': 'David Strathairn', 'category': 'Meryl Streep'}, {'question': 'Which Academy Award winning actor directed Richard Pryor and Gene Wilder in the film Stir Crazy?', 'answer': 'Sidney Poitier', 'category': '1980s'}, {'question': 'In American Pie, what country is the exchange student Nadia from?', 'answer': 'Czechoslovakia', 'category': 'Coming of Age'}, {'question': 'What character was played by John Cleese in 1981, Kevin Costner in 1991, and Cary Elwes in 1993?', 'answer': 'Robin Hood (Cleese in Time Bandits, Costner in Prince of Thieves, Elwes in Men in Tights)', 'category': 'Famous Actors & Actresses'}, {'question': 'This 1960s film became the first and only X-rated movie in history to win Best Picture.', 'answer': 'Midnight Cowboy', 'category': 'Dramas'}, {'question': 'What comedian voices the woolly mammoth Manfred in Ice Age?', 'answer': 'Ray Romano', 'category': 'Animated'}, {'question': 'What famous director founded the effects company Industrial Light & Magic?', 'answer': 'George Lucas', 'category': 'Directors'}, {'question': 'Who won an Academy Award for playing accused spy Rudolf Abel in Bridge of Spies?', 'answer': 'Mark Rylance', 'category': 'Dramas'}, {'question': 'Name the first film where audiences met the killer doll with a fierce grin Chucky.', 'answer': "Child's Play", 'category': 'Horror/Thriller'}, {'question': 'What was the subtitle of the first live-action G.I. Joe movie released in 2009?', 'answer': 'The Rise of Cobra', 'category': 'Action/Adventure'}, {'question': 'Name the featured actor in Alien Resurrection who would go on to star in the two Hellboy movies.', 'answer': 'Ron Perlman', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays the fiancée to Owen Wilson's struggling author in Midnight in Paris?", 'answer': 'Rachel McAdams', 'category': 'Romance'}, {'question': "What is the name of Karen Gillan's character in the Guardians of the Galaxy movies?", 'answer': 'Nebula', 'category': 'New Releases'}, {'question': "The 1989 film Always tells the tale of a recently deceased pilot's spirit looking out for a newer pilot only to find him falling for the spirit's surviving girlfriend. Who are the two male leads?", 'answer': 'John Goodman, Richard Dreyfuss', 'category': 'Steven Spielberg'}, {'question': 'What was the first movie that Spielberg was nominated for the Academy Award for Best Director for?', 'answer': 'Close Encounters of the Third Kind', 'category': 'Steven Spielberg'}, {'question': 'Benedict Cumberbatch and Tom Hiddleston co-star in this Spielberg drama.', 'answer': 'War Horse', 'category': 'Steven Spielberg'}, {'question': "What is Spielberg's longest film, with a running time of over three hours?", 'answer': "Schindler's List", 'category': 'Steven Spielberg'}, {'question': 'Who directed 127 Hours?', 'answer': 'Danny Boyle', 'category': 'Biopics'}, {'question': 'As depicted in the 2014 biopic American Sniper, which attack on the United States prompts Chris Kyle to enlist in the United States Navy?', 'answer': 'the 1998 U.S. embassy bombings in East Africa', 'category': 'Biopics'}, {'question': 'Who plays the frustrated new prime minister in The Queen?', 'answer': 'Michael Sheen', 'category': 'Biopics'}, {'question': 'Chadwick Boseman occasionally breaks the fourth wall while starring in what biopic?', 'answer': 'Get on Up', 'category': 'Biopics'}, {'question': "Name a film in which the name of Leo's character is in the title of the film.", 'answer': 'Romeo + Juliet, J. Edgar, The Great Gatsby', 'category': 'Leonardo DiCaprio'}, {'question': 'What Disney song won the Academy Award for Best Original Song in 2014?', 'answer': 'Let It Go (from Frozen)', 'category': 'Scores & Soundtracks'}, {'question': 'Name the first film that featured Tom and Meg Ryan in leading roles.', 'answer': 'Joe Versus the Volcano', 'category': 'Tom Hanks'}, {'question': 'Who played Hugo in Hugo?', 'answer': 'Asa Butterfield', 'category': 'Dramas'}, {'question': 'Who voiced Anger in Inside Out?', 'answer': 'Lewis Black', 'category': 'Animated'}, {'question': "You will find a toy store by the name of Duncan's Toy Chest in what family holiday film?", 'answer': 'Home Alone 2: Lost in New York', 'category': 'Family'}, {'question': 'In Win a Date with Tad Hamilton!, who played the girl that won the date with the hunky Tad?', 'answer': 'Kate Bosworth', 'category': 'Rom-Coms'}, {'question': "Who played Bruce Wayne's childhood friend Rachel Dawes in Batman Begins?", 'answer': 'Katie Holmes', 'category': 'Action/Adventure'}, {'question': 'Who directed the modern comedy classic Dumb and Dumber?', 'answer': 'Peter Farrelly', 'category': 'Comedies'}, {'question': 'What Jean-Claude Van Damme sci-fi action film revolves around two soldiers killed in Vietnam that were revived to life as cyborgs?', 'answer': 'Universal Soldier', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Meryl Streep received her first Academy Award nomination for what film?', 'answer': 'The Deer Hunter', 'category': 'Oscars'}, {'question': 'The term "twitterpated" is the word that described falling in love in what Disney animated classic?', 'answer': 'Bambi', 'category': 'N/A'}, {'question': 'In JFK, who plays the mysterious military figure referred to only as "X"?', 'answer': 'Donald Sutherland', 'category': 'Dramas'}, {'question': 'Who played Lorne Lutch, the original Marlboro Man, in Thank You for Smoking?', 'answer': 'Sam Elliott', 'category': 'Dramas'}, {'question': 'What is the name of the tiger in Life of Pi?', 'answer': 'Richard Parker', 'category': 'Dramas'}, {'question': "Who played Bruce Willis' wife in the 1999 film The Story of Us?", 'answer': 'Michelle Pfeiffer', 'category': 'Dramas'}, {'question': 'What year saw the release of the war drama G.I. Jane?', 'answer': '1997', 'category': 'Ridley Scott'}, {'question': "Who played the character of Dallas, captain of the ship in 1979's Alien?", 'answer': 'Tom Skerritt', 'category': 'Ridley Scott'}, {'question': 'Who played the Lord of Darkness in the 1986 film Legend?', 'answer': 'Tim Curry', 'category': 'Ridley Scott'}, {'question': "What is the name of the idyllic place that Furiosa is taking Immortan Joe's wives to in Mad Max: Fury Road?", 'answer': 'the Green Place', 'category': 'Action/Adventure'}, {'question': "What is the name of the woodcarver who creates Pinocchio in Disney's Pinocchio?", 'answer': 'Geppetto', 'category': 'Animated'}, {'question': "Who played Mason's biological father in Boyhood?", 'answer': 'Ethan Hawke', 'category': 'Dramas'}, {'question': 'What Woody Allen film centered around a time traveling author?', 'answer': 'Midnight in Paris', 'category': 'Romance'}, {'question': 'Name the 2002 remake in which Adam Sandler plays a role that originally earned Gary Cooper an Oscar nomination in 1937.', 'answer': 'Mr. Deeds', 'category': 'Famous Actors & Actresses'}, {'question': 'In what 2001 comedy is a fictional comic book called Bluntman and Chronic being turned into a movie?', 'answer': 'Jay and Silent Bob Strike Back', 'category': 'Comedies'}, {'question': 'Who played Professor Lockhart in Harry Potter and the Chamber of Secrets?', 'answer': 'Kenneth Branagh', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed Kiefer Sutherland and Julia Roberts in the 1990 sci-fi horror film Flatliners?', 'answer': 'Joel Schumacher', 'category': 'Horror/Thriller'}, {'question': "In Vanilla Sky, Tom Cruise falls in love with his best friend's girlfriend. Whom was she played by?", 'answer': 'Penélope Cruz', 'category': 'Tom Cruise'}, {'question': "In Risky Business, what does Joel's father scold him for doing?", 'answer': 'changing the settings on the equalizer', 'category': 'Tom Cruise'}, {'question': 'Who directed Rain Man?', 'answer': 'Barry Levinson', 'category': 'Tom Cruise'}, {'question': "What was Tom Skerritt's callsign in Top Gun?", 'answer': 'Viper', 'category': 'Tom Cruise'}, {'question': 'What Disney character rings the bells of Notre Dame?', 'answer': 'Quasimodo', 'category': 'Animated'}, {'question': 'The Sharptooth, the ferocious T. rex, is a character in what animated film?', 'answer': 'The Land Before Time', 'category': 'Animated'}, {'question': 'Which director known mostly for his work in the comic book movie genre directed Legend of the Guardians?', 'answer': 'Zack Snyder', 'category': 'Animated'}, {'question': 'Phil Collins sang "You\'ll Be In My Heart" for what 1990s Disney film?', 'answer': 'Tarzan', 'category': 'Animated'}, {'question': 'Who plays the President of the United States in the Will Smith sci-fi action flick Independence Day?', 'answer': 'Bill Pullman', 'category': 'Will Smith'}, {'question': "In what movie based on a play does Ewan McGregor play Julia Roberts' husband?", 'answer': 'August: Osage County', 'category': 'Julia Roberts'}, {'question': 'Name the 1990 romantic comedy that carried the tagline "She walked off the street, into his life and stole his heart."?', 'answer': 'Pretty Woman', 'category': 'Rom-Coms'}, {'question': 'In the movie Space Jam, what two people were playing golf with Michael Jordan when he went missing?', 'answer': 'Bill Murray, Larry Bird', 'category': 'Family'}, {'question': 'Who played Racer X in the action adventure comedy Speed Racer?', 'answer': 'Matthew Fox', 'category': 'Action/Adventure'}, {'question': 'Known for playing villains in film and television, Billy Drago played mob gunman Frank Nitti in what film?', 'answer': 'The Untouchables', 'category': '1980s'}, {'question': 'In Wedding Crashers, who played Chazz, the man who taught Owen Wilson and Vince Vaughn the art of crashing weddings?', 'answer': 'Will Ferrell', 'category': 'Comedies'}, {'question': 'Who directed After Earth starring Will Smith?', 'answer': 'M. Night Shyamalan', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Russell Crowe plays a character by the name of Bud White in what 1990s crime drama?', 'answer': 'L.A. Confidential', 'category': 'Dramas'}, {'question': 'Who plays the woman who switches homes with Cameron Diaz in the 2006 rom-com The Holiday?', 'answer': 'Kate Winslet', 'category': 'Rom-Coms'}, {'question': 'In John Wick, what make of Ford car was stolen from John at the beginning of the film?', 'answer': 'a 1969 Ford Mustang Mach 1', 'category': 'Action/Adventure'}, {'question': "What Monty Python veteran voices Princess Fiona's father, King Harold, in the Shrek films?", 'answer': 'John Cleese', 'category': 'Animated'}, {'question': "In Wonder Woman, who played General Antiope, Diana's aunt and mentor?", 'answer': 'Robin Wright', 'category': 'Comic Book'}, {'question': 'What was the name of the head gremlin against Gizmo, and the last to survive, in Gremlins?', 'answer': 'Stripe', 'category': 'Horror/Thriller'}, {'question': 'Who starred opposite Denzel Washington as CIA agent Matt Weston in the spy action thriller Safe House?', 'answer': 'Ryan Reynolds', 'category': 'Spy'}, {'question': 'What was the first James Bond movie to receive an Oscar?', 'answer': 'Goldfinger (for Sound Effects)', 'category': 'Spy'}, {'question': 'In The Bourne Identity, three agents are activated to take down Bourne: Castel, Manheim, and the Professor. Who played the agent known as the Professor?', 'answer': 'Clive Owen', 'category': 'Spy'}, {'question': 'Who directed Three Days of the Condor?', 'answer': 'Sydney Pollack', 'category': 'Spy'}, {'question': 'In Doctor Strange, Wong said that the Eye of Agamotto contained an Infinity Stone. Which Infinity Stone did it contain?', 'answer': 'the Time Stone', 'category': 'Comic Book'}, {'question': 'Who played Perry White in Superman Returns?', 'answer': 'Frank Langella', 'category': 'Comic Book'}, {'question': "Who played Ajax's right-hand woman Angel Dust in Deadpool?", 'answer': 'Gina Carano', 'category': 'Comic Book'}, {'question': 'Who played Flint Marko a.k.a. the Sandman in Spider-Man 3?', 'answer': 'Thomas Haden Church', 'category': 'Comic Book'}, {'question': 'What 2003 football movie sees Ed Harris co-star with Cuba Gooding Jr. and tackles themes of prejudice against those with mental disabilities?', 'answer': 'Radio', 'category': 'Sports'}, {'question': "Who directed 1982's Creepshow?", 'answer': 'George A. Romero', 'category': 'Horror/Thriller'}, {'question': "What legendary actor played harpooner Ned Land in Disney's 1954 20,000 Leagues Under the Sea?", 'answer': 'Kirk Douglas', 'category': 'Disney'}, {'question': 'In what classic John Ford western does John Wayne spend years looking for his abducted niece?', 'answer': 'The Searchers', 'category': 'Classics'}, {'question': 'Name the 2012 animated film with the following characters: Merida, Fergus, Lord Macintosh, and Elinor.', 'answer': 'Brave', 'category': 'Animated'}, {'question': 'Who plays bounty hunter Carson Wells in No Country for Old Men?', 'answer': 'Woody Harrelson', 'category': 'Dramas'}, {'question': "Andrew Garfield and what other actor play Jesuit priests looking for Liam Neeson in 2016's Silence?", 'answer': 'Adam Driver', 'category': 'New Releases'}, {'question': 'Who plays the newly trained Zorro in The Mask of Zorro?', 'answer': 'Antonio Banderas', 'category': 'Action/Adventure'}, {'question': 'According to the film Billy Madison, what is the last name of the family that "rules"?', 'answer': "O'Doyle", 'category': 'Comedies'}, {'question': "In Return of the Jedi, what is the giant beast that Luke must fend off beneath Jabba's Palace?", 'answer': 'a rancor', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name one of the three films that Denzel Washington has collaborated on with director Edward Zwick.', 'answer': 'Glory, Courage Under Fire, The Siege', 'category': 'Directors'}, {'question': 'What is the name of the film in which Richard Dreyfuss plays Dr. Leo Marvin?', 'answer': 'What About Bob?', 'category': 'Comedies'}, {'question': 'The 2000s film Best in Show is about what?', 'answer': 'a dog show', 'category': 'Comedies'}, {'question': "What British actor played the eccentric Italian tourist Enrico Pollini in 2001's Rat Race?", 'answer': 'Rowan Atkinson', 'category': 'Comedies'}, {'question': 'In Jack and Jill, Jill becomes a contestant on what game show?', 'answer': 'The Price Is Right', 'category': 'Comedies'}, {'question': 'In The Losers, who played Clay, leader of the elite black ops team of U.S. Special forces called "the Losers"?', 'answer': 'Jeffrey Dean Morgan', 'category': 'Comic Book'}, {'question': 'Who plays the drug lord simply known as "Ma-Ma" in Dredd?', 'answer': 'Lena Headey', 'category': 'Comic Book'}, {'question': 'Who played Frank Castle a.k.a."the Punisher" in 2008\'s Punisher: War Zone?', 'answer': 'Ray Stevenson', 'category': 'Comic Book'}, {'question': "Who played Bruce Banner's father, Dr. David Banner, in 2003's Hulk?", 'answer': 'Nick Nolte', 'category': 'Comic Book'}, {'question': 'Who plays Whistler in the film Blade?', 'answer': 'Kris Kristofferson', 'category': 'Comic Book'}, {'question': 'Name the actress that starred in both Funny Girl and Funny Lady.', 'answer': 'Barbra Streisand', 'category': 'Classics'}, {'question': 'Who provides the voice of Mater in the Cars movie franchise?', 'answer': 'Larry the Cable Guy', 'category': 'Animated'}, {'question': 'A New Jersey tunnel is in imminent danger as Sylvester Stallone tries to save the day in what 1996 movie?', 'answer': 'Daylight', 'category': 'Disaster'}, {'question': "In Ridley Scott's 1492: Conquest of Paradise, who played legendary explorer Christopher Columbus?", 'answer': 'Gerard Depardieu', 'category': 'Biopics'}, {'question': "Who directed 2004's The Phantom of the Opera?", 'answer': 'Joel Schumacher', 'category': 'Musicals'}, {'question': 'Andrew Dominik directed Brad Pitt and Scoot McNairy in which crime film?', 'answer': 'Killing Them Softly', 'category': 'Dramas'}, {'question': 'Who plays a younger version of Agent K in Men in Black 3?', 'answer': 'Josh Brolin', 'category': 'Fantasy/Sci-Fi'}, {'question': "You'll find a demonlike villain named the Horned King in what Disney animated film?", 'answer': 'The Black Cauldron', 'category': 'Animated'}, {'question': 'Who directed The Hurt Locker and Zero Dark Thirty?', 'answer': 'Kathryn Bigelow', 'category': 'Directors'}, {'question': 'Name one of the three challenges Indy must pass to reach the Holy Grail in Indiana Jones and the Last Crusade.', 'answer': 'the Breath of God (wind and fast-moving saw blades), the Word of God (a word puzzle), the Path of God (a hidden bridge over a bottomless pit)', 'category': 'Action/Adventure'}, {'question': 'Who directed the 2007 film The Darjeeling Limited?', 'answer': 'Wes Anderson', 'category': 'Directors'}, {'question': "What is the name of Ernie Hudson's character in 1984's Ghostbusters?", 'answer': 'Winston Zeddemore', 'category': 'Comedies'}, {'question': 'For which role did George C. Scott win, but decline to accept, the Oscar?', 'answer': 'Patton', 'category': 'Oscars'}, {'question': 'You will find the character of a young orphan girl named Sophie in what Spielberg film?', 'answer': 'The BFG', 'category': 'Steven Spielberg'}, {'question': 'In Jaws, what public holiday is Amity Island preparing for when the shark attacks strike?', 'answer': 'the Fourth of July', 'category': 'Steven Spielberg'}, {'question': "Who played Tom Hanks' second-in-charge, Sergeant Horvath, in Saving Private Ryan?", 'answer': 'Tom Sizemore', 'category': 'Steven Spielberg'}, {'question': 'With Peter Pan no longer in Neverland, what was the name of the Lost Boy who became the de facto leader in Hook?', 'answer': 'Rufio', 'category': 'Steven Spielberg'}, {'question': "In Fight Club, what is the Narrator Edward Norton's power animal?", 'answer': 'a penguin', 'category': 'David Fincher'}, {'question': "Who plays wealthy investment banker Nicholas van Orton in David Fincher's The Game?", 'answer': 'Michael Douglas', 'category': 'David Fincher'}, {'question': "Who plays Brad Pitt's wife Tracy in Seven?", 'answer': 'Gwyneth Paltrow', 'category': 'David Fincher'}, {'question': "Who plays Jodie Foster's 11-year-old daughter Sarah in Panic Room?", 'answer': 'Kristen Stewart', 'category': 'David Fincher'}, {'question': 'In the Jason Bourne franchise, who plays Nicky Parsons, who works at the CIA and helps Bourne on various occasions?', 'answer': 'Julia Stiles (in The Bourne Identity, The Bourne Supremacy, The Bourne Ultimatum, Jason Bourne)', 'category': 'Action/Adventure'}, {'question': "Who plays the woman out of Jay Baruchel's league in She's Out of My League?", 'answer': 'Alice Eve', 'category': 'Rom-Coms'}, {'question': 'Who provided the voice of Butch, the patriarch of the T. rex ranchers in The Good Dinosaur?', 'answer': 'Sam Elliott', 'category': 'Pixar'}, {'question': 'Who directed Jennifer Lawrence for her Oscar-nominated turn in Joy?', 'answer': 'David O. Russell', 'category': 'Jennifer Lawrence'}, {'question': 'Name two performers who have appeared in two or more Paul Thomas Anderson films.', 'answer': 'Alfred Molina (Boogie Nights, Magnolia), Joaquin Phoenix (The Master, Inherent Vice), John C. Reilly (Hard Eight, Boogie Nights, Magnolia), Julianne Moore (Boogie Nights, Magnolia), Luis Guzmán (Boogie Nights, Magnolia, Punch-Drunk Love), Melora Walters (Hard Eight, Boogie Nights, Magnolia, The Master), Philip Baker Hall (Hard Eight, Boogie Nights, Magnolia), Philip Seymour Hoffman (Hard Eight, Boogie Nights, Magnolia, Punch-Drunk Love, The Master), William H. Macy (Boogie Nights, Magnolia)', 'category': 'Directors'}, {'question': 'To save her ill son, a field mouse must seek the aid of a colony of rats in what animated film?', 'answer': 'The Secret of NIMH', 'category': 'Animated'}, {'question': "What was Will Ferrell's name in Old School?", 'answer': 'Frank "The Tank" Ricard', 'category': 'Comedies'}, {'question': 'Who wrote and directed the 2016 sci-fi drama Midnight Special?', 'answer': 'Jeff Nichols', 'category': 'Directors'}, {'question': "What actress plays a possessed cheerleader in Jennifer's Body?", 'answer': 'Megan Fox', 'category': 'Horror/Thriller'}, {'question': "What hasn't happened for 18 years in Children of Men?", 'answer': 'women getting pregnant', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What actor provided the voice of Ultron in Avengers: Age of Ultron?', 'answer': 'James Spader', 'category': 'Comic Book'}, {'question': 'Actress Lucy Liu plays Princess Pei-Pei in what action comedy?', 'answer': 'Shanghai Noon', 'category': 'Action/Adventure'}, {'question': 'Who played quarterback Paul Crewe in the original The Longest Yard?', 'answer': 'Burt Reynolds', 'category': 'Sports'}, {'question': "In 1984's The Terminator, what type of establishment does Sarah Connor hide out in to wait for the cops before the Terminator and Reese find her?", 'answer': 'a nightclub', 'category': 'Sly & Arnie'}, {'question': 'James Cameron shares screenplay credentials with Sylvester Stallone for his work on which of his films?', 'answer': 'Rambo: First Blood Part II', 'category': 'Sly & Arnie'}, {'question': "Name the actor who played Arnold's son in the Christmas classic Jingle All the Way.", 'answer': 'Jake Lloyd', 'category': 'Sly & Arnie'}, {'question': 'Who was the boxer that played Mason "The Line" Dixon in Rocky Balboa?', 'answer': 'Antonio Tarver', 'category': 'Sly & Arnie'}, {'question': 'What was the first film in which Kevin Smith played the character Silent Bob?', 'answer': 'Clerks', 'category': 'Kevin Smith'}, {'question': 'In what Marvel film does Kevin Smith have a small role as a forensic assistant by the name of Jack Kirby?', 'answer': 'Daredevil', 'category': 'Kevin Smith'}, {'question': 'What Kevin Smith directed film stars Justin Long as a character by the name of Wallace Bryton?', 'answer': 'Tusk', 'category': 'Kevin Smith'}, {'question': "In Jersey Girl, who plays graduate student Maya, who befriends Ben Affleck's character?", 'answer': 'Liv Tyler', 'category': 'Kevin Smith'}, {'question': "Who plays Baby's father in Dirty Dancing?", 'answer': 'Jerry Orbach', 'category': 'Dance'}, {'question': 'In what sci-fi film will you find Olivia Wilde playing the mother of Justin Timberlake?', 'answer': 'In Time', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played Prince Hector of Troy in 2004's Troy?", 'answer': 'Eric Bana', 'category': '2000s'}, {'question': "Who plays Will Smith's partner in the Bad Boys films?", 'answer': 'Martin Lawrence', 'category': 'Will Smith'}, {'question': 'What is the name of the primary villain in Blazing Saddles?', 'answer': 'Hedley Lamarr', 'category': '1970s'}, {'question': "Name one of the products that Wayne holds up while making fun of product placement in Wayne's World.", 'answer': 'Doritos, Pepsi, Pizza Hut', 'category': '1990s'}, {'question': "What was Elliot's older brother's name in E.T.?", 'answer': 'Michael', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the Toy Story franchise, what actress voices Jessie the Yodeling Cowgirl?', 'answer': 'Joan Cusack (in 2, 3)', 'category': 'Animated'}, {'question': 'Who plays twins Cameron and Tyler Winklevoss in The Social Network?', 'answer': 'Armie Hammer', 'category': 'Dramas'}, {'question': 'Gloria Swanson starred as a former silent movie star Norma Desmond in what movie?', 'answer': 'Sunset Boulevard', 'category': 'Classics'}, {'question': 'What famous director played the hacker Warlock in Die Hard 4, Live Free or Die Hard?', 'answer': 'Kevin Smith', 'category': 'Action/Adventure'}, {'question': "Who played Mark Wahlberg's girlfriend Lori in Ted?", 'answer': 'Mila Kunis', 'category': 'Comedies'}, {'question': 'What 1997 movie had the following tagline: "Even A Hit Man Deserves A Second Shot!"?', 'answer': 'Grosse Pointe Blank', 'category': 'Taglines'}, {'question': 'Ewan McGregor, Jessica Lange, and Billy Crudup all have roles in this 2003 film directed by Tim Burton.', 'answer': 'Big Fish', 'category': 'Directors'}, {'question': 'What 1970s Charles Bronson film was remade starring Jason Statham?', 'answer': 'The Mechanic', 'category': 'Action/Adventure'}, {'question': 'Who starred as the veteran secret agent Charlie Wax in the 2010 action flick From Paris with Love?', 'answer': 'John Travolta', 'category': 'Action/Adventure'}, {'question': 'Stuart Townsend played Dorian Gray in what Sean Connery starring action adventure film?', 'answer': 'The League of Extraordinary Gentlemen', 'category': 'Action/Adventure'}, {'question': 'Jackie Chan plays a secret agent who loses his memory after falling from a crashing helicopter in what 90s film?', 'answer': 'Who Am I?', 'category': 'Action/Adventure'}, {'question': 'Former NFL player Howie Long took a shot at becoming an action star by playing firefighter Jesse Graves in what 1990s action thriller?', 'answer': 'Firestorm', 'category': 'Action/Adventure'}, {'question': 'Julianne Moore provided the voice of the villainous computer program ARIIA in what 2000s action adventure film?', 'answer': 'Eagle Eye', 'category': 'Action/Adventure'}, {'question': 'In Airplane!, what does Leslie Nielsen say he ate for dinner?', 'answer': 'lasagna', 'category': '1980s'}, {'question': "In the 1981 film On Golden Pond, what is the name of the elusive big fish that Henry Fonda's character is always trying to catch?", 'answer': 'Walter', 'category': '1980s'}, {'question': "What is the name of Giancarlo Esposito's character in the 1989 film Do the Right Thing?", 'answer': "Buggin' Out", 'category': '1980s'}, {'question': 'Who were the male and female lead actors in Mannequin?', 'answer': 'Andrew McCarthy, Kim Cattrall', 'category': '1980s'}, {'question': "What is the name of Randolph Duke's brother in Trading Places?", 'answer': 'Mortimer Duke', 'category': '1980s'}, {'question': 'In Moonstruck, Cher is pursued by which actor?', 'answer': 'Nicolas Cage', 'category': '1980s'}, {'question': 'In the feature film version of the Transformers animated film, who voiced the character of Hot Rod?', 'answer': 'Judd Nelson', 'category': '1980s'}, {'question': "What is the name of the princess in Disney's Aladdin?", 'answer': 'Jasmine', 'category': 'N/A'}, {'question': 'What was the name of the 2015 boxing film and Rocky spin-off starring Michael B. Jordan?', 'answer': 'Creed', 'category': 'N/A'}, {'question': 'John Travolta and Nicolas Cage square off in what John Woo film?', 'answer': 'Face/Off', 'category': 'N/A'}, {'question': "Who plays Tom Hanks' best friend in You've Got Mail?", 'answer': 'Dave Chappelle', 'category': 'N/A'}, {'question': "What film's characters include Marvin Acme, Judge Doom, and Eddie Valiant?", 'answer': 'Who Framed Roger Rabbit', 'category': 'N/A'}, {'question': 'Tom Cruise plays a futuristic detective in what Spielberg sci-fi action film?', 'answer': 'Minority Report', 'category': 'Tom Cruise'}, {'question': "Who played Dennis Quaid's son in the disaster movie The Day After Tomorrow?", 'answer': 'Jake Gyllenhaal', 'category': 'Disaster'}, {'question': 'What happened to the previous Santa Claus, allowing Tim Allen to take over as Santa in The Santa Clause?', 'answer': 'he fell off a roof', 'category': 'Comedies'}, {'question': 'Who plays car salesman Jerry Lundegaard in Fargo?', 'answer': 'William H. Macy', 'category': 'Dramas'}, {'question': 'Name the director who was at the helm for the Night at the Museum trilogy.', 'answer': 'Shawn Levy', 'category': 'Directors'}, {'question': 'The NeverEnding Story was released in what year?', 'answer': '1984', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Bruce Willis plays a master burglar and safecracker in what action comedy?', 'answer': 'Hudson Hawk', 'category': 'Comedies'}, {'question': 'What was the first Shakespearean tale made into a film directed by Kenneth Branagh?', 'answer': 'Henry V', 'category': 'Dramas'}, {'question': "William Hurt played Richie Cusack, mobster and brother to Viggo Mortensen's character, in what film?", 'answer': 'A History of Violence', 'category': 'Crime'}, {'question': "Name the two co-leads in Michael Mann's Miami Vice.", 'answer': 'Colin Farrell, Jamie Foxx', 'category': 'Action/Adventure'}, {'question': "What 80s adventure comedy was Chris Columbus' directorial debut?", 'answer': 'Adventures in Babysitting', 'category': '1980s'}, {'question': 'Name a Pixar film that has a character voiced by former U.S. Marine R. Lee Ermey.', 'answer': 'Toy Story, Toy Story 2, Toy Story 3', 'category': 'Animated'}, {'question': 'Who directed the Al Pacino film Dog Day Afternoon?', 'answer': 'Sidney Lumet', 'category': 'Directors'}, {'question': 'What modern heist film features Woody Harrelson, Jesse Eisenberg, and Dave Franco?', 'answer': 'Now You See Me, Now You See Me 2', 'category': 'Crime'}, {'question': "Chazz Palminteri played Robert De Niro's mob rival, Primo Sindone, in what film?", 'answer': 'Analyze This', 'category': 'Crime'}, {'question': 'Who plays Handsome Rob in the remake of The Italian Job?', 'answer': 'Jason Statham', 'category': 'Crime'}, {'question': 'Name the film from the synopsis: in the poverty-stricken favelas of Rio de Janeiro in the 1970s, two young men choose different paths: one becomes a photographer, the other a drug dealer.', 'answer': 'City of God', 'category': 'Crime'}, {'question': 'What year saw the release of the first How to Train Your Dragon, Toy Story 3, and Megamind?', 'answer': '2010', 'category': 'Release Dates'}, {'question': "Bill & Ted's Excellent Adventure was released in what year?", 'answer': '1989', 'category': 'Release Dates'}, {'question': 'Oscar-winning Forrest Gump was released in this year.', 'answer': '1994', 'category': 'Release Dates'}, {'question': 'Die Hard 2 was released in what year?', 'answer': '1990', 'category': 'Release Dates'}, {'question': 'To rediscover his manhood after his wife asks for a divorce, Cal, with the help of his newfound friend, Jacob, learns how to pick up girls at bars in what film?', 'answer': 'Crazy, Stupid, Love.', 'category': 'Rom-Coms'}, {'question': 'What 2006 documentary features Al Gore and the tagline "By far the most terrifying film you will ever see."?', 'answer': 'An Inconvenient Truth', 'category': 'N/A'}, {'question': 'Chris Farley and David Spade star in what movie about auto parts salesmen?', 'answer': 'Tommy Boy', 'category': 'N/A'}, {'question': 'Peter MacNicol plays Dr. Janosz Poha in what movie?', 'answer': 'Ghostbusters II', 'category': 'N/A'}, {'question': 'Marty McFly says: "Nobody calls me ___.".', 'answer': 'chicken (in Back to the Future Part II)', 'category': 'N/A'}, {'question': "What Lord of the Rings actor also narrates 2007's adventure film Stardust?", 'answer': 'Ian McKellen', 'category': 'N/A'}, {'question': 'In Space Jam, who voices the main villain, Swackhammer?', 'answer': 'Danny DeVito', 'category': 'Animated'}, {'question': "Which song from 1994's The Lion King did Elton John win his Oscar for Best Original Song for?", 'answer': 'Can You Feel the Love Tonight', 'category': 'Oscars'}, {'question': "Who played Colin Farrell and Brendan Gleeson's boss in In Bruges?", 'answer': 'Ralph Fiennes', 'category': 'Crime'}, {'question': "In what city does Healy track down Mary after being hired to find her in There's Something About Mary?", 'answer': 'Miami', 'category': 'Cameron Diaz'}, {'question': 'In John Q., Denzel plays a desperate father trying to secure a heart transplant for his son. Who played Dr. Turner, who performed the operation at the end of the film?', 'answer': 'James Woods', 'category': 'Denzel Washington'}, {'question': 'Mufasa was trampled by a stampede of what kind of animals in The Lion King?', 'answer': 'wildebeests', 'category': 'Animated'}, {'question': "What was the name of the California town where Bill and Ted were from in Bill & Ted's Excellent Adventure?", 'answer': 'San Dimas', 'category': 'Comedies'}, {'question': "Who plays Leonardo DiCaprio's partner cop in Shutter Island?", 'answer': 'Mark Ruffalo', 'category': 'Dramas'}, {'question': 'Who plays Peggy Carter, love interest to Steve Rogers, in Captain America: The First Avenger?', 'answer': 'Hayley Atwell', 'category': 'Comic Book'}, {'question': 'Who directed Face/Off?', 'answer': 'John Woo', 'category': 'Action/Adventure'}, {'question': "Who plays the California Angels manager George Knox in 1994's Angels in the Outfield?", 'answer': 'Danny Glover', 'category': 'Sports'}, {'question': 'War of the Worlds was the second sci-fi collaboration between Steven Spielberg and Tom Cruise. What was the first?', 'answer': 'Minority Report', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays Virgil Earp in Tombstone?', 'answer': 'Sam Elliott', 'category': '1990s'}, {'question': 'Who played a warrior on horseback in a fantastical land in 2002, a doctor exploring space in 2009, and an enforcer of the peace in 2012?', 'answer': 'Karl Urban (in The Lord of the Rings: The Two Towers, Star Trek, Dredd)', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Minority Report, who plays U.S. Department of Justice agent Danny Witwer, who was chasing after Tom Cruise for the first half of the film?', 'answer': 'Colin Farrell', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played Senator Bail Organa in the Star Wars prequels?', 'answer': 'Jimmy Smits', 'category': 'Fantasy/Sci-Fi'}, {'question': "What actor, who also played a villain in the Die Hard franchise, plays Brom, former dragon rider and Eragon's mentor in Eragon?", 'answer': 'Jeremy Irons', 'category': 'Fantasy/Sci-Fi'}, {'question': "What form does Harry's Patronus Charm take in the Harry Potter franchise?", 'answer': 'a stag', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played the robot Andrew in Bicentennial Man?', 'answer': 'Robin Williams', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays Charles S. Howard, the owner of Seabiscuit in Seabiscuit?', 'answer': 'Jeff Bridges', 'category': 'Sports'}, {'question': 'In Major League II, the ALCS puts the Cleveland Indians against which American League Central team?', 'answer': 'the Chicago White Sox', 'category': 'Sports'}, {'question': "Who directed 2015's Southpaw?", 'answer': 'Antoine Fuqua', 'category': 'Sports'}, {'question': 'What was the name of the football team made up of prisoners in both the 1974 and 2005 versions of The Longest Yard?', 'answer': 'the Mean Machine', 'category': 'Sports'}, {'question': "Who played Will Ferrell and Jon Heder's ice skating coach in Blades of Glory?", 'answer': 'Craig T. Nelson', 'category': 'Sports'}, {'question': 'What is the name of the Miami Dolphins mascot stolen in Ace Ventura: Pet Detective?', 'answer': 'Snowflake', 'category': 'Sports'}, {'question': 'What is the name of the princess in the Disney classic Sleeping Beauty?', 'answer': 'Aurora', 'category': 'Animated'}, {'question': "Nick Nolte and Susan Sarandon star as the Odones, a couple trying to find a cure for their son's disease in what 1992 film?", 'answer': "Lorenzo's Oil", 'category': 'Biopics'}, {'question': 'In which 70s thriller does the villain repeatedly ask "Is it safe?"?', 'answer': 'Marathon Man', 'category': 'Quotes'}, {'question': 'What kind of dog was Beethoven in the 90s family film Beethoven?', 'answer': 'a St. Bernard', 'category': 'Family'}, {'question': "What is the first and last name of Dan Aykroyd's character in 1984's Ghostbusters?", 'answer': 'Raymond “Ray” Stantz', 'category': 'Comedies'}, {'question': 'Who stars as Darius, a disillusioned college graduate who lives at home with her widower father and interns at Seattle Magazine in the 2012 dramedy Safety Not Guaranteed?', 'answer': 'Aubrey Plaza', 'category': 'Dramas'}, {'question': 'What is the name of the British agent that Steve Rogers falls for in Captain America: The First Avenger?', 'answer': 'Margaret “Peggy” Carter', 'category': 'Comic Book'}, {'question': '1963 saw the release of the first official Bond film, titled what?', 'answer': 'Dr. No', 'category': 'Action/Adventure'}, {'question': 'Who directed Bill Murray and Richard Dreyfuss in the comedy What About Bob??', 'answer': 'Frank Oz', 'category': 'Directors'}, {'question': 'What actor played the character Roy Batty in Blade Runner?', 'answer': 'Rutger Hauer', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Toy Story 2, what is the name of the TV show Woody finds out he's from?", 'answer': "Woody's Roundup", 'category': 'Animated'}, {'question': "What color are Heimdall's eyes in the Thor films?", 'answer': 'yellow', 'category': 'Comic Book'}, {'question': 'In the graphic novel based film Cowboys & Aliens, what actor, who also played an MCU villain, plays Doc?', 'answer': 'Sam Rockwell', 'category': 'Comic Book'}, {'question': "You'll find the character of Hannibal King in what Marvel film?", 'answer': 'Blade: Trinity', 'category': 'Comic Book'}, {'question': 'In The Dark Knight, what does Lucius say is the name of the evacuation technique Batman uses to escape China?', 'answer': 'Skyhook', 'category': 'Comic Book'}, {'question': 'What was the name of the girl that Peter had a crush on in Spider-Man: Homecoming?', 'answer': 'Elizabeth "Liz" Toomes', 'category': 'Comic Book'}, {'question': 'What West Wing alum plays Dr. Emil Hamilton in Man of Steel?', 'answer': 'Richard Schiff', 'category': 'Comic Book'}, {'question': "What is Sandra Bullock's talent that she performs during the talent portion of the Miss United States Pageant in Miss Congeniality?", 'answer': 'playing wine glasses', 'category': 'Sandra Bullock'}, {'question': "What type of work does Sandra Bullock's character, Angela Bennett, do in the 1995 movie The Net?", 'answer': 'a systems analyst', 'category': 'Sandra Bullock'}, {'question': 'Who plays the villainous John Geiger in Speed 2: Cruise Control?', 'answer': 'Willem Dafoe', 'category': 'Sandra Bullock'}, {'question': 'Who directed the action comedy The Heat, starring Sandra Bullock and Melissa McCarthy?', 'answer': 'Paul Feig', 'category': 'Sandra Bullock'}, {'question': 'Who plays the guy Sandra Bullock ends up with at the end of While You Were Sleeping?', 'answer': 'Bill Pullman', 'category': 'Sandra Bullock'}, {'question': 'Sandra plays a futuristic cop obsessed with 90s culture in what film?', 'answer': 'Demolition Man', 'category': 'Sandra Bullock'}, {'question': "In Full Metal Jacket, what is the nickname of Private Joker's best friend?", 'answer': 'Cowboy', 'category': 'War'}, {'question': 'Who played the young orphan girl Heidi in the 1937 film of the same name?', 'answer': 'Shirley Temple', 'category': 'Musicals'}, {'question': 'What 1999 movie was directed by Wes Craven and stars Meryl Streep?', 'answer': 'Music of the Heart', 'category': 'Meryl Streep'}, {'question': "Who directed 2016's war film 13 Hours?", 'answer': 'Michael Bay', 'category': 'Action/Adventure'}, {'question': 'In Trading Places, who plays Ophelia, the prostitute that agrees to help Winthorpe?', 'answer': 'Jamie Lee Curtis', 'category': 'Comedies'}, {'question': "In Scorsese's Hugo, Hugo maintains what for his missing uncle at the railway station?", 'answer': 'a clock', 'category': 'Dramas'}, {'question': 'Who plays reporter John Klein in The Mothman Prophecies?', 'answer': 'Richard Gere', 'category': 'Horror/Thriller'}, {'question': 'Who plays CIA operative Everett Ross in Captain America: Civil War?', 'answer': 'Martin Freeman', 'category': 'Comic Book'}, {'question': 'Name one of the two films Oliver Stone has won the Academy Award for Best Director.', 'answer': 'Platoon, Born on the Fourth of July', 'category': 'Oscars'}, {'question': 'Who played the lead, scientist Dr. Niko, in the 1998 sci-fi thriller Godzilla?', 'answer': 'Matthew Broderick', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the name of one of Atticus Finch's two children in To Kill a Mockingbird?", 'answer': 'Jem Finch, Scout Finch', 'category': 'Classics'}, {'question': 'Who played Shoeless Joe Jackson in Field of Dreams?', 'answer': 'Ray Liotta', 'category': 'N/A'}, {'question': "What is the nickname of Jack Burton's big rig in Big Trouble in Little China?", 'answer': 'the Pork Chop Express', 'category': 'John Carpenter'}, {'question': 'What computer game does MacReady play in The Thing?', 'answer': 'chess', 'category': 'John Carpenter'}, {'question': 'What Hall of Fame pro wrestler plays the character Nada in They Live?', 'answer': 'Roddy Piper', 'category': 'John Carpenter'}, {'question': 'What veteran actor portrays Father Malone in The Fog?', 'answer': 'Hal Holbrook', 'category': 'John Carpenter'}, {'question': 'In Batman Begins, what was the first method the League of Shadows used to destroy Gotham?', 'answer': 'plunging Gotham into an economic depression', 'category': 'Comic Book'}, {'question': 'Who played the mutant Psylocke in X-Men: Apocalypse?', 'answer': 'Olivia Munn', 'category': 'Comic Book'}, {'question': 'In Iron Man 2, what does Tony give the vendor in exchange for strawberries on his way to see Pepper?', 'answer': 'his watch', 'category': 'Comic Book'}, {'question': 'What Lord of the Rings star plays Dilios, a Spartan soldier and narrator of 300?', 'answer': 'David Wenham', 'category': 'Comic Book'}, {'question': 'What 1998 film had the following tagline: "On The Air. Unaware."?', 'answer': 'The Truman Show', 'category': 'Taglines'}, {'question': 'Name the two films directed by Amy Heckerling revolving around the life of high school kids.', 'answer': 'Fast Times at Ridgemont High, Clueless', 'category': 'Coming of Age'}, {'question': 'What actor took over as the new Santa Claus in the 1994 holiday comedy The Santa Clause?', 'answer': 'Tim Allen', 'category': 'Comedies'}, {'question': 'In what Brad Pitt movie are real-life humans referred to as "noids"?', 'answer': 'Cool World', 'category': 'Brad Pitt'}, {'question': 'What 2011 movie stars Jake Gyllenhaal as an Army Captain who is repeatedly sent in an alternate reality to find a train bomber?', 'answer': 'Source Code', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What are the Blues Brothers trying to save in the original Blues Brothers?', 'answer': 'an orphanage', 'category': 'Comedies'}, {'question': "What Broadway legend received a Best Actress Oscar nomination for her role in 1969's The Sterile Cuckoo?", 'answer': 'Liza Minnelli', 'category': 'Oscars'}, {'question': 'Which horror movie franchise began first: Friday the 13th or A Nightmare on Elm Street?', 'answer': 'Friday the 13th', 'category': 'Horror/Thriller'}, {'question': 'Who plays antiques dealer Juno Skinner, who works with the terrorists in True Lies?', 'answer': 'Tia Carrere', 'category': 'Action/Adventure'}, {'question': 'What classic actor uttered this famous line from White Heat: "Made it, Ma! Top of the world!"?', 'answer': 'James Cagney', 'category': 'Quotes'}, {'question': 'What year saw the release of animated hits Wreck-It Ralph, The Lorax, and Brave?', 'answer': '2012', 'category': 'Animated'}, {'question': "What film was Frank Darabont's directorial debut?", 'answer': 'The Shawshank Redemption', 'category': 'Dramas'}, {'question': 'Name the film for which Goldie Hawn has won her only Oscar.', 'answer': 'Cactus Flower', 'category': 'Oscars'}, {'question': 'What director has received the most Best Director nominations at the Academy Awards?', 'answer': 'William Wyler (for Dodsworth, Wuthering Heights, The Letter, The Little Foxes, Mrs. Miniver, The Best Years of Our Lives, The Heiress, Detective Story, Roman Holiday, Friendly Persuasion, Ben-Hur, The Collector)', 'category': 'Oscars'}, {'question': "What movie was Al Pacino's first Oscar nomination for Best Actor for?", 'answer': 'Serpico', 'category': 'Oscars'}, {'question': 'What 2008 film won Best Picture for that year?', 'answer': 'Slumdog Millionaire', 'category': 'Oscars'}, {'question': 'Tom Hanks won his first Best Actor Oscar for Philadelphia, a film that won only one other Oscar in which category?', 'answer': 'Original Song', 'category': 'Oscars'}, {'question': 'Tom Berenger and who were nominated for Best Supporting Actor in Platoon?', 'answer': 'Willem Dafoe', 'category': 'Oscars'}, {'question': "In John Wick: Chapter 2, in which European city does John find his target Gianna D'Antonio?", 'answer': 'Rome', 'category': 'New Releases'}, {'question': 'Who plays the director of the Space Task Group, Al Harrison, in Hidden Figures?', 'answer': 'Kevin Costner', 'category': 'New Releases'}, {'question': "Who plays Pennywise in 2017's It?", 'answer': 'Bill Skarsgård', 'category': 'New Releases'}, {'question': "In King Arthur: Legend of the Sword, who played Arthur's father Uther?", 'answer': 'Eric Bana', 'category': 'New Releases'}, {'question': 'Who directed the Tom Cruise film American Made?', 'answer': 'Doug Liman', 'category': 'New Releases'}, {'question': "Who wrote and directed 2017's Wind River?", 'answer': 'Taylor Sheridan', 'category': 'New Releases'}, {'question': 'Who directed the heist comedy Logan Lucky?', 'answer': 'Steven Soderbergh', 'category': 'New Releases'}, {'question': "Name one of McConaughey's co-leads in the adventure film Sahara.", 'answer': 'Penélope Cruz, Steve Zahn', 'category': 'Matthew McConaughey'}, {'question': "What affliction prevents Ben's roommates from being able to go to Vegas in Knocked Up?", 'answer': 'pink eye', 'category': 'Judd Apatow'}, {'question': "Which character does Josh Gad voice in Disney's Frozen?", 'answer': 'Olaf', 'category': 'Animated'}, {'question': 'In what Anne Hathaway film will you hear the quote "I said to myself, go ahead. Take a chance. Hire the smart, fat girl."?', 'answer': 'The Devil Wears Prada', 'category': 'Comedies'}, {'question': "Who plays Colonel Weber in 2016's Arrival?", 'answer': 'Forest Whitaker', 'category': 'Dramas'}, {'question': "In which Midwestern U.S. city is the 2016 horror thriller Don't Breathe set?", 'answer': 'Detroit', 'category': 'Horror/Thriller'}, {'question': 'What is the full title of the fourth film in the Indiana Jones franchise?', 'answer': 'Indiana Jones and the Kingdom of the Crystal Skull', 'category': 'Action/Adventure'}, {'question': 'Kristen Bell, Kathryn Hahn, and what other actress star in Bad Moms and A Bad Moms Christmas?', 'answer': 'Mila Kunis', 'category': 'New Releases'}, {'question': 'Sam Worthington and Zoe Saldana forge an unlikely romance in what 2009 sci-fi blockbuster?', 'answer': 'Avatar', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays Doc Holliday in Tombstone?', 'answer': 'Val Kilmer', 'category': '1990s'}, {'question': "What is the animal represented by Harry Potter's Patronus spell?", 'answer': 'a stag', 'category': 'Harry Potter'}, {'question': 'Who directed Harry Potter and the Order of the Phoenix and every subsequent Harry Potter film?', 'answer': 'David Yates', 'category': 'Harry Potter'}, {'question': "What is the last name of Harry's aunt and uncle that he lives with?", 'answer': 'Dursley', 'category': 'Harry Potter'}, {'question': 'Who directed The Big Short?', 'answer': 'Adam McKay', 'category': 'Brad Pitt'}, {'question': 'In what film did Brad play Austrian Henrich Harrer?', 'answer': 'Seven Years in Tibet', 'category': 'Brad Pitt'}, {'question': "Who plays Brad's roommate in True Romance?", 'answer': 'Michael Rapaport', 'category': 'Brad Pitt'}, {'question': "What is Cyclops' full real name in the X-Men franchise?", 'answer': 'Scott Summers', 'category': 'Comic Book'}, {'question': 'What 1982 aquatic creature feature was based on a comic book of the same name?', 'answer': 'Swamp Thing', 'category': 'Comic Book'}, {'question': 'In The Avengers, Captain America tells Nick Fury that he doubts he will be surprised by anything, and Fury bets him that he is wrong. For how much was the bet?', 'answer': '10 dollars', 'category': 'Comic Book'}, {'question': 'In which 1998 film does John Travolta play a Southern Democrat who runs for President and whose character is based on Bill Clinton?', 'answer': 'Primary Colors', 'category': '1990s'}, {'question': 'In which film does Adam Sandler play a character with the name Sonny?', 'answer': 'Big Daddy', 'category': '1990s'}, {'question': 'Who plays the character of Brock Lovett in Titanic, whom Rose tells her story to?', 'answer': 'Bill Paxton', 'category': '1990s'}, {'question': 'Which Batman film was Drew Barrymore in?', 'answer': 'Batman Forever', 'category': 'Comic Book'}, {'question': 'Who played the hitman Vincent opposite Jamie Foxx in the 2004 thriller Collateral?', 'answer': 'Tom Cruise', 'category': '2000s'}, {'question': 'Author Robert Ludlum created what popular modern action hero?', 'answer': 'Jason Bourne', 'category': 'Characters'}, {'question': "Cary Elwes played the boyfriend of Jim Carrey's ex-wife in which film?", 'answer': 'Liar Liar', 'category': 'Comedies'}, {'question': "In My Cousin Vinny, who played Bill Gambini, Vinny's cousin who has been accused of murder?", 'answer': 'Ralph Macchio', 'category': '1990s'}, {'question': "Who plays volcanologist Dr. Harry Dalton in Dante's Peak?", 'answer': 'Pierce Brosnan', 'category': 'Action/Adventure'}, {'question': 'Who plays the highly robotic boy David in A.I. Artificial Intelligence?', 'answer': 'Haley Joel Osment', 'category': 'Steven Spielberg'}, {'question': 'Who directed Emma Thompson and Kate Winslet in Sense and Sensibility?', 'answer': 'Ang Lee', 'category': 'Dramas'}, {'question': 'McConaughey and Matthew Fox play football coaches together in what flick?', 'answer': 'We Are Marshall', 'category': 'Matthew McConaughey'}, {'question': 'Who plays Agent Seymour Simmons in the Transformers franchise?', 'answer': 'John Turturro (in Transformers, Revenge of the Fallen, Dark of the Moon, The Last Knight)', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What animal was voiced by Charlize in Kubo and the Two Strings?', 'answer': 'a monkey', 'category': 'Charlize Theron'}, {'question': 'Who played Olive Oyl alongside Robin Williams in Popeye?', 'answer': 'Shelley Duvall', 'category': '1980s'}, {'question': 'Mr. ___ is the name of the individual that was blackmailing all of the guests in Clue.', 'answer': 'Boddy', 'category': 'Comedies'}, {'question': 'Who plays morning news director Nina Romina in the 2014 crime drama Nightcrawler?', 'answer': 'Rene Russo', 'category': 'Dramas'}, {'question': 'Who directed the 1976 horror film The Omen?', 'answer': 'Richard Donner', 'category': 'Horror/Thriller'}, {'question': "Who played the Green Hornet in 2011's The Green Hornet?", 'answer': 'Seth Rogen', 'category': 'Action/Adventure'}, {'question': 'What year saw the release of the family classic Honey, I Shrunk the Kids?', 'answer': '1989', 'category': 'Release Dates'}, {'question': 'Who plays the leader of the ancient witch sisters in Stardust?', 'answer': 'Michelle Pfeiffer', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name two performers that voice the three main hyenas Banzai, Shenzi, and Ed in The Lion King.', 'answer': 'Cheech Marin, Whoopi Goldberg, Jim Cummings', 'category': 'Animated'}, {'question': "Who directed Robin Williams in 1987's Good Morning, Vietnam?", 'answer': 'Barry Levinson', 'category': 'War'}, {'question': "Who plays Major John Reisman, leader of 1967's The Dirty Dozen?", 'answer': 'Lee Marvin', 'category': 'War'}, {'question': 'Who composed the score for War Horse?', 'answer': 'John Williams', 'category': 'War'}, {'question': 'We Were Soldiers stars Mel Gibson as Lt. Col. Hal Moore fighting in one of the first engagements of which war as part of the 7th Cavalry?', 'answer': 'the Vietnam War', 'category': 'War'}, {'question': 'Don Rickles plays Staff Sergeant Crapgame in what war film?', 'answer': "Kelly's Heroes", 'category': 'War'}, {'question': 'What war film features Ty Burrell, Tom Hardy, Eric Bana, and Nikolaj Coster-Waldau?', 'answer': 'Black Hawk Down', 'category': 'War'}, {'question': 'Who plays Stan Ross, a retired baseball player that must return to the big league to reach the milestone of 3,000 hits in Mr. 3000?', 'answer': 'Bernie Mac', 'category': 'Sports'}, {'question': 'The basketball drama Hoosiers was released in what year?', 'answer': '1986', 'category': 'Sports'}, {'question': 'In what film will you hear the following quote: "I don\'t want them to gain another yard! You blitz... all... night! If they cross the line of scrimmage, I\'m gonna take every last one of you out!"?', 'answer': 'Remember the Titans', 'category': 'Sports'}, {'question': 'Lil Bow Wow plays a 14-year-old orphan who becomes an NBA superstar after trying on unique sneakers in what 2002 film?', 'answer': 'Like Mike', 'category': 'Sports'}, {'question': 'Who plays the basketball coach Don Haskins in the film Glory Road?', 'answer': 'Josh Lucas', 'category': 'Sports'}, {'question': 'Mo Cuishle, which is Gaelic for "my darling" or "my blood" was embroidered on a boxing robe of the main character in what boxing film?', 'answer': 'Million Dollar Baby', 'category': 'Sports'}, {'question': 'Star Wars: Episode II – Attack of the Clones was released in what year?', 'answer': '2002', 'category': 'Release Dates'}, {'question': "In Tangled, what is Rapunzel's weapon of choice?", 'answer': 'a frying pan', 'category': 'N/A'}, {'question': "Who plays archaeologist Dr. Daniel Jackson, who discovers the secret to opening the Stargate in 1994's Stargate?", 'answer': 'James Spader', 'category': 'N/A'}, {'question': 'Finish the quote: "Soylent Green is ___!".', 'answer': 'people', 'category': 'N/A'}, {'question': 'The Road Warrior is a sequel to what movie?', 'answer': 'Mad Max', 'category': 'N/A'}, {'question': "Who provided the voice of Draco, the last remaining dragon in 1996's Dragonheart?", 'answer': 'Sean Connery', 'category': 'N/A'}, {'question': 'Who directed Sandra in Gravity?', 'answer': 'Alfonso Cuarón', 'category': 'Sandra Bullock'}, {'question': 'What legendary actor plays Deputy Director of the CIA Vice Admiral James Greer in the Jack Ryan films The Hunt for Red October, Patriot Games, and Clear and Present Danger?', 'answer': 'James Earl Jones', 'category': 'Action/Adventure'}, {'question': "Who plays Will Smith's co-lead Jess Barrett, an inexperienced grifter in the 2015 film Focus?", 'answer': 'Margot Robbie', 'category': 'Will Smith'}, {'question': 'Who directed Charlize in the 2011 comedy Young Adult?', 'answer': 'Jason Reitman', 'category': 'Charlize Theron'}, {'question': 'Who played eccentric Pentecostal preacher Sonny in the 1997 film The Apostle?', 'answer': 'Robert Duvall', 'category': 'Dramas'}, {'question': 'In what Denzel Washington film will you hear the following quote: "This is no democracy. It is a dictatorship. I am the law."?', 'answer': 'Remember the Titans', 'category': 'Denzel Washington'}, {'question': 'In what film will you hear the quote "Congratulations San Francisco, you\'ve ruined pizza! First the Hawaiians, and now you!"?', 'answer': 'Inside Out', 'category': 'Animated'}, {'question': 'What 90s film features Kevin Kline running the country as President Bill Mitchell?', 'answer': 'Dave', 'category': 'Comedies'}, {'question': "Which Oscar winner's first leading role was in The Next Karate Kid?", 'answer': 'Hilary Swank', 'category': 'Family'}, {'question': 'What 90s drama had the tagline "Fear can hold you prisoner. Hope can set you free."?', 'answer': 'The Shawshank Redemption', 'category': 'Dramas'}, {'question': 'Who performed the tune "We Don\'t Need Another Hero" in Mad Max Beyond Thunderdome?', 'answer': 'Tina Turner', 'category': 'Action/Adventure'}, {'question': 'What actor plays rookie officer John Blake in The Dark Knight Rises?', 'answer': 'Joseph Gordon-Levitt', 'category': 'Comic Book'}, {'question': 'What did the father and son use to communicate across decades in Frequency?', 'answer': 'a ham radio', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who voiced Alpha 5 in 2017's Power Rangers?", 'answer': 'Bill Hader', 'category': 'New Releases'}, {'question': 'What 1992 movie follows the lives of desperate real estate agents over the course of two days?', 'answer': 'Glengarry Glen Ross', 'category': 'Dramas'}, {'question': "What movie features Nicolas Cage's character waking up in an alternate universe in which he is married to his girlfriend played by Téa Leoni?", 'answer': 'The Family Man', 'category': 'Dramas'}, {'question': "In Witness, when leaving the Amish farm, what does Harrison Ford's character accidentally hit with his car after passing out from a gunshot wound?", 'answer': 'a birdhouse', 'category': 'Dramas'}, {'question': 'In Almost Famous, after a rough night, the cast sings along to what Elton John song while on the tour bus?', 'answer': 'Tiny Dancer', 'category': 'Dramas'}, {'question': 'Edward Norton plays a violent sociopath that goes by Roy in what film?', 'answer': 'Primal Fear', 'category': 'Dramas'}, {'question': 'In Good Will Hunting, Will leaves Robin Williams a note saying that he had "to go see about a girl". What was Robin\'s response?', 'answer': 'Son of a bitch... He stole my line.', 'category': 'Dramas'}, {'question': 'Who played racer Niki Lauda in the movie Rush?', 'answer': 'Daniel Brühl', 'category': 'Ron Howard'}, {'question': 'Which Ron Howard film featured Keanu Reeves, Joaquin Phoenix, and Rick Moranis?', 'answer': 'Parenthood', 'category': 'Ron Howard'}, {'question': 'Which Ron Howard film was a remake of a 1956 film starring Donna Reed and Leslie Nielsen?', 'answer': 'Ransom', 'category': 'Ron Howard'}, {'question': 'Who plays the scientist who proves Madison is a mermaid by splashing her with water in Splash?', 'answer': 'Eugene Levy', 'category': 'Ron Howard'}, {'question': 'Sam Rockwell and Oliver Platt play investigators, and Kevin Bacon is a high-ranking political official, in what Ron Howard film?', 'answer': 'Frost/Nixon', 'category': 'Ron Howard'}, {'question': 'What Midwestern U.S. city is the setting for Backdraft?', 'answer': 'Chicago', 'category': 'Ron Howard'}, {'question': 'Who is directing the 2019 "live-action" The Lion King remake?', 'answer': 'Jon Favreau', 'category': 'Disney'}, {'question': 'In Dumb and Dumber, Lloyd accidentally kills a rare type of what animal with a cork?', 'answer': 'an owl', 'category': 'Comedies'}, {'question': 'What well-known actor was the director for the Susan Sarandon Sean Penn film Dead Man Walking?', 'answer': 'Tim Robbins', 'category': 'Dramas'}, {'question': "Who played Valerie a.k.a. Red Riding Hood in 2011's Red Riding Hood?", 'answer': 'Amanda Seyfried', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the 2006 romantic comedy The Break-Up starring Jennifer Aniston and Vince Vaughn?', 'answer': 'Peyton Reed', 'category': 'Directors'}, {'question': 'What veteran actor portrays Arthur in Kingsman: The Secret Service?', 'answer': 'Michael Caine', 'category': 'Action/Adventure'}, {'question': "In Disney's The Little Mermaid, what kind of animals are Ursula's pets?", 'answer': 'eels', 'category': 'Animated'}, {'question': "Who plays Ryan Gosling's superior Lt. Joshi in Blade Runner 2049?", 'answer': 'Robin Wright', 'category': 'New Releases'}, {'question': 'At the end of The Graduate, what Simon & Garfunkel song plays as our two young leads ride the bus away from the wedding?', 'answer': 'The Sound of Silence', 'category': 'Coming of Age'}, {'question': "Name the only dwarf that did not have a beard in Disney's Snow White and the Seven Dwarfs.", 'answer': 'Dopey', 'category': 'Animated'}, {'question': 'What 1998 movie was the first film released by DreamWorks Animation Studio?', 'answer': 'Antz', 'category': 'Animated'}, {'question': 'Humpty Dumpty appears as an antagonist in what film set in the Shrek universe?', 'answer': 'Puss in Boots', 'category': 'Animated'}, {'question': "What classic actor voices food critic Anton Ego in Pixar's Ratatouille?", 'answer': "Peter O'Toole", 'category': 'Animated'}, {'question': 'In Pulp Fiction, what one word does Brett say that angers Jules?', 'answer': 'what', 'category': 'Crime'}, {'question': "Who plays Tony Montana's boss, Frank Lopez, in the 1983 remake Scarface?", 'answer': 'Robert Loggia', 'category': 'Crime'}, {'question': 'In The Untouchables, what does Eliot Ness find at an attempted liquor raid?', 'answer': 'umbrellas', 'category': 'Crime'}, {'question': "Brothers Andy and Hank Hanson devise a plan to rob their parents' jewelry store in what 2000s film?", 'answer': "Before the Devil Knows You're Dead", 'category': 'Crime'}, {'question': 'In Collateral, who plays LAPD detective Ray Fanning, who is hot on the trail of Vincent and Max?', 'answer': 'Mark Ruffalo', 'category': 'Crime'}, {'question': 'Who played taxi-driving misfit Travis Bickle?', 'answer': 'Robert De Niro', 'category': 'N/A'}, {'question': 'In what 80s comedy does Tom Hanks play Detective Scott Turner?', 'answer': 'Turner & Hooch', 'category': 'N/A'}, {'question': "In 1990's Home Alone, the McCallisters were traveling to what European city for Christmas?", 'answer': 'Paris', 'category': 'N/A'}, {'question': 'What is the name of the character played by Johnny Depp in the Tim Burton film Sleepy Hollow?', 'answer': 'Ichabod Crane', 'category': 'N/A'}, {'question': 'What was the first Batman movie to feature a score by composer Elliot Goldenthal?', 'answer': 'Batman Forever', 'category': 'N/A'}, {'question': 'In Jarhead, who played the lead, Anthony Swofford, a sniper in the U.S. Marine Corps?', 'answer': 'Jake Gyllenhaal', 'category': 'War'}, {'question': "Named after a flower, what is the name of Allison Williams' character in Get Out?", 'answer': 'Rose Armitage', 'category': 'Horror/Thriller'}, {'question': "Who plays DiCaprio's rival, John Fitzgerald, in The Revenant?", 'answer': 'Tom Hardy', 'category': 'Dramas'}, {'question': "In Talladega Nights, who played French Formula One driver and Bobby's archrival Jean Girard?", 'answer': 'Sacha Baron Cohen', 'category': 'Comedies'}, {'question': 'What film, released in 2001, won Best Picture at the Academy Awards?', 'answer': 'A Beautiful Mind', 'category': 'Oscars'}, {'question': 'Who plays a zombie by the name of R who saves a living girl from an attack in Warm Bodies?', 'answer': 'Nicholas Hoult', 'category': 'Horror/Thriller'}, {'question': "Which James Bond movie featured Pierce Brosnan's first appearance as Agent 007?", 'answer': 'GoldenEye', 'category': 'Action/Adventure'}, {'question': "What piano-playing musician voices the streetwise Dodger in Disney's Oliver & Company?", 'answer': 'Billy Joel', 'category': 'Animated'}, {'question': 'Aaron Taylor-Johnson and Elizabeth Olsen played husband and wife in what 2014 movie?', 'answer': 'Godzilla', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who was the second MCU character to have a standalone sequel released?', 'answer': 'Thor (with Thor: The Dark World)', 'category': 'Comic Book'}, {'question': 'What sci-fi mashup had the tagline "Whoever wins... We lose."?', 'answer': 'Alien vs. Predator', 'category': 'N/A'}, {'question': "What man-made structure is shown collapsing at the end of 1978's Superman?", 'answer': 'the Hoover Dam', 'category': 'Comic Book'}, {'question': 'What race is Ronan the Accuser?', 'answer': 'a Kree', 'category': 'Comic Book'}, {'question': "In 2009's Watchmen, what song is played during the funeral of the Comedian?", 'answer': 'The Sound of Silence', 'category': 'Comic Book'}, {'question': 'What MCU character said, "Well now I\'m standing. Happy? We\'re all standing now. Bunch of jackasses, standing in a circle."?', 'answer': 'Rocket (in Guardians of the Galaxy)', 'category': 'Comic Book'}, {'question': "Who directed 2017's Murder on the Orient Express?", 'answer': 'Kenneth Branagh', 'category': 'New Releases'}, {'question': 'Who directed the 2017 crime drama Detroit?', 'answer': 'Kathryn Bigelow', 'category': 'New Releases'}, {'question': 'Who plays the first human born on Mars, Gardner Elliot, in The Space Between Us?', 'answer': 'Asa Butterfield', 'category': 'New Releases'}, {'question': 'Who voiced the emoji Gene Meh in The Emoji Movie?', 'answer': 'T.J. Miller', 'category': 'New Releases'}, {'question': "Who plays James Dean's girlfriend in 1955's Rebel Without a Cause?", 'answer': 'Natalie Wood', 'category': 'Oscars'}, {'question': 'Who won an Academy Award for Best Supporting Actor for their work in Ordinary People?', 'answer': 'Timothy Hutton', 'category': 'Oscars'}, {'question': 'What actor made their final film appearance in The Imaginarium of Doctor Parnassus?', 'answer': 'Heath Ledger', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what film will you hear the following quote: "I\'m not a pirate, so happens I am a lawyer."?', 'answer': 'Hook', 'category': 'Quotes'}, {'question': 'Who directed the 1994 Best Picture nominee Quiz Show?', 'answer': 'Robert Redford', 'category': 'Directors'}, {'question': "In 1991's Father of the Bride, who plays the eccentric wedding coordinator, Franck Eggelhoffer?", 'answer': 'Martin Short', 'category': 'Comedies'}, {'question': 'Who plays the lead Will Freeman in the 2002 comedy drama About a Boy?', 'answer': 'Hugh Grant', 'category': 'Dramas'}, {'question': "Who played Quentin Tarantino's brother in From Dusk till Dawn?", 'answer': 'George Clooney', 'category': 'Horror/Thriller'}, {'question': "Who directed 2010's Robin Hood?", 'answer': 'Ridley Scott', 'category': 'Action/Adventure'}, {'question': 'Who was said to be sleeping with the fishes in The Godfather?', 'answer': 'Luca Brasi', 'category': 'Crime'}, {'question': "What was David Levinson's plan to defeat the aliens in the first Independence Day movie?", 'answer': 'uploading a virus that will disrupt their shields', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which characters from the Madagascar series had their own spin-off movie in 2014?', 'answer': 'penguins', 'category': 'Animated'}, {'question': "In 2006's Babel, Cate Blanchett plays opposite Brad Pitt, but in which film from 2008 do the two also star together?", 'answer': 'The Curious Case of Benjamin Button', 'category': 'N/A'}, {'question': 'What actor played American entertainer, playwright, and composer George M. Cohan in both Yankee Doodle Dandy and The Seven Little Foys?', 'answer': 'James Cagney', 'category': 'Biopics'}, {'question': 'In Men of Honor, Cuba Gooding suffers an injury on a ship and loses a part of his body. What part of his body does he lose?', 'answer': 'his left leg', 'category': 'Biopics'}, {'question': 'Who directed the 2005 biographical war drama Jarhead?', 'answer': 'Sam Mendes', 'category': 'Biopics'}, {'question': 'What is the nickname that Howard Stern gives Paul Giamatti in Private Parts?', 'answer': 'Pig Vomit', 'category': 'Biopics'}, {'question': 'Who plays an L.A. journalist that befriends a homeless Juilliard-trained musician in The Soloist?', 'answer': 'Robert Downey Jr.', 'category': 'Biopics'}, {'question': 'What actor plays bull rider Lane Frost in 8 Seconds?', 'answer': 'Luke Perry', 'category': 'Biopics'}, {'question': "In Batman & Robin, how was Alicia Silverstone's Barbara related to Alfred?", 'answer': "Alfred's niece", 'category': 'Comic Book'}, {'question': "What was Jon Favreau's character's full name in the Iron Man films?", 'answer': 'Harold "Happy" Hogan', 'category': 'Comic Book'}, {'question': 'In Captain America: Civil War, Spider-Man took down Ant-Man with a technique from what Star Wars film?', 'answer': 'The Empire Strikes Back', 'category': 'Comic Book'}, {'question': 'From what 1990s comic book movie do the criminals Funboy, T-Bird, Skank, and Tin-Tin appear?', 'answer': 'The Crow', 'category': 'Comic Book'}, {'question': 'What was the first comic book movie to cross one billion dollars worldwide at the box office?', 'answer': 'The Dark Knight', 'category': 'Comic Book'}, {'question': 'In Suicide Squad, what word does the Joker have tattooed on his forehead?', 'answer': 'damaged', 'category': 'Comic Book'}, {'question': 'What song is played over the credits at the end of Eight Crazy Nights?', 'answer': 'The Chanukah Song', 'category': 'Holiday'}, {'question': 'In the 1980s, Stallone plays the character Marion in which film?', 'answer': 'Cobra', 'category': 'Sly & Arnie'}, {'question': 'What future Academy Award nominee plays murderer Richard Haywood in the thriller Murder by Numbers?', 'answer': 'Ryan Gosling', 'category': 'Sandra Bullock'}, {'question': "Who plays Jack Nicholson's co-lead, Erica, in Something's Gotta Give?", 'answer': 'Diane Keaton', 'category': 'Rom-Coms'}, {'question': "What were the last names of Bonnie and Clyde in 1967's Bonnie and Clyde?", 'answer': 'Parker, Barrow', 'category': 'Crime'}, {'question': 'At the beginning of Inside Out, young Riley is shown to have five Islands of Personality. Name two of them.', 'answer': 'Family, Friendship, Goofball, Hockey, Honesty', 'category': 'Pixar'}, {'question': "Antz and A Bug's Life both came out in 1998, but which film came out first?", 'answer': 'Antz', 'category': 'Animated'}, {'question': "Which number are Bill and Ted thinking of when they play the guessing game with their future selves in Bill & Ted's Excellent Adventure?", 'answer': '69', 'category': 'Comedies'}, {'question': 'Matt Damon and Ed Norton play cards to pay off their gambling debt in what film?', 'answer': 'Rounders', 'category': 'Dramas'}, {'question': "Who played the serial killer Stuntman Mike in Quentin Tarantino's Death Proof?", 'answer': 'Kurt Russell', 'category': 'Horror/Thriller'}, {'question': 'Who directed Mission: Impossible – Ghost Protocol?', 'answer': 'Brad Bird', 'category': 'Action/Adventure'}, {'question': 'Who played the Queen in the 2012 film Mirror Mirror?', 'answer': 'Julia Roberts', 'category': 'Family'}, {'question': 'Who does Sandra Bullock romance in The Proposal?', 'answer': 'Ryan Reynolds', 'category': 'Rom-Coms'}, {'question': 'The first Iron Man was released in what year?', 'answer': '2008', 'category': 'Release Dates'}, {'question': 'In what 80s movie will you hear the quote "If it bleeds, we can kill it."?', 'answer': 'Predator', 'category': 'N/A'}, {'question': 'In which Jerry Lewis film does his character never speak?', 'answer': 'The Bellboy', 'category': 'Classics'}, {'question': 'What classic comedy features a leopard, Katharine Hepburn, and Cary Grant?', 'answer': 'Bringing Up Baby', 'category': 'Classics'}, {'question': 'Who plays seasoned and crooked Senator Joseph Harrison Paine in the classic Mr. Smith Goes to Washington?', 'answer': 'Claude Rains', 'category': 'Classics'}, {'question': 'What 1950s classic adventure film that is based on a novel was directed by John Huston and starred Gregory Peck and Orson Welles?', 'answer': 'Moby Dick', 'category': 'Classics'}, {'question': 'What nickname was given to the intimidating duo of enforcers Fultron Reed and Dean Portman in D2: The Mighty Ducks?', 'answer': 'the Bash Brothers', 'category': 'Family'}, {'question': 'What is the name of the lifeguard in The Sandlot?', 'answer': 'Wendy Peffercorn', 'category': 'Family'}, {'question': "What pizza chain delivers pizza to Mikey through the drainage gate in 1990's Teenage Mutant Ninja Turtles?", 'answer': "Domino's Pizza", 'category': 'Family'}, {'question': 'Mild-mannered Don Knotts leaves life as a milquetoast bookkeeper and begins a new life as a talking fish in what live-action/animated film?', 'answer': 'The Incredible Mr. Limpet', 'category': 'Family'}, {'question': 'Denzel Washington won a Best Supporting Actor Oscar in 1989 for his role in what war movie?', 'answer': 'Glory', 'category': 'War'}, {'question': 'In Evil Dead II, what does Ash attach to the stump of his right arm?', 'answer': 'a chainsaw', 'category': 'Horror/Thriller'}, {'question': 'Who plays the primary villain Chudnofsky in the 2011 movie The Green Hornet?', 'answer': 'Christoph Waltz', 'category': 'Comic Book'}, {'question': 'Which film did Angelina Jolie receive her only acting Oscar win for?', 'answer': 'Girl, Interrupted', 'category': 'Angelina Jolie'}, {'question': 'Jeremy Irons won the Best Actor Oscar in 1991 for what film?', 'answer': 'Reversal of Fortune', 'category': 'Oscars'}, {'question': 'In History of the World, Part I, who plays Emperor Nero?', 'answer': 'Dom DeLuise', 'category': '1980s'}, {'question': 'What musical chronicles the signing of the Declaration of Independence?', 'answer': '1776', 'category': 'N/A'}, {'question': 'Who played the lead samurai, Katsumoto, who captures and later befriends Tom Cruise in The Last Samurai?', 'answer': 'Ken Watanabe', 'category': 'Action/Adventure'}, {'question': 'Who directed Tropic Thunder?', 'answer': 'Ben Stiller', 'category': 'Comedies'}, {'question': "Who played helicopter pilot MacReady in John Carpenter's The Thing?", 'answer': 'Kurt Russell', 'category': 'Horror/Thriller'}, {'question': "Who stars opposite George Clooney as Jack Foley in 1998's Out of Sight?", 'answer': 'Jennifer Lopez', 'category': 'Crime'}, {'question': 'What name did Sean Penn go by in the 1982 film Fast Times at Ridgemont High?', 'answer': 'Jeffrey "Jeff" Spicoli', 'category': '1980s'}, {'question': "What is the name of Hiccup's dragon in the How to Train Your Dragon films?", 'answer': 'Toothless', 'category': 'Animated'}, {'question': 'Which Avenger makes a cameo appearance in Ant-Man?', 'answer': 'Captain America, the Falcon, the Winter Soldier', 'category': 'Comic Book'}, {'question': "In Harry Potter and the Sorcerer's Stone, what color is the Sorcerer's Stone?", 'answer': 'red', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who directed 2005's The Adventures of Sharkboy and Lavagirl in 3-D?", 'answer': 'Robert Rodriguez', 'category': 'Directors'}, {'question': 'Who directed the 2006 disaster film Poseidon?', 'answer': 'Wolfgang Petersen', 'category': 'Directors'}, {'question': 'Francis Ford Coppola has been nominated four times for Best Director. Three of them were for the Godfather trilogy. What was the fourth movie?', 'answer': 'Apocalypse Now', 'category': 'Directors'}, {'question': 'Who directed Michael J. Fox and Sean Penn in the Vietnam War drama Casualties of War?', 'answer': 'Brian De Palma', 'category': 'Directors'}, {'question': "In Gone Girl, who plays the wealthy ex-boyfriend of Rosamund Pike's character?", 'answer': 'Neil Patrick Harris', 'category': 'David Fincher'}, {'question': 'David Fincher has been nominated for Best Director at the Academy Awards twice: for The Social Network and what other film?', 'answer': 'The Curious Case of Benjamin Button', 'category': 'David Fincher'}, {'question': "In The Girl with the Dragon Tattoo, who played Henrik Vanger, the wealthy businessman who launches an extensive investigation into his family's affairs?", 'answer': 'Christopher Plummer', 'category': 'David Fincher'}, {'question': 'Who wrote the screenplay for The Social Network?', 'answer': 'Aaron Sorkin', 'category': 'David Fincher'}, {'question': 'Who plays the love interest to CIA agents and best friends Tom Hardy and Chris Pine in This Means War?', 'answer': 'Reese Witherspoon', 'category': 'Rom-Coms'}, {'question': 'John C. Reilly plays Happy Jack Mulraney in what Scorsese film?', 'answer': 'Gangs of New York', 'category': 'Martin Scorsese'}, {'question': 'What actor plays the guy Cameron Diaz falls for in The Holiday?', 'answer': 'Jude Law', 'category': 'Cameron Diaz'}, {'question': 'Who plays Jessica, a popular high school girl who swaps bodies with Rob Schneider in the 2002 comedy The Hot Chick?', 'answer': 'Rachel McAdams', 'category': 'Comedies'}, {'question': 'Who is the only actor to be nominated for their role in Apocalypse Now?', 'answer': 'Robert Duvall', 'category': 'War'}, {'question': 'What country does the Disney classic Beauty and the Beast take place in?', 'answer': 'France', 'category': 'Animated'}, {'question': 'Characters sing "Bohemian Rhapsody" in a car at the beginning of what 90s comedy?', 'answer': "Wayne's World", 'category': 'Comedies'}, {'question': 'What movie stars Clint Eastwood, Tommy Lee Jones, Donald Sutherland, and James Garner as "ex-test pilots" who are sent to space to repair an old Soviet satellite?', 'answer': 'Space Cowboys', 'category': 'Dramas'}, {'question': 'In Demolition Man, what chain won the Franchise Wars?', 'answer': 'Taco Bell', 'category': 'Action/Adventure'}, {'question': 'Who directed Iron Man 3?', 'answer': 'Shane Black', 'category': 'Comic Book'}, {'question': 'What 2015 fantasy stars Hugh Jackman and is directed by Joe Wright?', 'answer': 'Pan', 'category': 'Fantasy/Sci-Fi'}, {'question': 'How many Karate Kid movies featured Ralph Macchio as Daniel LaRusso?', 'answer': '3', 'category': '1980s'}, {'question': "Who played Lydia Deetz in 1988's Beetlejuice?", 'answer': 'Winona Ryder', 'category': 'Horror/Thriller'}, {'question': "What do Aladdin and his monkey Abu steal from the marketplace when you're first introduced to them in the movie Aladdin?", 'answer': 'bread', 'category': 'Disney'}, {'question': "What is the name of the main villain in Disney's Mulan?", 'answer': 'Shan Yu', 'category': 'Disney'}, {'question': 'What is the name of the Disney character known as "the great mouse detective"?', 'answer': 'Basil', 'category': 'Disney'}, {'question': 'Adriana Caselotti was 18 years old when she was asked to voice what famous Disney character?', 'answer': 'Snow White (in Snow White and the Seven Dwarfs)', 'category': 'Disney'}, {'question': 'In what 90s Disney animated film do you hear Disney tunes such as "Stand Out", "After Today", and "I2I"?', 'answer': 'A Goofy Movie', 'category': 'Disney'}, {'question': "Who voices Jane Porter in 1999's Tarzan?", 'answer': 'Minnie Driver', 'category': 'Disney'}, {'question': 'What famous actor cameos as an Asgardian playing Loki during a play in Thor: Ragnarok?', 'answer': 'Matt Damon', 'category': 'New Releases'}, {'question': 'What psychological horror thriller starring Dane DeHaan and directed by Gore Verbinski was released in early 2017?', 'answer': 'A Cure for Wellness', 'category': 'New Releases'}, {'question': 'Set in Boston in 1978, a meeting in a deserted warehouse between two gangs turns into a shootout and a game of survival in what film?', 'answer': 'Free Fire', 'category': 'New Releases'}, {'question': 'What actor has small roles as a thief in Baby Driver and the boyfriend of a murder victim in Wind River?', 'answer': 'Jon Bernthal', 'category': 'New Releases'}, {'question': 'Nominated for a number of Academy Awards, who was the director of Get Out?', 'answer': 'Jordan Peele', 'category': 'New Releases'}, {'question': 'Bruce Greenwood plays the slimy President of the United States in what sequel released in September 2017?', 'answer': 'Kingsman: The Golden Circle', 'category': 'New Releases'}, {'question': 'Christopher Walken played the father of Frank Abagnale in what Spielberg movie?', 'answer': 'Catch Me If You Can', 'category': 'Steven Spielberg'}, {'question': "Who played Ron Burgundy's rival, newsman Wes Mantooth, in Anchorman?", 'answer': 'Vince Vaughn', 'category': '2000s'}, {'question': 'Whoopi Goldberg uses the pseudonym of Rita Miller to access a bank account with the laundered money in what film?', 'answer': 'Ghost', 'category': '1990s'}, {'question': 'In which Shrek film does Donkey turn into a horse after drinking some of the potion called "Happily Ever After"?', 'answer': 'Shrek 2', 'category': 'Animated'}, {'question': 'The tagline for this 1987 comedy starts "A cruel but beautiful heiress screws over a hired carpenter, who later is the first one to find her when she gets amnesia.".', 'answer': 'Overboard', 'category': 'Comedies'}, {'question': 'Who directed Platoon?', 'answer': 'Oliver Stone', 'category': 'Dramas'}, {'question': "Who plays the brother of Mel Gibson's character in the 2002 sci-fi M. Night Shyamalan movie Signs?", 'answer': 'Joaquin Phoenix', 'category': 'Horror/Thriller'}, {'question': "What is Joan Wilder's profession in the 1984 action adventure romantic comedy Romancing the Stone?", 'answer': 'a romance novelist', 'category': 'Action/Adventure'}, {'question': 'Who played Alex, the leader of the ultraviolent youths in A Clockwork Orange?', 'answer': 'Malcolm McDowell', 'category': 'Crime'}, {'question': 'Mila Jovovich plays a protagonist by the name of Alice in what sci-fi horror franchise?', 'answer': 'Resident Evil', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who starred as Cher's stepbrother in the hit movie Clueless?", 'answer': 'Paul Rudd', 'category': 'Rom-Coms'}, {'question': 'Who directed Pretty Woman?', 'answer': 'Garry Marshall', 'category': 'Julia Roberts'}, {'question': 'Who played carefree Welshman Spike in Notting Hill?', 'answer': 'Rhys Ifans', 'category': 'Julia Roberts'}, {'question': 'What film featured the voice talents of Julia Roberts, Steve Buscemi, and Oprah Winfrey?', 'answer': "Charlotte's Web", 'category': 'Julia Roberts'}, {'question': "In Charlie Wilson's War, Joanne Herring, played by Julia Roberts, helps the title character and the resistance movement in what country?", 'answer': 'Afghanistan', 'category': 'Julia Roberts'}, {'question': 'Who directed The Incredibles?', 'answer': 'Brad Bird', 'category': 'Animated'}, {'question': 'In the Disney animated film Moana, which character turns into a Manta Ray?', 'answer': 'Gramma Tala', 'category': 'Animated'}, {'question': "In Surf's Up, who was the lead voice of the penguin Cody?", 'answer': 'Shia LaBeouf', 'category': 'Animated'}, {'question': "The main characters in 2005's Madagascar start the film as residents of what world-famous zoo?", 'answer': 'the Central Park Zoo', 'category': 'Animated'}, {'question': 'Loki teases Thor by briefly taking the form of what Avenger in Thor: The Dark World?', 'answer': 'Captain America', 'category': 'Comic Book'}, {'question': 'Justin Long, Ryan Reynolds, and Anna Faris all work at the restaurant Shenaniganz in what comedy?', 'answer': 'Waiting...', 'category': '2000s'}, {'question': "In Look Who's Talking, who plays James, the cab driver who ultimately becomes Mikey's stepfather?", 'answer': 'John Travolta', 'category': 'Rom-Coms'}, {'question': 'In Caddyshack, who played the lead role of Danny?', 'answer': "Michael O'Keefe", 'category': 'Comedies'}, {'question': 'In Enemy of the State, who plays NSA official Thomas Brian Reynolds, who orchestrates the murder of a U.S. congressman?', 'answer': 'Jon Voight', 'category': 'Will Smith'}, {'question': 'Francis and Large Marge are characters in what 80s movie based on The Bicycle Thief?', 'answer': "Pee-wee's Big Adventure", 'category': '1980s'}, {'question': 'What movie based on a 1960s television series features a villanous Sean Connery in a teddy bear suit?', 'answer': 'The Avengers', 'category': 'N/A'}, {'question': 'Name the Nicholas Sparks movie that stars Shane West and Mandy Moore.', 'answer': 'A Walk to Remember', 'category': 'N/A'}, {'question': 'Flora, Fauna, and Merryweather are characters from what classic Disney film?', 'answer': 'Sleeping Beauty', 'category': 'Animated'}, {'question': 'How many characters does Mike Myers play in Austin Powers: The Spy Who Shagged Me?', 'answer': '3 characters (Austin Powers, Dr. Evil, Fat Bastard)', 'category': 'Comedies'}, {'question': 'Who plays Christof, the mastermind and creator behind The Truman Show in The Truman Show?', 'answer': 'Ed Harris', 'category': 'Dramas'}, {'question': "Who plays the lead Rachel Keller in 2002's The Ring?", 'answer': 'Naomi Watts', 'category': 'Horror/Thriller'}, {'question': 'Who directed Tom Cruise in Mission: Impossible 2?', 'answer': 'John Woo', 'category': 'Action/Adventure'}, {'question': 'Who plays Lt. Aldo Raine, the leader of the Inglourious Basterds, in Inglourious Basterds?', 'answer': 'Brad Pitt', 'category': 'Famous Actors & Actresses'}, {'question': 'Who plays David Norris, an ambitious politician who battles against fate itself to be with the woman he loves, in The Adjustment Bureau?', 'answer': 'Matt Damon', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Robert Rodriguez directed all four films in which family-friendly spy franchise?', 'answer': 'Spy Kids', 'category': 'Family'}, {'question': "What is the name of Woody's trusty steed that he first meets in Toy Story 2?", 'answer': 'Bullseye', 'category': 'Pixar'}, {'question': "Who voiced Charlie, Dory's father, in Finding Dory?", 'answer': 'Eugene Levy', 'category': 'Pixar'}, {'question': 'What is the name of the daughter that can turn invisible in The Incredibles?', 'answer': 'Violet Parr', 'category': 'Pixar'}, {'question': "What is the number on Lightning McQueen's car in Cars?", 'answer': '95', 'category': 'Pixar'}, {'question': "What kind of candy distracts Heimlich the caterpillar during his circus performance in A Bug's Life?", 'answer': 'candy corn', 'category': 'Pixar'}, {'question': 'From what state did Riley and her family move from in Inside Out?', 'answer': 'Minnesota', 'category': 'Pixar'}, {'question': 'Who directed the three The Hangover films?', 'answer': 'Todd Phillips', 'category': 'Comedies'}, {'question': 'What comedy features Matt Dillon doing CPR on a dog?', 'answer': "There's Something About Mary", 'category': 'Comedies'}, {'question': 'In 21 Jump Street, Schmidt earns himself a lead role in what musical at the school?', 'answer': 'Peter Pan', 'category': 'Comedies'}, {'question': 'Simon Pegg and Nick Frost are on a 12 bar pub crawl in what Edgar Wright comedy?', 'answer': "The World's End", 'category': 'Comedies'}, {'question': 'Who plays Roland Sharp, a Texas Ranger tasked with going undercover to protect a group of cheerleaders in Man of the House?', 'answer': 'Tommy Lee Jones', 'category': 'Comedies'}, {'question': 'In the movie Elf, Buddy leaves the North Pole to meet his father Walter, whose office is located in what iconic building?', 'answer': 'the Empire State Building', 'category': 'Comedies'}, {'question': "What is the first name of Leonardo DiCaprio's character in The Great Gatsby?", 'answer': 'Jay', 'category': 'Leonardo DiCaprio'}, {'question': 'Who played Merlin in Transformers: The Last Knight?', 'answer': 'Stanley Tucci', 'category': 'New Releases'}, {'question': "Who plays Shia LaBeouf's mother in the 2007 thriller Disturbia?", 'answer': 'Carrie Anne-Moss', 'category': 'Horror/Thriller'}, {'question': "You'll find characters by the names of Chief Bogo, Nick Wilde, and Judy Hopps in what animated film?", 'answer': 'Zootopia', 'category': 'Animated'}, {'question': 'In Happy Gilmore, who plays Hal L., the sadistic orderly running the nursing home?', 'answer': 'Ben Stiller', 'category': 'Comedies'}, {'question': 'Who directed Black Swan?', 'answer': 'Darren Aronofsky', 'category': 'Dramas'}, {'question': "In 2017's Split, how many girls are kidnapped at the beginning of the film?", 'answer': '3 girls (Casey, Claire, Marcia)', 'category': 'Horror/Thriller'}, {'question': 'What does John McClane use to swing down from the top of the tower to avoid the explosion in Die Hard?', 'answer': 'a fire hose', 'category': 'Action/Adventure'}, {'question': "What was the name of Doc Brown's dog in 1985's Back to the Future?", 'answer': 'Einstein', 'category': '1980s'}, {'question': 'Besides Leonard Nimoy, who plays Mr. Spock in the rebooted Star Trek movie series?', 'answer': 'Zachary Quinto', 'category': 'Fantasy/Sci-Fi'}, {'question': "In The Devil Wears Prada, what star of TV's The Mentalist plays Christian Thompson, a handsome writer that Anne Hathaway's character sleeps with during her trip to Paris?", 'answer': 'Simon Baker', 'category': 'Rom-Coms'}, {'question': 'What seminal drama marked the first movie for Ice Cube in an acting role?', 'answer': 'Boyz n the Hood', 'category': 'Coming of Age'}, {'question': "In the movie The Perks of Being a Wallflower, who played Charlie's English teacher and mentor, Mr. Anderson?", 'answer': 'Paul Rudd', 'category': 'Coming of Age'}, {'question': "In 1987's Adventures in Babysitting, who is credited as playing Thor?", 'answer': "Vincent D'Onofrio", 'category': 'Coming of Age'}, {'question': 'Who directed Joseph Gordon-Levitt in 500 Days of Summer?', 'answer': 'Marc Webb', 'category': 'Coming of Age'}, {'question': 'Who directed Natalie in Léon: The Professional?', 'answer': 'Luc Besson', 'category': 'Natalie Portman'}, {'question': "Natalie's character lives with epilepsy in what film?", 'answer': 'Garden State', 'category': 'Natalie Portman'}, {'question': 'Released in 2004, what was the first film for which Natalie Portman received her first Oscar nomination?', 'answer': 'Closer', 'category': 'Natalie Portman'}, {'question': 'Natalie Portman describes what comedy title character as "almost too good-looking" during a short cameo?', 'answer': 'Zoolander', 'category': 'Natalie Portman'}, {'question': 'Who voiced the "Boss Baby" in The Boss Baby?', 'answer': 'Alec Baldwin', 'category': 'New Releases'}, {'question': 'Who plays Goose in Top Gun?', 'answer': 'Anthony Edwards', 'category': '1980s'}, {'question': "Who played the manager of the Oakland A's in Moneyball?", 'answer': 'Philip Seymour Hoffman', 'category': 'Sports'}, {'question': 'In The Green Mile, who plays the prison warden, Hal Moores?', 'answer': 'James Cromwell', 'category': 'Tom Hanks'}, {'question': 'Prince Phillip is the prince from what Disney animated classic?', 'answer': 'Sleeping Beauty', 'category': 'Animated'}, {'question': "Name the actress that starred opposite Harrison Ford and Daniel Craig as Ella in Jon Favreau's 2011 sci-fi western, Cowboys & Aliens.", 'answer': 'Olivia Wilde', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who directed 2008's The Wrestler?", 'answer': 'Darren Aronofsky', 'category': 'Dramas'}, {'question': 'In what 90s horror film will you hear the quote "Do you like scary movies?"?', 'answer': 'Scream', 'category': 'Horror/Thriller'}, {'question': "Who played Jane Porter Clayton in 2016's The Legend of Tarzan?", 'answer': 'Margot Robbie', 'category': 'Action/Adventure'}, {'question': 'Spider-Man 3 was released in what year?', 'answer': '2007', 'category': 'Release Dates'}, {'question': 'Which one of the following 1989 films was not nominated for Best Picture: Dead Poets Society, Field of Dreams, or Born on the Fourth of July?', 'answer': 'All three were nominated.', 'category': 'Oscars'}, {'question': "What comedy legend starred as Cardinal Glick in Kevin Smith's Dogma?", 'answer': 'George Carlin', 'category': 'Comedies'}, {'question': 'A businesswoman is pursued by a psychopath after being locked in a parking garage on Christmas Eve in what 2007 film?', 'answer': 'P2', 'category': 'Horror'}, {'question': "2001's The Others is set following the end of what war?", 'answer': 'World War II', 'category': 'Horror'}, {'question': 'Whose directorial debut was the original The Last House on the Left?', 'answer': 'Wes Craven', 'category': 'Horror'}, {'question': "In 1999's Stir of Echoes, Illeana Douglas hypnotizes her brother-in-law Tom played by whom?", 'answer': 'Kevin Bacon', 'category': 'Horror'}, {'question': "What classic American actor, most known for his heroic roles, played the villain in Sergio Leone's Once Upon a Time in the West?", 'answer': 'Henry Fonda', 'category': 'Westerns'}, {'question': 'Clint Eastwood plays a former lawman who hunts down the men who left him to die after accusing him of rustling a herd of cattle in what 1960s western?', 'answer': "Hang 'Em High", 'category': 'Westerns'}, {'question': "John Wayne teams up with what Hollywood legend to steal a large shipment of gold in 1967's The War Wagon?", 'answer': 'Kirk Douglas', 'category': 'Westerns'}, {'question': "What actor starred as the title character in the 1966 spaghetti western Django and also made a cameo appearance in Quentin Tarantino's Django Unchained?", 'answer': 'Franco Nero', 'category': 'Westerns'}, {'question': 'Name the 1962 movie with the following characters: Prince Faisal, Sherif Ali, and Auda abu Tayi.', 'answer': 'Lawrence of Arabia', 'category': 'Classics'}, {'question': 'What year saw the release of the disaster film 2012?', 'answer': '2009', 'category': 'Disaster'}, {'question': "In 1994's The Pagemaster, young Richard befriends three anthropomorphic books. Name one of the three that he befriends.", 'answer': 'Adventure, Horror, Fantasy', 'category': '1990s'}, {'question': 'Stanley Kubrick has been nominated for Best Director four times. Name two of the movies he was nominated for.', 'answer': 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb, 2001: A Space Odyssey, A Clockwork Orange, Barry Lyndon', 'category': 'Oscars'}, {'question': 'Which Oscar-winning actor played Russian revolutionary Leon Trotsky in Frida?', 'answer': 'Geoffrey Rush', 'category': 'Biopics'}, {'question': 'What 2015 sci-fi film starred George Clooney, Hugh Laurie, and Britt Robertson?', 'answer': 'Tomorrowland', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What comedy is a fictional story that follows the real-life "fixer" Eddie Mannix working in the Hollywood film industry in the 1950s investigating a missing actor?', 'answer': 'Hail, Caesar!', 'category': 'Comedies'}, {'question': 'Domhnall Gleeson, a young wannabe musician, joins an eccentric pop band led by a mysterious singer in what film?', 'answer': 'Frank', 'category': 'Dramas'}, {'question': 'What 90s thriller had the tagline "Paul Sheldon used to write for a living. Now, he\'s writing to stay alive."?', 'answer': 'Misery', 'category': 'Horror/Thriller'}, {'question': 'Who took over the role of Jack Ryan in the 2014 spy thriller reboot Jack Ryan; Shadow Recruit?', 'answer': 'Chris Pine', 'category': 'Action/Adventure'}, {'question': 'What actor was nominated for an Academy Award for his portrayal of James "Jem" Coughlin in 2010\'s The Town?', 'answer': 'Jeremy Renner', 'category': 'Crime'}, {'question': 'Who composed the score for The Incredibles?', 'answer': 'Michael Giacchino', 'category': 'Animated'}, {'question': 'Who directed The Grand Budapest Hotel?', 'answer': 'Wes Anderson', 'category': 'Directors'}, {'question': 'What is the name of the Dwarven king of Moria, whose tomb is found in The Fellowship of the Ring?', 'answer': 'Balin', 'category': 'Fantasy/Sci-Fi'}, {'question': "In 1981's Clash of the Titans, Perseus uses what to turn the Kraken to stone?", 'answer': "Medusa's head", 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Flash Gordon, what football team does Flash play for?', 'answer': 'the New York Jets', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who summed up Luke\'s quest to become a Jedi Knight as "delusions of grandeur"?', 'answer': 'Han Solo (in Return of the Jedi)', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what Scorsese film will you find the character of Max Cady?', 'answer': 'Cape Fear', 'category': 'Martin Scorsese'}, {'question': 'Cybill Shepherd plays campaign worker Betsy in which Scorsese film?', 'answer': 'Taxi Driver', 'category': 'Martin Scorsese'}, {'question': 'Who stars as New York City paramedic Frank Pierce in Bringing Out the Dead?', 'answer': 'Nicolas Cage', 'category': 'Martin Scorsese'}, {'question': 'What Scorsese film takes place in the Five Points section of New York City?', 'answer': 'Gangs of New York', 'category': 'Martin Scorsese'}, {'question': 'What film starring Jamie Foxx, Chris Cooper, and Jennifer Garner is about a team of government agents who are sent to investigate the bombing of an American facility in the Middle East?', 'answer': 'The Kingdom', 'category': '2000s'}, {'question': 'This Steven Spielberg film came out in 1982 and starred Dee Wallace, Drew Barrymore, and Henry Thomas.', 'answer': 'E.T. the Extra-Terrestrial', 'category': 'N/A'}, {'question': 'Who played Mark Zuckerberg in The Social Network?', 'answer': 'Jesse Eisenberg', 'category': 'N/A'}, {'question': 'Name the 1995 movie starring Gene Hackman and Denzel Washington.', 'answer': 'Crimson Tide', 'category': 'N/A'}, {'question': 'What was the nationality of the terrorists in Die Hard?', 'answer': 'German', 'category': 'N/A'}, {'question': "This actor starred as detective Axel Foley in 1984's Beverly Hills Cop.", 'answer': 'Eddie Murphy', 'category': 'N/A'}, {'question': 'Who directed Flags of Our Fathers?', 'answer': 'Clint Eastwood', 'category': 'Directors'}, {'question': 'Tom Hardy plays identical twin gangsters who terrorize London during the 1960s in what film?', 'answer': 'Legend', 'category': 'Crime'}, {'question': "What movie cast Angelina Jolie as the mother of Crispin Glover's character?", 'answer': 'Beowulf', 'category': 'Angelina Jolie'}, {'question': 'What 2012 film, written by Joss Whedon and Drew Goddard, starred Chris Hemsworth and Kristen Connolly?', 'answer': 'The Cabin in the Woods', 'category': 'Horror/Thriller'}, {'question': "What 2016 film, about a man who takes a live broadcast hostage, starred Julia Roberts, George Clooney, and Jack O'Connell?", 'answer': 'Money Monster', 'category': 'Dramas'}, {'question': "What actress played Jadis the White Witch in 2005's The Chronicles of Narnia?", 'answer': 'Tilda Swinton', 'category': 'Family'}, {'question': "What is the name of Mrs. Potts' son in 1991's Beauty and the Beast?", 'answer': 'Chip', 'category': 'Animated'}, {'question': "What actor played down-on-his-luck private eye Holland March in Shane Black's 2016 film The Nice Guys?", 'answer': 'Ryan Gosling', 'category': 'Action/Adventure'}, {'question': "What actress played Jupiter Jones in 2015's Jupiter Ascending?", 'answer': 'Mila Kunis', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What Best Picture nominee had the tagline "She brought a small town to its feet and a huge corporation to its knees."?', 'answer': 'Erin Brockovich', 'category': 'Taglines'}, {'question': "In Meet the Parents, what is the name of the Byrnes' family cat?", 'answer': 'Jinx', 'category': 'Comedies'}, {'question': 'What classic horror movie ends with this final line of dialogue: "Why, she wouldn\'t even harm a fly..."?', 'answer': 'Psycho', 'category': 'Quotes'}, {'question': '"I offered you a chance to be a cop, and you blew it!" is a line from which 1997 crime film?', 'answer': 'Cop Land', 'category': 'Quotes'}, {'question': 'In what 90s comedy will you hear the quote "You ain\'t cool, unless you pee your pants."?', 'answer': 'Billy Madison', 'category': 'Quotes'}, {'question': 'What 90s film\'s last lines are "And like that, poof. He\'s gone."?', 'answer': 'The Usual Suspects', 'category': 'Quotes'}, {'question': 'Name the 2010 thriller from the quote: "I gotta get off this rock, Chuck. Get back to the mainland. Whatever the hell\'s going on here, it\'s bad.".', 'answer': 'Shutter Island', 'category': 'Quotes'}, {'question': 'What movie contains the quote "Define irony. Bunch of idiots dancing on a plane to a song made famous by a band that died in a plane crash."?', 'answer': 'Con Air', 'category': 'Quotes'}, {'question': 'Which Tarantino movie stars both B. J. Novak and Til Schweiger as side characters?', 'answer': 'Inglourious Basterds', 'category': 'Quentin Tarantino'}, {'question': 'In the Kill Bill films, Pai Mei was the head priest of what clan?', 'answer': 'White Lotus', 'category': 'Quentin Tarantino'}, {'question': 'In Death Proof, for which actor does Stuntman Mike say he doubled?', 'answer': 'Lee Majors', 'category': 'Quentin Tarantino'}, {'question': 'In Jackie Brown, Ordell Robbie is a Los Angeles black market gun runner that bailed one of his couriers, Beaumont Livingston, from jail. Who plays Beaumont?', 'answer': 'Chris Tucker', 'category': 'Quentin Tarantino'}, {'question': "In Pulp Fiction, what does Vincent complain about when he goes to Lance's house to buy drugs?", 'answer': 'his car was keyed', 'category': 'Quentin Tarantino'}, {'question': "In The Hateful Eight, what job did Tim Roth's character tell Kurt Russell that he had?", 'answer': 'a hangman', 'category': 'Quentin Tarantino'}, {'question': "Who played the school teacher turned outlaw in 1965's Cat Ballou?", 'answer': 'Jane Fonda', 'category': 'Westerns'}, {'question': "In Collateral Beauty, to cope with his daughter's death, Smith writes abstract letters to Love, Death, and ___?", 'answer': 'Time', 'category': 'Will Smith'}, {'question': "Who plays Hansel, Ben Stiller's rival mate in Zoolander?", 'answer': 'Owen Wilson', 'category': 'N/A'}, {'question': 'What is the name of the crime lord with the mythical reputation in The Usual Suspects?', 'answer': 'Keyser Söze', 'category': 'N/A'}, {'question': "Morgan Spurlock packs on pounds while living on McDonald's in what film?", 'answer': 'Super Size Me', 'category': 'N/A'}, {'question': 'In The Terminator, who plays Sarah Connor?', 'answer': 'Linda Hamilton', 'category': 'N/A'}, {'question': "Who directed 1984's Dune?", 'answer': 'David Lynch', 'category': 'N/A'}, {'question': "You'll find the villainous and greedy Governor Ratcliffe in what Disney film?", 'answer': 'Pocahontas', 'category': 'Animated'}, {'question': "This action star stole the show playing superagent Rick Ford opposite Melissa McCarthy in 2015's Spy.", 'answer': 'Jason Statham', 'category': 'Comedies'}, {'question': 'Who plays Christian Grey in the Fifty Shades series?', 'answer': 'Jamie Dornan', 'category': 'Dramas'}, {'question': 'What M. Night Shyamalan film is about creatures that attack in the woods, starring Joaquin Phoenix, Adrien Brody, and Bryce Dallas Howard?', 'answer': 'The Village', 'category': 'Horror/Thriller'}, {'question': 'In what 2016 film does Ben Affleck play a math savant?', 'answer': 'The Accountant', 'category': 'Action/Adventure'}, {'question': 'January Jones and Kevin Bacon perform the villain roles in which superhero film?', 'answer': 'X-Men: First Class', 'category': 'Comic Book'}, {'question': "Name the actor that played John Carter in Disney's John Carter.", 'answer': 'Taylor Kitsch', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In which film does Tom Hanks play the character Jimmy Dugan?', 'answer': 'A League of Their Own', 'category': 'Famous Actors & Actresses'}, {'question': 'In The Dark Knight Rises, once Bane takes control of Gotham City, Commissioner Gordon has a sentencing trial. Which Dark Knight trilogy villain serves as judge of this trial?', 'answer': 'Scarecrow', 'category': 'Comic Book'}, {'question': "What western star played Clark Kent's father in 1978's Superman?", 'answer': 'Glenn Ford', 'category': 'Comic Book'}, {'question': 'In The Avengers, what S.H.I.E.L.D. agent does Black Widow say first brought her into the fold?', 'answer': 'Hawkeye', 'category': 'Comic Book'}, {'question': 'In Fantastic Four: Rise of the Silver Surfer, who was the first character to actually speak to the Silver Surfer?', 'answer': 'the Human Torch', 'category': 'Comic Book'}, {'question': 'Who played the nefarious Neville Sinclair in the 1991 comic book film The Rocketeer?', 'answer': 'Timothy Dalton', 'category': 'Comic Book'}, {'question': 'In Ninja Turtles II: The Secret of the Ooze, Donnie created anti-mutagen to defeat the mutants Shredder created. In what junk food did the Turtles hide the anti-mutagen in to trick their enemies into eating it?', 'answer': 'donuts', 'category': 'Comic Book'}, {'question': "Who played Uncle Fester in 1991's The Addams Family?", 'answer': 'Christopher Lloyd', 'category': 'Comedies'}, {'question': 'What Leslie Nielsen family comedy ended with a disclaimer that it was not meant to be an accurate portrayal of nearsighted or blind people?', 'answer': 'Mr. Magoo', 'category': 'Comedies'}, {'question': 'Who played the title character in The Incredible Burt Wonderstone?', 'answer': 'Steve Carell', 'category': 'Comedies'}, {'question': 'In what comedy does Jim Gaffigan get "meowed" at by a police officer?', 'answer': 'Super Troopers', 'category': 'Comedies'}, {'question': 'Who played the Stranger, a mysterious one-legged character the band meets at a diner in Tenacious D in The Pick of Destiny?', 'answer': 'Tim Robbins', 'category': 'Comedies'}, {'question': "Who played Gulliver in 2010's Gulliver's Travels?", 'answer': 'Jack Black', 'category': 'Comedies'}, {'question': 'What inept detective was played by Peter Sellers, Alan Arkin, and Steve Martin?', 'answer': "Jacques Clouseau (in 1964's The Pink Panther, A Shot in the Dark, The Return of the Pink Panther, The Pink Panther Strikes Again, Revenge of the Pink Panther, Trail of the Pink Panther; Inspector Clousseau; 2006's The Pink Panther, The Pink Panther 2)", 'category': 'Comedies'}, {'question': "What was the name of Luke's aunt in Star Wars: A New Hope?", 'answer': 'Beru Whitesun Lars', 'category': '1970s'}, {'question': 'In Men at Work, Carl and James dream of owning what kind of shop?', 'answer': 'a surf shop', 'category': 'Charlie Sheen'}, {'question': 'What famous thriller director wrote the screenplay for the 1999 family film Stuart Little?', 'answer': 'M. Night Shyamalan', 'category': 'Directors'}, {'question': "In Sam Raimi's Spider-Man 3, we see Peter Parker deal with three different villains. Name two of them.", 'answer': 'the New Goblin, the Sandman, Venom', 'category': 'Comic Book'}, {'question': 'Name three of the five films that Leonardo DiCaprio has done with Martin Scorsese.', 'answer': 'Gangs of New York, The Aviator, The Departed, Shutter Island, The Wolf of Wall Street', 'category': 'Leonardo DiCaprio'}, {'question': "What 1993 movie stars Sean Connery and Wesley Snipes as detectives who investigate a call girl's murder in a Japanese corporation?", 'answer': 'Rising Sun', 'category': 'Dramas'}, {'question': 'What Scottish actor voiced Stoick the Vast, the father of HIccup, in the How to Train your Dragon films?', 'answer': 'Gerard Butler', 'category': 'Animated'}, {'question': 'Billy Wilder directed Tony Curtis and Jack Lemmon as cross-dressing musicians in which 1959 romantic comedy?', 'answer': 'Some Like It Hot', 'category': 'Comedies'}, {'question': 'Who plays Ivan Locke in the 2014 film Locke?', 'answer': 'Tom Hardy', 'category': 'Dramas'}, {'question': "What actress played Rachel Watson, a woman who becomes obsessed with her neighbors in 2016's The Girl on the Train?", 'answer': 'Emily Blunt', 'category': 'Horror/Thriller'}, {'question': 'Who played the villainous Poppy in Kingsman: The Golden Circle?', 'answer': 'Julianne Moore', 'category': 'Action/Adventure'}, {'question': "Who played the other male co-lead alongside Colin Firth in 2001's Bridget Jones' Diary?", 'answer': 'Hugh Grant', 'category': 'Rom-Coms'}, {'question': 'Who played Bad Ape in War for the Planet of the Apes?', 'answer': 'Steve Zahn', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What film released wide in 2009 won Best Picture at the 82nd Academy Awards?', 'answer': 'The Hurt Locker', 'category': 'Oscars'}, {'question': 'Arnold finds an illegal clone of himself in what film?', 'answer': 'The 6th Day', 'category': 'Sly & Arnie'}, {'question': 'Who co-starred with Sylvester Stallone in Rhinestone?', 'answer': 'Dolly Parton', 'category': 'Sly & Arnie'}, {'question': 'Damon Killian is the villain in which Arnie film?', 'answer': 'The Running Man', 'category': 'Sly & Arnie'}, {'question': "Who played Arnie's daughter in True Lies?", 'answer': 'Eliza Dushku', 'category': 'Sly & Arnie'}, {'question': 'What famous singer co-starred with John Wayne in Rio Bravo and The Sons of Katie Elder?', 'answer': 'Dean Martin', 'category': 'Westerns'}, {'question': "In 2016's The Magnificent Seven, who played the soft-spoken mountain man and tracker Jack Horne?", 'answer': "Vincent D'Onofrio", 'category': 'Westerns'}, {'question': "Who played ex-Confederate Colonel and co-lead to John Wayne's ex-Union Colonel in 1969's The Undefeated?", 'answer': 'Rock Hudson', 'category': 'Westerns'}, {'question': 'What Native American tribe does Kevin Costner develop a relationship with in Dances with Wolves?', 'answer': 'the Sioux', 'category': 'Westerns'}, {'question': 'Who plays Greg Sestero in The Disaster Artist?', 'answer': 'Dave Franco', 'category': 'New Releases'}, {'question': 'Name the actor who faced off against Liberty Valance first with his law books and then with a gun in The Man Who Shot Liberty Valance.', 'answer': 'James Stewart', 'category': 'Westerns'}, {'question': 'What is the name of the boy that owns Woody and Buzz in Toy Story?', 'answer': 'Andrew "Andy" Davis', 'category': 'Animated'}, {'question': 'In which 2015 comedy does Melissa McCarthy play a CIA analyst who becomes a heroic secret agent?', 'answer': 'Spy', 'category': 'Spy'}, {'question': 'What 1996 disaster thriller stars Helen Hunt as a meteorologist?', 'answer': 'Twister', 'category': 'Dramas'}, {'question': 'In what film does Jason Voorhees go to space?', 'answer': 'Jason X', 'category': 'Horror/Thriller'}, {'question': 'How many James Bond films starred Timothy Dalton as Agent 007?', 'answer': '2 (The Living Daylights, Licence to Kill)', 'category': 'Action/Adventure'}, {'question': 'Who directed Zero Dark Thirty?', 'answer': 'Kathryn Bigelow', 'category': 'Directors'}, {'question': "What was the princess' name in The Princess Bride?", 'answer': 'Buttercup', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What Tarantino movie had the following tagline: "Life, liberty and the pursuit of vengeance."?', 'answer': 'Django Unchained', 'category': 'Taglines'}, {'question': 'A murder mystery brings together a private eye, a struggling actress, and a thief in Kiss Kiss Bang Bang. Who plays the struggling actress?', 'answer': 'Michelle Monaghan', 'category': '2000s'}, {'question': 'Dwayne Johnson as U.S. Army Special Forces sergeant Chris Vaughn returns to his small town home only to find it overrun by crime and corruption in what 2004 film?', 'answer': 'Walking Tall', 'category': '2000s'}, {'question': "This 2006 comedy drama starred Joel Edgerton as a young man trying to save his family business since his father's death.", 'answer': 'Kinky Boots', 'category': '2000s'}, {'question': 'Who plays accomplished swordsman Li Mu Bai in Crouching Tiger, Hidden Dragon?', 'answer': 'Chow Yun-fat', 'category': '2000s'}, {'question': 'Jack Nicholson was nominated for an Academy Award three years in a row for The Last Detail, Chinatown, and what movie?', 'answer': "One Flew Over the Cuckoo's Nest", 'category': 'Oscars'}, {'question': 'The Vietnam War film Coming Home was nominated for Best Picture in 1979. What other Vietnam War movie did it lose to?', 'answer': 'The Deer Hunter', 'category': 'Oscars'}, {'question': 'Not counting his Honorary Award, Paul Newman won his only Oscar for his performance in what film?', 'answer': 'The Color of Money', 'category': 'Oscars'}, {'question': 'While Argo won Best Picture for films released in 2012, Ben Affleck was famously not nominated for Best Director. Who won Best Director that year?', 'answer': 'Ang Lee (for Life of Pi)', 'category': 'Oscars'}, {'question': 'Who provides the bubbly voice of Joy in Inside Out?', 'answer': 'Amy Poehler', 'category': 'Pixar'}, {'question': 'Name the two films that feature both Tom Cruise and Cameron Diaz.', 'answer': 'Vanilla Sky, Knight and Day', 'category': 'Tom Cruise'}, {'question': "In The Devil's Advocate, who plays Keanu Reeves' new boss and the Devil himself?", 'answer': 'Al Pacino', 'category': 'Dramas'}, {'question': "Bill Murray starred in 1993's Groundhog Day opposite which actress?", 'answer': 'Andie MacDowell', 'category': 'Comedies'}, {'question': 'This 2006 M. Night Shyamalan film that revolved around a swimming pool starred Bryce Dallas Howard, Paul Giamatti, and Jeffrey Wright.', 'answer': 'Lady in the Water', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Lord Humungus is the name of the main villain from which film in the Mad Max franchise?', 'answer': 'The Road Warrior', 'category': 'Action/Adventure'}, {'question': 'Who voiced the lead character Emmet in The Lego Movie?', 'answer': 'Chris Pratt', 'category': 'Animated'}, {'question': 'Who plays Inigo Montoya in the cult classic The Princess Bride?', 'answer': 'Mandy Patinkin', 'category': '1980s'}, {'question': 'Ryan Reynolds, Rebecca Ferguson, and Jake Gyllenhaal starred in this horror thriller that took place on the International Space Station.', 'answer': 'Life', 'category': 'Horror/Thriller'}, {'question': 'Name the last film directed by Stanley Kubrick.', 'answer': 'Eyes Wide Shut', 'category': 'Directors'}, {'question': "In order to achieve their dream of opening a recording studio, two friends must win their city's dance contest in what 2000s film?", 'answer': 'You Got Served', 'category': 'Dance'}, {'question': "In Save the Last Dance, the second piece of Sara's Juilliard audition must be in what dancing style?", 'answer': 'contemporary', 'category': 'Dance'}, {'question': 'In The Full Monty, who played Gaz Schofield, a former steelworker who forms a striptease group in hopes of making enough money to pay his child support?', 'answer': 'Robert Carlyle', 'category': 'Dance'}, {'question': 'Who directed Black Swan?', 'answer': 'Darren Aronofsky', 'category': 'Dance'}, {'question': 'What dance movie is set against the backdrop of a coal mining town?', 'answer': 'Billy Elliot', 'category': 'Dance'}, {'question': 'Violet works at a pizza restaurant before moving to New York in this dance film.', 'answer': 'Coyote Ugly', 'category': 'Dance'}, {'question': 'Clint Eastwood plays a veteran detective who gets stuck with a rookie cop, played by Charlie Sheen, to chase down a German crook in what film?', 'answer': 'The Rookie', 'category': 'Charlie Sheen'}, {'question': "What is the profession of Charlie Sheen's character in Machete Kills?", 'answer': 'the President of the United States', 'category': 'Charlie Sheen'}, {'question': "Which film saw Charlie Sheen join forces with Kiefer Sutherland, Oliver Platt, and Chris O'Donnell?", 'answer': 'The Three Musketeers', 'category': 'Charlie Sheen'}, {'question': 'What team do the Indians defeat to win the pennant and advance to the playoffs in Major League?', 'answer': 'the New York Yankees', 'category': 'Charlie Sheen'}, {'question': "What state is the setting for the action hit 1984's Red Dawn?", 'answer': 'Colorado', 'category': 'Charlie Sheen'}, {'question': "Who directed Charlie Sheen in 1987's Wall Street?", 'answer': 'Oliver Stone', 'category': 'Charlie Sheen'}, {'question': "Cameron Diaz's love interest Stanley Ipkiss is from what film?", 'answer': 'The Mask', 'category': 'Cameron Diaz'}, {'question': 'Carlos Gallardo played the title character in what movie?', 'answer': 'El Mariachi', 'category': 'Action/Adventure'}, {'question': "Who played the mother in 1982's E.T.?", 'answer': 'Dee Wallace', 'category': 'Steven Spielberg'}, {'question': "In 2014's Frank, who plays musician and Frank's aggressive sidekick Clara Wagner?", 'answer': 'Maggie Gyllenhaal', 'category': 'Dramas'}, {'question': 'Who played the main child in Mud with Matthew McConaughey?', 'answer': 'Tye Sheridan', 'category': 'Matthew McConaughey'}, {'question': "What is the name of Pinocchio's sidekick who helps act as his conscience throughout the 1940 film?", 'answer': 'Jiminy Cricket', 'category': 'Animated'}, {'question': "In 2006's Nacho Libre, what did Jack Black's character do for a living before becoming a wrestler?", 'answer': 'a monastery cook', 'category': 'Comedies'}, {'question': 'Who directed Nicole Kidman and Tom Cruise in Eyes Wide Shut?', 'answer': 'Stanley Kubrick', 'category': 'Dramas'}, {'question': "Who directed 1984's A Nightmare on Elm Street?", 'answer': 'Wes Craven', 'category': 'Horror/Thriller'}, {'question': 'Who played Jack Ryan in The Hunt for Red October?', 'answer': 'Alec Baldwin', 'category': 'Action/Adventure'}, {'question': "What city is the setting for 2001's Amélie?", 'answer': 'Paris', 'category': 'Rom-Coms'}, {'question': 'Who plays Scotty in the rebooted Star Trek movie series?', 'answer': 'Simon Pegg', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What film stars Eddie Murphy, James Earl Jones as his father, and Arsenio Hall as his best friend?', 'answer': 'Coming to America', 'category': '1980s'}, {'question': "What on-screen tough girl played combat pilot Trudy Chacón, who is sympathetic to the Na'vi, in Avatar?", 'answer': 'Michelle Rodriguez', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played the beautiful Persephone in The Matrix Reloaded and The Matrix Revolutions?', 'answer': 'Monica Bellucci', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays the eccentric pilot and crop duster in Independence Day?', 'answer': 'Randy Quaid', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who starred as Marion Snow, a convict in a maximum security space penitentiary in the 2012 sci-fi action film Lockout?', 'answer': 'Guy Pearce', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays the thief that Ethan Hunt recruits and falls in love with in Mission: Impossible 2?', 'answer': 'Thandiwe Newton', 'category': 'Tom Cruise'}, {'question': 'Tom Cruise plays the character of Charlie Babbitt in what 1980s film?', 'answer': 'Rain Man', 'category': 'Tom Cruise'}, {'question': 'What was the name of the hitman played by Tom Cruise in the 2004 film Collateral?', 'answer': 'Vincent', 'category': 'Tom Cruise'}, {'question': 'Tom Cruise dances in his underwear to which song in the 1983 film Risky Business?', 'answer': 'Old Time Rock and Roll', 'category': 'Tom Cruise'}, {'question': "Who played the preacher's wife in the 1996 romantic comedy The Preacher's Wife?", 'answer': 'Whitney Houston', 'category': 'Denzel Washington'}, {'question': 'What year was the horror crossover Freddy vs. Jason released?', 'answer': '2003', 'category': 'Horror/Thriller'}, {'question': 'Which 2002 Disney film is a science-fiction adaptation of a classic Robert Louis Stevenson novel and features the voice talents of Joseph Gordon-Levitt, Emma Thompson, and Martin Short?', 'answer': 'Treasure Planet', 'category': 'Animated'}, {'question': 'What actress played a sexually aggressive dentist in the comedy Horrible Bosses?', 'answer': 'Jennifer Aniston', 'category': 'Comedies'}, {'question': 'Who plays Detective Billy Rosewood in the 1984 movie Beverly Hills Cop?', 'answer': 'Judge Reinhold', 'category': '1980s'}, {'question': "What is the name of the club the group of friends call themselves in 2017's It?", 'answer': 'the Losers Club', 'category': 'Horror/Thriller'}, {'question': 'Aaron Paul stars in which 2014 racing film?', 'answer': 'Need for Speed', 'category': 'Action/Adventure'}, {'question': 'Who portrayed George in the 1997 live-action adaptation of George of the Jungle?', 'answer': 'Brendan Fraser', 'category': 'Family'}, {'question': 'A young man must stop the Lord of Darkness from both destroying daylight and marrying the woman he loves in what 80s fantasy film?', 'answer': 'Legend', 'category': 'Fantasy/Sci-Fi'}, {'question': 'The following three comic book films all came out in 2008. List them in the order of when they were released from earliest to latest: The Dark Knight, Iron Man, The Incredible Hulk.', 'answer': 'Iron Man, The Incredible Hulk, The Dark Knight', 'category': 'Release Dates'}, {'question': 'What 1998 comedy takes place at a graduation party and starred Jennifer Love Hewitt, Ethan Embry, Seth Green, and Lauren Ambrose?', 'answer': "Can't Hardly Wait", 'category': 'N/A'}, {'question': 'Who directed the following classic films: The Philadelphia Story, A Star Is Born, and My Fair Lady?', 'answer': 'George Cukor', 'category': 'Classics'}, {'question': 'Which Akira Kurosawa film predominantly follows two peasants on an adventure?', 'answer': 'The Hidden Fortress', 'category': 'Classics'}, {'question': 'In White Christmas, who sings "If you\'re worried and you can\'t sleep just count your blessings instead of sheep"?', 'answer': 'Bing Crosby', 'category': 'Classics'}, {'question': "Who played Victor Laszlo, Ilsa's husband, in 1943's Casablanca?", 'answer': 'Paul Henreid', 'category': 'Classics'}, {'question': 'How many times did Claude Rains play the role of Jack Griffin, the "Invisible Man"?', 'answer': '1 (in The Invisible Man)', 'category': 'Classics'}, {'question': 'The song "Moon River" was written for what Audrey Hepburn movie?', 'answer': "Breakfast at Tiffany's", 'category': 'Classics'}, {'question': 'What was the first movie to pair Tom Hanks and Sally Field as co-stars?', 'answer': 'Punchline', 'category': '1980s'}, {'question': 'In 1983\'s A Christmas Story, what is the "major award" that the dad receives?', 'answer': "a table lamp in the shape of a woman's leg", 'category': '1980s'}, {'question': "Who plays Ariel's best friend Rusty in 1984's Footloose?", 'answer': 'Sarah Jessica Parker', 'category': '1980s'}, {'question': 'In Blade Runner, which replicant does Deckard retire first?', 'answer': 'Zhora', 'category': '1980s'}, {'question': 'What 80s crime comedy stars John Candy, Eugene Levy, Robert Loggia, and Meg Ryan?', 'answer': 'Armed and Dangerous', 'category': '1980s'}, {'question': "Which actor played Sean Astin's brother, Brand, in The Goonies?", 'answer': 'Josh Brolin', 'category': '1980s'}, {'question': 'What Disney animated movie features the Billy Joel song "Why Should I Worry?"?', 'answer': 'Oliver & Company', 'category': 'Disney'}, {'question': 'Name the corporation that manufactures replicants in Blade Runner.', 'answer': 'the Tyrell Corporation', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the name of Princess Jasmine's pet tiger in Disney's Aladdin?", 'answer': 'Rajah', 'category': 'Animated'}, {'question': "This SNL actress played the lead in 2016's Whiskey Tango Foxtrot.", 'answer': 'Tina Fey', 'category': 'Comedies'}, {'question': 'Who plays the title character in the 2002 action thriller XXX?', 'answer': 'Vin Diesel', 'category': 'Action/Adventure'}, {'question': "Who directed 1984's A Nightmare on Elm Street?", 'answer': 'Wes Craven', 'category': 'Horror/Thriller'}, {'question': "What actress played the diary-writing lead in Bridget Jones's Diary?", 'answer': 'Renée Zellweger', 'category': 'Rom-Coms'}, {'question': 'What actress voices the giant python Kaa in the 2016 live-action remake of The Jungle Book?', 'answer': 'Scarlett Johansson', 'category': 'Family'}, {'question': "Who plays Tom Cruise's commanding officer, Master Sergeant Farell, once he's assigned to the front, in Edge of Tomorrow?", 'answer': 'Bill Paxton', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What movie starred Tom Hardy and Joel Edgerton as brothers competing in a mixed martial arts tournament?', 'answer': 'Warrior', 'category': 'Sports'}, {'question': "In the 2012 Pixar film Brave, eating magic cake turns Merida's mom into what?", 'answer': 'a bear', 'category': 'Pixar'}, {'question': 'What Pixar film was the first to receive a PG rating in the U.S.?', 'answer': 'The Incredibles', 'category': 'Pixar'}, {'question': "In Toy Story 2, we finally meet Buzz's archrival, an evil emperor space villain that goes by what name?", 'answer': 'Zurg', 'category': 'Pixar'}, {'question': 'In Finding Nemo, what does Dory name the baby jellyfish she finds?', 'answer': 'Squishy', 'category': 'Pixar'}, {'question': 'Keira Knightley starred in which feature adapted from a Jane Austen novel?', 'answer': 'Pride & Prejudice', 'category': 'Romance'}, {'question': 'In what film do Ashton Kutcher and Amanda Peet slowly fall in love over the course of seven years?', 'answer': 'A Lot like Love', 'category': 'Romance'}, {'question': 'Where do Landon and Jamie share their first kiss in A Walk to Remember?', 'answer': 'during the school play', 'category': 'Romance'}, {'question': "Who plays David and Gillian's daughter, Rachel, in To Gillian on Her 37th Birthday?", 'answer': 'Claire Danes', 'category': 'Romance'}, {'question': 'Who played the legendary coach in the biographical movie Miracle?', 'answer': 'Kurt Russell', 'category': 'Sports'}, {'question': 'Swingline was the brand of what appliance used by Milton in Office Space?', 'answer': 'a stapler', 'category': 'Comedies'}, {'question': 'Brad Pitt played the Grim Reaper in what 90s romantic comedy?', 'answer': 'Meet Joe Black', 'category': 'Brad Pitt'}, {'question': 'What film, based off the popular app of the same name, included the voice talents of Jason Sudeikis, Josh Gad, Maya Rudolph, and Kate McKinnon?', 'answer': 'The Angry Birds Movie', 'category': 'Animated'}, {'question': 'Schmidt and Jenko are undercover police officers in what comedy franchise?', 'answer': '21 Jump Street', 'category': 'Comedies'}, {'question': 'Who played Lee Harvey Oswald in JFK?', 'answer': 'Gary Oldman', 'category': 'Dramas'}, {'question': "What actress played Casey Becker, the Ghostface killer's first victim in 1996's Scream?", 'answer': 'Drew Barrymore', 'category': 'Horror/Thriller'}, {'question': 'Game of Thrones actor Alfie Allen stars alongside Keanu Reeves in what action film?', 'answer': 'John Wick', 'category': 'Action/Adventure'}, {'question': "Who plays Wesley, the newest member of the fraternity of assassins in 2008's Wanted?", 'answer': 'James McAvoy', 'category': 'Comic Book'}, {'question': 'Who played the Colonel in War for the Planet of the Apes?', 'answer': 'Woody Harrelson', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played Butch Cassidy in Butch Cassidy and the Sundance Kid?', 'answer': 'Paul Newman', 'category': 'Famous Actors & Actresses'}, {'question': 'For what movie did Sigourney Weaver receive her first Oscar nomination?', 'answer': 'Aliens', 'category': 'Oscars'}, {'question': 'What is the only Coen Brothers directed film to win Best Picture at the Oscars?', 'answer': 'No Country for Old Men', 'category': 'Oscars'}, {'question': 'Penélope Cruz has won her only Academy Award for her role in what film?', 'answer': 'Vicky Cristina Barcelona', 'category': 'Oscars'}, {'question': "Leonardo DiCaprio's first Oscar nomination came for What's Eating Gilbert Grape in 1994. Who did he lose to?", 'answer': 'Tommy Lee Jones (for The Fugitive)', 'category': 'Oscars'}, {'question': 'Who is the only actress to win an Oscar for playing a man?', 'answer': 'Linda Hunt (for The Year of Living Dangerously)', 'category': 'Oscars'}, {'question': 'Name the movie for which actor Frank Langella was nominated for an Academy Award.', 'answer': 'Frost/Nixon', 'category': 'Oscars'}, {'question': 'Name the 90s rom-com that ends with Andie MacDowell telling Hugh Grant "I do.".', 'answer': 'Four Weddings and a Funeral', 'category': 'Rom-Coms'}, {'question': 'In Legally Blonde, why does Elle Woods initially attend Harvard Law School?', 'answer': 'to win back her ex-boyfriend', 'category': 'Rom-Coms'}, {'question': "Who played matchmaker Emma Woodhouse in the 1996 film adaptation of Jane Austen's Emma?", 'answer': 'Gwyneth Paltrow', 'category': 'Rom-Coms'}, {'question': 'In the movie I Love You, Man, what did Peter and Sydney go out to eat on their first "man-date"?', 'answer': 'fish tacos', 'category': 'Rom-Coms'}, {'question': 'In Love Actually, what popular TV actor plays Mark, the best man who was actually in love with Juliet, played by Keira Knightley?', 'answer': 'Andrew Lincoln', 'category': 'Rom-Coms'}, {'question': 'Who played "bad boy" Patrick Verona in 10 Things I Hate About You?', 'answer': 'Heath Ledger', 'category': 'Rom-Coms'}, {'question': 'Name the film in which Humphrey Bogart plays detective Sam Spade.', 'answer': 'The Maltese Falcon', 'category': 'Classics'}, {'question': "Who played Will Smith's partner in Wild Wild West?", 'answer': 'Kevin Kline', 'category': 'Will Smith'}, {'question': "In Rush Hour, what song does Jackie Chan's Inspector Lee try to sing that annoys Chris Tucker's Carter?", 'answer': 'War', 'category': '1990s'}, {'question': 'Who played Princess Tamina opposite Jake Gyllenhaal in Prince of Persia?', 'answer': 'Gemma Arterton', 'category': 'Action/Adventure'}, {'question': 'Name two of the three horrible bosses from the movie Horrible Bosses.', 'answer': 'Colin Farrell, Jennifer Aniston, Kevin Spacey', 'category': '2010s'}, {'question': 'Other than Heath Ledger, two actors have been nominated for an Oscar for a comic book movie. Name one of those actors.', 'answer': 'Paul Newman (Road to Perdition), William Hurt (A History of Violence)', 'category': 'Oscars'}, {'question': "What is the name of the inflatable healthcare robot in Disney's Big Hero 6?", 'answer': 'Baymax', 'category': 'Animated'}, {'question': 'Robert De Niro plays a bounty hunter in charge of escorting an embezzler to Los Angeles in which 1980s action comedy?', 'answer': 'Midnight Run', 'category': 'Comedies'}, {'question': "For as long as he could remember, what did Ray Liotta's Henry Hill want to be in Goodfellas?", 'answer': 'a gangster', 'category': 'Dramas'}, {'question': 'Which 1972 thriller is famous for its "Dueling Banjos" scene?', 'answer': 'Deliverance', 'category': 'Horror/Thriller'}, {'question': 'Who plays the father of Benjamin Gates in the family adventure film National Treasure?', 'answer': 'Jon Voight', 'category': 'Action/Adventure'}, {'question': 'Name the actress that made her solo directorial debut in 2017 with the acclaimed film Lady Bird.', 'answer': 'Greta Gerwig', 'category': 'Directors'}, {'question': 'Who plays linguist Louise Banks in Arrival?', 'answer': 'Amy Adams', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In 500 Days of Summer, who plays Summer?', 'answer': 'Zooey Deschanel', 'category': 'Rom-Coms'}, {'question': 'In The Dark Knight Rises, who played the character of John Daggett, who is a rival billionaire who employs Bane to take over Wayne Enterprises?', 'answer': 'Ben Mendelsohn', 'category': 'Christopher Nolan'}, {'question': "In Interstellar, who played Jessica Chastain's brother as an adult?", 'answer': 'Casey Affleck', 'category': 'Christopher Nolan'}, {'question': 'What replicated objects lie in a wooded clearing at the opening of The Prestige?', 'answer': 'top hats', 'category': 'Christopher Nolan'}, {'question': "In Nolan's directorial debut feature Following, the main character is an unemployed what?", 'answer': 'a writer', 'category': 'Christopher Nolan'}, {'question': 'Who plays the shell-shocked soldier that Mark Rylance rescues at sea in Dunkirk?', 'answer': 'Cillian Murphy', 'category': 'Christopher Nolan'}, {'question': 'In which Nolan film will you find a ship named Endurance?', 'answer': 'Interstellar', 'category': 'Christopher Nolan'}, {'question': "Who plays Ray Embrey, who offers to improve Hancock's public image in Hancock?", 'answer': 'Jason Bateman', 'category': 'Will Smith'}, {'question': 'In I am Legend, what animated film does Robert Neville know by and is able to recite by heart?', 'answer': 'Shrek', 'category': 'Will Smith'}, {'question': "In Bad Boys, while looking through old photos with Marcus' wife, what makes Mike crack up?", 'answer': "Marcus' afro", 'category': 'Will Smith'}, {'question': "Who played NFL commissioner Roger Goodell in 2015's Concussion?", 'answer': 'Luke Wilson', 'category': 'Will Smith'}, {'question': 'Who played the evil Dr. Arliss in Wild Wild West?', 'answer': 'Kenneth Branagh', 'category': 'Will Smith'}, {'question': "What Seinfeld regular guest star played Agent J's partner, Agent T, at the beginning of Men in Black II?", 'answer': 'Patrick Warburton', 'category': 'Will Smith'}, {'question': 'John Williams has won an Oscar for Best Original Score four times. Name one of the films he won for.', 'answer': "Jaws, Star Wars, E.T. the Extra-Terrestrial, Schindler's List", 'category': 'Scores & Soundtracks'}, {'question': "Keanu Reeves plays Sandra Bullock's love interest in what two movies?", 'answer': 'Speed, The Lake House', 'category': 'Sandra Bullock'}, {'question': "What 2003 romantic comedy about a young couple's honeymoon in Europe starred Brittany Murphy and Ashton Kutcher?", 'answer': 'Just Married', 'category': 'Rom-Coms'}, {'question': "In Deepwater Horizon, which star of Jane the Virgin played the rig's navigation officer Andrea?", 'answer': 'Gina Rodriguez', 'category': 'Disaster'}, {'question': 'In The Shape of Water, who plays mute Elisa Esposito?', 'answer': 'Sally Hawkins', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name one of the four lead cast members of the 2013 film Last Vegas.', 'answer': 'Kevin Kline, Michael Douglas, Morgan Freeman, Robert De Niro', 'category': 'Comedies'}, {'question': 'Denzel Washington and Clive Owen star in which 2006 Spike Lee film?', 'answer': 'Inside Man', 'category': 'Dramas'}, {'question': 'The Cabin in the Woods stars which MCU actor as the "jock" Curt Vaughan?', 'answer': 'Chris Hemsworth', 'category': 'Horror/Thriller'}, {'question': 'Who plays American distance rider Frank Hopkins in the 2004 film Hidalgo?', 'answer': 'Viggo Mortensen', 'category': 'Action/Adventure'}, {'question': 'Who directed the 2016 coming-of-age drama Moonlight?', 'answer': 'Barry Jenkins', 'category': 'Directors'}, {'question': "Which Hollywood director directed 2011's The Adventures of Tintin?", 'answer': 'Steven Spielberg', 'category': 'Animated'}, {'question': 'Who plays the young writer who falls in love with a cabaret performer in the 2001 musical Moulin Rouge!?', 'answer': 'Ewan McGregor', 'category': 'Musicals'}, {'question': 'Who directed the 1985 musical A Chorus Line?', 'answer': 'Richard Attenborough', 'category': 'Musicals'}, {'question': 'What 1978 musical movie is based on a 1939 classic and features songs "Can I Go On?" and "Ease on Down the Road"?', 'answer': 'The Wiz', 'category': 'Musicals'}, {'question': 'Who co-starred as Horace alongside Barbra Streisand in the 1969 musical Hello, Dolly!?', 'answer': 'Walter Matthau', 'category': 'Musicals'}, {'question': "In Grease, what is Rizzo's first name?", 'answer': 'Betty', 'category': 'Musicals'}, {'question': 'Who plays Dan Truman, who oversaw the NASA scientists, in Armageddon?', 'answer': 'Billy Bob Thornton', 'category': 'Action/Adventure'}, {'question': "In Die Hard with a Vengeance, what was the first name of Sam Jackson's character?", 'answer': 'Zeus', 'category': 'Action/Adventure'}, {'question': 'What was the make and model number of the liquid metal Terminator sent to kill John Connor in T2: Judgment Day?', 'answer': 'T-1000', 'category': 'Action/Adventure'}, {'question': "In the Transformers series, what is Shia LaBeouf's first name?", 'answer': 'Sam', 'category': 'Action/Adventure'}, {'question': 'Who sang the theme song to the 1980 hit comedy 9 to 5?', 'answer': 'Dolly Parton', 'category': 'Scores & Soundtracks'}, {'question': "Who provided the voice for Al of Al's Toy Barn in Toy Story 2?", 'answer': 'Wayne Knight', 'category': 'Pixar'}, {'question': 'Name two of the three actors who won their deserved Oscars for the movie Network.', 'answer': 'Beatrice Straight, Faye Dunaway, Peter Finch', 'category': 'Oscars'}, {'question': 'In The Equalizer, Denzel Washington seeks out those who hospitalized Alina, a teenage prostitute played by whom?', 'answer': 'Chloë Grace Moretz', 'category': 'Denzel Washington'}, {'question': "Who voiced Mulan's dragon companion in Disney's Mulan?", 'answer': 'Eddie Murphy', 'category': 'Animated'}, {'question': 'In the comedy Robin Hood: Men in Tights, who plays Robin Hood?', 'answer': 'Cary Elwes', 'category': 'Comedies'}, {'question': 'Who played the title role of Kevin in the film We Need to Talk About Kevin?', 'answer': 'Ezra Miller', 'category': 'Dramas'}, {'question': 'Virginia Madsen plays a graduate student who investigates an urban legend in which 90s horror?', 'answer': 'Candyman', 'category': 'Horror/Thriller'}, {'question': 'Which Lord of the Rings actor plays Kirill, the Russian agent, in The Bourne Supremacy?', 'answer': 'Karl Urban', 'category': 'Action/Adventure'}, {'question': 'Who directed the 1969 film Easy Rider?', 'answer': 'Dennis Hopper', 'category': 'Directors'}, {'question': 'District 9 is set in what country?', 'answer': 'South Africa', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Tom Petty has a guest starring role in what Kevin Costner drama?', 'answer': 'The Postman', 'category': 'Dramas'}, {'question': 'What was the first sequel Spielberg ever directed?', 'answer': 'Indiana Jones and the Temple of Doom', 'category': 'Steven Spielberg'}, {'question': 'Who voiced the lead character of Tintin in The Adventures of Tintin?', 'answer': 'Jamie Bell', 'category': 'Steven Spielberg'}, {'question': "Who plays Tom Hanks' co-lead, Amelia Warren, in The Terminal?", 'answer': 'Catherine Zeta-Jones', 'category': 'Steven Spielberg'}, {'question': 'Who composed the score for Bridge of Spies?', 'answer': 'Thomas Newman', 'category': 'Steven Spielberg'}, {'question': "Who directed 2013's Evil Dead?", 'answer': 'Fede Álvarez', 'category': 'Horror'}, {'question': "In 2011's Fright Night, Charley believes his new neighbor, Jerry, is a vampire. Who plays Jerry?", 'answer': 'Colin Farrell', 'category': 'Horror'}, {'question': 'What 1987 film is about kids who save the world from Dracula, the Wolf Man, and other classic monsters?', 'answer': 'The Monster Squad', 'category': 'Horror'}, {'question': 'In addition to playing the iconic Freddy Krueger in the Nightmare on Elm Street series, actor Robert Englund also played which classic monster in a 1989 movie?', 'answer': 'the Phantom of the Opera', 'category': 'Horror'}, {'question': 'Who directed the 80s fantasy comedy The Witches of Eastwick?', 'answer': 'George Miller', 'category': '1980s'}, {'question': 'In Edge of Tomorrow, what color are the large Alpha Mimics that have the ability to reset time?', 'answer': 'blue', 'category': 'Tom Cruise'}, {'question': 'Name the 2000s film that stars Nicolas Cage as a professor who links a mysterious list of numbers from a time capsule to past and future disasters and sets out to prevent the ultimate catastrophe.', 'answer': 'Knowing', 'category': 'Disaster'}, {'question': "This Academy Award winning actor voiced the character Buster Moon, the theater-owning koala in 2016's Sing.", 'answer': 'Matthew McConaughey', 'category': 'Animated'}, {'question': 'What fellow actor also directed Matthew McConaughey in the 2002 thriller Frailty?', 'answer': 'Bill Paxton', 'category': 'Matthew McConaughey'}, {'question': 'What actress plays the girlfriend of Bill Murray in Scrooged?', 'answer': 'Karen Allen', 'category': 'Holiday'}, {'question': "Who played Mr. Popper in Mr. Popper's Penguins?", 'answer': 'Jim Carrey', 'category': 'N/A'}, {'question': 'Who wrote the screenplay for Raiders of the Lost Ark?', 'answer': 'Lawrence Kasdan', 'category': 'Action/Adventure'}, {'question': 'Who co-wrote and starred as the main human Gary in the 2011 reboot of the Muppets?', 'answer': 'Jason Segel', 'category': 'Family'}, {'question': 'Name the actor who played hedge fund manager Michael Burry in the 2015 drama The Big Short.', 'answer': 'Christian Bale', 'category': 'Dramas'}, {'question': 'Who co-starred alongside Eddie Murphy in 48 Hours as Jack Cates?', 'answer': 'Nick Nolte', 'category': '1980s'}, {'question': 'What 2010s fantasy series starred Logan Lerman, Alexandra Daddario, and Brandon T. Jackson?', 'answer': 'Percy Jackson', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the 2003 comedy School of Rock?', 'answer': 'Richard Linklater', 'category': 'Comedies'}, {'question': 'What 2015 movie stars Jason Bateman and Rebecca Hall as a married couple that is met by Joel Edgerton, who was a former childhood friend?', 'answer': 'The Gift', 'category': 'Horror/Thriller'}, {'question': 'Who voices regal blue tang Dory in both Finding Nemo and Finding Dory?', 'answer': 'Ellen DeGeneres', 'category': 'Animated'}, {'question': 'In Mars Attacks!, talk show host Nathalie Lake has her head transposed onto what kind of dog by the Martians?', 'answer': 'a Chihuahua', 'category': 'Tim Burton'}, {'question': "Who played the sinister chimpanzee military commander, General Thade, in 2001's Planet of the Apes?", 'answer': 'Tim Roth', 'category': 'Tim Burton'}, {'question': "In The Nightmare Before Christmas, Sally is created by Halloween Town's resident scientist that goes by what name?", 'answer': 'Dr. Finklestein', 'category': 'Tim Burton'}, {'question': 'What is the first name of the corpse bride in The Corpse Bride?', 'answer': 'Emily', 'category': 'Tim Burton'}, {'question': "What British actor voiced the Cheshire Cat in Tim Burton's Alice in Wonderland?", 'answer': 'Stephen Fry', 'category': 'Tim Burton'}, {'question': "What comedic actor provides the voice for Edward Frankenstein, Victor's father, in 2012's Frankenweenie?", 'answer': 'Martin Short', 'category': 'Tim Burton'}, {'question': 'Brad Pitt plays brother to Craig Sheffer in Montana in what 1992 film?', 'answer': 'A River Runs Through It', 'category': 'Brad Pitt'}, {'question': 'Brad Pitt plays dim-witted personal trainer Chad Feldheimer in what comedy?', 'answer': 'Burn After Reading', 'category': 'Brad Pitt'}, {'question': 'In Meet Joe Black, who plays Susan Parrish, the young woman who falls in love with Joe Black?', 'answer': 'Claire Forlani', 'category': 'Brad Pitt'}, {'question': "Who played the driver of the tank, Gordo, in David Ayer's Fury?", 'answer': 'Michael Peña', 'category': 'Brad Pitt'}, {'question': "Who played Brad's love interest in 1993's Kalifornia?", 'answer': 'Juliette Lewis', 'category': 'Brad Pitt'}, {'question': "What was Brad Pitt's character's name in True Romance?", 'answer': 'Floyd', 'category': 'Brad Pitt'}, {'question': 'In what biographical drama did Denzel Washington portray boxer Rubin Carter, who was wrongly imprisoned for murder?', 'answer': 'The Hurricane', 'category': 'Denzel Washington'}, {'question': "Who played Barry Seal's CIA contact Schafer in 2017's American Made?", 'answer': 'Domhnall Gleeson', 'category': 'Tom Cruise'}, {'question': 'Why was Claire in detention in The Breakfast Club?', 'answer': 'she skipped class to go shopping', 'category': 'Coming of Age'}, {'question': "Who played Blofeld in 2015's Spectre?", 'answer': 'Christoph Waltz', 'category': 'Action/Adventure'}, {'question': "In The Shawshank Redemption, what is the nickname of Morgan Freeman's character?", 'answer': 'Red', 'category': 'Dramas'}, {'question': "Who directed the horror classics 1978's Halloween, 1982's The Thing, and 1983's Christine?", 'answer': 'John Carpenter', 'category': 'Horror/Thriller'}, {'question': "What was the hero persona assumed by Nicolas Cage's character in Kick-Ass?", 'answer': 'Big Daddy', 'category': 'Comic Book'}, {'question': 'Which Academy Award winning actress played Ava, the humanoid robot in the 2015 sci-fi thriller Ex Machina?', 'answer': 'Alicia Vikander', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Tiana is the name of the lead in what Disney animated film?', 'answer': 'The Princess and the Frog', 'category': 'Animated'}, {'question': 'Who plays Seymour Krelborn in Little Shop of Horrors?', 'answer': 'Rick Moranis', 'category': '1980s'}, {'question': 'Who performed double duty, both directing and acting in Robin Hood: Men in Tights?', 'answer': 'Mel Brooks', 'category': 'Comedies'}, {'question': 'Who directed The Horse Whisperer?', 'answer': 'Robert Redford', 'category': 'Scarlett Johansson'}, {'question': 'Brian De Palma directed what film that featured Scarlett Johansson?', 'answer': 'The Black Dahlia', 'category': 'Scarlett Johansson'}, {'question': 'Who plays the artist Scarlett Johansson works for in Girl with a Pearl Earring?', 'answer': 'Colin Firth', 'category': 'Scarlett Johansson'}, {'question': 'Who directed Lost in Translation?', 'answer': 'Sofia Coppola', 'category': 'Scarlett Johansson'}, {'question': 'Who plays Basil Exposition in Austin Powers: International Man of Mystery?', 'answer': 'Michael York', 'category': '1990s'}, {'question': "Who played Johnny Ringo in 1993's Tombstone?", 'answer': 'Michael Biehn', 'category': '1990s'}, {'question': 'Who directed The Silence of the Lambs?', 'answer': 'Jonathan Demme', 'category': '1990s'}, {'question': "Dylan McDermott played Clint Eastwood's partner, Al, in which 90s film?", 'answer': 'In the Line of Fire', 'category': '1990s'}, {'question': 'What DC film is loosely based on the Hellblazer comic?', 'answer': 'Constantine', 'category': 'Comic Book'}, {'question': 'Who starred as Ritchie Valens in the 1987 film La Bamba?', 'answer': 'Lou Diamond Phillips', 'category': 'Biopics'}, {'question': 'Who played the lead in American Sniper?', 'answer': 'Bradley Cooper', 'category': 'War'}, {'question': 'Who played script supervisor Sandy Schklair in The Disaster Artist?', 'answer': 'Seth Rogen', 'category': 'New Releases'}, {'question': 'From the Transporter trilogy, name one of the four rules as stated by the Transporter.', 'answer': "Never change the deal, No names, Never open the package, Never make a promise you can't keep", 'category': 'Action/Adventure'}, {'question': 'Who played Darkman in the 1990 action crime fantasy Darkman?', 'answer': 'Liam Neeson', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What supermodel starred alongside Adam Sandler and Jennifer Aniston in the 2011 comedy Just Go with It?', 'answer': 'Brooklyn Decker', 'category': 'Rom-Coms'}, {'question': "What activity is involved in an iconic romantic scene from 1990's Ghost?", 'answer': "molding a pot on a potter's wheel", 'category': 'Dramas'}, {'question': 'Who plays the villainous Owen Shaw in Fast & Furious 6?', 'answer': 'Luke Evans', 'category': 'Action/Adventure'}, {'question': "Who plays the talented, neurotic TV news producer Jane Craig in 1987's Broadcast News?", 'answer': 'Holly Hunter', 'category': '1980s'}, {'question': 'Who played Pete Hogwallop, one of three escaped convicts along with George Clooney and Tim Blake Nelson in O Brother, Where Art Thou??', 'answer': 'John Turturro', 'category': 'Comedies'}, {'question': 'Justin Long and Gina Philips play brother and sister who encounter a flesh-eating creature in the midst of its ritualistic eating spree in what film?', 'answer': 'Jeepers Creepers', 'category': 'Horror/Thriller'}, {'question': 'In what 2010s movie will you find characters named Benny, Vitruvius, Unikitty, and Wyldstyle?', 'answer': 'The Lego Movie', 'category': 'Animated'}, {'question': 'What 2000s biopic centers around the creation of Peter Pan?', 'answer': 'Finding Neverland', 'category': 'Biopics'}, {'question': 'In The Imitation Game, what was the name that Alan Turing gave to his Enigma-breaking machine?', 'answer': 'Christopher', 'category': 'Biopics'}, {'question': 'What 2016 biopic is about Army medic Desmond T. Doss?', 'answer': 'Hacksaw Ridge', 'category': 'Biopics'}, {'question': "What Harry Potter vet played Dennis Sciama, one of Stephen Hawking's professors and mentors, in The Theory of Everything?", 'answer': 'David Thewlis', 'category': 'Biopics'}, {'question': 'Who directed the animated film Rango, starring Johnny Depp?', 'answer': 'Gore Verbinski', 'category': 'Directors'}, {'question': 'What Oscar-winning director made their feature directorial debut in 1989 with the low-budget splatterfest Bad Taste?', 'answer': 'Peter Jackson', 'category': 'Directors'}, {'question': 'Who directed The Bourne Identity?', 'answer': 'Doug Liman', 'category': 'Directors'}, {'question': 'Who has won the most Academy Awards for directing?', 'answer': 'John Ford (for The Informer, The Grapes of Wrath, How Green Was My Valley, The Quiet Man)', 'category': 'Directors'}, {'question': "What actress voiced Esmeralda in Disney's The Hunchback of Notre Dame and went on to appear in Charlie's Angels: Full Throttle?", 'answer': 'Demi Moore', 'category': 'Famous Actors & Actresses'}, {'question': "Who played the character Dewey in 1996's Scream?", 'answer': 'David Arquette', 'category': '1990s'}, {'question': 'Who plays the lead soldier Johnny Rico in Starship Troopers?', 'answer': 'Casper Van Dien', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Meryl Streep famously said the line "The dingo\'s got my baby!" in what movie?', 'answer': 'A Cry in the Dark', 'category': 'Meryl Streep'}, {'question': 'Derek Cianfrance directed Ryan Gosling and Bradley Cooper in what 2013 crime film?', 'answer': 'The Place Beyond the Pines', 'category': 'Crime'}, {'question': 'In the 2016 horror film The Witch, what is the name of the evil goat that the children claim can speak to them?', 'answer': 'Black Phillip', 'category': 'Horror'}, {'question': "Owen Wilson and Vince Vaughn's mentor, Chazz, moves on from crashing weddings to crashing what in order to meet women?", 'answer': 'funerals', 'category': 'Comedies'}, {'question': "In Finding Nemo, what is Nemo's father's name?", 'answer': 'Marlin', 'category': 'Animated'}, {'question': 'In Catch Me If You Can, Frank and Carl encounter each other every year during what holiday?', 'answer': 'Christmas', 'category': 'Dramas'}, {'question': 'Which film was released first: Billy Madison or Happy Gilmore?', 'answer': 'Billy Madison', 'category': 'Release Dates'}, {'question': 'Who played Hermione Granger in the Harry Potter films?', 'answer': 'Emma Watson', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What classic movie character hails from Skull Island?', 'answer': 'King Kong', 'category': 'Action/Adventure'}, {'question': "In 1976's The Omen, the character of Katherine Thorn was played by Lee Remick. Who played the same character in the 2006 remake?", 'answer': 'Julia Stiles', 'category': 'Horror/Thriller'}, {'question': 'What type of animal is used to lure the T. rex out of the jungle in Jurassic Park?', 'answer': 'a goat', 'category': '1990s'}, {'question': 'Who directed Robin Williams in the dark comedy Death to Smoochy?', 'answer': 'Danny DeVito', 'category': 'Robin Williams'}, {'question': 'Who did Robin Williams play in the Night at the Museum films?', 'answer': 'Theodore Roosevelt', 'category': 'Robin Williams'}, {'question': "In Jumanji, what does Robin Williams' father make at his factory?", 'answer': 'shoes', 'category': 'Robin Williams'}, {'question': 'Name the movie that stars Robin Williams as a saxophonist who is sent with the circus to perform in New York City and decides to defect.', 'answer': 'Moscow on the Hudson', 'category': 'Robin Williams'}, {'question': "Who was Robin Williams' co-lead in the 2009 Disney comedy Old Dogs?", 'answer': 'John Travolta', 'category': 'Robin Williams'}, {'question': 'Who directed the 1996 comedy Jack?', 'answer': 'Francis Ford Coppola', 'category': 'Robin Williams'}, {'question': "Who played Blake Gaines, daughter to Dwayne Johnson's character in San Andreas?", 'answer': 'Alexandra Daddario', 'category': 'Disaster'}, {'question': 'What 90s disaster film starring Bill Paxton was the second film directed by prolific cinematographer Jan de Bont?', 'answer': 'Twister', 'category': 'Disaster'}, {'question': 'In the first segment of Cloverfield, Beth and Rob make plans to visit what attraction/location in NYC?', 'answer': 'Coney Island', 'category': 'Disaster'}, {'question': 'The Andrea Gail is the name of a ship in what 2000s biographical disaster drama?', 'answer': 'The Perfect Storm', 'category': 'Disaster'}, {'question': 'In the 1993 movie Alive, the plane passengers were on their way to compete in what sport before crashing in the Andes?', 'answer': 'rugby', 'category': 'Disaster'}, {'question': 'What actor narrated the 2005 film War of the Worlds?', 'answer': 'Morgan Freeman', 'category': 'Disaster'}, {'question': "Bruce Campbell cameos as what role in 2002's Spider-Man?", 'answer': 'a wrestling ring announcer', 'category': 'Comic Book'}, {'question': 'What is the name of the Pauly Shore film that centers around a courtroom?', 'answer': 'Jury Duty', 'category': 'Comedies'}, {'question': 'What is the town called in It?', 'answer': 'Derry', 'category': 'New Releases'}, {'question': 'This 2011 political drama, about an idealistic staffer on the campaign trail, starred Ryan Gosling and George Clooney.', 'answer': 'The Ides of March', 'category': 'Dramas'}, {'question': 'In Young Frankenstein, who plays the monster?', 'answer': 'Peter Boyle', 'category': 'Comedies'}, {'question': 'What government agency does Dillon work for in Predator?', 'answer': 'the CIA', 'category': 'Action/Adventure'}, {'question': 'Sigourney Weaver appears in how many films in the Alien franchise?', 'answer': '4 (Alien, Aliens, Alien 3, Alien Resurrection)', 'category': 'Horror/Thriller'}, {'question': 'Who voices Rango in the animated 2010 film Rango?', 'answer': 'Johnny Depp', 'category': 'Animated'}, {'question': "Beethoven's Ninth Symphony is an important plot point in which Stanley Kubrick movie?", 'answer': 'A Clockwork Orange', 'category': 'Crime'}, {'question': 'This actor played a younger Bruce Willis in a 2012 sci-fi thriller.', 'answer': 'Joseph Gordon-Levitt (in Looper)', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed Boyhood?', 'answer': 'Richard Linklater', 'category': 'Directors'}, {'question': 'What 2000s sci-fi horror film had the tagline "The last man on Earth is not alone."?', 'answer': 'I Am Legend', 'category': 'N/A'}, {'question': 'Christian Bale, Matthew McConaughey, and Gerard Butler co-starred in what 2000s movie?', 'answer': 'Reign of Fire', 'category': 'Famous Actors & Actresses'}, {'question': 'In what Robert Altman film did Bruce Willis play himself?', 'answer': 'The Player', 'category': 'Famous Actors & Actresses'}, {'question': "What 2000s comedy starring Ben Stiller was Ed Norton's directorial debut?", 'answer': 'Keeping the Faith', 'category': 'Famous Actors & Actresses'}, {'question': "Who starred as the title character in Sam Peckinpah's 1965 western Major Dundee?", 'answer': 'Charlton Heston', 'category': 'Famous Actors & Actresses'}, {'question': "In M. Night Shyamalan's film Split, what was the nickname for the cannibalistic personality taken by James McAvoy's character at the climax of the movie?", 'answer': 'the Beast', 'category': 'Thriller'}, {'question': 'F. Gary Gray directed what 2009 crime thriller starring Gerard Butler and Jamie Foxx?', 'answer': 'Law Abiding Citizen', 'category': 'Thriller'}, {'question': 'In what thriller will you find a serial killer with the nickname "Buffalo Bill"?', 'answer': 'The Silence of the Lambs', 'category': 'Thriller'}, {'question': "Who plays Tim Robbins' deceased son in Jacob's Ladder?", 'answer': 'Macaulay Culkin', 'category': 'Thriller'}, {'question': "Who directed 2005's Elizabethtown?", 'answer': 'Cameron Crowe', 'category': 'Directors'}, {'question': 'Name the two stars of Midnight Cowboy.', 'answer': 'Dustin Hoffman, Jon Voight', 'category': 'Dramas'}, {'question': 'After directing The Empire Strikes Back, Irvin Kershner went on to direct which James Bond film?', 'answer': 'Never Say Never Again', 'category': 'Spy'}, {'question': 'Who directed Jason Patric and Corey Haim in The Lost Boys?', 'answer': 'Joel Schumacher', 'category': '1980s'}, {'question': "Who played cool girl Nicole, who might be falling for her dorky neighbor, in 1999's Drive Me Crazy?", 'answer': 'Melissa Joan Hart', 'category': 'Rom-Coms'}, {'question': 'Which two actors played detectives Thompson and Thomson in the Spielberg animation The Adventures of Tintin?', 'answer': 'Simon Pegg, Nick Frost', 'category': 'Animated'}, {'question': 'Who directed Blue Velvet?', 'answer': 'David Lynch', 'category': 'Directors'}, {'question': 'What actor starred as the title role in the movie Lone Wolf McQuade?', 'answer': 'Chuck Norris', 'category': 'Action/Adventure'}, {'question': 'Name two of the three films John Carpenter and Kurt Russell made together in the 80s.', 'answer': 'Escape from New York, The Thing, Big Trouble in Little China', 'category': '1980s'}, {'question': "Who provides the voice of Mrs. Potts in 1991's Beauty and the Beast?", 'answer': 'Angela Lansbury', 'category': 'Animated'}, {'question': 'In The NeverEnding Story, what is the name of the horse Atreyu loses in the Swamps of Sadness?', 'answer': 'Artax', 'category': 'Fantasy/Sci-Fi'}, {'question': 'For Kurt Russell and Kevin Costner, how many miles was it to Graceland in their 2001 movie?', 'answer': '3,000 miles', 'category': 'Comedies'}, {'question': 'This 2013 film starred Jessica Chastain and Nikolaj Coster-Waldau as guardians to two little girls who have an otherworldly protector.', 'answer': 'Mama', 'category': 'Horror/Thriller'}, {'question': 'Which actor plays the role of military engineer turned lion hunter Lt. Colonel John Henry Patterson in the 1996 film The Ghost and the Darkness?', 'answer': 'Val Kilmer', 'category': 'Dramas'}, {'question': "Who plays Edmond Dantès, the protagonist in 2002's The Count of Monte Cristo?", 'answer': 'Jim Caviezel', 'category': 'Dramas'}, {'question': "Who plays convicted murderer Matthew Poncelet in 1995's Dead Man Walking?", 'answer': 'Sean Penn', 'category': 'Dramas'}, {'question': 'Who plays bartender Bob Saginowski, who assists in operating a Brooklyn bar as a "drop" location for illegal takings in 2014\'s The Drop?', 'answer': 'Tom Hardy', 'category': 'Dramas'}, {'question': 'In Scent of a Woman, Al Pacino leads Gabrielle Anwar in what type of dance?', 'answer': 'a tango', 'category': 'Dramas'}, {'question': 'In Rain Man, what did waitress Sally Dibbs drop on the floor as Ray and Charlie were leaving the diner?', 'answer': 'toothpicks', 'category': 'Dramas'}, {'question': 'What 1993 crime drama stars Al Pacino as an ex-con, Sean Penn as a sleazy lawyer, and Penelope Ann Miller as his dancer girlfriend?', 'answer': "Carlito's Way", 'category': 'Dramas'}, {'question': 'Before The Wolf of Wall Street, Leonardo DiCaprio and Jonah Hill both had roles in what movie?', 'answer': 'Django Unchained', 'category': 'Leonardo DiCaprio'}, {'question': 'In what film does Leonardo DiCaprio play a U.S. Marshal?', 'answer': 'Shutter Island', 'category': 'Leonardo DiCaprio'}, {'question': 'DiCaprio made his one appearance in a Woody Allen film in what movie?', 'answer': 'Celebrity', 'category': 'Leonardo DiCaprio'}, {'question': 'Leo plays the character of Cobb in what film?', 'answer': 'Inception', 'category': 'Leonardo DiCaprio'}, {'question': "In Titanic, who played the ship's captain, Captain Edward John Smith?", 'answer': 'Bernard Hill', 'category': 'Leonardo DiCaprio'}, {'question': "DiCaprio received his first Oscar nomination co-starring with what actor whose character name was in the film's title?", 'answer': "Johnny Depp (in What's Eating Gilbert Grape)", 'category': 'Leonardo DiCaprio'}, {'question': 'Pierce Brosnan, Salma Hayek, and Woody Harrelson star in what 2000s heist film?', 'answer': 'After the Sunset', 'category': 'Crime'}, {'question': 'Quentin Tarantino wrote the screenplay for which 1990s vampire flick?', 'answer': 'From Dusk till Dawn', 'category': 'N/A'}, {'question': 'In Gremlins, what does Randall name the Mogwai he buys for his son?', 'answer': 'Gizmo', 'category': 'N/A'}, {'question': 'Anchorman: The Legend of Ron Burgundy is set in what U.S. city?', 'answer': 'San Diego', 'category': 'N/A'}, {'question': 'Who was the director for the movie The Exorcist?', 'answer': 'William Friedkin', 'category': 'N/A'}, {'question': 'Which film was the directorial debut of Ryan Coogler?', 'answer': 'Fruitvale Station', 'category': 'N/A'}, {'question': 'Which actress stars as hip hop choreographer Honey Daniels in the film Honey?', 'answer': 'Jessica Alba', 'category': 'Dance'}, {'question': 'What character name does Brad Pitt go by in Fight Club?', 'answer': 'Tyler Durden', 'category': 'Brad Pitt'}, {'question': "In Ocean's Eleven, name the two actors who play the competitive Malloy brothers, the team's mechanics and drivers.", 'answer': 'Casey Affleck, Scott Caan', 'category': 'Crime'}, {'question': 'Kenny Wormald, Julianne Hough, Miles Teller, and Andie MacDowell star in what 2010s film that was a remake of an 80s film?', 'answer': 'Footloose', 'category': 'Dramas'}, {'question': 'Name two 90s movies in which Tom Cruise plays a lawyer.', 'answer': 'A Few Good Men, The Firm', 'category': 'Famous Actors & Actresses'}, {'question': "What actor plays Charlize's father, John Bridger, in The Italian Job?", 'answer': 'Donald Sutherland', 'category': 'Charlize Theron'}, {'question': 'What legendary actor stars as a British physician turned swashbuckling pirate in the 1935 film Captain Blood?', 'answer': 'Errol Flynn', 'category': 'Action/Adventure'}, {'question': 'Who played Cruella de Vil in the 1996 live-action version of 101 Dalmatians?', 'answer': 'Glenn Close', 'category': 'Family'}, {'question': 'What 2001 film stars Jim Carrey as a man who loses his memory after a car accident but becomes welcome in a small town after being mistaken for a long-lost son?', 'answer': 'The Majestic', 'category': 'Dramas'}, {'question': 'What actor comedian voices Sid the sloth in the Ice Age franchise?', 'answer': 'John Leguizamo', 'category': 'Animated'}, {'question': "2006's Pan's Labyrinth is set in what country?", 'answer': 'Spain', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What actress played Daisy Duke in the 2005 comedy The Dukes of Hazzard?', 'answer': 'Jessica Simpson', 'category': 'Comedies'}, {'question': 'Bela Lugosi is most famous for playing what iconic horror character?', 'answer': 'Dracula (in Dracula, Abbott and Costello Meet Frankenstein)', 'category': 'Horror/Thriller'}, {'question': 'Released in 1930, what World War I drama won the Academy Award for Best Picture and Best Director?', 'answer': 'All Quiet on the Western Front', 'category': 'Oscars'}, {'question': "Who played Connor MacLeod in 1986's Highlander?", 'answer': 'Christopher Lambert', 'category': 'Fantasy/Sci-Fi'}, {'question': "In 2009's Star Trek, who plays the Romulan Nero?", 'answer': 'Eric Bana', 'category': 'Fantasy/Sci-Fi'}, {'question': "In The Hitchhiker's Guide to the Galaxy, what species of Earth animal are actually hyperintelligent pandimensional beings who have been experimenting on humans?", 'answer': 'mice', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Signs, the first footage of the aliens is captured at a birthday party in what South American country?', 'answer': 'Brazil', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which war film starred Ryan Phillippe as a soldier who had thought he served his last tour in Iraq?', 'answer': 'Stop-Loss', 'category': 'War'}, {'question': "In Michael Bay's Pearl Harbor, who plays President Franklin D. Roosevelt?", 'answer': 'Jon Voight', 'category': 'War'}, {'question': "Why are Colonel Dax's soldiers on trial in Paths of Glory?", 'answer': 'they refused to join a battle', 'category': 'War'}, {'question': "Who plays Andrew Garfield's father in Hacksaw Ridge?", 'answer': 'Hugo Weaving', 'category': 'War'}, {'question': "What are Colonel Kurtz's iconic final words in Apocalypse Now?", 'answer': 'The horror... the horror.', 'category': 'War'}, {'question': 'Complete this quote from V for Vendetta: "Remember, remember the ___ of November.".', 'answer': 'fifth', 'category': 'N/A'}, {'question': 'Which Alfred Hitchcock movie stars James Stewart as a photographer who thinks his neighbor is a murderer?', 'answer': 'Rear Window', 'category': 'N/A'}, {'question': 'What actress starred as the "amazing" Amy Dunne in Gone Girl?', 'answer': 'Rosamund Pike', 'category': 'N/A'}, {'question': 'Which Disney film features the song "I Wan\'na Be like You"?', 'answer': 'The Jungle Book', 'category': 'N/A'}, {'question': 'What 90s action film stars Antonio Banderas and Salma Hayek?', 'answer': 'Desperado', 'category': 'N/A'}, {'question': 'Aside from John Williams, who is the only other composer to write the score for a live-action Star Wars, already released, film?', 'answer': 'Michael Giacchino (for Rogue One)', 'category': 'Scores & Soundtracks'}, {'question': 'Who voices the main protagonist linguist Milo Thatch in Atlantis: The Lost Empire?', 'answer': 'Michael J. Fox', 'category': 'Animated'}, {'question': "Who starred as the father of Will Ferrell's character in Kicking & Screaming?", 'answer': 'Robert Duvall', 'category': 'Comedies'}, {'question': "What is the name of the direct sequel to 1968's Night of the Living Dead?", 'answer': 'Dawn of the Dead', 'category': 'Horror'}, {'question': 'This 2008 film, based on the book series of the same name, starred Freddie Highmore, Mary-Louise Parker, and Martin Short.', 'answer': 'The Spiderwick Chronicles', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Citizen Kane, who starred alongside Orson Welles as Jedediah Leland, Kane's best friend and reporter?", 'answer': 'Joseph Cotten', 'category': 'Classics'}, {'question': 'Who played chain-smoking cynic John Constantine in the 2005 film Constantine?', 'answer': 'Keanu Reeves', 'category': 'N/A'}, {'question': 'For what movie did Morgan Freeman receive his first Oscar nomination for Best Actor?', 'answer': 'Driving Miss Daisy', 'category': 'N/A'}, {'question': 'Name the comedy troupe responsible for Super Troopers, Club Dread, and Beerfest.', 'answer': 'Broken Lizard', 'category': 'N/A'}, {'question': 'Nicolas Cage, Emma Stone, and Ryan Reynolds all voice cavemen in what animated feature?', 'answer': 'The Croods', 'category': 'N/A'}, {'question': "Who played Arnie's wife Helen in True Lies?", 'answer': 'Jamie Lee Curtis', 'category': 'Action/Adventure'}, {'question': 'Denzel Washington, Meg Ryan, and Lou Diamond Phillips star in what 90s drama?', 'answer': 'Courage Under Fire', 'category': 'Dramas'}, {'question': 'In Galaxy Quest, who plays Alexander Dane, the actor playing the alien Dr. Lazarus?', 'answer': 'Alan Rickman', 'category': 'Family'}, {'question': 'Who directed Slumdog Millionaire?', 'answer': 'Danny Boyle', 'category': 'Directors'}, {'question': 'Name the sci-fi movie from the quote: "There is no spoon.".', 'answer': 'The Matrix', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What actor plays Steve the Pirate in Dodgeball: A True Underdog Story?', 'answer': 'Alan Tudyk', 'category': 'Comedies'}, {'question': 'David Fincher directed this 2002 thriller starring Jodie Foster and Kristen Stewart.', 'answer': 'Panic Room', 'category': 'Horror/Thriller'}, {'question': 'Toy Story 3 was the most recent animated film to be nominated for Best Picture at the Academy Awards. What was the first?', 'answer': 'Beauty and the Beast', 'category': 'Animated'}, {'question': 'In The World Is Not Enough, who played the main villain, Renard, who had a bullet lodged in his brain that rendered him impervious to pain?', 'answer': 'Robert Carlyle', 'category': 'James Bond'}, {'question': 'The unofficial Bond film Never Say Never Again was released in 1983. What official Bond film starring Roger Moore was released the same year?', 'answer': 'Octopussy', 'category': 'James Bond'}, {'question': "What type of gun has historically been James Bond's weapon of choice?", 'answer': 'a Walther PPK', 'category': 'James Bond'}, {'question': 'Roger Spottiswoode directed which Pierce Brosnan Bond film?', 'answer': 'Tomorrow Never Dies', 'category': 'James Bond'}, {'question': 'In how many movies did Roger Moore star as James Bond?', 'answer': '7 (Live and Let Die, The Man with the Golden Gun, The Spy Who Loved Me, Moonraker, For Your Eyes Only, Octopussy, A View to a Kill)', 'category': 'James Bond'}, {'question': "Who portrayed Blofeld in On Her Majesty's Secret Service?", 'answer': 'Telly Savalas', 'category': 'James Bond'}, {'question': 'Who starred as the lead, Staff Sergeant Michael Nantz, in Battle: Los Angeles?', 'answer': 'Aaron Eckhart', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Eclipse is the name of the third film in the what saga?', 'answer': 'Twilight', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Aliens, Ripley looks after a young girl that goes by what nickname?', 'answer': 'Newt', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What man-made object does Lucy encounter in the snowy forest after walking through the wardrobe in The Lion, the Witch and the Wardrobe?', 'answer': 'a lamppost', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Legendary critic and director François Truffaut appeared as a French scientist in this Spielberg film.', 'answer': 'Close Encounters of the Third Kind', 'category': 'Fantasy/Sci-Fi'}, {'question': 'The Flying Dutchman is the name of a ship in this Disney franchise.', 'answer': 'Pirates of the Caribbean', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1998 comedy had the following tagline: "Love is in the hair."?', 'answer': "There's Something About Mary", 'category': 'Taglines'}, {'question': 'Director Martin Scorsese voiced the role of Sykes in what 2004 animated movie?', 'answer': 'Shark Tale', 'category': 'Animated'}, {'question': 'Who plays Captain Andrew Henry in The Revenant?', 'answer': 'Domhnall Gleeson', 'category': 'Leonardo DiCaprio'}, {'question': 'In what film does Denzel Washington reprise a role originally played by Frank Sinatra?', 'answer': 'The Manchurian Candidate', 'category': 'Denzel Washington'}, {'question': 'Name the Josh Hartnett movie featuring the quote "That cold ain\'t the weather. That\'s death approaching.".', 'answer': '30 Days of Night', 'category': 'Quotes'}, {'question': "Ted Levine played LAPD sergeant and Paul Walker's supervisor, Tanner, in what film?", 'answer': 'The Fast and the Furious', 'category': '2000s'}, {'question': 'How many times has Harrison Ford played Jack Ryan?', 'answer': '2 (in Patriot Games, Clear and Present Danger)', 'category': 'Action/Adventure'}, {'question': 'The song "You\'ll Be in My Heart" won Best Original Song for which animated film?', 'answer': 'Tarzan', 'category': 'Oscars'}, {'question': 'In The Greatest Showman, who plays the Swedish Nightingale Jenny Lind?', 'answer': 'Rebecca Ferguson', 'category': 'Dramas'}, {'question': 'Who directed Almost Famous?', 'answer': 'Cameron Crowe', 'category': 'Directors'}, {'question': 'Who plays Captain Lone Starr in Spaceballs?', 'answer': 'Bill Pullman', 'category': 'Fantasy/Sci-Fi'}, {'question': "In 50 First Dates, what does Adam Sandler's character want to study in Alaska?", 'answer': 'walruses', 'category': 'Comedies'}, {'question': 'Rosamund Pike and Ben Affleck starred in this 2014 David Fincher psychological thriller.', 'answer': 'Gone Girl', 'category': 'Horror/Thriller'}, {'question': "In A Bug's Life, what is the actual occupation of the fake warriors that Flick hires?", 'answer': 'circus performers', 'category': 'Animated'}, {'question': 'After the death of his brother, an expert street dancer goes to Georgia to attend Truth University in what film?', 'answer': 'Stomp the Yard', 'category': 'Dance'}, {'question': 'What is the name of the nightclub Tony Manero and his friends go to every Saturday night in Saturday Night Fever?', 'answer': '2001 Odyssey', 'category': 'Dance'}, {'question': "You'll find characters by names of Mac Carter, Nora Clark, and Tyler Gage in what 2000s dance film?", 'answer': 'Step Up', 'category': 'Dance'}, {'question': 'This film, released in 2000, is about the life and times of a group of teenage ballet dancers at the fictitious American Ballet Academy, and starred Zoe Saldana, Susan May Pratt, and Peter Gallagher.', 'answer': 'Center Stage', 'category': 'Dance'}, {'question': 'Besides Steven Spielberg, who has directed Tom Hanks in five different features?', 'answer': 'Ron Howard (in Splash, Apollo 13, The Da Vinci Code, Angels.& Demons, Inferno)', 'category': 'Directors'}, {'question': 'Who directed the 2013 remake of Oldboy?', 'answer': 'Spike Lee', 'category': 'Directors'}, {'question': 'Who wrote and directed the 1989 film Say Anything...?', 'answer': 'Cameron Crowe', 'category': 'Directors'}, {'question': "Who directed 2011's The Girl with the Dragon Tattoo?", 'answer': 'David Fincher', 'category': 'Directors'}, {'question': 'The 1966 Adam West Batman film had four key villains. Name two of the four actors that played them.', 'answer': 'Burgess Meredith, Cesar Romero, Frank Gorshin, Lee Meriwether', 'category': 'Comic Book'}, {'question': 'What 1999 comedy starred Richard Gere, Julia Roberts, Joan Cusack, and Héctor Elizondo?', 'answer': 'Runaway Bride', 'category': '1990s'}, {'question': 'Name the movie that Cruise stars as Captain Nathan Algren.', 'answer': 'The Last Samurai', 'category': 'Tom Cruise'}, {'question': 'Who directed the Liam Neeson movie The Grey?', 'answer': 'Joe Carnahan', 'category': 'Directors'}, {'question': 'Who played the lead character, Beatrice "Tris" Prior, in the Divergent films?', 'answer': 'Shailene Woodley', 'category': 'Action/Adventure'}, {'question': "Who plays Dr. Aaron Conners, Amy Schumer's co-lead in Trainwreck?", 'answer': 'Bill Hader', 'category': 'Rom-Coms'}, {'question': 'In the film Spotlight, Michael Keaton and Mark Ruffalo work for which newspaper?', 'answer': 'the Boston Globe', 'category': 'Dramas'}, {'question': "Who played reporter Vicki Vale in Tim Burton's Batman?", 'answer': 'Kim Basinger', 'category': 'Comic Book'}, {'question': 'Who directed the first Hellboy film?', 'answer': 'Guillermo del Toro', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the name of Dwayne Johnson's character in Moana?", 'answer': 'Maui', 'category': 'Animated'}, {'question': 'A cricket bat is used to fight off zombies in what horror comedy?', 'answer': 'Shaun of the Dead', 'category': 'Horror/Thriller'}, {'question': 'What movie features the song "Scotty Doesn\'t Know" as a running gag throughout the film?', 'answer': 'EuroTrip', 'category': 'Comedies'}, {'question': 'Besides Leonardo DiCaprio and Kate Winslet, what other Titanic star appeared in Revolutionary Road?', 'answer': 'Kathy Bates', 'category': 'Kate Winslet'}, {'question': "Who plays the older Michael Berg and Kate Winslet's co-lead in The Reader?", 'answer': 'Ralph Fiennes', 'category': 'Kate Winslet'}, {'question': 'Kate Winslet played the villain, Jeanine Matthews, in this film franchise, based off a series of young adult books.', 'answer': 'Divergent (in Divergent, Insurgent)', 'category': 'Kate Winslet'}, {'question': 'Kate Winslet starred opposite Michael Fassbender in this 2015 biopic.', 'answer': 'Steve Jobs', 'category': 'Kate Winslet'}, {'question': 'Ryan Reynolds tells his daughter the story of how he met her mother in what 2008 film?', 'answer': 'Definitely, Maybe', 'category': 'Rom-Coms'}, {'question': "What was Amélie's occupation in the charming romantic comedy Amélie?", 'answer': 'a waitress', 'category': 'Rom-Coms'}, {'question': 'In the rom-com Dave, who plays First Lady Ellen Mitchell?', 'answer': 'Sigourney Weaver', 'category': 'Rom-Coms'}, {'question': 'In which film will you find Paul Rudd, a real estate agent, in search for a male best friend?', 'answer': 'I Love You, Man', 'category': 'Rom-Coms'}, {'question': "Who played McConaughey's co-lead Rayon in Dallas Buyers Club?", 'answer': 'Jared Leto', 'category': 'Matthew McConaughey'}, {'question': 'Who plays George Wade, an arrogant billionaire real estate tycoon in Two Weeks Notice?', 'answer': 'Hugh Grant', 'category': 'Sandra Bullock'}, {'question': 'Paul Schrader was the screenwriter of which Martin Scorsese film?', 'answer': 'Raging Bull', 'category': 'Martin Scorsese'}, {'question': "John Candy plays Uncle Buck in the John Hughes comedy. Who plays Buck's young nephew that he is watching?", 'answer': 'Macaulay Culkin', 'category': 'Comedies'}, {'question': "Who plays Mikey's mother in Look Who's Talking?", 'answer': 'Kirstie Alley', 'category': 'Rom-Coms'}, {'question': 'What 1990s war film starring Jeff Daniels was shot on the battlefields where the actual events took place?', 'answer': 'Gettysburg', 'category': 'Dramas'}, {'question': 'Who voiced the lead villain Scarlet Overkill in the 2015 film Minions?', 'answer': 'Sandra Bullock', 'category': 'Animated'}, {'question': 'Who directed Ghostbusters II?', 'answer': 'Ivan Reitman', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays Buddy's biological father Walter Hobbs in Elf?", 'answer': 'James Caan', 'category': 'Family'}, {'question': "What 1993 movie stars Michael Douglas as a divorced defense engineer trekking through Los Angeles to get to his daughter's birthday party?", 'answer': 'Falling Down', 'category': 'Thriller'}, {'question': 'Complete the quote from Terminator 2: "I need your clothes, your boots and your ___.".', 'answer': 'motorcycle', 'category': 'Action/Adventure'}, {'question': 'Who played Dr. Loomis in the Rob Zombie remake of Halloween?', 'answer': 'Malcolm McDowell', 'category': 'Horror'}, {'question': "What was the name of the first sequel to James Whale's 1931 classic Frankenstein?", 'answer': 'Bride of Frankenstein', 'category': 'Horror'}, {'question': 'In 1992\'s Bram Stoker\'s Dracula, Winona Ryder\'s Mina Murray was a "dead ringer" for Count Dracula\'s deceased love, whose name was what?', 'answer': 'Elisabeta', 'category': 'Horror'}, {'question': 'In Army of Darkness, what does Ash call his double-barreled Remington shotgun?', 'answer': 'the Boomstick', 'category': 'Horror'}, {'question': 'Who co-stars with Tyler Labine as Tucker McGee as a pair of well-meaning hillbillies who are mistaken for killers in Tucker & Dale vs. Evil?', 'answer': 'Alan Tudyk', 'category': 'Horror'}, {'question': 'In the record throwing scene in Shaun of the Dead, which superhero soundtrack did Ed throw at the zombies?', 'answer': 'Batman (1989)', 'category': 'Horror'}, {'question': 'What year saw the release of the John Hughes classic The Breakfast Club?', 'answer': '1985', 'category': 'Release Dates'}, {'question': 'Matthew McConaughey won his Oscar for Dallas Buyers Club, which was released in what year?', 'answer': '2013', 'category': 'Release Dates'}, {'question': 'What year saw Alicia Silverstone bring the character of Cher Horowitz to the big screen in Clueless?', 'answer': '1995', 'category': 'Release Dates'}, {'question': "John Carpenter's Big Trouble in Little China punched its way to theaters in what year?", 'answer': '1986', 'category': 'Release Dates'}, {'question': 'Jim Carrey played Truman Burbank, an unknowing reality TV superstar in the Truman Show released in what year?', 'answer': '1998', 'category': 'Release Dates'}, {'question': 'The war drama The Thin Red Line was released in what year?', 'answer': '1998', 'category': 'Release Dates'}, {'question': "Who plays the prosecutor working Jodie Foster's case in The Accused?", 'answer': 'Kelly McGillis', 'category': 'Jodie Foster'}, {'question': 'Which 1976 Soviet sci-fi film was remade in 2002, starring George Clooney and Natascha McElhone?', 'answer': 'Solaris', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played Johnny Cash's wife June in Walk the Line?", 'answer': 'Reese Witherspoon', 'category': 'Biopics'}, {'question': 'Who played Mr. Wilson in the 1993 live-action film Dennis the Menace?', 'answer': 'Walter Matthau', 'category': 'Family'}, {'question': 'Who plays Selena in the movie 28 Days Later?', 'answer': 'Naomie Harris', 'category': 'Horror/Thriller'}, {'question': "In 1984's The Karate Kid, what color did Daniel have to paint Mr. Miyagi's house, as part of his training?", 'answer': 'green', 'category': '1980s'}, {'question': 'Who played Al Capone in The Untouchables?', 'answer': 'Robert De Niro', 'category': 'Dramas'}, {'question': 'Alongside Deepwater Horizon, what other Peter Berg film was released in 2016?', 'answer': 'Patriots Day', 'category': 'Directors'}, {'question': 'Who plays General Pentecost in Pacific Rim?', 'answer': 'Idris Elba', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays Sandra Bullock's co-lead in 2013's The Heat?", 'answer': 'Melissa McCarthy', 'category': 'Comedies'}, {'question': 'In The Land Before Time, what is the name of the young longneck protagonist?', 'answer': 'Littlefoot', 'category': 'Animated'}, {'question': "You'll find a despicable gang leader by the name of Toecutter in what action film?", 'answer': 'Mad Max', 'category': 'Action/Adventure'}, {'question': "What sport is the focus of Clint Eastwood's Invictus?", 'answer': 'rugby', 'category': 'Clint Eastwood'}, {'question': "What 1971 film is about a radio DJ who is stalked by an obsessed fan and was Clint Eastwood's directorial debut?", 'answer': 'Play Misty for Me', 'category': 'Clint Eastwood'}, {'question': 'Tom Hanks and Aaron Eckhart star together in this 2016 Clint Eastwood film.', 'answer': 'Sully', 'category': 'Clint Eastwood'}, {'question': 'Clint Eastwood starred as an aging baseball scout in this 2012 sports drama opposite Amy Adams and Justin Timberlake.', 'answer': 'Trouble with the Curve', 'category': 'Clint Eastwood'}, {'question': 'Name the Will Ferrell comedy from the quote "You have the voice of an angel. Your voice is like a combination of Fergie and Jesus.".', 'answer': 'Step Brothers', 'category': 'Comedies'}, {'question': "In MacGruber, what was MacGruber's signature move?", 'answer': 'a throat rip', 'category': 'Comedies'}, {'question': "Before he was a stay-at-home dad, what was Bernie Focker's profession in Meet the Fockers?", 'answer': 'a lawyer', 'category': 'Comedies'}, {'question': 'Aaron Eckhart stars as spin doctor Nick Naylor in this 2006 comedy.', 'answer': 'Thank You for Smoking', 'category': 'Comedies'}, {'question': 'In what film does Sandra Bullock play a newspaper columnist recovering from alcoholism?', 'answer': '28 Days', 'category': 'Sandra Bullock'}, {'question': 'Who directed the 1936 spy film Secret Agent?', 'answer': 'Alfred Hitchcock', 'category': 'Spy'}, {'question': 'What 1981 sports comedy stars Burt Reynolds, Roger Moore, and Farrah Fawcett?', 'answer': 'The Cannonball Run', 'category': 'Sports'}, {'question': 'Name the actor who played "the Jock" in The Breakfast Club.', 'answer': 'Emilio Estevez', 'category': 'Coming of Age'}, {'question': "Who played the villainous Curly Bill in 1993's Tombstone?", 'answer': 'Powers Boothe', 'category': 'Westerns'}, {'question': 'Who played the father of the family led into a comedy adventure by Kurt Russell in the 1992 comedy Captain Ron?', 'answer': 'Martin Short', 'category': '1990s'}, {'question': 'Arnold Schwarzenegger plays Detective John Kimble in what movie?', 'answer': 'Kindergarten Cop', 'category': 'Action/Adventure'}, {'question': 'In 1989, Steven Spielberg directed Indiana Jones and the Last Crusade and what other film?', 'answer': 'Always', 'category': 'Directors'}, {'question': 'Robert Benton directed what 90s crime film starring Bruce Willis, Dustin Hoffman, Loren Dean, and Nicole Kidman?', 'answer': 'Billy Bathgate', 'category': 'Dramas'}, {'question': 'How many feature films are in the Ice Age series?', 'answer': '5 (Ice Age, The Meltdown, Dawn of the Dinosaurs, Continental Drift, Collision Course)', 'category': 'Animated'}, {'question': "Name the actor that played Roy Tomlin, the father trying to get his son away from the government in 2016's Midnight Special.", 'answer': 'Michael Shannon', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Airplane!, who plays Steve McCroskey, the head air traffic controller who has to manage the crisis from the ground?', 'answer': 'Lloyd Bridges', 'category': 'Comedies'}, {'question': 'Which horror film stars Gregory Peck as an American ambassador who fears his son may be the Antichrist after a series of mysterious deaths?', 'answer': 'The Omen', 'category': 'Horror/Thriller'}, {'question': "What is the name of the person trying to steal Wonka's candy secrets in Willy Wonka & the Chocolate Factory?", 'answer': 'Arthur Slugworth', 'category': 'Family'}, {'question': 'In Happy Feet, what famous actor voices the penguin named Memphis?', 'answer': 'Hugh Jackman', 'category': 'Animated'}, {'question': 'What was the name of the wise and mystical leader of the rats in The Secret of NIMH?', 'answer': 'Nicodemus', 'category': 'Animated'}, {'question': "What is the name of Mufasa's number one advisor voiced by Rowan Atkinson?", 'answer': 'Zazu (in The Lion King)', 'category': 'Animated'}, {'question': "What is the name of Kristoff's reindeer in Frozen?", 'answer': 'Sven', 'category': 'Animated'}, {'question': "What iconic horror score is Norman's cell phone ringtone in ParaNorman?", 'answer': 'Halloween', 'category': 'Animated'}, {'question': 'What breed of dragon is Toothless in How to Train Your Dragon?', 'answer': 'a Night Fury', 'category': 'Animated'}, {'question': "What actress played John Wayne's wife in Big Jake, her fifth and final film with the Duke?", 'answer': "Maureen O'Hara", 'category': 'Westerns'}, {'question': 'Who wrote, directed, and starred in the 2008 western Appaloosa?', 'answer': 'Ed Harris', 'category': 'Westerns'}, {'question': 'What action star played the character Handsome Stranger in the 1979 western parody film The Villain?', 'answer': 'Arnold Schwarzenegger', 'category': 'Westerns'}, {'question': 'What South American country do Butch and Sundance escape to in Butch Cassidy and the Sundance Kid?', 'answer': 'Bolivia', 'category': 'Westerns'}, {'question': 'What singer played the Texas Ranger La Boeuf in the 1969 version of True Grit?', 'answer': 'Glen Campbell', 'category': 'Westerns'}, {'question': 'Val Kilmer and Dennis Quaid played what famous western legend in Tombstone and Wyatt Earp respectively?', 'answer': 'Doc Holliday', 'category': 'Westerns'}, {'question': 'Who plays blonde bombshell Lynn Bracken in L.A. Confidential?', 'answer': 'Kim Basinger', 'category': 'Crime'}, {'question': 'In The Disaster Artist, who plays Philip Haldiman, the actor who portrays "Denny"?', 'answer': 'Josh Hutcherson', 'category': 'New Releases'}, {'question': 'What 2013 coming-of-age film features Toni Collette, Steve Carell, Sam Rockwell, and Allison Janney?', 'answer': 'The Way, Way Back', 'category': 'Coming of Age'}, {'question': 'The quotes "You mean you have to use your hands?" and "That\'s like a baby\'s toy!" are featured in which time travel film?', 'answer': 'Back to the Future Part II', 'category': 'Quotes'}, {'question': 'In what film do two boys and a girl hitchhike cross country to compete in the ultimate video game championship featuring Super Mario Bros. 3?', 'answer': 'The Wizard', 'category': 'Action/Adventure'}, {'question': 'A 35-year-old video game tester has to move in with three elderly women in what film?', 'answer': "Grandma's Boy", 'category': 'Comedies'}, {'question': 'Who directed Labyrinth?', 'answer': 'Jim Henson', 'category': 'Directors'}, {'question': 'Double Dragon and Street Fighter both came out in what year?', 'answer': '1994', 'category': 'Release Dates'}, {'question': 'What horror franchise based off a video game stars Milla Jovovich?', 'answer': 'Resident Evil', 'category': 'Horror'}, {'question': 'What documentary is about breaking the world record for the highest score on Donkey Kong?', 'answer': 'The King of Kong: A Fistful of Quarters', 'category': 'Documentary'}, {'question': 'Don Rickles voiced what character in the Toy Story films?', 'answer': 'Mr. Potato Head', 'category': 'Animated'}, {'question': 'Which video game character did Jean-Claude Van Damme play in Street Fighter?', 'answer': 'Guile', 'category': 'Video Game'}, {'question': "In Ready Player One, what is the avatar name of Tye Sheridan's Wade Watts?", 'answer': 'Parzival', 'category': 'Video Game'}, {'question': "Who played Mario Mario in 1993's Super Mario Bros.?", 'answer': 'Bob Hoskins', 'category': 'Video Game'}, {'question': 'How many Resident Evil films are there?', 'answer': '6 (Resident Evil, Apocalypse, Extinction, Afterlife, Retribution, The Final Chapter)', 'category': 'Video Game'}, {'question': 'A woman named Rose goes in search for her adopted daughter within the confines of a strange desolate town in what film?', 'answer': 'Silent Hill', 'category': 'Video Game'}, {'question': 'Who plays President Will Cooper in Pixels?', 'answer': 'Kevin James', 'category': 'Video Game'}, {'question': "In The Muppet Movie, which comedian cameos as a sarcastic waiter during Kermit and Miss Piggy's first date?", 'answer': 'Steve Martin', 'category': 'Jim Henson'}, {'question': 'What Academy Award nominated song is featured in The Muppet Movie?', 'answer': 'Rainbow Connection', 'category': 'Jim Henson'}, {'question': 'In what Muppet film does Kermit lose his memory?', 'answer': 'The Muppets Take Manhattan', 'category': 'Jim Henson'}, {'question': 'Who plays prison guard Nadya in Muppets Most Wanted?', 'answer': 'Tina Fey', 'category': 'Jim Henson'}, {'question': "In Labyrinth, what is the name of Sarah's baby brother?", 'answer': 'Toby Williams', 'category': 'Jim Henson'}, {'question': 'What feature-length Muppet film was the first directed by Jim Henson?', 'answer': 'The Great Muppet Caper', 'category': 'Jim Henson'}, {'question': 'Outside of the Robert Langdon films, Tom Hanks has played the same character more than once in one other franchise. What franchise is that?', 'answer': 'Toy Story', 'category': 'Tom Hanks'}, {'question': 'What is the name of the limousine driver that escorts John McClane to the Nakatomi tower in Die Hard?', 'answer': 'Argyle', 'category': 'Action/Adventure'}, {'question': "In 1991's Father of the Bride, who plays the eccentric coordinator's assistant, Howard Weinstein?", 'answer': 'BD Wong', 'category': '1990s'}, {'question': 'What is the title of the fourth installment in the Pirates of the Caribbean franchise?', 'answer': 'Pirates of the Caribbean: On Stranger Tides', 'category': 'Action/Adventure'}, {'question': 'What film, released in 2002, won Best Picture at the Academy Awards?', 'answer': 'Chicago', 'category': 'Oscars'}, {'question': 'Paul Newman reprises his role of Eddie Felson in what Martin Scorsese sports drama?', 'answer': 'The Color of Money', 'category': 'Dramas'}, {'question': 'What actor shows up at the end of the game in Space Jam to help Michael Jordan and the Tunes win the game?', 'answer': 'Bill Murray', 'category': 'Family'}, {'question': 'This Academy Award winning actress played the titular nanny in the Nanny McPhee films.', 'answer': 'Emma Thompson', 'category': 'Fantasy/Sci-Fi'}, {'question': "In the movie Snatched, Amy Schumer's mom is played by what actress?", 'answer': 'Goldie Hawn', 'category': 'Comedies'}, {'question': 'In Rear Window, who stars as the beautiful socialite love interest, Lisa Carol Fremont?', 'answer': 'Grace Kelly', 'category': 'Horror/Thriller'}, {'question': 'Which SNL alum has provided his voice for roles in the animated films Inside Out, Cloudy with a Chance of Meatballs, and Sausage Party?', 'answer': 'Bill Hader', 'category': 'Animated'}, {'question': 'In what year was Apollo 13 released?', 'answer': '1995', 'category': 'Release Dates'}, {'question': "Tim Burton's Sweeney Todd: The Demon Barber of Fleet Street was released in what year?", 'answer': '2007', 'category': 'Release Dates'}, {'question': 'The Clint Eastwood classic Dirty Harry was released in what year?', 'answer': '1971', 'category': 'Release Dates'}, {'question': "Sam Rami's horror classic The Evil Dead creeped onto the silver screen in what year?", 'answer': '1983', 'category': 'Release Dates'}, {'question': 'Who won an Oscar for playing Queen Elizabeth I in Shakespeare in Love?', 'answer': 'Judi Dench', 'category': 'Oscars'}, {'question': 'What was the last film Tom Hanks was nominated for an acting Academy Award?', 'answer': 'Cast Away', 'category': 'Oscars'}, {'question': 'Citizen Kane famously did not win Best Picture. What film beat it to win Best Picture for films released in 1941?', 'answer': 'How Green Was My Valley', 'category': 'Oscars'}, {'question': 'For what movie did Frank Sinatra win his Oscar for Best Supporting Actor?', 'answer': 'From Here to Eternity', 'category': 'Oscars'}, {'question': 'Name the action film released in 2001 that stars Brad Pitt opposite Robert Redford.', 'answer': 'Spy Game', 'category': '2000s'}, {'question': 'Matthew McConaughey plays a video store clerk who agrees to have his life filmed by a camera crew for a television show in what film?', 'answer': 'EDtv', 'category': 'Matthew McConaughey'}, {'question': 'Name the 80s movie starring Eric Stoltz about a teenager with a skull deformity attempting to live as normal a life as possible.', 'answer': 'Mask', 'category': '1980s'}, {'question': 'Who plays Command Master Chief John James Urgayle in the 1997 film G.I. Jane?', 'answer': 'Viggo Mortensen', 'category': 'War'}, {'question': 'In Oscars history, only three films have won the "Big 5" for Best Picture, Director, Actor, Actress, and Screenplay. Name two.', 'answer': "It Happened One Night, One Flew Over the Cuckoo's Nest, The Silence of the Lambs", 'category': 'Oscars'}, {'question': 'In The Lion, the Witch and the Wardrobe, what English character actor and Harry Potter vet plays Professor Kirke, who takes in the Pevensie children?', 'answer': 'Jim Broadbent', 'category': 'Fantasy/Sci-Fi'}, {'question': "What was the name of the bar in Missouri that Dalton bounces for in 1989's Road House?", 'answer': 'the Double Deuce', 'category': 'Action/Adventure'}, {'question': 'What movie got M. Night Shyamalan his two Oscar nominations?', 'answer': 'The Sixth Sense (for Director, Screenplay Written Directly for the Screen)', 'category': 'Oscars'}, {'question': "Who plays House of Representatives member and slavery opponent Thaddeus Stevens in Spielberg's Lincoln?", 'answer': 'Tommy Lee Jones', 'category': 'Dramas'}, {'question': "Who voiced Rocky Rhodes in 2000's Chicken Run?", 'answer': 'Mel Gibson', 'category': 'Animated'}, {'question': 'What is the name of the sixth Harry Potter film?', 'answer': 'Harry Potter and the Half-Blood Prince', 'category': 'Fantasy/Sci-Fi'}, {'question': "Name the actress who played Carla Purty in 1996's The Nutty Professor.", 'answer': 'Jada Pinkett Smith', 'category': 'Comedies'}, {'question': 'Whom does Will Smith try to help with his romantic problems in Hitch?', 'answer': 'Kevin James', 'category': 'Rom-Coms'}, {'question': 'In which 1999 film does Josh Hartnett play a drug dealing delinquent named Zeke Tyler?', 'answer': 'The Faculty', 'category': 'Horror'}, {'question': "What was Cuba Gooding Jr.'s feature film debut?", 'answer': 'Coming to America', 'category': 'Famous Actors & Actresses'}, {'question': 'What instrument is Chico Marx famous for playing in several Marx Brothers films?', 'answer': 'the piano (in The Cocoanuts, Animal Crackers, Monkey Business, Horse Feathers, A Night at the Opera, A Day at the Races, At the Circus, Go West, The Big Store, A Night in Casablanca, Love Happy)', 'category': 'Famous Actors & Actresses'}, {'question': 'Who plays the hitchhiker that Johnny Depp and Benicio del Toro pick up at the beginning of Fear and Loathing in Las Vegas?', 'answer': 'Tobey Maguire', 'category': 'Famous Actors & Actresses'}, {'question': "What crime film was Jason Statham's theatrical film debut?", 'answer': 'Lock, Stock and Two Smoking Barrels', 'category': 'Famous Actors & Actresses'}, {'question': 'In Smokey and the Bandit, what country western music star plays the Bandit\'s "good buddy" Cledus "Snowman" Snow?', 'answer': 'Jerry Reed', 'category': '1970s'}, {'question': 'In Young Frankenstein who plays the lovely young assistant Inga?', 'answer': 'Teri Garr', 'category': '1970s'}, {'question': 'What island/beach do the attacks in Jaws take place?', 'answer': 'Amity Island', 'category': '1970s'}, {'question': 'Who plays the lead role of Jonathan E. in the 1975 movie Rollerball?', 'answer': 'James Caan', 'category': '1970s'}, {'question': 'Who plays a Statesman agent by the name of Tequila in Kingsman: The Golden Circle?', 'answer': 'Channing Tatum', 'category': 'Action/Adventure'}, {'question': 'What dining establishment does Scott Lang work at immediately after getting out of prison in Ant-Man?', 'answer': 'Baskin-Robbins', 'category': 'Comic Book'}, {'question': 'Who starred opposite Meryl Streep in Out of Africa?', 'answer': 'Robert Redford', 'category': 'Dramas'}, {'question': 'What is the name of the kingdom that Shrek and Fiona are going to in Shrek 2?', 'answer': 'Far Far Away', 'category': 'Animated'}, {'question': 'John Williams composed the iconic score for Star Wars in 1977. What other sci-fi film did he also score that year?', 'answer': 'Close Encounters of the Third Kind', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Mrs. Doubtfire, before Daniel Hillard started cleaning houses, what did he do for freelance work in the field of entertainment?', 'answer': 'voice acting', 'category': 'Comedies'}, {'question': 'Quentin Tarantino has won two Oscars for Best Original Screenplay. For what movie did he win his first?', 'answer': 'Pulp Fiction', 'category': 'Oscars'}, {'question': 'The Oscar-nominated Lady Bird takes place primarily in what California city?', 'answer': 'Sacramento', 'category': 'Coming of Age'}, {'question': 'What is the name of the volcano that is the only place the Ring of Power can be destroyed in The Lord of the Rings?', 'answer': 'Mount Doom', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who provides the voice of Pizza the Hutt in the 1987 comedy Spaceballs?', 'answer': 'Dom DeLuise', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays Elisa's friend and next-door neighbor Giles in The Shape of Water?", 'answer': 'Richard Jenkins', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the 2011 film In Time, the human population stops aging at what age?', 'answer': '25 years old', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the 1986 remake of The Little Shop of Horrors?', 'answer': 'Frank Oz', 'category': 'Directors'}, {'question': 'Who directed the 2016 action crime thriller The Accountant starring Ben Affleck?', 'answer': "Gavin O'Connor", 'category': 'Directors'}, {'question': 'Tate Taylor directed what 2011 film starring Emma Stone and Viola Davis?', 'answer': 'The Help', 'category': 'Directors'}, {'question': 'Who directed the 2014 sci-fi flick Lucy?', 'answer': 'Luc Besson', 'category': 'Directors'}, {'question': "Who plays reporter Kevin Doyle in 2008's 27 Dresses?", 'answer': 'James Marsden', 'category': 'Rom-Coms'}, {'question': 'What film features original songs "Brown Shoes", "Girls", and \'Drive It Like You Stole It"?', 'answer': 'Sing Street', 'category': 'Rom-Coms'}, {'question': "Deborah Foreman played the title character in 1983's Valley Girl. Who played her punk rocker love interest, Randy?", 'answer': 'Nicolas Cage', 'category': 'Rom-Coms'}, {'question': "In Clueless, while being held at gunpoint, Cher refuses to lay on the ground because she doesn't want to ruin her dress by which totally important designer?", 'answer': 'Alaïa', 'category': 'Rom-Coms'}, {'question': 'Brad Pitt plays a character by the name of Billy Beane in what film?', 'answer': 'Moneyball', 'category': 'Brad Pitt'}, {'question': 'In what movie does Owen Wilson play the father to Auggie, the main protagonist of the movie?', 'answer': 'Wonder', 'category': 'New Releases'}, {'question': 'In American Psycho, who plays victim Paul Allen, who Patrick Bateman murders with an axe?', 'answer': 'Jared Leto', 'category': 'Horror'}, {'question': 'Catherine Keener and Bradley Whitford play the Armitages in what thriller?', 'answer': 'Get Out', 'category': 'Thriller'}, {'question': "In this film, an affluent New York couple finds their lives touched, intruded upon, and compelled by Will Smith's character, who is never quite who he says he is.", 'answer': 'Six Degrees of Separation', 'category': 'Will Smith'}, {'question': "Who plays the real Ra's al Ghul in Batman Begins?", 'answer': 'Liam Neeson', 'category': 'Comic Book'}, {'question': "Who plays Robert Redford's love interest in The Natural?", 'answer': 'Glenn Close', 'category': 'Sports'}, {'question': 'This bro-centric 2014 rom-com starred Zac Efron, Miles Teller, and Michael B. Jordan.', 'answer': 'That Awkward Moment', 'category': 'Rom-Coms'}, {'question': 'What 2001 David Duchovny Julianne Moore sci-fi comedy sees two college professors, a firefighting cadet, and a geeky government scientist trying to save the world from aliens?', 'answer': 'Evolution', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed 28 Days Later?', 'answer': 'Danny Boyle', 'category': 'Horror/Thriller'}, {'question': "In Saving Private Ryan, what job did Tom Hanks' character have before the war?", 'answer': 'a high school English teacher', 'category': 'Dramas'}, {'question': 'Fix-It Felix Jr. is the name of the primary video game in what animated film?', 'answer': 'Wreck-It Ralph', 'category': 'Animated'}, {'question': 'Gary Oldman won an Oscar for Best Actor with Darkest Hour. Which 2011 film was he nominated for Best Actor?', 'answer': 'Tinker Tailor Soldier Spy', 'category': 'Oscars'}, {'question': "Who plays Jason Sudeikis' cocaine addict boss, Bobby Pellit, in Horrible Bosses?", 'answer': 'Colin Farrell', 'category': 'Comedies'}, {'question': 'Clear and Present Danger and Patriot Games have Harrison Ford play which iconic literary character?', 'answer': 'Jack Ryan', 'category': 'Action/Adventure'}, {'question': "What is Benny Rodriguez's baseball nickname in The Sandlot?", 'answer': 'the Jet', 'category': 'Sports'}, {'question': 'Water for Elephants features Reese Witherspoon and what other Oscar-winning actor?', 'answer': 'Christoph Waltz', 'category': 'Romance'}, {'question': "What actor appeared in both Valentine's Day and Silver Linings Playbook?", 'answer': 'Bradley Cooper', 'category': 'Romance'}, {'question': "Who directed the 1985 Brat Pack film St. Elmo's Fire?", 'answer': 'Joel Schumacher', 'category': 'Romance'}, {'question': 'What does Claire Danes sell in the 2005 romantic drama Shopgirl?', 'answer': 'gloves', 'category': 'Romance'}, {'question': 'What kind of pet does Bob Wiley keep in What About Bob??', 'answer': 'a goldfish', 'category': 'Comedies'}, {'question': "According to Meryl Streep's Miranda Priestly, what is the actual color of Andy's blue sweater in The Devil Wears Prada?", 'answer': 'cerulean', 'category': 'Comedies'}, {'question': "In A Million Ways to Die in the West, what is the profession of Seth MacFarlane's character?", 'answer': 'a sheepherder', 'category': 'Comedies'}, {'question': "In The Big Lebowski, what political figure appears as a bowling alley attendant during the Dude's dream sequence?", 'answer': 'Saddam Hussein', 'category': 'Comedies'}, {'question': "Name two of the four actors that played the four untouchable officers in Brian De Palma's The Untouchables.", 'answer': 'Andy García, Charles Martin Smith, Kevin Costner, Sean Connery', 'category': 'Crime'}, {'question': "In Meet the Parents, what happens to Pam's sister Deborah when everyone is playing volleyball in the pool?", 'answer': 'Greg unintentionally gives her a broken nose and a black eye', 'category': 'Comedies'}, {'question': 'Tom Hardy plays a disgraced member of the Russian Military Police who investigates a series of child murders during the Stalin-era Soviet Union in what mystery thriller?', 'answer': 'Child 44', 'category': 'Dramas'}, {'question': "Who directed 1983's Videodrome?", 'answer': 'David Cronenberg', 'category': 'Horror'}, {'question': 'What film stars Gene Wilder, Teri Garr, and Madeline Kahn?', 'answer': 'Young Frankenstein', 'category': 'Comedies'}, {'question': 'Minnie is the name of the woman who owns the haberdashery in what film?', 'answer': 'The Hateful Eight', 'category': 'Quentin Tarantino'}, {'question': 'What biopic did Martin Scorsese direct in 1980?', 'answer': 'Raging Bull', 'category': 'Biopics'}, {'question': 'Who directed the 2008 film Hunger starring Michael Fassbender?', 'answer': 'Steve McQueen', 'category': '2000s'}, {'question': "In 1951's Disney's Alice in Wonderland, the Queen orders the playing cards to paint the roses what color?", 'answer': 'red', 'category': 'Animated'}, {'question': "Bill and Ted use what snack to lure Genghis Khan into their time machine in Bill & Ted's Excellent Adventure?", 'answer': 'Twinkies', 'category': '1980s'}, {'question': 'Fred Zinnemann directed Burt Lancaster, Montgomery Clift, and Deborah Kerr in what 1950s WWII film?', 'answer': 'From Here to Eternity', 'category': 'War'}, {'question': 'Who stars opposite Jennifer Garner as grown-up Matt in the 2004 film 13 Going on 30?', 'answer': 'Mark Ruffalo', 'category': 'Rom-Coms'}, {'question': 'The 2013 film World War Z stars Brad Pitt as a former UN investigator fighting off what sort of monster?', 'answer': 'zombies', 'category': 'Disaster'}, {'question': 'Shirley MacLaine and Jack Lemmon starred in this 1960 film, directed by Billy Wilder.', 'answer': 'The Apartment', 'category': 'Classics'}, {'question': 'What composer did the scores from the following movies: Thor, Rise of the Planet of the Apes, and Brave?', 'answer': 'Patrick Doyle', 'category': 'Scores & Soundtracks'}, {'question': "Who played Dr. Sam Loomis in 1978's Halloween?", 'answer': 'Donald Pleasence', 'category': 'John Carpenter'}, {'question': 'What color of ball indicates a premeditated murder in Minority Report?', 'answer': 'red', 'category': 'Steven Spielberg'}, {'question': 'For the 2001 Academy Awards, Steven Soderbergh received Best Director nominations for two different movies. Name them.', 'answer': 'Erin Brockovich, Traffic', 'category': 'Oscars'}, {'question': 'What 1988 mystery thriller stars Harrison Ford as a jet-lagged man in Paris searching for his missing wife?', 'answer': 'Frantic', 'category': 'Mystery'}, {'question': "This actress played opposite Ray Milland in Hitchcock's Dial M for Murder.", 'answer': 'Grace Kelly', 'category': 'Alfred Hitchcock'}, {'question': "In Full Metal Jacket, what nickname is given to Vincent D'Onofrio's Private Lawrence?", 'answer': 'Gomer Pyle', 'category': 'Stanley Kubrick'}, {'question': 'Tom Hanks starred in two films in 2013 where he portrayed a nonfictional person. Name one of the two films.', 'answer': 'Captain Phillips, Saving Mr. Banks', 'category': 'Tom Hanks'}, {'question': 'Natalie Portman starred opposite Zach Braff and Peter Sarsgaard in this 2004 film.', 'answer': 'Garden State', 'category': 'Natalie Portman'}, {'question': "In Ferris Bueller's Day Off, what is the name of the principal's assistant?", 'answer': 'Grace', 'category': 'Coming of Age'}, {'question': 'In Avengers: Infinity War, what movie does Peter Parker reference to Tony Stark before ejecting Ebony Maw out into space?', 'answer': 'Aliens', 'category': 'New Releases'}, {'question': 'What film did Christopher Nolan direct before Batman Begins?', 'answer': 'Following, Memento, Insomnia', 'category': 'Christopher Nolan'}, {'question': 'Which superhero television actress played the love interest of Miles Teller in the film Whiplash?', 'answer': 'Melissa Benoist', 'category': 'Dramas'}, {'question': 'How many Academy Awards has Meryl Streep won in her career?', 'answer': "3 (for Kramer vs. Kramer, Sophie's Choice, The Iron Lady)", 'category': 'Meryl Streep'}, {'question': "Who plays Minister Mason, Minister Wilford's right hand, in 2014's Snowpiercer?", 'answer': 'Tilda Swinton', 'category': 'Sci-Fi'}, {'question': 'Who plays the lead psychiatrist Dr. John Cawley in Shutter Island?', 'answer': 'Ben Kingsley', 'category': 'Martin Scorsese'}, {'question': 'What 1967 musical was remade as an Eddie Murphy comedy in 1998?', 'answer': 'Doctor Dolittle (as Dr. Dolittle)', 'category': 'Musicals'}, {'question': 'What 2013 film, starring Daniel Radcliffe and Dane DeHaan, told the story of the great poets of the beat generation: Allen Ginsberg, William Burroughs, and Jack Kerouac?', 'answer': 'Kill Your Darlings', 'category': 'Festival Darlings'}, {'question': 'What James Bond movie saw Javier Bardem as the main antagonist?', 'answer': 'Skyfall', 'category': 'James Bond'}, {'question': 'A 16-year-old girl who was raised by her father to be the perfect assassin is being tracked by an intelligence agent played by Cate Blanchett in what film?', 'answer': 'Hanna', 'category': 'Cate Blanchett'}, {'question': 'Who played British Captain James Conrad in Kong: Skull Island?', 'answer': 'Tom Hiddleston', 'category': 'Monster'}, {'question': 'What is the name of the U.S. marshal played by both John Wayne and Jeff Bridges in their respective True Grit films?', 'answer': 'Rooster Cogburn', 'category': 'Westerns'}, {'question': "Who plays cook and Petty Officer Second Class Dorie Miller in Michael Bay's Pearl Harbor?", 'answer': 'Cuba Gooding Jr.', 'category': 'Action'}, {'question': 'What movie, directed by John Sayles, details the 1919 Chicago White Sox, or Black Sox, as they were called?', 'answer': 'Eight Men Out', 'category': 'Sports'}, {'question': 'This holiday classic stars Bing Crosby, Danny Kaye, Vera-Ellen, and Rosemary Clooney.', 'answer': 'White Christmas', 'category': 'Holiday'}, {'question': 'Who directed the film Coming to America starring Eddie Murphy?', 'answer': 'John Landis', 'category': 'Directors'}, {'question': "In Indiana Jones and the Last Crusade, on his quest to find clues regarding the Grail's location, Indy enters a crypt by busting through the floor of what kind of establishment?", 'answer': 'a library', 'category': 'Adventure'}, {'question': 'According to Tigger, what is the world\'s "most wonderful thing about Tiggers"?', 'answer': 'he is the only one', 'category': 'Disney'}, {'question': 'What film did Matthew McConaughey win his Oscar for?', 'answer': 'Dallas Buyers Club', 'category': 'Matthew McConaughey'}, {'question': 'In Liar Liar, what was Carrey\'s last confession to the cop when he was asked if there was "anything else" after being pulled over?', 'answer': 'he has unpaid parking tickets', 'category': 'Comedies'}, {'question': 'Angelina Jolie stars alongside Liev Schreiber and Chiwetel Ejiofor in what action thriller?', 'answer': 'Salt', 'category': 'Angelina Jolie'}, {'question': 'What was the title of the third Narnia film?', 'answer': 'The Chronicles of Narnia: The Voyage of the Dawn Treader', 'category': 'Fantasy'}, {'question': 'In The Social Network, other than his name, company name, and contact information, what does Mark Zuckerberg have on his business card?', 'answer': "I'm CEO, Bitch.", 'category': 'David Fincher'}, {'question': 'Who played Thelma and Louise in Thelma & Louise?', 'answer': 'Geena Davis, Susan Sarandon', 'category': 'Modern Classics'}, {'question': 'In Roman J. Israel, Esq, what actor plays cutthroat attorney George Pierce?', 'answer': 'Colin Farrell', 'category': 'Denzel Washington'}, {'question': 'What 90s comedy features a topless psychic with a third nipple?', 'answer': 'Mallrats', 'category': '1990s'}, {'question': "What legendary Hollywood director directed 1932's Scarface?", 'answer': 'Howard Hawks', 'category': 'Crime'}, {'question': 'What 2017 Steven Soderbergh film starred Channing Tatum, Adam Driver, and Riley Keough?', 'answer': 'Logan Lucky', 'category': 'Heist'}, {'question': 'Tim Burton directed Mark Wahlberg in what film?', 'answer': 'Planet of the Apes', 'category': 'Tim Burton'}, {'question': 'This Golden Age star was the first actress to win an Academy Award, a Golden Globe, and a BAFTA Award for a single performance.', 'answer': 'Audrey Hepburn (for Roman Holiday)', 'category': 'Famous Actors & Actresses'}, {'question': 'What 80s comedy had the tagline "A tale of murder, lust, greed, revenge, and seafood."?', 'answer': 'A Fish Called Wanda', 'category': 'Taglines'}, {'question': 'What year was Groundhog Day released?', 'answer': '1993', 'category': 'Release Dates'}, {'question': 'Who does the voice for the legendary adventurer Charles Muntz in the movie Up?', 'answer': 'Christopher Plummer', 'category': 'Pixar'}, {'question': "In Men in Black, who plays Agent Zed, the head of MIB and J and K's superior?", 'answer': 'Rip Torn', 'category': 'Will Smith'}, {'question': "One of Charlize Theron's first roles was a supporting one in this music film, written and directed by Tom Hanks.", 'answer': 'That Thing You Do!', 'category': 'Charlize Theron'}, {'question': 'Who plays the villainous T-1000 in Terminator 2?', 'answer': 'Robert Patrick', 'category': 'Sly & Arnie'}, {'question': "In Spaceballs, what does the bumper sticker say on the back of Lone Starr's ship?", 'answer': 'I Love Uranus', 'category': '1980s'}, {'question': "Who played the iconic character of Insp. Jacques Clouseau in 1964's The Pink Panther?", 'answer': 'Peter Sellers', 'category': 'Characters'}, {'question': 'Harry Connick Jr. wooed this actress in the 1998 film Hope Floats.', 'answer': 'Sandra Bullock', 'category': 'Romance'}, {'question': "Who played Michael Douglas' patient that he must convince to help him get his daughter back in the action thriller Don't Say a Word?", 'answer': 'Brittany Murphy', 'category': 'Thriller'}, {'question': "Who plays movie producer Les Grossman's right-hand man in the movie Tropic Thunder?", 'answer': 'Bill Hader', 'category': 'Tom Cruise'}, {'question': 'Who directed the 2016 film The Nice Guys?', 'answer': 'Shane Black', 'category': '2010s'}, {'question': 'Kevin Smith starred opposite Jennifer Garner and Timothy Olyphant in this 2007 romantic comedy about a woman who seeks comfort in his friends when her fiancé dies.', 'answer': 'Catch and Release', 'category': 'Kevin Smith'}, {'question': 'Who played the station inspector in Hugo?', 'answer': 'Sacha Baron Cohen', 'category': 'Martin Scorsese'}, {'question': 'Alison Lohman and Justin Long star in what Sam Raimi film about a loan officer who finds herself as the recipient of a supernatural curse?', 'answer': 'Drag Me to Hell', 'category': 'Horror'}, {'question': "In the movie Pretty Woman, what toiletry item does Richard Gere's character mistake for cocaine?", 'answer': 'dental floss', 'category': 'Julia Roberts'}, {'question': 'In the spy comedy Undercover Brother, who played the assassin named White She-Devil?', 'answer': 'Denise Richards', 'category': 'Spy'}, {'question': "Who plays Jack Nicholson's co-lead Evelyn Cross Mulwray in Chinatown?", 'answer': 'Faye Dunaway', 'category': '1970s'}, {'question': 'Who wrote and performed the title song for the 1985 movie Spies Like Us?', 'answer': 'Paul McCartney', 'category': 'Scores & Soundtracks'}, {'question': 'Robin Williams starred opposite Cuba Gooding Jr. in this 1998 Academy Award winning drama.', 'answer': 'What Dreams May Come', 'category': 'Robin Williams'}, {'question': 'Who played the dual roles of Lt. Stephen "Bull" McCaffrey and Capt. Dennis McCaffrey in the 1991 film Backdraft?', 'answer': 'Kurt Russell', 'category': 'Ron Howard'}, {'question': "In Inception, who plays the newest member of Cobb's crew, Ariadne, who specializes in constructing dreamscapes?", 'answer': 'Elliot Page', 'category': 'Leonardo DiCaprio'}, {'question': 'Reese Witherspoon, Mark Ruffalo, and Jon Heder starred in this 2005 romantic comedy.', 'answer': 'Just like Heaven', 'category': 'Rom-Coms'}, {'question': "Who directed the 1966 version of Ray Bradbury's Fahrenheit 451?", 'answer': 'François Truffaut', 'category': 'Directors'}, {'question': "Who plays Thor's mother in the MCU?", 'answer': 'Rene Russo', 'category': 'Comic Book'}, {'question': "What actress plays Ricky Bobby's original wife in Talladega Nights: The Legend of Ricky Bobby?", 'answer': 'Leslie Bibb', 'category': 'Sports'}, {'question': 'Who directed Kate Winslet and Josh Brolin in the movie Labor Day?', 'answer': 'Jason Reitman', 'category': 'Kate Winslet'}, {'question': 'An aging group of outlaws look for one last big score as the "traditional" American West is disappearing around them in what Sam Peckinpah western?', 'answer': 'The Wild Bunch', 'category': 'Westerns'}, {'question': 'In Kong: Skull Island, who plays the anti-war photojournalist Mason Weaver, who joins the military expedition?', 'answer': 'Brie Larson', 'category': 'Action/Adventure'}, {'question': 'Who directed Logan?', 'answer': 'James Mangold', 'category': 'Comic Book'}, {'question': 'Who plays Shoeless Joe Jackson in Field of Dreams?', 'answer': 'Ray Liotta', 'category': 'Dramas'}, {'question': "In The Wizard of Oz, which of Dorothy's three traveling companions does she meet second?", 'answer': 'the Tin Man', 'category': 'Classics'}, {'question': "Who stars as the heroic Sarah in Jim Henson's Labyrinth?", 'answer': 'Jennifer Connelly', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Clueless, who plays Tai Frasier, the "tragically unhip" new girl whom Cher decides to befriend?', 'answer': 'Brittany Murphy', 'category': 'Comedies'}, {'question': 'How many total films are there in the Saw franchise (as of July 2018)?', 'answer': '8 (Saw, II, III, IV, V, VI, 3D, Jigsaw)', 'category': 'Horror/Thriller'}, {'question': "In The Emperor's New Groove, Kuzco spends a majority of the film transformed into what kind of animal?", 'answer': 'a llama', 'category': 'Animated'}, {'question': 'Nicole Kidman won her only Oscar, so far, for her acting performance in what film?', 'answer': 'The Hours', 'category': 'Nicole Kidman'}, {'question': "In 2016's Lion, Saroo becomes separated from his family after falling asleep where?", 'answer': 'on a train', 'category': 'Nicole Kidman'}, {'question': 'Nicole Kidman stars in what 2005 remake of a classic television show?', 'answer': 'Bewitched', 'category': 'Nicole Kidman'}, {'question': 'Who directed the 2009 movie musical Nine?', 'answer': 'Rob Marshall', 'category': 'Nicole Kidman'}, {'question': 'Nicole Kidman appears as Dr. Chase Meridian in what DC film?', 'answer': 'Batman Forever', 'category': 'Nicole Kidman'}, {'question': 'In Moulin Rouge!, the building where Christian and Satine sing their iconic love medley is shaped like what animal?', 'answer': 'an elephant', 'category': 'Nicole Kidman'}, {'question': 'In what U.S. state does the movie Wind River take place?', 'answer': 'Wyoming', 'category': 'New Releases'}, {'question': 'Who plays Detective "Big Nick" O\'Brien in Den of Thieves?', 'answer': 'Gerard Butler', 'category': 'New Releases'}, {'question': "Who directed Molly's Game?", 'answer': 'Aaron Sorkin', 'category': 'New Releases'}, {'question': 'In The Greatest Showman, who plays the young socialite Phillip Carlyle that P. T. brings on as a business partner?', 'answer': 'Zac Efron', 'category': 'New Releases'}, {'question': 'What was the full title for the final Maze Runner film?', 'answer': 'The Death Cure', 'category': 'New Releases'}, {'question': 'In The Commuter, who plays the mysterious woman who gives Liam Neeson the job and propels his life into chaos?', 'answer': 'Vera Farmiga', 'category': 'New Releases'}, {'question': 'Who plays young Elio in the 2017 indie hit Call Me by Your Name?', 'answer': 'Timothée Chalamet', 'category': 'New Releases'}, {'question': "What X-Men: First Class cast member plays one of Immortan Joe's wives, Toast the Knowing, in Mad Max: Fury Road?", 'answer': 'Zoë Kravitz', 'category': 'Action/Adventure'}, {'question': 'Who played the other astronaut, Matt Kowalski, in Gravity?', 'answer': 'George Clooney', 'category': 'Sandra Bullock'}, {'question': 'What was the first film for which Julia Roberts was nominated for an Academy Award?', 'answer': 'Steel Magnolias', 'category': 'Julia Roberts'}, {'question': 'What song is supposed to activate Derek Zoolander to kill the prime minister of Malaysia in Zoolander?', 'answer': 'Relax', 'category': 'Comedies'}, {'question': 'What fake profession does Harry Tasker have in True Lies?', 'answer': 'a computer salesman', 'category': 'Action/Adventure'}, {'question': 'Who played the wrongly convicted and sentenced John Coffey in the movie The Green Mile?', 'answer': 'Michael Clarke Duncan', 'category': 'Tom Hanks'}, {'question': 'In Monsters, Inc., what nickname does Sulley give to the human girl?', 'answer': 'Boo', 'category': 'Animated'}, {'question': 'Who plays sugar water loving Edgar the "bug" in Men in Black?', 'answer': "Vincent D'Onofrio", 'category': 'Fantasy/Sci-Fi'}, {'question': 'Djimon Hounsou and Anthony Hopkins appear together in what Spielberg film?', 'answer': 'Amistad', 'category': 'Famous Actors & Actresses'}, {'question': 'What is the name of the monster in the Hellraiser film?', 'answer': 'Lead Cenobite / Pinhead', 'category': 'Horror/Thriller'}, {'question': 'Actor Shane West played the role of Landon Carter in what film based on a Nicholas Sparks novel?', 'answer': 'A Walk to Remember', 'category': 'Dramas'}, {'question': 'For what movie did Tommy Lee Jones receive his first Oscar nomination?', 'answer': 'JFK', 'category': 'Oscars'}, {'question': 'For what movie has Martin Scorsese won his only Best Director Oscar?', 'answer': 'The Departed', 'category': 'Oscars'}, {'question': 'What is the only Spielberg film to have one of his actors win Best Actor at the Academy Awards?', 'answer': 'Lincoln', 'category': 'Oscars'}, {'question': "As of 2018, what was Russell Crowe's last Oscar nomination?", 'answer': 'A Beautiful Mind', 'category': 'Oscars'}, {'question': 'Michel Hazanavicius won Best Director for directing which film?', 'answer': 'The Artist', 'category': 'Oscars'}, {'question': 'How many Oscars did The Silence of the Lambs win?', 'answer': '5 (for Picture, Director, Actor, Actress, Screenplay Based on Material Previously Produced or Published)', 'category': 'Oscars'}, {'question': 'Who plays Nebula in the Marvel Cinematic Universe?', 'answer': 'Karen Gillan (in Guardians of the Galaxy, Guardians of the Galaxy Vol. 2, Avengers: Infinity War)', 'category': 'Comic Book'}, {'question': 'In Batman 1989, what does mob boss Grissom remind Jack Napier to bring with him?', 'answer': 'his lucky deck of cards', 'category': 'Comic Book'}, {'question': 'In Iron Man 2, who has a small cameo as news reporter Chess Roberts?', 'answer': 'Olivia Munn', 'category': 'Comic Book'}, {'question': 'The League of Extraordinary Gentlemen stars Sean Connery as which iconic literary adventurer?', 'answer': 'Allan Quatermain', 'category': 'Comic Book'}, {'question': 'What was the subtitle to the second Alien vs. Predator film?', 'answer': 'Requiem', 'category': 'Comic Book'}, {'question': 'Who plays pickpocket Kar and co-lead to Chow Yun-fat in Bulletproof Monk?', 'answer': 'Seann William Scott', 'category': 'Comic Book'}, {'question': "Who directed 2011's Bridesmaids?", 'answer': 'Paul Feig', 'category': 'Rom-Coms'}, {'question': 'In what comic book film will you find the quote "You know, in the future, if you\'re going to steal cars, don\'t dress like a car thief"?', 'answer': 'The Amazing Spider-Man', 'category': 'Comic Book'}, {'question': "In Argo, at what nation's embassy do the six escaped hostages hide out?", 'answer': 'Canada', 'category': 'Dramas'}, {'question': 'Who plays Alan Grant in Jurassic Park?', 'answer': 'Sam Neill', 'category': 'Action/Adventure'}, {'question': 'The first Mission: Impossible film came out in what year?', 'answer': '1996', 'category': 'Release Dates'}, {'question': 'John Wayne, Henry Fonda, and Sean Connery star together in what war film?', 'answer': 'The Longest Day', 'category': 'Dramas'}, {'question': 'Henry Selick directed what 2000s stop-motion animated film?', 'answer': 'Coraline', 'category': 'Animated'}, {'question': 'Who plays Miracle Max in The Princess Bride?', 'answer': 'Billy Crystal', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What U.S. city are the ladies visiting for the majority of the film Girls Trip?', 'answer': 'New Orleans', 'category': 'Comedies'}, {'question': "2008's Let the Right One In features what kind of classic horror creature?", 'answer': 'vampires', 'category': 'Horror/Thriller'}, {'question': 'Michael Caine and Robert Duvall play eccentric uncles to a boy named Walter in what film?', 'answer': 'Secondhand Lions', 'category': 'Coming of Age'}, {'question': 'Who directed Three Billboards Outside Ebbing, Missouri?', 'answer': 'Martin McDonagh', 'category': 'N/A'}, {'question': "Who played Lara Croft's father Lord Richard Croft in the first Tomb Raider film with Angelina Jolie?", 'answer': 'Jon Voight', 'category': 'Action/Adventure'}, {'question': "Who plays the bumbling cop who used to work for Alan's father in the 1995 Jumanji?", 'answer': 'David Alan Grier', 'category': 'Action/Adventure'}, {'question': "Who plays CIA operative Dillon in 1987's Predator?", 'answer': 'Carl Weathers', 'category': 'Action/Adventure'}, {'question': 'In what Stallone action film does the main villain continuously call Stallone\'s character "pig" as he taunts him in the final scene?', 'answer': 'Cobra', 'category': 'Action/Adventure'}, {'question': "In Big Fish, what actor plays the elderly version of Ewan McGregor's character Edward Bloom?", 'answer': 'Albert Finney', 'category': 'Tim Burton'}, {'question': 'In Beetlejuice, the Maitlands discover a book named Handbook for the ___ ___.', 'answer': 'Recently Deceased', 'category': 'Tim Burton'}, {'question': 'What kind of salad does Joyce feed Edward in Edward Scissorhands?', 'answer': 'ambrosia salad', 'category': 'Tim Burton'}, {'question': "What is the name of the judge Alan Rickman plays in Tim Burton's Sweeney Todd?", 'answer': 'Turpin', 'category': 'Tim Burton'}, {'question': 'What country is Sandra Bullock from in The Proposal?', 'answer': 'Canada', 'category': 'Sandra Bullock'}, {'question': 'What is the one-word term for the consciousness of the mind in Ghost in the Shell?', 'answer': 'a ghost', 'category': 'New Releases'}, {'question': "In the Paddington films, what is Paddington's favorite food?", 'answer': 'marmalade', 'category': 'Family'}, {'question': 'Name the critically panned yet Golden Globe nominated film starring Angelina and Johnny Depp traveling by train to Venice.', 'answer': 'The Tourist', 'category': 'Angelina Jolie'}, {'question': 'The murder of a powerful gang leader in New York City that goes by Cyrus serves as the inciting incident of what 70s action thriller?', 'answer': 'The Warriors', 'category': 'Thriller'}, {'question': "Name the three Darling children from Disney's Peter Pan.", 'answer': 'John Darling, Michael Darling, Wendy Darling', 'category': 'Disney'}, {'question': 'What 2005 action comedy features a thief masquerading as an actor, a private eye, and a struggling actress trying to solve a murder mystery in Los Angeles?', 'answer': 'Kiss Kiss Bang Bang', 'category': 'Comedies'}, {'question': 'What 1983 film tells the true story of the original Mercury 7 astronauts during the early days of the U.S. Space Program?', 'answer': 'The Right Stuff', 'category': 'Biopics'}, {'question': "Argo tells the true story of the covert operation to retrieve six Americans during 1979's hostage crisis in which country?", 'answer': 'Iran', 'category': 'Dramas'}, {'question': "What is the name of the king of the opposing Persian army in Zack Snyder's 300?", 'answer': 'Xerxes', 'category': 'Comic Book'}, {'question': 'What 2002 film features Christian Bale as an enforcement officer trained in gun kata within a dystopian future where emotion is forbidden?', 'answer': 'Equilibrium', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays Dr. Sam Loomis in the original Halloween franchise?', 'answer': "Donald Pleasence (in 1978's Halloween, 1981's Halloween II, The Return of Michael Myers, The Revenge of Michael Myers, The Curse of Michael Myers)", 'category': 'Horror/Thriller'}, {'question': "In Coco, what famous artist appears as Ernesto de la Cruz's concert coordinator in the Land of the Dead?", 'answer': 'Frida Kahlo', 'category': 'Animated'}, {'question': 'In what 2016 action thriller will you find Emma Roberts and Dave Franco playing an online game in which "watchers" dare "players" to complete increasingly dangerous tasks for money?', 'answer': 'Nerve', 'category': 'Action/Adventure'}, {'question': 'In the 1967 family musical Doctor Dolittle, the "Pushmi-Pullyu" is a two-headed what?', 'answer': 'llama', 'category': 'Musicals'}, {'question': 'In Fiddler on the Roof, what is the occupation of the lead character, Tevye?', 'answer': 'a milkman', 'category': 'Musicals'}, {'question': "In 2014's Annie, who plays the Daddy Warbucks character named Will Stacks?", 'answer': 'Jamie Foxx', 'category': 'Musicals'}, {'question': 'Who sings the now iconic "Have Yourself a Merry Little Christmas" in Meet Me in St. Louis?', 'answer': 'Judy Garland', 'category': 'Musicals'}, {'question': 'Mechagodzilla first appeared in what film?', 'answer': 'Godzilla vs. the Cosmic Monster', 'category': 'Monster'}, {'question': "In Trick 'r Treat, what is the name of the small boy in orange footie pajamas that terrorizes an old man throughout the film?", 'answer': 'Sam', 'category': 'Monster'}, {'question': "Who played screenwriter and hero Jack Driscoll in 2005's King Kong?", 'answer': 'Adrien Brody', 'category': 'Monster'}, {'question': 'What is the name of the "domesticated" zombie who shoots Captain Rhodes in 1985\'s Day of the Dead?', 'answer': 'Bub', 'category': 'Monster'}, {'question': 'In the western The Man Who Shot Liberty Valance, who plays Liberty Valance?', 'answer': 'Lee Marvin', 'category': 'Classics'}, {'question': 'The first Scary Movie was released in what year?', 'answer': '2000', 'category': 'N/A'}, {'question': 'Who directed the 1992 biopic Malcolm X?', 'answer': 'Spike Lee', 'category': 'N/A'}, {'question': "Who played Father Merrin in 1973's The Exorcist?", 'answer': 'Max von Sydow', 'category': 'N/A'}, {'question': "What is the name of Samuel L. Jackson's hero alter ego in The Incredibles?", 'answer': 'Frozone', 'category': 'N/A'}, {'question': 'Zack Snyder directed what 2011 film starring Emily Browning and Abbie Cornish?', 'answer': 'Sucker Punch', 'category': 'N/A'}, {'question': "In Daredevil, what actor director plays the role of Matt Murdock's friend, Foggy Nelson?", 'answer': 'Jon Favreau', 'category': 'Comic Book'}, {'question': "Who plays Ron Burgundy's boss in Anchorman: The Legend of Ron Burgundy?", 'answer': 'Fred Willard', 'category': 'Comedies'}, {'question': "What actor played Matt Damon's brother in The Brothers Grimm?", 'answer': 'Heath Ledger', 'category': '2000s'}, {'question': 'Will Smith makes a cameo in what Will Ferrell comedy?', 'answer': 'Anchorman 2: The Legend Continues', 'category': 'Will Smith'}, {'question': "In 2005's Just Friends, who played opposite Ryan Reynolds as his best friend and high school crush Jamie?", 'answer': 'Amy Smart', 'category': 'Rom-Coms'}, {'question': 'Who star as the two wrestling fanatics, Gordie Boggs and Sean Dawkins, in Ready to Rumble?', 'answer': 'David Arquette, Scott Caan', 'category': 'Sports'}, {'question': 'Michelle Rodriguez appears as Letty in how many films in the Fast & Furious franchise (as of August 2018)?', 'answer': '5 (The Fast and the Furious, Fast & Furious, Fast & Furious 6, Furious 7, The Fate of the Furious)', 'category': 'Action/Adventure'}, {'question': 'Who plays the angry school bus driver in Billy Madison?', 'answer': 'Chris Farley', 'category': '1990s'}, {'question': "What actor stars alongside Tilda Swinton as a depressed vampire musician in 2014's Only Lovers Left Alive?", 'answer': 'Tom Hiddleston', 'category': 'Dramas'}, {'question': 'What 2006 animated film features the voice talents of Elijah Wood, Brittany Murphy, Hugh Jackman, and Robin Williams?', 'answer': 'Happy Feet', 'category': 'Animated'}, {'question': 'In Signs, what do Morgan and Bo wear to keep the aliens from reading their minds?', 'answer': 'tin foil hats', 'category': 'Fantasy/Sci-Fi'}, {'question': "In My Big Fat Greek Wedding, Toula's father believes that every physical ailment can be healed by using what household product?", 'answer': 'Windex', 'category': 'Comedies'}, {'question': "Who plays Mark Wahlberg's wife in 2008's The Happening?", 'answer': 'Zooey Deschanel', 'category': 'Horror/Thriller'}, {'question': "What biopic served as George Clooney's feature film directorial debut?", 'answer': 'Confessions of a Dangerous Mind', 'category': 'Directors'}, {'question': 'Name the director of We Bought a Zoo.', 'answer': 'Cameron Crowe', 'category': 'Directors'}, {'question': "Who directed the Steve Martin films The Man with Two Brains, The Jerk, and Dead Men Don't Wear Plaid?", 'answer': 'Carl Reiner', 'category': 'Directors'}, {'question': 'Brian De Palma directed the remake of Scarface in 1983. What directorial legend co-directed the original 1932 version alongside Richard Rossen?', 'answer': 'Howard Hawks', 'category': 'Directors'}, {'question': 'What was the debut feature film of writer director Jason Reitman?', 'answer': 'Thank You for Smoking', 'category': 'Directors'}, {'question': 'Name the only Alfred Hitchcock film that won Best Picture.', 'answer': 'Rebecca', 'category': 'Directors'}, {'question': 'What was the last film that John Hughes directed?', 'answer': 'Curly Sue', 'category': 'Directors'}, {'question': "Who directed 2003's Cabin Fever?", 'answer': 'Eli Roth', 'category': 'Horror'}, {'question': 'In American Psycho, Patrick stops Jean before she puts what on his coffee table?', 'answer': 'an ice cream container, a spoon', 'category': 'Horror'}, {'question': "In what 2007 horror movie does a young widower return to his hometown to search for answers to his wife's murder, which may be linked to the ghost of a murdered ventriloquist?", 'answer': 'Dead Silence', 'category': 'Horror'}, {'question': 'Who plays the queen vampire Santanico in From Dusk till Dawn?', 'answer': 'Salma Hayek', 'category': 'Horror'}, {'question': 'In The Evil Dead and Evil Dead II, the abandoned cabin that Ash and his friends visit is located in what state?', 'answer': 'Tennessee', 'category': 'Horror'}, {'question': 'Who starred as Father Philip Lamont in Exorcist II: The Heretic?', 'answer': 'Richard Burton', 'category': 'Horror'}, {'question': 'What film numerically in the Friday the 13th series sees Jason "take" Manhattan?', 'answer': '8', 'category': 'Horror'}, {'question': 'Name the movie from the tagline: "One dream. Four Jamaicans. Twenty below zero.".', 'answer': 'Cool Runnings', 'category': 'N/A'}, {'question': "Who plays Tom Hanks' love interest in You've Got Mail?", 'answer': 'Meg Ryan', 'category': 'N/A'}, {'question': 'Name the film franchise that has the following characters: Livingston Dell, Saul Bloom, Reuben Tishkoff, Frank Catton, Virgil Malloy, Turk Malloy, Basher Tarr, Linus Caldwell, Rusty Ryan, Terry Benedict, Danny Ocean.', 'answer': "Ocean's", 'category': 'N/A'}, {'question': 'Who directed the original Point Break?', 'answer': 'Kathryn Bigelow', 'category': 'N/A'}, {'question': "In Say Anything..., John Cusack holds up what out the front of Diane Court's bedroom window?", 'answer': 'a boombox', 'category': 'N/A'}, {'question': "What is Jack Burton's profession in 1986's Big Trouble in Little China?", 'answer': 'a truck driver', 'category': 'Action/Adventure'}, {'question': "Who directed the 2001 version of Ocean's Eleven?", 'answer': 'Steven Soderbergh', 'category': 'Directors'}, {'question': "Who stars as Evelyn Mulwray in 1974's Chinatown?", 'answer': 'Faye Dunaway', 'category': 'Dramas'}, {'question': 'Steven Spielberg won his first directing Oscar for what film?', 'answer': "Schindler's List", 'category': 'Oscars'}, {'question': 'What is the nickname given to the stranded alien race in District 9?', 'answer': 'prawns', 'category': 'Fantasy/Sci-Fi'}, {'question': "What 1999 mockumentary starring Kirsten Dunst follows a small Minnesota town's beauty pageant that becomes deadly when strange accidents start eliminating contestants?", 'answer': 'Drop Dead Gorgeous', 'category': 'Comedies'}, {'question': "Name the actor that played Louis Bloom in 2014's Nightcrawler.", 'answer': 'Jake Gyllenhaal', 'category': 'Horror/Thriller'}, {'question': "What kind of animal is Gary Oldman's villainous Lord Shen in Kung Fu Panda 2?", 'answer': 'a peacock', 'category': 'Animated'}, {'question': "What was Gene Hackman's first name in The Royal Tenenbaums?", 'answer': 'Royal', 'category': '2000s'}, {'question': 'Who directed WALL-E?', 'answer': 'Andrew Stanton', 'category': '2000s'}, {'question': 'Who had a 2002 film role as a creepy photo lab technician?', 'answer': 'Robin Williams (in One Hour Photo)', 'category': '2000s'}, {'question': 'In Collateral, a hitman named Vincent is hired to kill five people for a drug lord. Who plays the person that was his last target?', 'answer': 'Jada Pinkett Smith', 'category': '2000s'}, {'question': 'In Lethal Weapon 3, what do Riggs and Lorna Cole begin showing off to one another and compare what they have accumulated over the years?', 'answer': 'scars', 'category': 'Action/Adventure'}, {'question': 'In what movie did the Rock first appear as the Scorpion King?', 'answer': 'The Mummy Returns', 'category': 'Action/Adventure'}, {'question': "In Sherlock Holmes: A Game of Shadows, who plays Sherlock's brother Mycroft?", 'answer': 'Stephen Fry', 'category': 'Action/Adventure'}, {'question': 'What was the name of the secret organization that is the American counterpart to the Kingsman from Kingsman: The Golden Circle?', 'answer': 'the Statesman', 'category': 'Action/Adventure'}, {'question': 'Robin Williams plays Sean Maguire in what Academy Award winning film?', 'answer': 'Good Will Hunting', 'category': '1990s'}, {'question': "Who plays Tom's brother in 1984's Splash?", 'answer': 'John Candy', 'category': 'Tom Hanks'}, {'question': 'Who stars opposite Natalie Portman in the 2011 romantic comedy No Strings Attached?', 'answer': 'Ashton Kutcher', 'category': '2010s'}, {'question': 'There are eight films in the family film franchise Beethoven about a pet Saint Bernard. How many were released theatrically?', 'answer': "2 (Beethoven, Beethoven's 2nd)", 'category': 'Family'}, {'question': "In Reservoir Dogs, Steve Buscemi's character hated his code name. What was his code name?", 'answer': 'Mr. Pink', 'category': 'Quentin Tarantino'}, {'question': "In 2007's Transformers, what is the name of Sam Witwicky's pet Chihuahua?", 'answer': 'Mojo', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what movie will you see characters John Patrick Mason, General Francis X. Hummel, and Stanley Goodspeed?', 'answer': 'The Rock', 'category': 'Action/Adventure'}, {'question': "In Disney's The Sword in the Stone, name one of the three animals Merlin transforms Wart into during his lessons.", 'answer': 'a fish, a sparrow, a squirrel', 'category': 'Animated'}, {'question': "Who is the writer, director, and star of 1996's Sling Blade?", 'answer': 'Billy Bob Thornton', 'category': 'Dramas'}, {'question': 'In what sci-fi comedy will you hear "I want the people to know that they still have two out of three branches of the government working for them, and that ain\'t bad."?', 'answer': 'Mars Attacks!', 'category': 'Quotes'}, {'question': 'What repeated three-word phrase does Caesar use to unite the apes throughout the 2010s rebooted Planet of the Apes trilogy?', 'answer': 'Apes together strong.', 'category': 'Fantasy/Sci-Fi'}, {'question': "Paul Verhoeven's action sci-fi thriller Total Recall was released in what year?", 'answer': '1990', 'category': 'Release Dates'}, {'question': 'Which installment of the Final Destination franchise is focused on a group who escaped death from a roller coaster disaster?', 'answer': 'Final Destination 3', 'category': 'Horror/Thriller'}, {'question': 'In what Pennsylvania town does Phil Connors get stuck reliving the same day over and over in Groundhog Day?', 'answer': 'Punxsutawney', 'category': 'Comedies'}, {'question': "Who played Denzel Washington's co-lead Michael Stigman in the action comedy 2 Guns?", 'answer': 'Mark Wahlberg', 'category': 'Denzel Washington'}, {'question': 'Who plays the mad bomber that Denzel Washington uses time travel to catch in the 2006 film Déjà Vu?', 'answer': 'Jim Caviezel', 'category': 'Denzel Washington'}, {'question': "What instrument does Denzel Washington play in Mo' Better Blues?", 'answer': 'the trumpet', 'category': 'Denzel Washington'}, {'question': 'In The Book of Eli, what is unique about the version of the Bible Eli has, other than it being the last one?', 'answer': 'it is written in braille', 'category': 'Denzel Washington'}, {'question': 'As of 2018, how many times has David Fincher been nominated for Best Director?', 'answer': '2 (The Curious Case of Benjamin Button, The Social Network)', 'category': 'Oscars'}, {'question': 'Who won the Best Director Oscar for Terms of Endearment?', 'answer': 'James L. Brooks', 'category': 'Oscars'}, {'question': 'Who sang the Oscar-winning song "Secret Love" from the 1953 western comedy Calamity Jane?', 'answer': 'Doris Day', 'category': 'Oscars'}, {'question': 'Alan Arkin won his first Oscar for Best Supporting Actor for which film?', 'answer': 'Little Miss Sunshine', 'category': 'Oscars'}, {'question': 'Who played Wyatt Earp in Wyatt Earp?', 'answer': 'Kevin Costner', 'category': 'Westerns'}, {'question': 'What American president gave Forrest Gump his Medal of Honor for Vietnam in Forrest Gump?', 'answer': 'Lyndon B. Johnson', 'category': 'Tom Hanks'}, {'question': 'Who played the reporter Daniel Molloy in Interview with the Vampire?', 'answer': 'Christian Slater', 'category': 'Horror'}, {'question': 'Who directed Miracle and Warrior?', 'answer': "Gavin O'Connor", 'category': 'Sports'}, {'question': 'Name the two lead actors of the 1991 drama My Own Private Idaho.', 'answer': 'Keanu Reeves, River Phoenix', 'category': '1990s'}, {'question': "In 1990's Teenage Mutant Ninja Turtles, April's apartment was located above what kind of store?", 'answer': 'an antique store', 'category': 'Family'}, {'question': 'What sports drama tells the story of Randy "The Ram" Robinson?', 'answer': 'The Wrestler', 'category': 'Dramas'}, {'question': "Who wrote and directed 1977's The Hills Have Eyes?", 'answer': 'Wes Craven', 'category': 'Horror/Thriller'}, {'question': 'What 1958 Hitchcock movie starred James Stewart and Kim Novak?', 'answer': 'Vertigo', 'category': 'Famous Actors & Actresses'}, {'question': 'In Point Break, Bodhi wears a mask of which U.S. President during robberies?', 'answer': 'Ronald Reagan', 'category': 'Action/Adventure'}, {'question': 'In Jumanji, how does the game punish Peter for trying to cheat on his dice roll?', 'answer': 'he is turned into a monkey', 'category': 'Fantasy/Sci-Fi'}, {'question': "What comedic actor voices the mayor of Whoville in 2008's Horton Hears a Who!?", 'answer': 'Steve Carell', 'category': 'Animated'}, {'question': 'How many times did Clint Eastwood play Harry Callahan in the Dirty Harry series?', 'answer': '5 (Dirty Harry, Magnum Force, The Enforcer, Sudden Impact, The Dead Pool)', 'category': 'Crime'}, {'question': 'Which famous comedian plays Ahchoo in Robin Hood: Men in Tights?', 'answer': 'Dave Chappelle', 'category': 'Comedies'}, {'question': "Who was credited as composing the score for 1982's The Thing?", 'answer': 'Ennio Morricone', 'category': 'Scores & Soundtracks'}, {'question': 'What famed composer was nominated at the Oscars for Best Original Score for both Little Women and The Shawshank Redemption?', 'answer': 'Thomas Newman', 'category': 'Scores & Soundtracks'}, {'question': "Who composed the score for 2004's Troy?", 'answer': 'James Horner', 'category': 'Scores & Soundtracks'}, {'question': "Who composed the score for James Cameron's The Abyss?", 'answer': 'Alan Silvestri', 'category': 'Scores & Soundtracks'}, {'question': "Who plays adult Murph in Christopher Nolan's Interstellar?", 'answer': 'Jessica Chastain', 'category': 'Christopher Nolan'}, {'question': 'In Dunkirk, who plays the shell-shocked officer that Mr. Dawson rescues from a wrecked ship?', 'answer': 'Cillian Murphy', 'category': 'Christopher Nolan'}, {'question': 'How many movies directed by Christopher Nolan have had their scores composed by Hans Zimmer?', 'answer': '6 (Batman Begins, The Dark Knight, Inception, The Dark Knight Rises, Interstellar, Dunkirk)', 'category': 'Christopher Nolan'}, {'question': "In The Prestige, how does Robert Angier's wife, Julia, die during a botched magic trick at the beginning of the film?", 'answer': 'drowning in a water tank', 'category': 'Christopher Nolan'}, {'question': 'Eddie Murphy earned an Oscar nomination for his performance in which movie musical?', 'answer': 'Dreamgirls', 'category': 'Oscars'}, {'question': 'Wolfman Jack spins classic rock and roll tunes in a small California town in what 1973 coming-of-age classic?', 'answer': 'American Graffiti', 'category': 'Coming of Age'}, {'question': 'What is the name of the kingdom in which the movie Frozen takes place?', 'answer': 'Arendelle', 'category': 'Disney'}, {'question': 'Who stars alongside Bill Murray as his high-strung psychotherapist, Dr. Leo Marvin, in What About Bob??', 'answer': 'Richard Dreyfuss', 'category': 'Comedies'}, {'question': "Who directed 1989's iconic rom-com When Harry Met Sally...?", 'answer': 'Rob Reiner', 'category': 'Directors'}, {'question': 'In Ghost, what does Sam always say to Molly instead of saying "I love you"?', 'answer': 'Ditto', 'category': 'Dramas'}, {'question': 'In Shrek, what character attempts to save Fiona from Shrek in the forest and sings an annoying song about it?', 'answer': 'Robin Hood', 'category': 'Animated'}, {'question': "In 2015's Seventh Son, who stars as an aging Spook training a young apprentice to join the battle against the evil queen of the witches, Mother Malkin?", 'answer': 'Jeff Bridges', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays the villainous mastermind, Qualen, in 1993's Cliffhanger?", 'answer': 'John Lithgow', 'category': 'Action/Adventure'}, {'question': 'Who directed the 2015 mockumentary horror comedy What We Do in the Shadows?', 'answer': 'Taika Waititi', 'category': 'Horror/Thriller'}, {'question': "In White Men Can't Jump, Rosie Perez's character, Gloria, is studying to compete on what game show?", 'answer': 'Jeopardy!', 'category': 'Sports'}, {'question': "What is the name of Sid's dog that terrorizes Woody and Buzz in the original Toy Story?", 'answer': 'Scud', 'category': 'Pixar'}, {'question': 'Who voiced the octopus Hank in Finding Dory?', 'answer': "Ed O'Neill", 'category': 'Pixar'}, {'question': 'What is the name of the megacorporation in WALL-E?', 'answer': 'Buy n Large', 'category': 'Pixar'}, {'question': 'Who was the director of the Pixar film Ratatouille?', 'answer': 'Brad Bird', 'category': 'Pixar'}, {'question': 'In Inside Out, what kind of product had a jingle that kept being played, annoying all of the emotions?', 'answer': 'gum', 'category': 'Pixar'}, {'question': "In Brave, who voices Merida's mother, Queen Elinor?", 'answer': 'Emma Thompson', 'category': 'Pixar'}, {'question': 'What year saw the release of the Natalie Portman film V for Vendetta?', 'answer': '2005', 'category': 'Release Dates'}, {'question': 'What year did the comedy Three Men and a Baby come out?', 'answer': '1987', 'category': 'Release Dates'}, {'question': 'We saw Carl Fredricksen attach a bunch of balloons to his house and fly away in Up in what year?', 'answer': '2009', 'category': 'Release Dates'}, {'question': 'The Vince Vaughn comedy Old School was released in what year?', 'answer': '2003', 'category': 'Release Dates'}, {'question': "What year saw the release of two Julia Roberts films: the rom-com My Best Friend's Wedding and the thriller Conspiracy Theory?", 'answer': '1997', 'category': 'Release Dates'}, {'question': "Christopher Nolan's Inception entered our dreams and theaters in the summer of what year?", 'answer': '2010', 'category': 'Release Dates'}, {'question': "In what profession is Tom Cruise's character Barry Seal when he is hired by the CIA in American Made?", 'answer': 'an airline pilot', 'category': 'Tom Cruise'}, {'question': "What was Tyler Durden's occupation in Fight Club?", 'answer': 'a soap salesman', 'category': 'Brad Pitt'}, {'question': 'Name the two actors that appear in all six films in the Middle-earth saga.', 'answer': 'Cate Blanchett, Ian McKellen', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who directed 1996's Independence Day?", 'answer': 'Roland Emmerich', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What Guy Ritchie film features Tom Wilkinson, Thandiwe Newton, and Gerard Butler?', 'answer': 'RocknRolla', 'category': 'Crime'}, {'question': "What 1999 drama follows an 18-year-old girl in the 1960s who is committed to a women's mental institution and won a Best Supporting Actress Oscar?", 'answer': 'Girl, Interrupted', 'category': 'Dramas'}, {'question': 'What Studio Ghibli film features a living scarecrow sidenick nicknamed "Turnip Head"?', 'answer': "Howl's Moving Castle", 'category': 'Animated'}, {'question': 'What 1973 film stars Bruce Lee as a martial artist recruited to spy on a drug lord during a deadly fighting tournament?', 'answer': 'Enter the Dragon', 'category': 'Action/Adventure'}, {'question': 'What classic comedy features the quote "Fat, drunk and stupid is no way to go through life, son."?', 'answer': "National Lampoon's Animal House", 'category': 'Comedies'}, {'question': "Who wrote, directed, and starred in 2015's The Gift?", 'answer': 'Joel Edgerton', 'category': 'Horror/Thriller'}, {'question': 'Jonah Hill and Miles Teller star in what Todd Phillips film about gun runners?', 'answer': 'War Dogs', 'category': '2010s'}, {'question': 'Cate Blanchett plays a frontier medicine woman who must align with her estranged father when her daughter is kidnapped in what Ron Howard western thriller?', 'answer': 'The Missing', 'category': 'Cate Blanchett'}, {'question': "Who starred alongside Cate Blanchett as Hanna's father in the film Hanna?", 'answer': 'Eric Bana', 'category': 'Cate Blanchett'}, {'question': "What actress did Cate Blanchett portray in Scorsese's The Aviator?", 'answer': 'Katharine Hepburn', 'category': 'Cate Blanchett'}, {'question': "What veteran actor portrays Cate Blanchett's blind father-in-law Sir Walter Locksley in Ridley Scott's Robin Hood?", 'answer': 'Max von Sydow', 'category': 'Cate Blanchett'}, {'question': "Who directed Cate Blanchett in 2014's The Monuments Men?", 'answer': 'George Clooney', 'category': 'Cate Blanchett'}, {'question': 'Name the film from the synopsis: "Tragedy strikes a married couple on vacation in the Moroccan desert, touching off an interlocking story involving four different familes.".', 'answer': 'Babel', 'category': 'Cate Blanchett'}, {'question': "Who plays the character of Patrick, who tries to steal Clementine away from Joel in 2004's Eternal Sunshine of the Spotless Mind?", 'answer': 'Elijah Wood', 'category': '2000s'}, {'question': "Who plays Bella's first friend, Jessica Stanley, in Twilight?", 'answer': 'Anna Kendrick', 'category': '2000s'}, {'question': "In Almost Famous, William's first writing assignment is to review a concert by what popular rock band?", 'answer': 'Black Sabbath', 'category': '2000s'}, {'question': 'In The Hurt Locker, who played Staff Sergeant Matthew Thompson, who was killed by an IED at the very beginning of the film?', 'answer': 'Guy Pearce', 'category': '2000s'}, {'question': 'Who voiced the lead rat, Remy, in Ratatouille?', 'answer': 'Patton Oswalt', 'category': '2000s'}, {'question': 'In Avatar, who plays the corporate administrator of the RDA mining operation?', 'answer': 'Giovanni Ribisi', 'category': '2000s'}, {'question': 'Who directed Cate Blanchett in the 2015 version of Cinderella?', 'answer': 'Kenneth Branagh', 'category': 'Cate Blanchett'}, {'question': 'Nicole Kidman plays a villainous taxidermist in what family film?', 'answer': 'Paddington', 'category': 'Nicole Kidman'}, {'question': 'In the film Paper Towns, who pays Margo, the teen that disappears?', 'answer': 'Cara Delevingne', 'category': 'Romance'}, {'question': "In the Predator franchise, what color is a Predator's blood?", 'answer': 'green', 'category': 'Action/Adventure'}, {'question': 'Who plays prankster Carey Mahoney in the Police Academy comedy franchise?', 'answer': 'Steve Guttenberg (in Police Academy, Their First Assignment, Back in Training, Citizens on Patrol)', 'category': '1980s'}, {'question': "What 2005 film stars Ralph Fiennes as a widower determined to unravel the corporate conspiracy surrounding his wife's murder in Kenya?", 'answer': 'The Constant Gardener', 'category': 'Dramas'}, {'question': "What is the name of Pete's dragon in Pete's Dragon?", 'answer': 'Elliot', 'category': 'Family'}, {'question': 'In Ready Player One, to retrieve the second key, the heroes must navigate through a virtual simulation of what famous horror film?', 'answer': 'The Shining', 'category': 'Fantasy/Sci-Fi'}, {'question': "What Friends actor stars alongside Chris Farley in 1998's Almost Heroes?", 'answer': 'Matthew Perry', 'category': 'Comedies'}, {'question': 'The sinisterly perfect suburban town in The Stepford Wives is located in what New England state?', 'answer': 'Connecticut', 'category': 'Horror/Thriller'}, {'question': 'Rumpelstiltskin is the villain in which installment of the Shrek franchise?', 'answer': 'Shrek Forever After', 'category': 'Animated'}, {'question': 'What New England state was the setting of the lodge in White Christmas?', 'answer': 'Vermont', 'category': 'Classics'}, {'question': 'Who directed the 1944 classic film noir Double Indemnity?', 'answer': 'Billy Wilder', 'category': 'Classics'}, {'question': 'In The Great Escape, who plays Lt. Danny "Tunnel King" Welinski, the talented digger with claustrophobia?', 'answer': 'Charles Bronson', 'category': 'Classics'}, {'question': 'Who plays Prince Faisal in Lawrence of Arabia?', 'answer': 'Alec Guinness', 'category': 'Classics'}, {'question': "What West Coast city provided the setting for 1941's The Maltese Falcon?", 'answer': 'San Francisco', 'category': 'Classics'}, {'question': 'In the 1959 classic Ben-Hur, where does Judah Ben-Hur eventually find his mother and sister?', 'answer': 'a leper colony', 'category': 'Classics'}, {'question': "Who directed 2000's Charlie's Angels?", 'answer': 'McG', 'category': 'Cameron Diaz'}, {'question': 'Who co-stars with Cameron Diaz as her husband in the comedy Sex Tape?', 'answer': 'Jason Segel', 'category': 'Cameron Diaz'}, {'question': 'Who played gym teacher Russell Gettis, who is smitten with Cameron Diaz, in Bad Teacher?', 'answer': 'Jason Segel', 'category': 'Cameron Diaz'}, {'question': 'What film saw Cameron portray a thief by the name of Jenny Everdeane?', 'answer': 'Gangs of New York', 'category': 'Cameron Diaz'}, {'question': 'What supermodel stars alongside Cameron Diaz and Leslie Mann in The Other Woman?', 'answer': 'Kate Upton', 'category': 'Cameron Diaz'}, {'question': 'Cameron Diaz and James Marsden star as husband and wife in what 2009 psychological thriller?', 'answer': 'The Box', 'category': 'Cameron Diaz'}, {'question': 'In Mean Girls, which character said the quote "stop trying to make fetch happen! It\'s not going to happen!"?', 'answer': 'Regina George', 'category': 'Coming of Age'}, {'question': "Who is Sandra Bullock's co-lead in the 1999 rom-com Forces of Nature?", 'answer': 'Ben Affleck', 'category': 'Comedies'}, {'question': 'What is the nickname of the toxic substance Judge Doom uses to kill toons in Who Framed Roger Rabbit?', 'answer': 'the Dip', 'category': 'Action/Adventure'}, {'question': 'Who directed 12 Years a Slave?', 'answer': 'Steve McQueen', 'category': 'Directors'}, {'question': 'What 90s sci-fi horror film stars Laurence Fishburne and Sam Neill?', 'answer': 'Event Horizon', 'category': 'Horror/Thriller'}, {'question': 'What is the name of the magical lion voiced by Liam Neeson in the Chronicles of Narnia series?', 'answer': 'Aslan', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who voices Brenda the bun in Sausage Party?', 'answer': 'Kristen Wiig', 'category': 'Animated'}, {'question': "Who plays Tom Cruise's mentor, Avery Tolar, in 1993's The Firm?", 'answer': 'Gene Hackman', 'category': 'Dramas'}, {'question': 'What film, adapted from a Mark Bowden book, depicted the Battle of Mogadishu?', 'answer': 'Black Hawk Down', 'category': 'War'}, {'question': 'In Batman Begins, who plays William Earle, CEO of Wayne Enterprises while Bruce was "away"?', 'answer': 'Rutger Hauer', 'category': 'Christopher Nolan'}, {'question': "Who played Hugh Jackman's assistant and lover Olivia in The Prestige?", 'answer': 'Scarlett Johansson', 'category': 'Christopher Nolan'}, {'question': 'What was the first Christopher Nolan film for which Hans Zimmer received an Original Score Oscar nomination?', 'answer': 'Inception', 'category': 'Christopher Nolan'}, {'question': "What was the name of Christopher Nolan's first feature film?", 'answer': 'Following', 'category': 'Christopher Nolan'}, {'question': 'What is the first movie in Sergio Leone\'s "Man with No Name" trilogy, starring Clint Eastwood, called?', 'answer': 'A Fistful of Dollars', 'category': 'Westerns'}, {'question': 'What was the name of the town in High Noon that Marshal Kane was forced to defend by himself?', 'answer': 'Hadleyville', 'category': 'Westerns'}, {'question': 'Who was the star of the westerns Hombre, Buffalo Bill and the Indians, and The Left Handed Gun?', 'answer': 'Paul Newman', 'category': 'Westerns'}, {'question': 'What Rat Pack member played the title character in Dirty Dingus Magee?', 'answer': 'Frank Sinatra', 'category': 'Westerns'}, {'question': 'Chris Farley and David Spade have starred in three films together. Name two of them.', 'answer': 'Coneheads, Tommy Boy, Black Sheep', 'category': 'Comedies'}, {'question': "In 2010's The Town, who plays FBI agent Adam Frawley, who is after Affleck's crew?", 'answer': 'Jon Hamm', 'category': '2010s'}, {'question': 'What 2010 film stars Brendan Fraser and Harrison Ford trying to find the cure to a rare genetic disorder?', 'answer': 'Extraordinary Measures', 'category': 'Dramas'}, {'question': "In Uncle Buck, Buck cooks a giant version of what food to celebrate Miles' birthday?", 'answer': 'pancakes', 'category': 'Comedies'}, {'question': "In Edward Scissorhands, who plays Jim, Kim's jealous boyfriend who constantly antagonizes Edward?", 'answer': 'Anthony Michael Hall', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2003 film stars Nicolas Cage as a con artist with many phobias?', 'answer': 'Matchstick Men', 'category': 'Dramas'}, {'question': 'Who played the American agent Ginger in Kingsman: The Golden Circle?', 'answer': 'Halle Berry', 'category': 'Action/Adventure'}, {'question': 'Who played Batgirl in the ill-fated and critically panned Batman & Robin?', 'answer': 'Alicia Silverstone', 'category': 'Comic Book'}, {'question': 'What 2001 film stars Kate Beckinsale and John Cusack as two strangers who instantly fall in love and then spend years waiting for fate to bring them together again?', 'answer': 'Serendipity', 'category': 'Romance'}, {'question': 'Halloween H20 is what number installment of the Halloween franchise?', 'answer': '7', 'category': 'Horror/Thriller'}, {'question': 'In The Nightmare Before Christmas, the villainous Oogie Boogie is a burlap sack filled with what?', 'answer': 'bugs', 'category': 'Animated'}, {'question': 'In Justice League, who is Diana tasked with recruiting to the League?', 'answer': 'Cyborg', 'category': 'Comic Book'}, {'question': 'Who played Uncle Ben in the Sam Raimi Spider-Man films?', 'answer': 'Cliff Robertson', 'category': 'Comic Book'}, {'question': "This actress played the character of Amanda Waller in 2011's Green Lantern.", 'answer': 'Angela Bassett', 'category': 'Comic Book'}, {'question': "What was the name of the terrorist organization that kidnaps Tony Stark in 2008's Iron Man?", 'answer': 'the Ten Rings', 'category': 'Comic Book'}, {'question': 'Who plays the ruthless cattle baron Woodrow Dolarhyde in Cowboys & Aliens?', 'answer': 'Harrison Ford', 'category': 'Comic Book'}, {'question': "In Red 2, who played Sarah Ross, love interest to Bruce Willis' character?", 'answer': 'Mary-Louise Parker', 'category': 'Comic Book'}, {'question': "Who plays Post assistant editor Ben Bagdikian in Spielberg's The Post?", 'answer': 'Bob Odenkirk', 'category': 'New Releases'}, {'question': 'Who plays the villain Phoenix Buchanan in Paddington 2?', 'answer': 'Hugh Grant', 'category': 'New Releases'}, {'question': "What Saturday Night Live alum stars alongside Anne Hathaway in 2017's sci-fi dramedy Colossal?", 'answer': 'Jason Sudeikis', 'category': 'New Releases'}, {'question': 'What 2017 awards contender has the tagline "There\'s no need to have class when you have talent."?', 'answer': 'I, Tonya', 'category': 'New Releases'}, {'question': 'Who composed the score for Avengers: Infinity War?', 'answer': 'Alan Silvestri', 'category': 'New Releases'}, {'question': "In The Disaster Artist, who plays Greg Sestero's agent Iris Burton?", 'answer': 'Sharon Stone', 'category': 'New Releases'}, {'question': "What stand-up comedian voiced Barry B. Benson in 2007's Bee Movie?", 'answer': 'Jerry Seinfeld', 'category': '2000s'}, {'question': "Who plays genius Chris Knight in 1985's Real Genius?", 'answer': 'Val Kilmer', 'category': '1980s'}, {'question': 'In Wonder Woman, Danny Huston played the role of Ludendorff. What other comic book film has he appeared in?', 'answer': '30 Days of Night, X-Men Origins: Wolverine', 'category': 'Comic Book'}, {'question': 'Charlize Theron stars alongside Seth MacFarlane in what comedy?', 'answer': 'A Million Ways to Die in the West', 'category': 'Charlize Theron'}, {'question': 'Christopher Walken plays drug lord Frank White in which 1990s crime thriller?', 'answer': 'King of New York', 'category': 'Crime'}, {'question': 'In Con Air, what was the nickname given to villain Cyrus Grissom played by John Malkovich?', 'answer': 'The Virus', 'category': 'Action/Adventure'}, {'question': 'Who played the two lead detectives in the 1995 thriller Seven?', 'answer': 'Brad Pitt, Morgan Freeman', 'category': 'Horror/Thriller'}, {'question': 'Charlie Sheen, Willem Dafoe, and Forest Whitaker star together in what 1986 war film?', 'answer': 'Platoon', 'category': 'Dramas'}, {'question': 'In Roman Holiday, who plays American reporter Joe Bradley, who tries to get a scoop on Princess Ann, but instead falls in love?', 'answer': 'Gregory Peck', 'category': 'Romance'}, {'question': 'In this 1986 adventure sci-fi film, 12-year-old David Freeman is abducted by aliens and then forced to find a way to get back to his time.', 'answer': 'Flight of the Navigator', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In This is the End, what boy band leads a heavenly dance party in the finale?', 'answer': 'the Backstreet Boys', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what film will you hear Daniel Day-Lewis say "You stay alive, no matter what occurs! I will find you! No matter how long it takes, no matter how far. I will find you!"?', 'answer': 'The Last of the Mohicans', 'category': 'Quotes'}, {'question': 'This 2016 animated film, about what happens when their owners leave, starred the voice talents of Kevin Hart, Ellie Kemper, Jenny Slate, and Albert Brooks.', 'answer': 'The Secret Life of Pets', 'category': 'Animated'}, {'question': 'What film released in 1985 tied the record for most nominations without any wins with 11 total?', 'answer': 'The Color Purple', 'category': 'N/A'}, {'question': 'Jeremy Irvine starred as the young Albert Narracott from England in what Steven Spielberg film?', 'answer': 'War Horse', 'category': 'Steven Spielberg'}, {'question': 'Which actor plays Gigolo Joe in A.I. Artificial Intelligence?', 'answer': 'Jude Law', 'category': 'Steven Spielberg'}, {'question': 'What was the name of the club in the opening of Indiana Jones and the Temple of Doom?', 'answer': 'Club Obi Wan', 'category': 'Steven Spielberg'}, {'question': "What was Steven Spielberg's first theatrically released film?", 'answer': 'The Sugarland Express', 'category': 'Steven Spielberg'}, {'question': 'Who plays Roland Tembo in The Lost World: Jurassic Park, whose only goal was to hunt a male T. rex?', 'answer': 'Pete Postlethwaite', 'category': 'Steven Spielberg'}, {'question': "Who plays Roy Neary's wife, Ronnie Neary, in Close Encounters of the Third Kind?", 'answer': 'Teri Garr', 'category': 'Steven Spielberg'}, {'question': 'Who was the Potions master at Hogwarts in the first five Harry Potter films?', 'answer': 'Severus Snape', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Return of the Jedi, what species were the spies that stole the plans to the second Death Star?', 'answer': 'Bothans', 'category': 'Fantasy/Sci-Fi'}, {'question': "In The Day the Earth Stood Still, what is the name of Klaatu's robot ally?", 'answer': 'Gort', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who voices Hiccup in the film How to Train Your Dragon?', 'answer': 'Jay Baruchel', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played the villain Capricorn in the 2009 family fantasy adventure film Inkheart?', 'answer': 'Andy Serkis', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Ex Machina, what is the name of the company that Domhnall Gleeson works for?', 'answer': 'Blue Book', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays twins Paul and Eli Sunday in There Will Be Blood?', 'answer': 'Paul Dano', 'category': '2000s'}, {'question': "Who was Sandra's heroic co-star in Speed 2?", 'answer': 'Jason Patric', 'category': 'Sandra Bullock'}, {'question': 'What actor delivers the iconic "Always Be Closing" speech in Glengarry Glen Ross?', 'answer': 'Alec Baldwin', 'category': 'Dramas'}, {'question': 'How many films are featured in the Pirates of the Caribbean franchise?', 'answer': "5 (The Curse of the Black Pearl, Dead Man's Chest, At World's End, On Stranger Tides, Dead Men Tell No Tales)", 'category': 'Action/Adventure'}, {'question': "Who stars as Elizabeth Bennet in 2016's Pride and Prejudice and Zombies?", 'answer': 'Lily James', 'category': 'Horror/Thriller'}, {'question': "In Disney's Aladdin, what kind of animal does Genie turn Abu into to be a part of Prince Ali's entourage?", 'answer': 'an elephant', 'category': 'Animated'}, {'question': "Who directed 2000's Cast Away?", 'answer': 'Robert Zemeckis', 'category': 'Directors'}, {'question': 'Martin Scorsese and Robert De Niro collaborated eight times (as of October 2018). What was the first movie they did together?', 'answer': 'Mean Streets', 'category': 'Famous Actors & Actresses'}, {'question': 'What is the name of the computer defense system that creates a nuclear holocaust to exterminate humanity in the Terminator franchise?', 'answer': 'Skynet', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Popstar: Never Stop Never Stoping, what kind of animal is Connor's pet Maximus?", 'answer': 'a turtle', 'category': 'Comedies'}, {'question': "Who plays Will Smith's love interest Emily Posa in Seven Pounds?", 'answer': 'Rosario Dawson', 'category': 'Will Smith'}, {'question': 'In Bad Boys, Mike says that Marcus almost drives slow enough to do what?', 'answer': 'drive Miss Daisy', 'category': 'Will Smith'}, {'question': 'Who plays the foul-mouthed teen Farber in I, Robot?', 'answer': 'Shia LaBeouf', 'category': 'Will Smith'}, {'question': 'In Men in Black 3, Will Smith goes back in time and finds out which famous artist was an undercover MIB agent?', 'answer': 'Andy Warhol', 'category': 'Will Smith'}, {'question': 'Will Smith and Alec Baldwin star in this 2015 drama.', 'answer': 'Concussion', 'category': 'Will Smith'}, {'question': "What was Will Smith's feature film debut?", 'answer': 'Where the Day Takes You', 'category': 'Will Smith'}, {'question': 'Matthew McConaughey plays an ad exec trying to win an account to pitch a diamond campaign in what movie?', 'answer': 'How to Lose a Guy in 10 Days', 'category': 'Matthew McConaughey'}, {'question': "What late actor shows up to save Matthew McConaughey's life at the end of Mud?", 'answer': 'Sam Shepard', 'category': 'Matthew McConaughey'}, {'question': 'McConaughey plays a disillusioned Confederate army deserter from Mississippi who leads a militia in an uprising in what film?', 'answer': 'Free State of Jones', 'category': 'Matthew McConaughey'}, {'question': 'Matthew McConaughey plays executive officer Lt. Tyler in what war film?', 'answer': 'U-571', 'category': 'Matthew McConaughey'}, {'question': 'What product does Matthew McConaughey deliver to his client in the jungle at the end of Tropic Thunder?', 'answer': 'a TiVo', 'category': 'Matthew McConaughey'}, {'question': "Who plays Maggie, Matthew McConaughey's ex-wife in The Lincoln Lawyer?", 'answer': 'Marisa Tomei', 'category': 'Matthew McConaughey'}, {'question': 'Who plays German bounty hunter Dr. King Schultz in Django Unchained?', 'answer': 'Christoph Waltz', 'category': 'Quentin Tarantino'}, {'question': 'Who plays the young writer who falls in love with a cabaret performer in a 2001 musical?', 'answer': 'Ewan McGregor (in Moulin Rouge!)', 'category': 'Musicals'}, {'question': 'Name one of the actors who plays a brother to Mark Wahlberg in the film Four Brothers.', 'answer': 'André Benjamin, Garrett Hedlund, Tyrese Gibson', 'category': '2000s'}, {'question': 'In Fargo, what does Carl use as a marker to help him potentially find the rest of the ransom money he buries in the snow?', 'answer': 'a red ice scraper', 'category': '1990s'}, {'question': 'What 1991 film stars Robin Williams as a homeless man on a quest to recover the Holy Grail?', 'answer': 'The Fisher King', 'category': 'Dramas'}, {'question': "Who plays Anna Valerious, a gypsy princess determined to end the curse on her family by killing Dracula, in 2004's Van Helsing?", 'answer': 'Kate Beckinsale', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Notting Hill, what kind of shop did Hugh Grant's character own?", 'answer': 'a travel bookstore', 'category': 'Romance'}, {'question': 'In The Little Mermaid, what human object does Scuttle call a dinglehopper?', 'answer': 'a fork', 'category': 'Animated'}, {'question': "Who plays Dana Cummings, the fellow accountant starring opposite Ben Affleck in 2016's The Accountant?", 'answer': 'Anna Kendrick', 'category': 'Action/Adventure'}, {'question': 'In Scrooged, the Ghost of Christmas Past appears to Frank disguised as what?', 'answer': 'a taxi driver', 'category': 'Comedies'}, {'question': "Who provides the voice of Chucky in the Child's Play series?", 'answer': 'Brad Dourif', 'category': 'Horror/Thriller'}, {'question': 'Who stars as Detective Jimmy "Popeye" Doyle in The French Connection?', 'answer': 'Gene Hackman', 'category': 'Crime'}, {'question': "Who won an Oscar for directing 1985's Best Picture winner, Amadeus?", 'answer': 'Miloš Forman', 'category': 'N/A'}, {'question': 'In Fast Times at Ridgemont High, who played star football player Charles Jefferson?', 'answer': 'Forest Whitaker', 'category': '1980s'}, {'question': 'Shermer was the name of the high school in what coming-of-age film?', 'answer': 'The Breakfast Club', 'category': '1980s'}, {'question': 'Who directed Beverly Hills Cop?', 'answer': 'Martin Brest', 'category': '1980s'}, {'question': 'In Weird Science, what do Max and Ian dump on Gary and Wyatt in front of a crowd at the mall?', 'answer': 'an Icee', 'category': '1980s'}, {'question': 'In Gremlins, what is the name of the young boy who receives Gizmo as a Christmas present?', 'answer': 'Billy Peltzer', 'category': '1980s'}, {'question': "What is the name of Inigo Montoya's deceased father in The Princess Bride?", 'answer': 'Domingo Montoya', 'category': '1980s'}, {'question': "Who was Julia Roberts' co-lead in the crime comedy The Mexican?", 'answer': 'Brad Pitt', 'category': 'Julia Roberts'}, {'question': 'What 2015 thriller featured Julia Roberts as a grieving mother and police officer?', 'answer': 'Secret in Their Eyes', 'category': 'Julia Roberts'}, {'question': 'Who played the King and father to Snow White in Mirror Mirror?', 'answer': 'Sean Bean', 'category': 'Julia Roberts'}, {'question': 'What is the name of the bar where Kit and Vivian hang out in Pretty Woman?', 'answer': 'the Blue Banana Club', 'category': 'Julia Roberts'}, {'question': 'What Julia Roberts film also stars Kristen Dunst, Julia Stiles, and Maggie Gyllenhaal?', 'answer': 'Mona Lisa Smile', 'category': 'Julia Roberts'}, {'question': 'Julia Roberts lends her voice to what 2017 CG animated film?', 'answer': 'Smurfs: The Lost Village', 'category': 'Julia Roberts'}, {'question': "Who played Brad Pitt's wife Tracy in the 1995 thriller Seven?", 'answer': 'Gwyneth Paltrow', 'category': 'Thriller'}, {'question': 'Who directed The French Connection?', 'answer': 'William Friedkin', 'category': '1970s'}, {'question': 'After getting behind the camera for Braveheart, what was the next feature film helmed by Mel Gibson?', 'answer': 'The Passion of the Christ', 'category': 'Directors'}, {'question': 'In The Exorcist, what nickname does Regan initially give to the demonic presence?', 'answer': 'Captain Howdy', 'category': 'Horror'}, {'question': 'What film stars Tim Robbins as a mechanic trying to romance a mathematician played by Meg Ryan with the assistance of Albert Einstein played by Walter Matthau?', 'answer': 'I.Q.', 'category': '1990s'}, {'question': 'What classic Hollywood director whose career included comedies, dramas, gangster films, sci-fi, noir, and westerns directed the John Wayne classic Rio Bravo?', 'answer': 'Howard Hawks', 'category': 'Westerns'}, {'question': "Who directed 1996's Mission: Impossible?", 'answer': 'Brian De Palma', 'category': 'Action/Adventure'}, {'question': "Pee-wee's Big Adventure was released in what year?", 'answer': '1985', 'category': 'Release Dates'}, {'question': 'What 2010 film follows a poor teen searching for her drug-dealing father amongst the criminal underbelly of the rural Ozarks community in order to keep her family intact?', 'answer': "Winter's Bone", 'category': 'Dramas'}, {'question': "What actor played Marty's father, George McFly, in Back to the Future?", 'answer': 'Crispin Glover', 'category': '1980s'}, {'question': 'Sigourney Weaver has played Ellen Ripley in how many Aliens films?', 'answer': '4 (Alien, Aliens, Alien 3, Alien Resurrection)', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Robin Williams and Nathan Lane star together in what 1996 comedy?', 'answer': 'The Birdcage', 'category': 'Comedies'}, {'question': "Who stars as Ross Jennings, a doctor with a strong fear of spiders, in 1990's Arachnophobia?", 'answer': 'Jeff Daniels', 'category': 'Horror/Thriller'}, {'question': "1978's Watership Down portrays the surprisingly violent world of what kind of animal as they try to find a new home?", 'answer': 'rabbits', 'category': 'Animated'}, {'question': "In Bill & Ted's Excellent Adventure, what is the name of Bill and Ted's band?", 'answer': 'Wyld Stallyns', 'category': '1980s'}, {'question': "Who portrays Dalton's love interest, Dr. Clay, in Road House?", 'answer': 'Kelly Lynch', 'category': '1980s'}, {'question': 'Who directed The Big Chill?', 'answer': 'Lawrence Kasdan', 'category': '1980s'}, {'question': 'In History of the World, Part I, who plays a slave by the name of Josephus?', 'answer': 'Gregory Hines', 'category': '1980s'}, {'question': "Who plays Robert Carradine's best friend Gilbert in 1984's Revenge of the Nerds?", 'answer': 'Anthony Edwards', 'category': '1980s'}, {'question': "This actress played the party girl, Jules Van Patten, in 1985's St. Elmo's Fire.", 'answer': 'Demi Moore', 'category': '1980s'}, {'question': "Who was Bruce Willis' co-lead in the Kevin Smith directed action comedy Cop Out?", 'answer': 'Tracy Morgan', 'category': 'Kevin Smith'}, {'question': 'Who played Dante Hicks in Clerks?', 'answer': "Brian O'Halloran", 'category': 'Kevin Smith'}, {'question': 'Michael Rooker stars as an evil father in which Kevin Smith film?', 'answer': 'Mallrats', 'category': 'Kevin Smith'}, {'question': "In 1999's Dogma, what kind of creature was Salma Hayek's Serendipity?", 'answer': 'a muse', 'category': 'Kevin Smith'}, {'question': 'What is the name of the store in Clerks?', 'answer': 'Quick Stop Groceries', 'category': 'Kevin Smith'}, {'question': 'Who played Miri in Zack and Miri Make a Porno?', 'answer': 'Elizabeth Banks', 'category': 'Kevin Smith'}, {'question': 'Name two films that have starred Denzel Washington and have been directed by Spike Lee.', 'answer': "Mo' Better Blues, Malcolm X, He Got Game, Inside Man", 'category': 'Denzel Washington'}, {'question': "Who plays famed novelist Paul Sheldon in 1990's Misery?", 'answer': 'James Caan', 'category': 'Horror/Thriller'}, {'question': 'Speed opens with Jack Traven and Harry Temple trying to save civilians from where after a bomb goes off?', 'answer': 'an elevator', 'category': 'Action/Adventure'}, {'question': "Who plays Gene Kranz, the head of Mission Control, in 1995's Apollo 13?", 'answer': 'Ed Harris', 'category': 'Dramas'}, {'question': 'Christopher McDonald voices Kent Mansley, a paranoid government agent, in what 90s animated classic?', 'answer': 'The Iron Giant', 'category': 'Animated'}, {'question': "In 1986's Legend, according to the law of the forest, it is a sin for a human to touch what creature?", 'answer': 'unicorns', 'category': 'Fantasy/Sci-Fi'}, {'question': "In 1995's Muriel's Wedding, Toni Collette plays a socially awkward Australian who is obsessed with what 70s pop band?", 'answer': 'ABBA', 'category': 'Comedies'}, {'question': "Who stars as the unnamed cocaine dealer who faces a tough assignment on the eve of his early retirement in 2005's Layer Cake?", 'answer': 'Daniel Craig', 'category': 'Crime'}, {'question': 'Which famous singer played the soldier Alex in Dunkirk?', 'answer': 'Harry Styles', 'category': 'War'}, {'question': 'Complete this quote from Love Actually: "To me, you are ___.".', 'answer': 'perfect', 'category': 'Holiday'}, {'question': 'Who directed the Thanksgiving movie Home for the Holidays?', 'answer': 'Jodie Foster', 'category': 'Holiday'}, {'question': 'Who played the deceased father who returns as a snowman to put things right with his son in the 1998 family drama Jack Frost?', 'answer': 'Michael Keaton', 'category': 'Holiday'}, {'question': "What is the first name of Kevin McCallister's Pepsi-loving, bed-wetting little cousin in Home Alone?", 'answer': 'Fuller', 'category': 'Holiday'}, {'question': 'What food does Buddy become obsessed with when he moves in with his dad in Elf?', 'answer': 'spaghetti', 'category': 'Holiday'}, {'question': 'What is the surname of the two sisters that joined up with Bing Crosby and Danny Kaye in White Christmas?', 'answer': 'Haynes', 'category': 'Holiday'}, {'question': 'Which film featuring Nicole Kidman has the tagline "WARNING: May Cause Toe-Tapping."?', 'answer': 'Happy Feet', 'category': 'Nicole Kidman'}, {'question': "Who stars alongside Nicole Kidman as a pair of witch sisters in 1998's Practical Magic?", 'answer': 'Sandra Bullock', 'category': 'Nicole Kidman'}, {'question': 'What was the first film Nicole Kidman and Tom Cruise starred in together?', 'answer': 'Days of Thunder', 'category': 'Nicole Kidman'}, {'question': "In the 1989 thriller Dead Calm, how does John and Rae Ingram's son die in the opening scene?", 'answer': 'a car crash', 'category': 'Nicole Kidman'}, {'question': "In 2016's Lion, who plays Lucy, Saroo's girlfriend whom he meets at university in Melbourne?", 'answer': 'Rooney Mara', 'category': 'Nicole Kidman'}, {'question': "Who stars as Nicole Kidman's eccentric daughter in Park Chan-wook's 2013 indie thriller Stoker?", 'answer': 'Mia Wasikowska', 'category': 'Nicole Kidman'}, {'question': 'What non-superhero comic character received a 2011 film directed by Steven Spielberg?', 'answer': 'Tintin', 'category': 'Comic Book'}, {'question': 'Meryl Streep portrays Margaret Thatcher in this 2011 film.', 'answer': 'The Iron Lady', 'category': 'Meryl Streep'}, {'question': 'In Jumanji: Welcome to the Jungle, which of the four main actors is the first to lose a life in the game?', 'answer': 'Jack Black', 'category': 'Action/Adventure'}, {'question': 'How many films did Gene Wilder and Richard Pryor co-star in?', 'answer': '4 (Silver Streak; Stir Crazy; See No Evil, Hear No Evil; Another You)', 'category': 'Comedies'}, {'question': "What is the name of Django's wife in Django Unchained?", 'answer': 'Broomhilda "Hildi" von Shaft', 'category': 'Quentin Tarantino'}, {'question': 'Who was the last director to win Best Director in their directorial debut?', 'answer': 'Sam Mendes (for American Beauty)', 'category': 'Oscars'}, {'question': 'In Talladega Nights, Ricky Bobby tries to conquer his fear by driving with what animal in his car?', 'answer': 'a cougar', 'category': 'Comedies'}, {'question': 'Who wrote and directed the Mariachi trilogy?', 'answer': 'Robert Rodriguez', 'category': 'Action/Adventure'}, {'question': 'What famous rapper plays Blue, a wheelchair-bound drug dealer turned informant, in Training Day?', 'answer': 'Snoop Dogg', 'category': 'Dramas'}, {'question': 'Lord Farquaad is the name of the villain in what animated film?', 'answer': 'Shrek', 'category': 'Animated'}, {'question': 'Who plays the villainous gold-digging nanny, Debbie, in Addams Family Values?', 'answer': 'Joan Cusack', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Thor: Ragnarok, what does Thor disguise Mjölnir as to stay incognito while on Earth?', 'answer': 'an umbrella', 'category': 'Comic Book'}, {'question': "Who directed the 2016 hit Don't Breathe?", 'answer': 'Fede Álvarez', 'category': 'Horror/Thriller'}, {'question': 'What Spielberg film stars Eric Bana and Daniel Craig?', 'answer': 'Munich', 'category': 'Steven Spielberg'}, {'question': "In 2007's Transformers, what junk food was set before Maggie and Glen as they were being held in the interrogation room by Sector 7?", 'answer': 'donuts', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Avatar, who plays Dr. Grace Augustine, who is the head of the Avatar Program?', 'answer': 'Sigourney Weaver', 'category': 'Fantasy/Sci-Fi'}, {'question': "In the 1996 family fantasy film Matilda, who played Matilda's con man of a father?", 'answer': 'Danny DeVito', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the Fellowship of the Ring prologue, how many rings were said to be gifted to the race of men?', 'answer': '9 rings', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the name of the small town that is the setting for Power Rangers?', 'answer': 'Angel Grove', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is Harry Potter's uncle's name?", 'answer': 'Vernon Dursley', 'category': 'Fantasy/Sci-Fi'}, {'question': "Tim Burton's Sleepy Hollow was released in what year?", 'answer': '1999', 'category': 'Release Dates'}, {'question': 'In what year was Annie Hall released?', 'answer': '1977', 'category': 'Release Dates'}, {'question': 'What year saw the release of Terminator 3: Rise of the Machines?', 'answer': '2003', 'category': 'Release Dates'}, {'question': 'What year saw the release of the Will Smith film Hancock?', 'answer': '2008', 'category': 'Release Dates'}, {'question': "Richard Linklater's Dazed and Confused was released in what year?", 'answer': '1993', 'category': 'Release Dates'}, {'question': 'The war comedy M*A*S*H was released in which year?', 'answer': '1970', 'category': 'Release Dates'}, {'question': 'What is the name of the ghostly bartender who appears to Jack Torrance in The Shining?', 'answer': 'Lloyd', 'category': 'Horror'}, {'question': 'What is the first and last name of the character played by Alicia Silverstone in Clueless?', 'answer': 'Cher Horowitz', 'category': 'Rom-Coms'}, {'question': 'Jim Sheridan directed Daniel Day-Lewis in what biopic?', 'answer': 'My Left Foot: The Story of Christy Brown', 'category': 'Biopics'}, {'question': 'Tom Hanks won his first Academy Award for his role in what film?', 'answer': 'Philadelphia', 'category': 'Tom Hanks'}, {'question': "Quentin Tarantino's Death Proof and Robert Rodriguez's Planet Terror were originally released as one movie under what title?", 'answer': 'Grindhouse', 'category': 'Quentin Tarantino'}, {'question': 'In Avengers: Age of Ultron, who gives Scarlet Witch a motivational speech that convinces her to fight in the Battle of Sokovia?', 'answer': 'Hawkeye', 'category': 'Comic Book'}, {'question': 'What actor plays Steve Stifler in the American Pie series?', 'answer': 'Seann William Scott', 'category': 'Comedies'}, {'question': "Who was Paul Newman's co-lead, playing Minnesota Fats, in The Hustler?", 'answer': 'Jackie Gleason', 'category': 'Dramas'}, {'question': 'Bruce Campbell voices the character of Mayor Shelbourne, the gluttonous and egotistical mayor of Swallow Falls, in what animated film?', 'answer': 'Cloudy with a Chance of Meatballs', 'category': 'Animated'}, {'question': 'Freddie Highmore played which role in Charlie and the Chocolate Factory?', 'answer': 'Charlie Bucket', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Indiana Jones and the Temple of Doom, Splash, Romancing the Stone, and The Last Starfighter were all released in what year?', 'answer': '1984', 'category': 'Release Dates'}, {'question': 'What 1996 horror film was directed by Peter Jackson?', 'answer': 'The Frighteners', 'category': 'Horror/Thriller'}, {'question': "Who composed the score for 2017's The Shape of Water?", 'answer': 'Alexandre Desplat', 'category': 'Scores & Soundtracks'}, {'question': 'Samuel L. Jackson played American entrepreneur George Washington Williams in this 2016 adventure film.', 'answer': 'The Legend of Tarzan', 'category': 'Samuel L. Jackson'}, {'question': 'Samuel L. Jackson starred with Hayden Christensen and Rachel Bilson in this Doug Liman film.', 'answer': 'Jumper', 'category': 'Samuel L. Jackson'}, {'question': 'Samuel L. Jackson won a BAFTA for Best Supporting Actor and was nominated for an Academy Award for which film?', 'answer': 'Pulp Fiction', 'category': 'Samuel L. Jackson'}, {'question': 'In what film does Samuel L. Jackson get eaten by a shark?', 'answer': 'Deep Blue Sea', 'category': 'Samuel L. Jackson'}, {'question': "In Kingsman: The Secret Service, Sam Jackson's Valentine feeds Harry a meal from which fast food chain?", 'answer': "McDonald's", 'category': 'Samuel L. Jackson'}, {'question': "Who plays Samuel L. Jackson's co-lead in Black Snake Moan?", 'answer': 'Christina Ricci', 'category': 'Samuel L. Jackson'}, {'question': 'Who plays Jester in Top Gun?', 'answer': 'Michael Ironside', 'category': '1980s'}, {'question': 'Who plays Duke the Dog-Faced Boy in Big Top Pee-wee?', 'answer': 'Benicio del Toro', 'category': '1980s'}, {'question': "Who directed 1982's The Secret of NIMH?", 'answer': 'Don Bluth', 'category': '1980s'}, {'question': 'In which Jean-Claude Van Damme movie does he play real-life fighter Frank Dux?', 'answer': 'Bloodsport', 'category': '1980s'}, {'question': "In 1987's Innerspace, whose body did Dennis Quaid's pod get injected into?", 'answer': 'Martin Short', 'category': '1980s'}, {'question': "In Ghostbusters, after Rick Moranis' character, Louis Tully is possessed, what is he seeking?", 'answer': 'the Gatekeeper', 'category': '1980s'}, {'question': 'In No Country for Old Men, who plays Llewelyn Moss, the man who stumbles across a briefcase full of money from a drug deal gone bad?', 'answer': 'Josh Brolin', 'category': 'Modern Classics'}, {'question': 'In which film does Cruise play a character named Ethan Hunt?', 'answer': 'Mission: Impossible, Mission: Impossible 2, Mission: Impossible III, Mission: Impossible – Ghost Protocol, Mission: Impossible – Rogue Nation, Mission: Impossible – Fallout', 'category': 'Tom Cruise'}, {'question': "Who played Denzel's mistress in Training Day?", 'answer': 'Eva Mendes', 'category': 'Denzel Washington'}, {'question': 'Why was Andrew, played by Emilio Estevez, in detention in The Breakfast Club?', 'answer': "he taped a kid's buttocks together", 'category': 'Coming of Age'}, {'question': 'In The Poseidon Adventure, the ship is struck by a tidal wave during what holiday celebration?', 'answer': "New Year's Day", 'category': 'Action/Adventure'}, {'question': "Who voiced Slinky the dog in 1995's Toy Story?", 'answer': 'Jim Varney', 'category': 'Pixar'}, {'question': "Aaron Paul appears as Dwayne Johnson's former partner, Phil, in what film?", 'answer': 'Central Intelligence', 'category': 'Comedies'}, {'question': "In 1996's Twister, the new device designed to gather data from tornadoes is named after what fictional character?", 'answer': 'Dorothy Gale', 'category': 'Action/Adventure'}, {'question': "What song plays during the opening credits as Peter Fonda and Dennis Hopper start their journey in 1969's Easy Rider?", 'answer': 'Born to Be Wild', 'category': 'Dramas'}, {'question': "What is the name of Bambi's rabbit friend in Disney's Bambi?", 'answer': 'Thumper', 'category': 'Animated'}, {'question': 'What 2000 sci-fi film starring Val Kilmer and Tom Sizemore follows a group of astronauts being terrorized by their own robot after their Mars mission goes awry?', 'answer': 'Red Planet', 'category': 'Fantasy/Sci-Fi'}, {'question': "Oliver Stone's historical drama JFK was released in what year?", 'answer': '1991', 'category': 'Release Dates'}, {'question': "In 1982's Poltergeist, who played the father Steven Freeling?", 'answer': 'Craig T. Nelson', 'category': 'Horror/Thriller'}, {'question': 'Name the family film from the following quote: "Attention campers, lunch has been cancelled today, due to lack of hustle. Deal with it.".', 'answer': 'Heavyweights', 'category': 'Family'}, {'question': 'What Game of Thrones star played Pero Tovar in The Great Wall?', 'answer': 'Pedro Pascal', 'category': 'Action/Adventure'}, {'question': "What film was Jean-Claude Van Damme's directorial debut?", 'answer': 'The Quest', 'category': 'Action/Adventure'}, {'question': 'Who plays the female love interest to Charlize Theron in Atomic Blonde?', 'answer': 'Sofia Boutella', 'category': 'Action/Adventure'}, {'question': "In Mad Max: Fury Road, what is the name of Immortan Joe's followers who are chasing Furiosa and Max and that Nux was once a part of?", 'answer': 'the War Boys', 'category': 'Action/Adventure'}, {'question': "What real-life author does Paul Bettany portray in 2001's A Knight's Tale?", 'answer': 'Geoffrey Chaucer', 'category': 'Action/Adventure'}, {'question': "In 2004's Troy, who plays the main antagonist Agamemnon, whom Achilles begrudgingly fights for?", 'answer': 'Brian Cox', 'category': 'Action/Adventure'}, {'question': "Who plays the girl who was possessed, Regan MacNeil, in 1973's The Exorcist?", 'answer': 'Linda Blair', 'category': 'Horror'}, {'question': 'Who played the Candyman in the 1992 film Candyman?', 'answer': 'Tony Todd', 'category': 'Horror'}, {'question': 'Four teenage outcast girls pursue witchcraft for their own gain, but soon encounter negative repercussions, in what supernatural horror film?', 'answer': 'The Craft', 'category': 'Horror'}, {'question': 'In Bubba Ho-Tep, Bruce Campbell plays Elvis Presley, who is forced to battle the evil mummy with his friend Jack. Jack claims to be which famous ex-president?', 'answer': 'John F. Kennedy', 'category': 'Horror'}, {'question': "In 2000's Scary Movie, who plays the series main protagonist Cindy Campbell?", 'answer': 'Anna Faris', 'category': 'Horror'}, {'question': 'How many films have been officially released in the Paranormal Activity film series?', 'answer': '6 (Paranormal Activity, 2, 3, 4, The Marked Ones, The Ghost Dimension)', 'category': 'Horror'}, {'question': 'Ridley Scott, David Fincher, and James Cameron have all directed films in what film franchise?', 'answer': 'Alien (Alien, Prometheus, Covenant; 3; Aliens)', 'category': 'Directors'}, {'question': 'Black Swan stars Natalie Portman and Mila Kunis competing for the lead role in what classic ballet?', 'answer': 'Swan Lake', 'category': 'Dance'}, {'question': 'Who plays NYPD cop and friend of Freddy Heflin, Gary Figgis, in Cop Land?', 'answer': 'Ray Liotta', 'category': 'Crime'}, {'question': "In Remember the Titans, who played Coach Yost's football-loving daughter Sheryl?", 'answer': 'Hayden Panettiere', 'category': 'Sports'}, {'question': 'Name the 2015 film that pits political strategist Calamity Jane against her archrival Pat Candy, played by Billy Bob Thornton.', 'answer': 'Our Brand Is Crisis', 'category': 'Sandra Bullock'}, {'question': "Who played Ralph, the kidnapper in Robert Zemeckis' Romancing the Stone?", 'answer': 'Danny DeVito', 'category': 'Rom-Coms'}, {'question': "Who directed 1999's Three Kings?", 'answer': 'David O. Russell', 'category': 'N/A'}, {'question': 'Jessica Chastain played astronaut Melissa Lewis in this 2015 film.', 'answer': 'The Martian', 'category': 'Dramas'}, {'question': "Who plays the title character Viola in the 2006 comedy She's the Man?", 'answer': 'Amanda Bynes', 'category': 'Comedies'}, {'question': 'Clint Eastwood directed two films to Best Picture wins at the Oscars: Unforgiven and what other film?', 'answer': 'Million Dollar Baby', 'category': 'Oscars'}, {'question': 'What is the name of the baby in The Incredibles?', 'answer': 'Jack-Jack Parr', 'category': 'Animated'}, {'question': 'Who directed the science-fiction drama Moon?', 'answer': 'Duncan Jones', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the subtitle of the third film in the Terminator franchise?', 'answer': 'Rise of the Machines', 'category': 'Action/Adventure'}, {'question': "Who played Mel Gibson's daughter in Signs?", 'answer': 'Abigail Breslin', 'category': 'Horror/Thriller'}, {'question': "In the final scene of The Godfather Part II, Vito Corleone's fiftieth birthday is retconned to coincide with what historical event?", 'answer': 'the attack on Pearl Harbor', 'category': 'Crime'}, {'question': 'Which actress plays the lead opposite Kevin Costner in Dances with Wolves?', 'answer': 'Mary McDonnell', 'category': '1990s'}, {'question': "Who starred as Julie Pierce, Mr. Miyagi's new pupil, in The Next Karate Kid?", 'answer': 'Hilary Swank', 'category': '1990s'}, {'question': 'In the 1998 animated film Antz, the colony is attacked by an army of what creature?', 'answer': 'termites', 'category': '1990s'}, {'question': "In the 1999 version of The Mummy, what is the first name of Brendan Fraser's character?", 'answer': 'Rick', 'category': '1990s'}, {'question': "In Zombieland what is Columbus' first rule of Zombieland?", 'answer': 'Cardio.', 'category': 'Horror'}, {'question': "In 1982's The Thing, who plays the outpost's resident biologist, Blair, who grows paranoid that the creature could assimilate all life on Earth?", 'answer': 'Wilford Brimley', 'category': 'Horror'}, {'question': 'Three friends get trapped inside the house of a blind retired Army Special Forces veteran played by Stephen Lang in what film?', 'answer': "Don't Breathe", 'category': 'Horror'}, {'question': 'In A Quiet Place, where does John Krasinski take his son that is the only place they can make noise without being detected?', 'answer': 'a waterfall', 'category': 'Horror'}, {'question': "In Over the Top, what does Stallone's character do before every arm wrestling match?", 'answer': 'he turns his cap around', 'category': 'Sly & Arnie'}, {'question': 'In The Wizard of Oz, who is the first of the three companions that Dorothy met on her quest to meet the Wizard?', 'answer': 'the Scarecrow', 'category': 'N/A'}, {'question': "What was the nickname children called Samuel L. Jackson's Elijah Price in Unbreakable?", 'answer': 'Mr. Glass', 'category': 'N/A'}, {'question': 'Ben Stiller, Robin Williams, and Dick Van Dyke star in what 2006 family film?', 'answer': 'Night at the Museum', 'category': 'N/A'}, {'question': 'Name the movie from the following characters: Jim, Bart, Taggert, Lili Von Shtupp, Mongo, Hedley Lamarr.', 'answer': 'Blazing Saddles', 'category': 'N/A'}, {'question': 'How many Karate Kid movies featured Pat Morita as Mr. Miyagi?', 'answer': '4 (The Karate Kid, Part II, Part III, The Next Karate Kid)', 'category': 'N/A'}, {'question': "Which actor becomes embroiled in a nightmarish friendship with Jim Carrey in 1996's The Cable Guy?", 'answer': 'Matthew Broderick', 'category': '1990s'}, {'question': 'What legendary director of such classics as The Maltese Falcon and Key Largo also directed the 1982 adaptation of Annie?', 'answer': 'John Huston', 'category': 'Classics'}, {'question': 'In The Blues Brothers, why do Jake and Elwood need to raise $5,000 in 11 days?', 'answer': 'to save an orphanage', 'category': 'Comedies'}, {'question': 'What is the name of the demonic creature that ultimately defeats Hela in Thor: Ragnarok?', 'answer': 'Surtur', 'category': 'Cate Blanchett'}, {'question': 'Jodie Foster starred opposite Chow Yun-fat in this 1999 historical drama.', 'answer': 'Anna and the King', 'category': 'Jodie Foster'}, {'question': 'In The Man from U.N.C.L.E., who plays the villainous Victoria Vinciguerra?', 'answer': 'Elizabeth Debicki', 'category': 'Spy'}, {'question': 'Who plays the lead in the 2006 sci-fi thriller Children of Men?', 'answer': 'Clive Owen', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What animated film franchise stars the voice talents of Kevin James, Andy Samberg, Selena Gomez, and Adam Sandler?', 'answer': 'Hotel Transylvania', 'category': 'Animated'}, {'question': 'Will Smith stars with Matt Damon in what sports drama?', 'answer': 'The Legend of Bagger Vance', 'category': 'Dramas'}, {'question': 'Who played the female lead, Andie Anderson, in How to Lose a Guy in 10 Days?', 'answer': 'Kate Hudson', 'category': 'Comedies'}, {'question': 'In The Princess Bride, what does R.O.U.S. stand for?', 'answer': 'Rodents of Unusual Size', 'category': 'Action/Adventure'}, {'question': 'Crocodile Dundee was released in what year?', 'answer': '1986', 'category': 'Release Dates'}, {'question': 'How many films in the Nightmare on Elm Street franchise were directed by Wes Craven?', 'answer': "2 (1984's A Nightmare on Elm Street, New Nightmare)", 'category': 'Horror/Thriller'}, {'question': 'Name two of the three leading actresses in the 1987 dark comedy The Witches of Eastwick.', 'answer': 'Cher, Michelle Pfeiffer, Susan Sarandon', 'category': '1980s'}, {'question': 'Jonah Hill received his first Academy Award nomination for which film?', 'answer': 'Moneyball', 'category': 'N/A'}, {'question': 'In Inglourious Basterds, what were the Basterds instructed to collect from the Nazis?', 'answer': 'their scalps', 'category': 'Quentin Tarantino'}, {'question': "Who plays Django's first slave owner, Old Man Carrucan, in Django Unchained?", 'answer': 'Bruce Dern', 'category': 'Quentin Tarantino'}, {'question': 'Who plays the last man standing of the crew in Reservoir Dogs?', 'answer': 'Steve Buscemi', 'category': 'Quentin Tarantino'}, {'question': 'In the Kill Bill films, which member of the Deadly Viper Assassination Squad had the code name California Mountain Snake?', 'answer': 'Daryl Hannah', 'category': 'Quentin Tarantino'}, {'question': "In Pulp Fiction, what make of car do Vincent and Mia sit inside at Jack Rabbit Slim's?", 'answer': 'a 1956 Chrysler New Yorker', 'category': 'Quentin Tarantino'}, {'question': 'Which controversial, ultraviolent Oliver Stone movie was based on a story by Quentin Tarantino?', 'answer': 'Natural Born Killers', 'category': 'Quentin Tarantino'}, {'question': 'Who plays washed-up golf pro Roy McAvoy in Tin Cup?', 'answer': 'Kevin Costner', 'category': 'Sports'}, {'question': 'In Major League, what is the result of the at-bat when Jake Taylor mimics Babe Ruth\'s famous "called shot"?', 'answer': 'a bunt', 'category': 'Sports'}, {'question': 'Who plays head football coach Harold Jones in the 2003 sports drama Radio?', 'answer': 'Ed Harris', 'category': 'Sports'}, {'question': 'Keanu Reeves played two quarterbacks in two unrelated movies that went to the same college. What university did he play for?', 'answer': 'the Ohio State University (in Point Break, The Replacements)', 'category': 'Sports'}, {'question': 'What 2000s baseball film stars Freddie Prinze Jr. and Jessica Biel?', 'answer': 'Summer Catch', 'category': 'Sports'}, {'question': 'In the pro shop in Caddyshack, Rodney Dangerfield says "you buy a hat like this I bet you get a free ___.".', 'answer': 'bowl of soup', 'category': 'Sports'}, {'question': 'What is the name of the special kick that Daniel learns in The Karate Kid?', 'answer': 'the Crane', 'category': 'Modern Classics'}, {'question': "Who plays DiCaprio's wife, Mal, in Inception?", 'answer': 'Marion Cotillard', 'category': 'Leonardo DiCaprio'}, {'question': 'Which Academy Award winning actress played Major Rebecca Childs in the science-fiction adventure The Core?', 'answer': 'Hilary Swank', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays Colonel Nicholson in the war film The Bridge on the River Kwai?', 'answer': 'Alec Guinness', 'category': 'War'}, {'question': 'In what Eastern European country did the 2002 film The Pianist take place?', 'answer': 'Poland', 'category': 'Biopics'}, {'question': 'What 1998 thriller stars Michael Douglas as a wealthy Wall Street speculator who plots to have his wife killed after discovering she had an affair?', 'answer': 'A Perfect Murder', 'category': 'Horror/Thriller'}, {'question': 'Will Ferrell and Mark Wahlberg first starred together in what comedy film?', 'answer': 'The Other Guys', 'category': 'Comedies'}, {'question': 'What are werewolves called in the Underworld franchise?', 'answer': 'Lycans', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the subtitle of the second film in the Divergent series released in 2015?', 'answer': 'Insurgent', 'category': 'Action/Adventure'}, {'question': "Who plays the lead of Alex in 1983's Flashdance?", 'answer': 'Jennifer Beals', 'category': 'Dramas'}, {'question': 'In The Goonies, what is the name of the embarrassing dance Mouth makes Chunk perform?', 'answer': 'the truffle shuffle', 'category': 'Family'}, {'question': 'Who voices Jessie the Yodeling Cowgirl in the Toy Story franchise?', 'answer': 'Joan Cusack (in 2, 3)', 'category': 'Animated'}, {'question': 'What 90s movie features Meg Ryan and Nicolas Cage?', 'answer': 'City of Angels', 'category': '1990s'}, {'question': 'Who composed the score for Titanic?', 'answer': 'James Horner', 'category': 'Scores & Soundtracks'}, {'question': 'What Lord of the Rings actor wrote and performed the song "The Last Goodbye" for the soundtrack of The Hobbit: The Battle of the Five Armies?', 'answer': 'Billy Boyd', 'category': 'Scores & Soundtracks'}, {'question': "What musical artist created the soundtrack for Disney's Tarzan in 1999?", 'answer': 'Phil Collins', 'category': 'Scores & Soundtracks'}, {'question': 'Which legendary composer is well-known for scores ranging from Citizen Kane to Psycho to Taxi Driver?', 'answer': 'Bernard Herrmann', 'category': 'Scores & Soundtracks'}, {'question': "Who composed the score for 2009's Sherlock Holmes?", 'answer': 'Hans Zimmer', 'category': 'Scores & Soundtracks'}, {'question': '"Raindrops Keep Fallin\' on My Head" was famously written for what classic film?', 'answer': 'Butch Cassidy and the Sundance Kid', 'category': 'Scores & Soundtracks'}, {'question': "In Something's Gotta Give, who plays Dr. Julian Mercer, a man who cares for Jack Nicholson and forms a relationship with Diane Keaton?", 'answer': 'Keanu Reeves', 'category': '2000s'}, {'question': 'Who is the lead actress in the family film Ella Enchanted?', 'answer': 'Anne Hathaway', 'category': '2000s'}, {'question': "Who played the man that was under mind control, Major Bennett Marco, in 2004's The Manchurian Candidate?", 'answer': 'Denzel Washington', 'category': '2000s'}, {'question': 'What 2001 black comedy stars Brendan Fraser as a disillusioned cartoonist who enters into limbo where his cartoons come to life while in a coma following a car accident?', 'answer': 'Monkeybone', 'category': '2000s'}, {'question': 'What instrument does Ron play to impress Veronica in Anchorman: The Legend of Ron Burgundy?', 'answer': 'a flute', 'category': '2000s'}, {'question': "What is Carrie-Anne Moss' profession when Guy Pearce meets her in Memento?", 'answer': 'a bartender', 'category': '2000s'}, {'question': 'Tommy Lee Jones starred in what 1997 disaster movie?', 'answer': 'Volcano', 'category': 'Disaster'}, {'question': 'Who played pediatrician Steve Edison opposite Jennifer Lopez in The Wedding Planner?', 'answer': 'Matthew McConaughey', 'category': 'Rom-Coms'}, {'question': 'In the film Moonlight, Chiron uses two different nicknames throughout his life, one when he was a young boy and one when he was an adult. What is one of the nicknames?', 'answer': 'Little, Black', 'category': 'Dramas'}, {'question': 'What Spielberg movie had the following tagline: "The true story of a real fake."?', 'answer': 'Catch Me If You Can', 'category': 'Taglines'}, {'question': 'Besides Tom Cruise, what actor has appeared in the most films in the Mission: Impossible franchise?', 'answer': 'Ving Rhames', 'category': 'Action/Adventure'}, {'question': "Name one of the four odd jobs Dick Van Dyke's jack-of-all-trades Cockney character Bert has in Mary Poppins.", 'answer': 'a chimney sweep, a kite merchant, a one-man-band, a street artist', 'category': 'Family'}, {'question': 'What 2016 film stars Jeff Bridges, Chris Pine, and Ben Foster?', 'answer': 'Hell or High Water', 'category': 'Dramas'}, {'question': 'Who plays newspaper reporter Irwin "Fletch" Fletcher in 1985\'s Fletch?', 'answer': 'Chevy Chase', 'category': '1980s'}, {'question': "Who plays Snow White in 2012's Snow White and the Huntsman?", 'answer': 'Kristen Stewart', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the self-imposed nickname of Rebel Wilson's character in the Pitch Perfect franchise?", 'answer': 'Fat Amy', 'category': 'Comedies'}, {'question': "Who directed 2012's The Cabin in the Woods?", 'answer': 'Drew Goddard', 'category': 'Horror/Thriller'}, {'question': 'Released in 2007, what was the eighth Pixar film?', 'answer': 'Ratatouille', 'category': 'Animated'}, {'question': "In 2018's Annihilation, what is the name given to the mysterious expanding zone where the rules of nature do not apply?", 'answer': 'the Shimmer', 'category': 'New Releases'}, {'question': "In Disney's A Wrinkle in Time, who plays Meg's father, Dr. Alexander Murry, who mysteriously disappeared?", 'answer': 'Chris Pine', 'category': 'New Releases'}, {'question': 'Who played A. A. Milne in the film Goodbye Christopher Robin?', 'answer': 'Domhnall Gleeson', 'category': 'New Releases'}, {'question': "Who voices Chief, the leader of the main pack of alpha dogs, in Wes Anderson's Isle of Dogs?", 'answer': 'Bryan Cranston', 'category': 'New Releases'}, {'question': 'In 10 Things I Hate About You, how does Kat distract the teacher to get Patrick out of detention?', 'answer': 'she flashes him', 'category': 'Coming of Age'}, {'question': "What is Ferris Bueller's girlfriend's name?", 'answer': 'Sloane Peterson', 'category': 'Coming of Age'}, {'question': 'In Wet Hot American Summer, two camp counselors get married. Michael Ian Black played one of them. Who played the other?', 'answer': 'Bradley Cooper', 'category': 'Coming of Age'}, {'question': 'What was the only Oscar won by the 2014 coming-of-age drama Boyhood?', 'answer': 'Best Supporting Actress', 'category': 'Coming of Age'}, {'question': 'What is the title of the big-screen adaptation of the TV show Firefly?', 'answer': 'Serenity', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Jerry Maguire, Cuba Gooding Jr.'s Rod Tidwell plays for what real NFL team?", 'answer': 'the Arizona Cardinals', 'category': 'Sports'}, {'question': "In Disney's Hercules, what are the names of Hades' two shapeshifting minions?", 'answer': 'Pain, Panic', 'category': 'Disney'}, {'question': 'Doug Liman directed Brad Pitt in what 2000s action film?', 'answer': 'Mr. & Mrs. Smith', 'category': 'Brad Pitt'}, {'question': 'Which two Tarantino film stars were reunited in the 2003 movie Basic?', 'answer': 'John Travolta, Samuel L. Jackson', 'category': 'Dramas'}, {'question': "Sylvester Stallone's iconic John Rambo character is a veteran of what war?", 'answer': 'the Vietnam War', 'category': 'Action/Adventure'}, {'question': "In Disney's The Jungle Book, what is the name of Mowgli's bear friend?", 'answer': 'Baloo', 'category': 'Animated'}, {'question': 'Who directed the 1995 crime drama Heat?', 'answer': 'Michael Mann', 'category': 'Dramas'}, {'question': "Who plays Jake Lawson, the main architect behind the global weather-controlling system, in 2017's Geostorm?", 'answer': 'Gerard Butler', 'category': 'Disaster'}, {'question': 'Who portrayed the amphibian "asset" in The Shape of Water?', 'answer': 'Doug Jones', 'category': 'Fantasy/Sci-Fi'}, {'question': "You'll find the characters of Louis Winthorpe III and Billy Ray Valentine in what 80s comedy?", 'answer': 'Trading Places', 'category': 'Comedies'}, {'question': 'Ben Affleck plays the iconic CIA analyst Jack Ryan in what 2002 film?', 'answer': 'The Sum of All Fears', 'category': 'Thriller'}, {'question': 'What Tarantino film finds a character stating "Gentlemen, you had my curiosity, now you have my attention."?', 'answer': 'Django Unchained', 'category': 'Quotes'}, {'question': 'In 10 Things I Hate About You, who plays the new student Cameron James who is trying to get a date with Bianca?', 'answer': 'Joseph Gordon-Levitt', 'category': 'N/A'}, {'question': 'Who played mobster Charlie "Lucky" Luciano in 1991\'s Mobsters?', 'answer': 'Christian Slater', 'category': 'Crime'}, {'question': 'The title of The Usual Suspects was inspired by a line from what classic film?', 'answer': 'Casablanca', 'category': 'Crime'}, {'question': 'In Pulp Fiction, Amanda Plummer played Honey Bunny. Who played the character Pumpkin?', 'answer': 'Tim Roth', 'category': 'Crime'}, {'question': 'What film features Joe Pantoliano as Caesar, a mafioso whose girlfriend wants out?', 'answer': 'Bound', 'category': 'Crime'}, {'question': 'In what movie does Richard Gere play a lawyer who takes up dancing?', 'answer': 'Shall We Dance?', 'category': 'Romance'}, {'question': 'In what movie does Johnny Depp make dinner rolls "dance" on a restaurant counter?', 'answer': 'Benny & Joon', 'category': 'Romance'}, {'question': 'In what month do Tom and Summer meet in 500 Days of Summer?', 'answer': 'January', 'category': 'Romance'}, {'question': "Alan Alda, of TV's M*A*S*H fame, wrote, directed, and starred in which 90s wedding movie starring himself and Molly Ringwald?", 'answer': "Betsy's Wedding", 'category': 'Romance'}, {'question': 'Matthew McConaughey stars alongside Sarah Jessica Parker in what 2006 romantic comedy?', 'answer': 'Failure to Launch', 'category': 'Matthew McConaughey'}, {'question': 'Who wrote and directed the classic 1999 comedy Office Space?', 'answer': 'Mike Judge', 'category': 'Directors'}, {'question': 'Who voices Rapunzel in the 2010 Disney film Tangled?', 'answer': 'Mandy Moore', 'category': 'Animated'}, {'question': 'Charlie Sheen played a high school football player in this 1986 film opposite Corey Haim.', 'answer': 'Lucas', 'category': 'Charlie Sheen'}, {'question': "Who plays Cameron Diaz's love interest, Pete, in the Charlie's Angels series?", 'answer': 'Luke Wilson', 'category': 'Action/Adventure'}, {'question': 'David Lynch directed Naomi Watts and Justin Theroux in this 2001 neo-noir thriller.', 'answer': 'Mulholland Drive', 'category': 'Directors'}, {'question': 'What character does Michael Douglas play in Wall Street?', 'answer': 'Gordon Gekko', 'category': 'Dramas'}, {'question': 'What 2006 animated film stars Martin Lawrence and Ashton Kutcher as forest animals trying to fend off hunters?', 'answer': 'Open Season', 'category': 'Animated'}, {'question': "Who plays Will Smith's fighter pilot friend Jimmy in Independence Day?", 'answer': 'Harry Connick Jr.', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays Marty's girlfriend, and future wife, Jennifer in Back to the Future Part II?", 'answer': 'Elisabeth Shue', 'category': 'Comedies'}, {'question': "Kathryn Bigelow's Near Dark is about what kind of classic movie monster?", 'answer': 'vampires', 'category': 'Horror/Thriller'}, {'question': 'In A Fish Called Wanda, which Monty Python veteran plays defense lawyer Archie Leach, whom Wanda attempts to seduce for information?', 'answer': 'John Cleese', 'category': '1980s'}, {'question': "In Shrek 2, whose factory do Shrek and the gang sneak into in order to steal a potion to restore Fiona's love for Shrek?", 'answer': 'the Fairy Godmother', 'category': 'Animated'}, {'question': 'The band Green Day appeared in this animated film, perishing in its polluted lake.', 'answer': 'The Simpsons Movie', 'category': 'Animated'}, {'question': 'In Coraline, she received advice in the Other World from what kind of animal voiced by Keith David?', 'answer': 'a cat', 'category': 'Animated'}, {'question': 'In the original Despicable Me, Gru needs the shrink ray so that he can fulfill his dream of stealing what?', 'answer': 'the Moon', 'category': 'Animated'}, {'question': 'Virtuosity paired Denzel Washington with what future Oscar winner?', 'answer': 'Russell Crowe', 'category': 'Denzel Washington'}, {'question': 'In Inside Man, who plays fixer Madeleine White, who was brought in to protect the contents of a safe deposit box within the bank?', 'answer': 'Jodie Foster', 'category': 'Denzel Washington'}, {'question': 'In Training Day, at the end of the film, Ethan Hawke is about to be killed by a gang. Why do they stop from killing him?', 'answer': "he saved Smiley's cousin from being raped", 'category': 'Denzel Washington'}, {'question': 'Denzel Washington plays political reporter Gray Grantham alongside Julia Roberts in what 90s thriller?', 'answer': 'The Pelican Brief', 'category': 'Denzel Washington'}, {'question': 'What Spielberg film came out the same year as Star Wars: A New Hope?', 'answer': 'Close Encounters of the Third Kind', 'category': 'Steven Spielberg'}, {'question': "Who was Charlize Theron's co-lead in 2003's Monster?", 'answer': 'Christina Ricci', 'category': 'Charlize Theron'}, {'question': 'Which band sang the song "Stayin\' Alive" for the opening in Saturday Night Fever?', 'answer': 'the Bee Gees', 'category': '1970s'}, {'question': 'Who plays villainous ex-DEA agent Ty Moncrief in the 1994 Wesley Snipes film Drop Zone?', 'answer': 'Gary Busey', 'category': 'Action/Adventure'}, {'question': 'What 2008 comedy follows a woman who helps a socially awkward sorority after being expelled from the Playboy Mansion?', 'answer': 'The House Bunny', 'category': 'Comedies'}, {'question': "In 2018's Rampage, what is the name of the rare albino gorilla that befriends Davis?", 'answer': 'George', 'category': 'Action/Adventure'}, {'question': 'Who played investigative reporter and editor of the Spotlight team Walter "Robby" Robinson in Spotlight?', 'answer': 'Michael Keaton', 'category': 'Dramas'}, {'question': "Who voiced Sergeant Tamora Jean Calhoun from Hero's Duty in Wreck-It Ralph?", 'answer': 'Jane Lynch', 'category': 'Animated'}, {'question': 'Who directed the 1985 dystopian sci-fi classic Brazil?', 'answer': 'Terry Gilliam', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What film released in 2010 won Best Picture at the Academy Awards?', 'answer': "The King's Speech", 'category': 'Oscars'}, {'question': 'Who starred as rival stringer Joe Loder in Nightcrawler?', 'answer': 'Bill Paxton', 'category': 'Horror/Thriller'}, {'question': 'The 2004 teen comedy New York Minute stars what famous acting duo?', 'answer': 'Ashley Olsen, Mary-Kate Olsen', 'category': 'Family'}, {'question': "What song greets Bill Murray's character each morning in Groundhog Day?", 'answer': 'I Got You Babe', 'category': 'Scores & Soundtracks'}, {'question': 'Who composed the music for The Hunger Games?', 'answer': 'James Newton Howard', 'category': 'Scores & Soundtracks'}, {'question': 'Who composed the score for Apollo 13?', 'answer': 'James Horner', 'category': 'Scores & Soundtracks'}, {'question': 'What 90s boy band performed the song "True to Your Heart" alongside Stevie Wonder in Disney\'s Mulan?', 'answer': '98 Degrees', 'category': 'Scores & Soundtracks'}, {'question': 'Who composed the scores for the Scorsese films The Aviator, The Departed, and Hugo?', 'answer': 'Howard Shore', 'category': 'Scores & Soundtracks'}, {'question': "Who composed the score for 1990's Total Recall?", 'answer': 'Jerry Goldsmith', 'category': 'Scores & Soundtracks'}, {'question': 'What was the password that Tom Cruise used to enter the illicit masquerade in Eyes Wide Shut?', 'answer': 'fidelio', 'category': 'Tom Cruise'}, {'question': 'Tom Cruise plays a musician named Stacee Jaxx in which 2012 film?', 'answer': 'Rock of Ages', 'category': 'Tom Cruise'}, {'question': 'What was the name of the character played by Tom Cruise in the 1990 film Days of Thunder?', 'answer': 'Cole Trickle', 'category': 'Tom Cruise'}, {'question': "Tom Cruise's first role was a character by the name of Billy in what 1980s romantic drama?", 'answer': 'Endless Love', 'category': 'Tom Cruise'}, {'question': 'Tom Cruise received his first Oscar nomination for what film?', 'answer': 'Born on the Fourth of July', 'category': 'Tom Cruise'}, {'question': 'In A Few Good Men, Daniel Kaffee had only two things to eat in his apartment: Yoo-hoo and what breakfast cereal?', 'answer': 'Cocoa Puffs', 'category': 'Tom Cruise'}, {'question': 'In Big Trouble in Little China, what is the name of the evil sorcerer who attempts to marry Miao Yin?', 'answer': 'Lo Pan', 'category': 'John Carpenter'}, {'question': "Johnny Depp appears as a CIA agent trying to kill a drug lord in which installment of Robert Rodriguez's Mexico Trilogy?", 'answer': 'Once Upon a Time in Mexico', 'category': 'Action/Adventure'}, {'question': 'Jim Carrey plays a character by the name of Fletcher Reede in what 90s classic?', 'answer': 'Liar Liar', 'category': 'Comedies'}, {'question': 'Who played med student Skylar in Good Will Hunting?', 'answer': 'Minnie Driver', 'category': 'Dramas'}, {'question': 'Who directed the 2004 film The Polar Express?', 'answer': 'Robert Zemeckis', 'category': 'Animated'}, {'question': 'What 2000s sci-fi film stars Cillian Murphy, Chris Evans, Rose Byrne, and Michelle Yeoh?', 'answer': 'Sunshine', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played vampire leader David in The Lost Boys?', 'answer': 'Kiefer Sutherland', 'category': '1980s'}, {'question': "What is the name of the murderer whose soul is bonded to a Chucky doll in Child's Play?", 'answer': 'Charles Lee Ray', 'category': 'Horror/Thriller'}, {'question': 'Who plays the title character of the BFG in The BFG?', 'answer': 'Mark Rylance', 'category': 'Steven Spielberg'}, {'question': 'Who plays Vincent Grey, the junkie that shoots Bruce Willis in The Sixth Sense?', 'answer': 'Donnie Wahlberg', 'category': 'Thriller'}, {'question': 'What is the name of the main antagonist of the Saw series?', 'answer': 'Jigsaw / John Kramer', 'category': 'Thriller'}, {'question': 'Johnny Depp plays a rare book dealer who, while seeking out the last two copies of a demon text, gets drawn into a supernatural conspiracy in what film?', 'answer': 'The Ninth Gate', 'category': 'Thriller'}, {'question': 'Who plays the villainous Ray Marcus, leader of the murderous rednecks, in Nocturnal Animals?', 'answer': 'Aaron Taylor-Johnson', 'category': 'Thriller'}, {'question': 'What is the first Wes Anderson film to feature Bill Murray?', 'answer': 'Rushmore', 'category': 'Famous Actors & Actresses'}, {'question': 'In the romantic adventure Robin and Marian, Sean Connery played Robin Hood, but who played the role of Lady Marian?', 'answer': 'Audrey Hepburn', 'category': 'Famous Actors & Actresses'}, {'question': "What classic Hollywood actor's real name was Marion Morrison?", 'answer': 'John Wayne', 'category': 'Famous Actors & Actresses'}, {'question': "Who voiced the title character in 2010's Marmaduke?", 'answer': 'Owen Wilson', 'category': 'Famous Actors & Actresses'}, {'question': 'According to Humphrey Bogart at the end of Casablanca, what will he and Ingrid Bergman always have?', 'answer': 'Paris', 'category': 'Classics'}, {'question': 'In The Greatest Showman, who plays Charity Barnum, wife to P. T.?', 'answer': 'Michelle Williams', 'category': 'Musicals'}, {'question': 'The Raid series takes place in which country?', 'answer': 'Indonesia', 'category': 'Action/Adventure'}, {'question': 'What is the last name of the paranormal investigating couple in The Conjuring?', 'answer': 'Warren', 'category': 'Horror'}, {'question': 'Who plays the intimidating Winston Cup Champion Rowdy Burns in Days of Thunder?', 'answer': 'Michael Rooker', 'category': 'Tom Cruise'}, {'question': 'In Apollo 13, what was the flight surgeon concerned astronaut Ken Mattingly would come down with, dashing his hopes of joining the mission?', 'answer': 'measles', 'category': 'Biopics'}, {'question': "Who played David's father, Julius Levinson, in Independence Day?", 'answer': 'Judd Hirsch', 'category': 'Action/Adventure'}, {'question': 'Who directed the 2006 film The Fountain?', 'answer': 'Darren Aronofsky', 'category': 'Directors'}, {'question': "What is the name of the hardworking waitress who falls victim to voodoo magic in Disney's The Princess and the Frog?", 'answer': 'Tiana', 'category': 'Animated'}, {'question': "Who plays Rev. Shaw Moore's wife, Vi, in Footloose?", 'answer': 'Dianne Wiest', 'category': '1980s'}, {'question': 'What is the name of the being that Neo encounters in the room with all the TV monitors at the end of The Matrix Reloaded?', 'answer': 'the Architect', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed and co-wrote Anchorman: The Legend of Ron Burgundy?', 'answer': 'Adam McKay', 'category': 'Comedies'}, {'question': "What 1980s slasher flick was remade in 2009 and starred Jensen Ackles from TV's Supernatural?", 'answer': 'My Bloody Valentine', 'category': 'Horror/Thriller'}, {'question': 'Saoirse Ronan stars as Eilis Lacey, an Irish immigrant, in what 2015 period drama?', 'answer': 'Brooklyn', 'category': 'Dramas'}, {'question': 'In which Mission: Impossible film does the villain have a penchant for putting explosive charges in the heads of his captives?', 'answer': 'Mission: Impossible III', 'category': 'Spy'}, {'question': "What Game of Thrones actor played President of the Russian Federation in 2002's The Sum of All Fears?", 'answer': 'Ciarán Hinds', 'category': 'Spy'}, {'question': 'Which actress from the TV series Desperate Housewives played the role as Bond babe Paris Carver in the 1997 film Tomorrow Never Dies?', 'answer': 'Teri Hatcher', 'category': 'Spy'}, {'question': 'Who directed Spy Game?', 'answer': 'Tony Scott', 'category': 'Spy'}, {'question': 'In Cars, what was the name of the trophy that Lightning McQueen wants to win?', 'answer': 'the Piston Cup', 'category': 'Pixar'}, {'question': 'Who is playing the Buzz Lightyear video game at the very beginning of Toy Story 2?', 'answer': 'Rex', 'category': 'Pixar'}, {'question': 'In Inside Out, what was the occupation of the hunky man that the mom daydreamed about off and on throughout the movie?', 'answer': 'a helicopter pilot', 'category': 'Pixar'}, {'question': "Who voices Slim, a walking stick, in A Bug's Life?", 'answer': 'David Hyde Pierce', 'category': 'Pixar'}, {'question': 'Who directed The Thin Red Line?', 'answer': 'Terrence Malick', 'category': 'War'}, {'question': "Which Scorsese movie marked legendary actor Gregory Peck's final appearance in a theatrical film release?", 'answer': 'Cape Fear', 'category': 'Martin Scorsese'}, {'question': 'Cate Blanchett won an Academy Award for this Woody Allen film.', 'answer': 'Blue Jasmine', 'category': 'Cate Blanchett'}, {'question': 'Val Kilmer plays a master of disguise, Simon Templar, in what spy film?', 'answer': 'The Saint', 'category': 'Spy'}, {'question': 'What late singer did Brad Pitt idolize in the movie Johnny Suede?', 'answer': 'Ricky Nelson', 'category': 'Brad Pitt'}, {'question': 'What comic actor voiced saber-toothed tiger Diego in Ice Age?', 'answer': 'Denis Leary', 'category': 'Animated'}, {'question': 'What film released in 1991 won Best Picture at the Academy Awards?', 'answer': 'The Silence of the Lambs', 'category': 'Oscars'}, {'question': "Who stars as Shirley MacLaine's daughter, who shares a lifelong tumultuous relationship with her in 1983's Terms of Endearment?", 'answer': 'Debra Winger', 'category': 'Dramas'}, {'question': 'What sort of accident befalls Doctor Strange to cause his hands to tremble uncontrollably?', 'answer': 'a car crash', 'category': 'Comic Book'}, {'question': 'Tom Cruise and Emily Blunt star together in what 2014 film?', 'answer': 'Edge of Tomorrow', 'category': 'Fantasy/Sci-Fi'}, {'question': "In 1996's The Nutty Professor, what is the false identity that Professor Sherman assumes when he is his thinner self?", 'answer': 'Buddy Love', 'category': 'Comedies'}, {'question': "Who stars as Abby, a child vampire, in Matt Reeves' 2010 horror remake Let Me In?", 'answer': 'Chloë Grace Moretz', 'category': 'Horror/Thriller'}, {'question': 'Actor martial artist Ernie Reyes Jr. played the lead role of Johnny in what 1993 family action film?', 'answer': 'Surf Ninjas', 'category': 'Action/Adventure'}, {'question': "What classic horror actor stars as a vengeful artist who creates a deadly wax museum in 1953's House of Wax?", 'answer': 'Vincent Price', 'category': 'Horror'}, {'question': 'In Hereditary, Charlie has a personal habit of making what kind of sound throughout the film?', 'answer': 'clicking with her tongue', 'category': 'Horror'}, {'question': "What was Ash's final line in Army of Darkness?", 'answer': 'Hail to the king, baby.', 'category': 'Horror'}, {'question': 'What 2013 horror film features a family getaway that becomes attacked by mysterious killers in animal masks, but one victim is determined to fight back?', 'answer': "You're Next", 'category': 'Horror'}, {'question': 'Brad Pitt and Marion Cotillard are World War II operatives in what 2016 film?', 'answer': 'Allied', 'category': 'Brad Pitt'}, {'question': 'Who directed Brad Pitt in The Counselor?', 'answer': 'Ridley Scott', 'category': 'Brad Pitt'}, {'question': "What MCU star has a small role as Oakland A's first baseman Scott Hatteberg in the Brad Pitt film Moneyball?", 'answer': 'Chris Pratt', 'category': 'Brad Pitt'}, {'question': 'In Kalifornia, Brad played a serial killer. Who played his girlfriend?', 'answer': 'Juliette Lewis', 'category': 'Brad Pitt'}, {'question': 'Who played Willie Mays Hayes in Major League?', 'answer': 'Wesley Snipes', 'category': 'Sports'}, {'question': 'Emma Stone and Ryan Gosling both starred in La La Land. In which rom-com did they make their first movie debut together?', 'answer': 'Crazy, Stupid, Love.', 'category': 'Rom-Coms'}, {'question': 'In Hook, what word do Rufio and the Lost Boys constantly use as an excited battle cry?', 'answer': 'Bangarang', 'category': 'Julia Roberts'}, {'question': 'Keanu Reeves and Charlize Theron star in what 2001 romantic drama?', 'answer': 'Sweet November', 'category': 'Charlize Theron'}, {'question': "In 1995's Friday, what is the name of the neighborhood bully that protagonist Craig fights at the end of the movie?", 'answer': 'Deebo', 'category': '1990s'}, {'question': 'What 1971 thriller features Dustin Hoffman as a meek American who, after settling down in rural England with his wife, faces increasingly violent harassment from the locals?', 'answer': 'Straw Dogs', 'category': 'Thriller'}, {'question': 'Who played Gale Hawthorne in The Hunger Games?', 'answer': 'Liam Hemsworth', 'category': 'Action/Adventure'}, {'question': 'Jackie Chan and Chris Tucker first joined forces in Rush Hour, which was released in what year?', 'answer': '1998', 'category': 'Release Dates'}, {'question': 'Natalie Portman starred opposite Clive Owen, Julia Roberts, and Jude Law in this 2004 Mike Nichols film.', 'answer': 'Closer', 'category': 'Dramas'}, {'question': 'George Takei makes a cameo in what Walt Disney animated film?', 'answer': 'Mulan', 'category': 'Animated'}, {'question': "Who played Hansel in 2013's Hansel & Gretel: Witch Hunters?", 'answer': 'Jeremy Renner', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1995 family comedy stars Damon Wayans and Michael Ironside?', 'answer': 'Major Payne', 'category': 'Comedies'}, {'question': "Who plays science journalist Veronica in 1986's The Fly?", 'answer': 'Geena Davis', 'category': 'Horror/Thriller'}, {'question': 'What Gus Van Sant movie takes place in the fictional Watt High School and chronicles the events surrounding a school shooting?', 'answer': 'Elephant', 'category': '2000s'}, {'question': 'This actor has won the most Academy Awards for Best Actor in a Motion Picture, with three.', 'answer': 'Daniel Day-Lewis (for My Left Foot: The Story of Christy Brown, There Will Be Blood, Lincoln)', 'category': 'N/A'}, {'question': "In Sam Raimi's Oz the Great and Powerful, who played Theodora, who became the Wicked Witch of the West?", 'answer': 'Mila Kunis', 'category': 'Directors'}, {'question': 'What is the name of the powerful Ava DuVernay documentary released in 2016?', 'answer': '13th', 'category': 'Directors'}, {'question': 'The 1994 film North, starring Elijah Wood and Bruce Willis, was directed by whom?', 'answer': 'Rob Reiner', 'category': 'Directors'}, {'question': "Which Kate Winslet film was directed by The Lord of the Rings' Peter Jackson?", 'answer': 'Heavenly Creatures', 'category': 'Directors'}, {'question': 'In Crazy Rich Asians, before jetting off to Singapore with her wealthy boyfriend, Rachel Chu is shown to be a successful NYU professor in what field?', 'answer': 'economics', 'category': 'New Releases'}, {'question': 'In Incredibles 2, what kind of animal does Jack-Jack get into a backyard scuffle with?', 'answer': 'a raccoon', 'category': 'New Releases'}, {'question': "In Game Night, who plays Brooks, Jason Bateman's brother who sets up the interactive role-playing mystery game?", 'answer': 'Kyle Chandler', 'category': 'New Releases'}, {'question': 'Who directed the 2018 film Love, Simon?', 'answer': 'Greg Berlanti', 'category': 'New Releases'}, {'question': 'What action film has characters by the names of Hannibal, Face, B.A., and Murdock?', 'answer': 'The A-Team', 'category': 'Action/Adventure'}, {'question': 'Members of a gang wear red leather vests as their key identifying clothing in what 1979 crime movie?', 'answer': 'The Warriors', 'category': 'Crime'}, {'question': 'What 1940 John Ford film starring Henry Fonda follows a poor Midwest family traveling to California after being forced off their land during the Great Depression?', 'answer': 'The Grapes of Wrath', 'category': 'Dramas'}, {'question': 'In Fatal Attraction, what does Alex boil in the pot on the stove?', 'answer': 'a rabbit', 'category': 'Horror/Thriller'}, {'question': "Who played Zeus in 2010's Clash of the Titans?", 'answer': 'Liam Neeson', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played con artists Lawrence Jamieson and Freddy Benson in Dirty Rotten Scoundrels?', 'answer': 'Michael Caine, Steve Martin', 'category': 'Comedies'}, {'question': "Who plays Scott Pilgrim's sister, Stacey, in the graphic novel based Scott Pilgrim vs. the World?", 'answer': 'Anna Kendrick', 'category': 'Comic Book'}, {'question': 'What 2009 animated film based on a popular manga series about a young robot features the voices of Freddie Highmore and Nicolas Cage?', 'answer': 'Astro Boy', 'category': 'Animated'}, {'question': "What famed screenwriter co-wrote the screenplay for 2011's Moneyball alongside Steven Zaillian?", 'answer': 'Aaron Sorkin', 'category': 'Dramas'}, {'question': 'In Field of Dreams, which Hall of Fame baseball player was told to "stick it" by Shoeless Joe and the others because they couldn\'t stand him when he was alive?', 'answer': 'Ty Cobb', 'category': 'Dramas'}, {'question': 'Who plays the lead Mack Phillips in the 2017 Christian drama The Shack?', 'answer': 'Sam Worthington', 'category': 'Dramas'}, {'question': 'In Witness, what does Eli see Rachel and John doing in the barn that might cause her to be shunned?', 'answer': 'dancing', 'category': 'Dramas'}, {'question': 'For what movie did Jack Nicholson receive his first Oscar nomination for Best Actor?', 'answer': 'Five Easy Pieces', 'category': 'Oscars'}, {'question': 'How many Oscars has Emma Stone been nominated for (as of December 2018)?', 'answer': '2 (for Birdman (or The Unexpected Virtue of Ignorance), La La Land)', 'category': 'Oscars'}, {'question': 'Who was the first African-American performer to win an Academy Award?', 'answer': 'Hattie McDaniel (for Gone with the Wind)', 'category': 'Oscars'}, {'question': 'What was the first hip hop rap song to win Best Original Song at the Oscars?', 'answer': 'Lose Yourself (from 8 Mile)', 'category': 'Oscars'}, {'question': 'What funnyman took a dramatic turn as a troubled salesman, Barry Egan, in Punch-Drunk Love?', 'answer': 'Adam Sandler', 'category': 'Romance'}, {'question': "Who played Dirty Steve in 1988's Young Guns?", 'answer': 'Dermot Mulroney', 'category': 'Westerns'}, {'question': "Who directed 2012's The Bourne Legacy starring Jeremy Renner?", 'answer': 'Tony Gilroy', 'category': 'Directors'}, {'question': "2012's The Best Exotic Marigold Hotel follows a group of British retirees who travel to what country?", 'answer': 'India', 'category': 'Comedies'}, {'question': 'What 2012 action film stars Channing Tatum, Antonio Banderas, and Gina Carano?', 'answer': 'Haywire', 'category': 'Action/Adventure'}, {'question': "Who stars as Joe Buck, a Texas dishwasher turned New York prostitute in 1969's Midnight Cowboy?", 'answer': 'Jon Voight', 'category': 'Dramas'}, {'question': 'In Finding Dory, what actress playing herself provides multiple recorded messages broadcast throughout the Marine Life Institute?', 'answer': 'Sigourney Weaver', 'category': 'Animated'}, {'question': 'Freddie Prinze Jr. and Rachael Leigh Cook starred in what 1999 rom-com?', 'answer': "She's All That", 'category': 'Rom-Coms'}, {'question': 'Who played field reporter Brian Fantana in Anchorman: The Legend of Ron Burgundy?', 'answer': 'Paul Rudd', 'category': '2000s'}, {'question': "Who stars as the pregnant and paranoid Rosemary Woodhouse in 1968's Rosemary's Baby?", 'answer': 'Mia Farrow', 'category': 'Horror/Thriller'}, {'question': 'Light Cycles is the name for the two-wheeled vehicles used in the survival racing matches in what film?', 'answer': 'Tron, Tron: Legacy', 'category': 'Fantasy/Sci-Fi'}, {'question': "Why is Sandra Bullock's Annie taking the bus in Speed?", 'answer': "she had her driver's license revoked", 'category': 'Sandra Bullock'}, {'question': "Who plays Bullock's former high school classmate and love interest Justin in Hope Floats?", 'answer': 'Harry Connick Jr.', 'category': 'Sandra Bullock'}, {'question': "In The Prince of Egypt, Sandra Bullock plays Miriam, Moses' biological sister. Who voiced Moses?", 'answer': 'Val Kilmer', 'category': 'Sandra Bullock'}, {'question': "Who plays Ryan Reynolds' grandmother, Annie, in The Proposal?", 'answer': 'Betty White', 'category': 'Sandra Bullock'}, {'question': "Who played Tracy Turnblad's mother Edna Turnblad in 2007's Hairspray?", 'answer': 'John Travolta', 'category': 'Musicals'}, {'question': 'The 1972 Sophia Loren musical Man of La Mancha starred which actor as Don Quixote?', 'answer': "Peter O'Toole", 'category': 'Musicals'}, {'question': 'What is the name of the song that Gene Wilder sings after entering the Chocolate Room in Willy Wonka & the Chocolate Factory?', 'answer': 'Pure Imagination', 'category': 'Musicals'}, {'question': "What is the name of the high school in 1978's Grease?", 'answer': 'Rydell High School', 'category': 'Musicals'}, {'question': 'In The Hangover, as a prank, the trio steals a tiger from what famous athlete?', 'answer': 'Mike Tyson', 'category': 'Comedies'}, {'question': 'What musician was kidnapped by the villainous Poppy in Kingsman: The Golden Circle?', 'answer': 'Elton John', 'category': 'New Releases'}, {'question': "Who directed 2017's The Lego Batman Movie?", 'answer': 'Chris McKay', 'category': 'Animated'}, {'question': 'In this 2013 action comedy sequel, retired covert operatives are forced back into service to track down a portable nuclear device.', 'answer': 'Red 2', 'category': 'Action/Adventure'}, {'question': 'What two actors starred alongside Alan Arkin in the 2012 crime comedy Stand Up Guys?', 'answer': 'Al Pacino, Christopher Walken', 'category': 'Crime'}, {'question': 'What 2000 comedy featured cameos from real-life pro wrestlers Diamond Dallas Page, Bill Goldberg, "Macho Man" Randy Savage, and Booker T?', 'answer': 'Ready to Rumble', 'category': '2000s'}, {'question': "Who directed 2012's Skyfall?", 'answer': 'Sam Mendes', 'category': 'Action/Adventure'}, {'question': "Who won the Academy Award for Best Actress for her role as a mother adjusting to her daughter's interracial relationship in 1967's Guess Who's Coming to Dinner?", 'answer': 'Katharine Hepburn', 'category': 'Oscars'}, {'question': 'What 90s romantic drama stars Clint Eastwood and Meryl Streep?', 'answer': 'The Bridges of Madison County', 'category': 'Dramas'}, {'question': 'What MCU villain goes by the name Adrian Toomes?', 'answer': 'the Vulture (in Spider-Man: Homecoming)', 'category': 'Comic Book'}, {'question': 'Who starred as Nolan Sorrento, the CEO of Innovative Online Industries in Ready Player One?', 'answer': 'Ben Mendelsohn', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who voiced Coraline in 2009's Coraline?", 'answer': 'Dakota Fanning', 'category': 'Animated'}, {'question': "What child actor stars alongside a villainous Macaulay Culkin in 1993's The Good Son?", 'answer': 'Elijah Wood', 'category': 'Horror/Thriller'}, {'question': "What is the name of Napoleon's uncle in Napoleon Dynamite?", 'answer': 'Rico Dynamite', 'category': 'Comedies'}, {'question': 'Who wrote and directed the 1981 sci-fi horror film Scanners?', 'answer': 'David Cronenberg', 'category': 'N/A'}, {'question': 'The Court of Miracles is the name of a secret hideout in what Disney animated film?', 'answer': 'The Hunchback of Notre Dame', 'category': 'Disney'}, {'question': '"The Unbirthday Song" can be found in what Disney film?', 'answer': 'Alice in Wonderland', 'category': 'Disney'}, {'question': "Other than Mowgli, what do many of the characters in 1967's Disney's The Jungle Book refer to him as?", 'answer': 'a man-cub', 'category': 'Disney'}, {'question': 'Over what activity does Mr. Banks finally bond with his children in Mary Poppins?', 'answer': 'flying a kite', 'category': 'Disney'}, {'question': "In Charlie and the Chocolate Factory, Charlie's father works for what company?", 'answer': 'Smilex', 'category': 'Tim Burton'}, {'question': 'Tim Burton received his first Academy Award nomination for which 2005 animated film?', 'answer': 'Corpse Bride', 'category': 'Tim Burton'}, {'question': "What 1985 film was Tim Burton's directorial debut?", 'answer': "Pee-wee's Big Adventure", 'category': 'Tim Burton'}, {'question': "Name the actress that played the character of Alma Peregrine in 2016's Miss Peregrine's Home for Peculiar Children.", 'answer': 'Eva Green', 'category': 'Tim Burton'}, {'question': 'What is the full name of the federal agent that Kevin Costner plays in The Untouchables?', 'answer': 'Eliot Ness', 'category': 'Crime'}, {'question': 'Name two of the actors who make up the Monuments Men besides George Clooney.', 'answer': 'Bill Murray, Bob Balaban, Dimitri Leonidas, Jean Dujardin, Matt Damon', 'category': 'War'}, {'question': 'What is the only Studio Ghibli film to win the Oscar for Best Animated Feature?', 'answer': 'Spirited Away', 'category': 'Oscars'}, {'question': "In the Indiana Jones films, what is the name of Indy's scholarly friend who once got lost in his own museum?", 'answer': 'Marcus Brody', 'category': 'Action/Adventure'}, {'question': 'What 2003 horror film was directed by Danny Boyle?', 'answer': '28 Days Later', 'category': 'Horror/Thriller'}, {'question': 'What 1989 film was directed by Steven Soderbergh and stars James Spader and Andie MacDowell?', 'answer': 'Sex, Lies and Videotape', 'category': 'Dramas'}, {'question': "What Oscar-nominated actor plays the eccentric drug dealer, Mr. Green, in 2015's holiday comedy The Night Before?", 'answer': 'Michael Shannon', 'category': 'Holiday'}, {'question': 'Who directed Rogue One: A Star Wars Story?', 'answer': 'Gareth Edwards', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who stars as timid accountant Leo Bloom, who is prone to hysterics, in Mel Brooks' original 1968 comedy The Producers?", 'answer': 'Gene Wilder', 'category': 'Comedies'}, {'question': "John Woo's sci-fi action film Face/Off was released in what year?", 'answer': '1997', 'category': 'Release Dates'}, {'question': "In Disney's The Adventures of Ichabod and Mr. Toad, Mr. Toad is falsely accused and sentenced to jail for stealing what item?", 'answer': 'a car', 'category': 'Animated'}, {'question': "You'll find characters by the name of Flora, Fauna and Merryweather in what Disney animated classic?", 'answer': 'Sleeping Beauty', 'category': 'Animated'}, {'question': 'Christopher Lloyd voiced the role of the evil Rasputin in this 1997 animated film.', 'answer': 'Anastasia', 'category': 'Animated'}, {'question': "Who voices Ginormica in 2009's Monsters vs. Aliens?", 'answer': 'Reese Witherspoon', 'category': 'Animated'}, {'question': "Who directed 1995's Toy Story?", 'answer': 'John Lasseter', 'category': 'Animated'}, {'question': 'Drew Barrymore played the character of Charlie McGee in this 1984 Stephen King adaptation.', 'answer': 'Firestarter', 'category': 'Drew Barrymore'}, {'question': 'Drew Barrymore voiced the character of Akima Kunimoto opposite Matt Damon in this 2000 animated science-fiction film.', 'answer': 'Titan A.E.', 'category': 'Drew Barrymore'}, {'question': "In the film Going the Distance, Drew Barrymore's character has the high score on a classic arcade game. What is that arcade game?", 'answer': 'Centipede', 'category': 'Drew Barrymore'}, {'question': 'Drew Barrymore made her film debut in what 1980 film?', 'answer': 'Altered States', 'category': 'Drew Barrymore'}, {'question': 'Which 1983 film is about a diabolical circus and its demonic proprietor preying on townsfolk in a small American town?', 'answer': 'Something Wicked This Way Comes', 'category': 'Horror'}, {'question': 'In The Wizard of Oz, what does the Tin Man want?', 'answer': 'a heart', 'category': 'N/A'}, {'question': 'Will Smith, Kevin Kline, and Salma Hayek star together in what movie?', 'answer': 'Wild Wild West', 'category': 'N/A'}, {'question': 'Robin Williams, Paul L. Smith, and Shelly Duvall star together in this comedy.', 'answer': 'Popeye', 'category': 'N/A'}, {'question': "Who directed 2017's The Mummy?", 'answer': 'Alex Kurtzman', 'category': 'N/A'}, {'question': 'Who played Veronica Corningstone in Anchorman: The Legend of Ron Burgundy?', 'answer': 'Christina Applegate', 'category': 'N/A'}, {'question': 'Who played James Bond in The Living Daylights?', 'answer': 'Timothy Dalton', 'category': '1980s'}, {'question': 'Which team is Jimmy Fallon a fan of in the film Fever Pitch?', 'answer': 'the Boston Red Sox', 'category': 'Sports'}, {'question': 'In The Golden Compass, who plays Lee Scoresby, a Texan aeronaut who accompanies Lyra on her adventure?', 'answer': 'Sam Elliott', 'category': 'Nicole Kidman'}, {'question': "In The Cabin in the Woods, what kind of creature does Bradley Whitford's character desperately want to see?", 'answer': 'a merman', 'category': 'Horror'}, {'question': "In The Hunger Games, what is the character's name of Katniss' hairdresser?", 'answer': 'Flavius', 'category': '2010s'}, {'question': "What 2016 biographical romance tells the story of future President Barack and Michelle Obama's first date in 1989 Chicago?", 'answer': 'Southside with You', 'category': 'Biopics'}, {'question': 'Peter Weller played the titular crime-fighting cop-turned-cyborg in how many RoboCop films?', 'answer': '2 (RoboCop, 2)', 'category': 'Action/Adventure'}, {'question': "In 2015's The Peanuts Movie, Charlie Brown falls in love with a new student with what color hair?", 'answer': 'red', 'category': 'Animated'}, {'question': 'What 2001 war film features a huge ensemble cast including Ewan McGregor, Eric Bana, Orlando Bloom, and Josh Hartnett?', 'answer': 'Black Hawk Down', 'category': 'Dramas'}, {'question': "2009's G-Force follows a team of what specially trained type of animal as they try to save the world?", 'answer': 'guinea pigs', 'category': 'Family'}, {'question': 'Who plays Trinity in the Matrix trilogy?', 'answer': 'Carrie-Anne Moss', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the 1988 comedy classic Coming to America?', 'answer': 'John Landis', 'category': 'Comedies'}, {'question': 'What 1999 horror film had the tagline "Heads Will Roll."?', 'answer': 'Sleepy Hollow', 'category': 'Horror/Thriller'}, {'question': "Who stars as Tracy Flick, an irritating overachiever who goes to great lengths to become the president of the student council in 1999's Election?", 'answer': 'Reese Witherspoon', 'category': '1990s'}, {'question': "What is the opening song of Prince's 1984 rock musical Purple Rain?", 'answer': "Let's Go Crazy", 'category': 'Musicals'}, {'question': 'What musical has the most Academy Award Oscar wins?', 'answer': 'West Side Story (for Motion Picture; Director; Supporting Actor; Supporting Actress; Art Direction, Color; Cinematography, Color; Costume Design, Color; Film Editing; Scoring of a Musical Picture; Sound)', 'category': 'Musicals'}, {'question': 'In Rent, what term of endearment does Maureen use to refer to her lovers?', 'answer': 'hooky', 'category': 'Musicals'}, {'question': 'Who plays hitman Jimmy The Tulip in The Whole Nine Yards?', 'answer': 'Bruce Willis', 'category': 'Comedies'}, {'question': "In 2009's I Love You, Man, Paul Rudd is a real estate agent who is trying to sell what celebrity's mansion?", 'answer': 'Lou Ferrigno', 'category': 'Comedies'}, {'question': 'What was the name of the summer camp Wednesday and Pugsley are sent to in Addams Family Values?', 'answer': 'Camp Chippewa', 'category': 'Comedies'}, {'question': 'What action comedy features the tagline "When he said I do, he never said what he did."?', 'answer': 'True Lies', 'category': 'Taglines'}, {'question': 'Released in 2013, what cop comedy had the tagline "Good Cop. Mad Cop."?', 'answer': 'The Heat', 'category': 'Taglines'}, {'question': 'Which Bond film\'s tagline was "The dead are alive"?', 'answer': 'Spectre', 'category': 'Taglines'}, {'question': 'Who composed the music for The Hunger Games?', 'answer': 'James Newton Howard', 'category': 'Scores & Soundtracks'}, {'question': 'Who performed "Back in Time" from Back to the Future?', 'answer': 'Huey Lewis and the News', 'category': 'Scores & Soundtracks'}, {'question': 'For what film did Italian composer Ennio Morricone win his first Oscar for Best Original Score?', 'answer': 'The Hateful Eight', 'category': 'Scores & Soundtracks'}, {'question': 'In what classic film will you hear the quote "Here\'s looking at you, kid."?', 'answer': 'Casablanca', 'category': 'Quotes'}, {'question': 'Who wrote and directed the 2016 film Suicide Squad?', 'answer': 'David Ayer', 'category': 'Comic Book'}, {'question': "Who co-starred as Angelina's love interest in Original Sin?", 'answer': 'Antonio Banderas', 'category': 'Angelina Jolie'}, {'question': 'In Major League, the owner wanted to finish in last place so she could move the team to what city?', 'answer': 'Miami', 'category': 'Charlie Sheen'}, {'question': 'What football movie features performances by Craig Sheffer, James Caan, and Halle Berry?', 'answer': 'The Program', 'category': 'Sports'}, {'question': 'Who plays the lead role of Sophie in the film Mamma Mia!?', 'answer': 'Amanda Seyfried', 'category': 'Musicals'}, {'question': "Who plays the titular Léon in Luc Besson's Léon: The Professional?", 'answer': 'Jean Reno', 'category': 'Crime'}, {'question': "In the film Mona Lisa Smile, who plays the highly opinionated student Betty Warren, who, after Katherine's support, files for divorce and studies Law?", 'answer': 'Kirsten Dunst', 'category': 'Julia Roberts'}, {'question': "Who played Rosalee, the woman who joins Christian Bale's party in 2017's Hostiles?", 'answer': 'Rosamund Pike', 'category': 'New Releases'}, {'question': "Which renowned director played himself in Billy Wilder's Sunset Boulevard?", 'answer': 'Cecil B. DeMille', 'category': 'Directors'}, {'question': "In My Big Fat Greek Wedding, what is the name of the restaurant that Toula's parents own?", 'answer': "Dancing Zorba's", 'category': 'Rom-Coms'}, {'question': 'Name two of the "stalkers" in The Running Man.', 'answer': 'Buzzsaw, Captain Freedom, Dynamo, Fireball, Professor Subzero', 'category': 'Sly & Arnie'}, {'question': 'After a long absence from movies, Cher appeared in which 2010 movie starring alongside Christina Aguilera?', 'answer': 'Burlesque', 'category': 'N/A'}, {'question': 'Who plays the Amazonian general Antiope in Wonder Woman?', 'answer': 'Robin Wright', 'category': 'Action/Adventure'}, {'question': "Name the actor that played Emily's dad in The Big Sick.", 'answer': 'Ray Romano', 'category': 'Comedies'}, {'question': 'What 1986 sci-fi comedy follows an experimental combat robot who gains self-awareness and a conscience after being struck by lightning?', 'answer': 'Short Circuit', 'category': '1980s'}, {'question': 'What was the first film directed by Kevin Smith?', 'answer': 'Clerks', 'category': 'Directors'}, {'question': 'What character says the classic line "That\'s it, man. Game over, man. Game over!" in 1986\'s Aliens?', 'answer': 'Hudson', 'category': 'Fantasy/Sci-Fi'}, {'question': "This actress played teacher Bonnie Stevenson opposite Chris Evans in 2017's Gifted.", 'answer': 'Jenny Slate', 'category': 'Dramas'}, {'question': "2003's Identity follows ten strangers trapped during a torrential rainstorm in what kind of location?", 'answer': 'a motel', 'category': 'Horror/Thriller'}, {'question': "Mike Judge's animated creations Beavis and Butt-Head star in what 1996 feature film?", 'answer': 'Beavis and Butt-Head Do America', 'category': 'Animated'}, {'question': "Who plays the older version of Sandra Bullock's mother in Divine Secrets of the Ya-Ya Sisterhood?", 'answer': 'Ellen Burstyn', 'category': 'Sandra Bullock'}, {'question': "Who played Grace's beauty pageant coach Victor Melling in Miss Congeniality?", 'answer': 'Michael Caine', 'category': 'Sandra Bullock'}, {'question': 'Sandra Bullock stars alongside Matthew McConaughey and Samuel L. Jackson in what 1996 crime thriller?', 'answer': 'A Time to Kill', 'category': 'Sandra Bullock'}, {'question': "Who plays Sandra Bullock's husband who was killed in a car accident in the mystery film Premonition?", 'answer': 'Julian McMahon', 'category': 'Sandra Bullock'}, {'question': "2013's The Heat features Sandra Bullock and Melissa McCarthy teaming up to take down a drug lord in what U.S. city?", 'answer': 'Boston', 'category': 'Sandra Bullock'}, {'question': 'What 1996 romantic comedy stars Sandra Bullock and Denis Leary as a thieving couple who run into relationship issues when they try to sell a stolen painting in a small coastal town?', 'answer': 'Two If by Sea', 'category': 'Sandra Bullock'}, {'question': "In Arrival, Louise's daughter's name was special as it was a palindrome. What was her name?", 'answer': 'Hannah', 'category': 'Festival Darlings'}, {'question': 'Bill Hader and Kristen Wiig star in what film about estranged siblings who reunite after having both coincidentally cheated death on the same day?', 'answer': 'The Skeleton Twins', 'category': 'Festival Darlings'}, {'question': 'Which actor from The Breakfast Club appeared in Foxcatcher?', 'answer': 'Anthony Michael Hall', 'category': 'Festival Darlings'}, {'question': 'In The Founder, Ray Kroc is selling what item when he meets the McDonald brothers at the beginning of the film?', 'answer': 'milkshake mixers', 'category': 'Festival Darlings'}, {'question': "In 2015's Brooklyn who plays the lead Eilis Lacey?", 'answer': 'Saoirse Ronan', 'category': 'Festival Darlings'}, {'question': 'What is the name of the woman that Kip meets online in Napoleon Dynamite?', 'answer': 'LaFawnduh Lucas', 'category': 'Festival Darlings'}, {'question': 'In Coco, what is the name of the down-on-his-luck skeleton who offers to help Miguel reach Ernesto de la Cruz?', 'answer': 'Héctor Rivera', 'category': 'Pixar'}, {'question': 'Who directed The Disaster Artist?', 'answer': 'James Franco', 'category': 'N/A'}, {'question': 'Name the film from the following characters: Harry, Chick, Bear, Dan Truman, A.J., Grace, Rockhound.', 'answer': 'Armageddon', 'category': 'N/A'}, {'question': 'Who voiced King Candy, the ruler of Sugar Rush, in Wreck-It Ralph?', 'answer': 'Alan Tudyk', 'category': 'N/A'}, {'question': "What is the final film of the Marvel Cinematic Universe's Phase 2?", 'answer': 'Ant-Man', 'category': 'N/A'}, {'question': 'Which member of the Friends cast appears in the 1999 film Three to Tango?', 'answer': 'Matthew Perry', 'category': 'N/A'}, {'question': 'A Pakistani funnyman falls for an American graduate student at one of his comedy shows. He soon becomes worried about what his traditional Muslim parents will think of her. Name the film from the synopsis.', 'answer': 'The Big Sick', 'category': 'Romance'}, {'question': "Why did the enchantress turn the prince into the Beast in Disney's The Beauty and the Beast?", 'answer': 'he refused to give her shelter from a storm', 'category': 'Animated'}, {'question': 'A young boy with a distant father enters a world of make-believe and magic through a portal within an antique book in which 1984 movie?', 'answer': 'The NeverEnding Story', 'category': '1980s'}, {'question': 'Who directed It Happened One Night?', 'answer': 'Frank Capra', 'category': 'Classics'}, {'question': 'What is the name of the CIA black ops program that Jason Bourne is involved with in The Bourne Identity?', 'answer': 'Treadstone', 'category': 'Action/Adventure'}, {'question': 'What romantic comedy did Matthew McConaughey star in opposite Jennifer Garner?', 'answer': 'Ghosts of Girlfriends Past', 'category': 'Matthew McConaughey'}, {'question': "What film stars Mel Gibson as a chauvinistic ad executive who can hear women's thoughts after a fluke accident?", 'answer': 'What Women Want', 'category': 'Comedies'}, {'question': 'Who played the Sheriff of Nottingham in Robin Hood: Prince of Thieves?', 'answer': 'Alan Rickman', 'category': 'Action/Adventure'}, {'question': 'What Tarantino film did Chris Tucker appear in?', 'answer': 'Jackie Brown', 'category': 'Dramas'}, {'question': 'What SNL alum voices Roxanne Ritchie, the reporter Megamind falls for, in Megamind?', 'answer': 'Tina Fey', 'category': 'Animated'}, {'question': 'Three films have tied for the most Oscar wins with 11. Name two out of the three films.', 'answer': 'Ben-Hur, Titanic, The Lord of the Rings: The Return of the ing', 'category': 'Oscars'}, {'question': 'Who plays Bard the Bowman in the Hobbit trilogy?', 'answer': 'Luke Evans (in The Desolation of Smaug, The Battle of the Five Armies)', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who directed 2006's Hostel?", 'answer': 'Eli Roth', 'category': 'Horror/Thriller'}, {'question': 'High school student Dave tells his parents that his new friend Link is a foreign exchange student from Estonia in what 90s comedy?', 'answer': 'Encino Man', 'category': '1990s'}, {'question': "In Ferris Bueller's Day Off, what hockey team's jersey does Cameron wear throughout the movie?", 'answer': 'the Detroit Red Wings', 'category': 'Coming of Age'}, {'question': "Who played Juno's stepmother in 2007's Juno?", 'answer': 'Allison Janney', 'category': 'Coming of Age'}, {'question': "What color is John Milner's iconic 1932 Ford Coupe that he races in American Graffiti?", 'answer': 'yellow', 'category': 'Coming of Age'}, {'question': "Who directed 2017's Call Me by Your Name?", 'answer': 'Luca Guadagnino', 'category': 'Coming of Age'}, {'question': 'What is the name of the last human city on Earth in the Matrix trilogy?', 'answer': 'Zion', 'category': 'Fantasy/Sci-Fi'}, {'question': 'A group of scientists try to track down and trap a killer alien seductress before she successfully mates with a human in what 1995 sci-fi horror film?', 'answer': 'Species', 'category': 'Fantasy/Sci-Fi'}, {'question': "This star from the Star Trek franchise played Guinevere's father, King Leodegrance in 1981's Excalibur.", 'answer': 'Patrick Stewart', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What race of beings do the elf-like Jen and Kira belong to in The Dark Crystal?', 'answer': 'Gelflings', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the name of the detective hired to investigate Jessica Rabbit in Who Framed Roger Rabbit?', 'answer': 'Eddie Valiant', 'category': '1980s'}, {'question': 'Which 2009 Star Trek alum starred in the indie coming-of-age film Like Crazy?', 'answer': 'Anton Yelchin', 'category': 'Coming of Age'}, {'question': 'What movie star had one of his earliest feature film roles as Mickey in the Leonardo DiCaprio movie The Basketball Diaries?', 'answer': 'Mark Wahlberg', 'category': 'Leonardo DiCaprio'}, {'question': 'Who starred as biology professor and former soldier Lena in Annihilation?', 'answer': 'Natalie Portman', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1962 thriller starring Frank Sinatra and Angela Lansbury follows a prisoner of war who is brainwashed into becoming an assassin for a Communist conspiracy?', 'answer': 'The Manchurian Candidate', 'category': 'Thriller'}, {'question': 'Burt Reynolds voiced the character of Charlie B. Barkin in what 1980s animated film?', 'answer': 'All Dogs Go to Heaven', 'category': 'Animated'}, {'question': 'What 1992 crime film stars Robert Redford, Sidney Poitier, and River Phoenix?', 'answer': 'Sneakers', 'category': 'Crime'}, {'question': 'Who stars as a San Francisco cop determined to find the underworld kingpin who killed a witness under his protection in the 1968 film Bullitt?', 'answer': 'Steve McQueen', 'category': 'Famous Actors & Actresses'}, {'question': 'Who directed Dirty Rotten Scoundrels?', 'answer': 'Frank Oz', 'category': 'Comedies'}, {'question': "Who plays the highly skilled career criminal Chris Shiherlis in Michael Mann's Heat?", 'answer': 'Val Kilmer', 'category': 'Action/Adventure'}, {'question': 'Who played Stephen Glass in the 2003 film Shattered Glass?', 'answer': 'Hayden Christensen', 'category': 'Dramas'}, {'question': "In He Got Game, Denzel Washington's character is serving a prison sentence at the Attica Correctional Facility, which is located in what state?", 'answer': 'New York', 'category': 'Denzel Washington'}, {'question': 'In the film Inside Man, who plays Arthur Case, the chairman and founder of the Manhattan Trust bank?', 'answer': 'Christopher Plummer', 'category': 'Denzel Washington'}, {'question': "What is Denzel Washington's character Troy's job in the 2016 film Fences?", 'answer': 'a garbage collector', 'category': 'Denzel Washington'}, {'question': "How long does it take McCall to kill all the Russian mob members and Alina's pimp Slavi in The Equalizer?", 'answer': '19 seconds', 'category': 'Denzel Washington'}, {'question': 'In Hoosiers, who plays Shooter, the assistant coach struggling with alcoholism?', 'answer': 'Dennis Hopper', 'category': 'Sports'}, {'question': "Before playing Foggy Nelson in Marvel's Daredevil, Elden Henson played enforcer Fulton Reed in what hockey film?", 'answer': 'The Mighty Ducks, D2: The Mighty Ducks, D3: The Mighty Ducks', 'category': 'Sports'}, {'question': "In 2004's Friday Night Lights, what musician plays an abusive and alcoholic father who lives in the glory days of his past football career?", 'answer': 'Tim McGraw', 'category': 'Sports'}, {'question': "What WWE legend portrayed Patricia Clarkson's oldest son in the 2010 Samuel Goldwyn sports drama Legendary?", 'answer': 'John Cena', 'category': 'Sports'}, {'question': "What was the profession of Gene Hackman's character in the 1972 disaster movie The Poseidon Adventure?", 'answer': 'a minister', 'category': 'Disaster'}, {'question': "Who plays Jim's father in American Pie?", 'answer': 'Eugene Levy', 'category': 'N/A'}, {'question': 'What was the title of the 1996 sequel to Escape from New York?', 'answer': 'Escape from L.A.', 'category': 'N/A'}, {'question': 'Who voiced Michael "Mike" Wazowski in Monsters, Inc.?', 'answer': 'Billy Crystal', 'category': 'N/A'}, {'question': "What actor won Best Supporting Actor at the Oscars for his performance in Steven Spielberg's Bridge of Spies?", 'answer': 'Mark Rylance', 'category': 'N/A'}, {'question': 'Who plays PFC Hirschberg in the war film Inglourious Basterds?', 'answer': 'Samm Levine', 'category': 'N/A'}, {'question': 'Who plays Colonel Richard Strickland in The Shape of Water?', 'answer': 'Michael Shannon', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who directed and starred in 1994's Reality Bites?", 'answer': 'Ben Stiller', 'category': '1990s'}, {'question': 'Who plays head engineer Paul Stafford in Hidden Figures?', 'answer': 'Jim Parsons', 'category': 'Biopics'}, {'question': "Who directed 1986's Top Gun?", 'answer': 'Tony Scott', 'category': 'Action/Adventure'}, {'question': 'Who played Agent Burns in Bumblebee?', 'answer': 'John Cena', 'category': 'New Releases'}, {'question': "Who played Clementine Kruczynski, the object of Joel's affections, in Eternal Sunshine of the Spotless Mind?", 'answer': 'Kate Winslet', 'category': 'Dramas'}, {'question': 'Which Pixar film stars the voice talents of Michael Keaton, Ned Beatty, and Tom Hanks?', 'answer': 'Toy Story 3', 'category': 'Animated'}, {'question': "Who played Hades, god of the underworld, in 2010's Clash of the Titans?", 'answer': 'Ralph Fiennes', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Actress/writer Nia Vardalos played Toula Portokalos in this semi-autobiographical 2002 romantic comedy about her large family.', 'answer': 'My Big Fat Greek Wedding', 'category': 'Comedies'}, {'question': 'What 2015 holiday film was directed by Michael Dougherty and starred Adam Scott?', 'answer': 'Krampus', 'category': 'Horror/Thriller'}, {'question': 'In the 2000 film Gone in 60 Seconds, what code system does the crew use to identify particular cars?', 'answer': "women's names", 'category': '2000s'}, {'question': "In the film While You Were Sleeping, what is Sandra Bullock's character's job?", 'answer': 'a fare token collector', 'category': 'Rom-Coms'}, {'question': "Name the actress that played Emily's mother in The Big Sick.", 'answer': 'Holly Hunter', 'category': 'Rom-Coms'}, {'question': "Who played Andrew's mother Grace Paxton in 2009's The Proposal?", 'answer': 'Mary Steenburgen', 'category': 'Rom-Coms'}, {'question': 'In 13 Going on 30, what color is the house that Matt and Jenna live in at the end of the film?', 'answer': 'pink', 'category': 'Rom-Coms'}, {'question': 'In Revolutionary Road, Frank and April Wheeler plan to leave their dull suburban lives behind to move to what European city?', 'answer': 'Paris', 'category': '2000s'}, {'question': 'Who directed the 2006 comedy Idiocracy?', 'answer': 'Mike Judge', 'category': '2000s'}, {'question': 'Liv Tyler and Scott Speedman play a young couple who are terrorized by three masked assailants over the course of an evening at a remote summer home in what film?', 'answer': 'The Strangers', 'category': '2000s'}, {'question': 'What was the first completely CGI-animated movie in the Disney canon that was created without the help of Pixar Studios?', 'answer': 'Dinosaur', 'category': '2000s'}, {'question': 'Who plays Kay Adams-Corleone in the Godfather series?', 'answer': 'Diane Keaton', 'category': 'Crime'}, {'question': "Who stars as Dan, an unsuccessful writer caught in a love triangle between Julia Roberts and Natalie Portman, in 2004's Closer?", 'answer': 'Jude Law', 'category': 'Julia Roberts'}, {'question': 'In Dodgeball: A True Underdog Story, name one of the actors that play the hilarious announcers Cotton McKnight and Pepper Brooks during the tournament.', 'answer': 'Gary Cole, Jason Bateman', 'category': 'Comedies'}, {'question': "Who plays the TV news cameraman Sandra Bullock becomes obsessed with after a single date in 2009's All About Steve?", 'answer': 'Bradley Cooper', 'category': '2000s'}, {'question': 'Name all of the three Richard Linklater romantic dramas starring Ethan Hawke and Julie Delpy.', 'answer': 'Before Sunrise, Before Sunset, Before Midnight', 'category': 'Romance'}, {'question': 'In X-Men: Apocalypse, what two mutants face off in an underground cage match in Berlin?', 'answer': 'Angel, Nightcrawler', 'category': 'Comic Book'}, {'question': 'Mila Kunis, Kristen Bell, and Kathryn Hahn play parents who decide to reclaim the holiday in what 2017 comedy?', 'answer': 'A Bad Moms Christmas', 'category': 'Comedies'}, {'question': 'What 2001 horror film stars Nicole Kidman as a woman who lives in her darkened old family house with her two photosensitive children?', 'answer': 'The Others', 'category': 'Horror/Thriller'}, {'question': 'What is the name of the baboon in the Disney movie The Lion King?', 'answer': 'Rafiki', 'category': 'Animated'}, {'question': 'Which one of the following 1988 films was not nominated for Best Picture: Rain Man, Bull Durham, or Working Girl?', 'answer': 'Bull Durham', 'category': 'Oscars'}, {'question': 'What film from the year 2000 stars Jackie Chan and Owen Wilson?', 'answer': 'Shanghai Noon', 'category': 'Action/Adventure'}, {'question': 'In BlacKkKlansman, who plays David Duke?', 'answer': 'Topher Grace', 'category': 'New Releases'}, {'question': 'Who directed War for the Planet of the Apes?', 'answer': 'Matt Reeves', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played legendary filmmaker Georges Méliès in 2011's Hugo?", 'answer': 'Ben Kingsley', 'category': 'Dramas'}, {'question': 'Who played Haymitch Abernathy in The Hunger Games?', 'answer': 'Woody Harrelson', 'category': 'N/A'}, {'question': 'In Elysium, who plays Agent Kruger, the loose cannon operative that will stop at nothing to retrieve the stolen data program?', 'answer': 'Sharlto Copley', 'category': 'Jodie Foster'}, {'question': "Who stars as the adventurous young girl in 2008's Nim's Island?", 'answer': 'Abigail Breslin', 'category': 'Jodie Foster'}, {'question': "What Lord of the Rings actor stars as the pilot trying to solve the mystery of the missing girl in 2005's Flightplan?", 'answer': 'Sean Bean', 'category': 'Jodie Foster'}, {'question': 'How many films have Jodie Foster and Mel Gibson collaborated on together?', 'answer': '2 (in Maverick, The Beaver)', 'category': 'Jodie Foster'}, {'question': "What is the name of the villainess sea witch in Disney's The Little Mermaid?", 'answer': 'Ursula', 'category': 'Disney'}, {'question': 'This musical tribute to the world of Uncle Remus co-starred Oscar winner Hattie McDaniel in what controversial Disney film?', 'answer': 'Song of the South', 'category': 'Disney'}, {'question': "You'll find main characters by the name of Meg and Phil in what Disney animated film?", 'answer': 'Hercules', 'category': 'Disney'}, {'question': "Who stars as a busy realtor whose family is invited to a mysterious manor in 2003's The Haunted Mansion?", 'answer': 'Eddie Murphy', 'category': 'Disney'}, {'question': "Who plays suspected kidnapper Alex Jones in Denis Villeneuve's Prisoners?", 'answer': 'Paul Dano', 'category': 'Thriller'}, {'question': 'Ben Affleck and Jon Favreau are a team of lawyers in what comic book film?', 'answer': 'Daredevil', 'category': 'N/A'}, {'question': 'This 1980s film starred Chris Sarandon, Robin Wright, Cary Elwes, Mandy Patinkin, and André the Giant.', 'answer': 'The Princess Bride', 'category': 'N/A'}, {'question': 'What was the first full-length feature film directed by Ryan Coogler?', 'answer': 'Fruitvale Station', 'category': 'N/A'}, {'question': 'Who directed The Outlaw Josey Wales?', 'answer': 'Clint Eastwood', 'category': 'N/A'}, {'question': 'The Incredible Hulk starring Edward Norton was released in what year?', 'answer': '2008', 'category': 'N/A'}, {'question': 'Who starred as small town man Tom Stall in A History of Violence?', 'answer': 'Viggo Mortensen', 'category': '2000s'}, {'question': 'Which teen star played the title character in Agent Cody Banks?', 'answer': 'Frankie Muniz', 'category': 'Family'}, {'question': 'In Pulp Fiction, where did Brett buy his "tasty" burger that he shares with Sam Jackson?', 'answer': 'Big Kahuna Burger', 'category': 'Quentin Tarantino'}, {'question': "Hitchcock's first cameo in a color film was in what movie with a one-word title?", 'answer': 'Rope', 'category': 'Alfred Hitchcock'}, {'question': 'What 2000s animated film had the following tagline: "See our family. And feel better about yours."?', 'answer': 'The Simpsons Movie', 'category': 'Animated'}, {'question': "Which The Walking Dead actor played government agent Harvey Russell in 2018's Rampage?", 'answer': 'Jeffrey Dean Morgan', 'category': 'Action/Adventure'}, {'question': 'When Blu, a domesticated macaw from small town Minnesota, meets the fiercely independent Jewel, he takes off on an adventure with her in what film?', 'answer': 'Rio', 'category': 'Animated'}, {'question': "Who stars as a former slave hunter turned Jesuit missionary in 1986's The Mission?", 'answer': 'Robert De Niro', 'category': 'Dramas'}, {'question': 'Which 1980s musical contains the following quote: "What kind of \'professional\' rides a motorcycle and wears a black leather jacket?"?', 'answer': 'Little Shop of Horrors', 'category': '1980s'}, {'question': 'What 1984 film starring Emilio Estevez and Harry Dean Stanton follows a bunch of wacky characters trying to find a Chevy Malibu with radioactive aliens hidden in the trunk?', 'answer': 'Repo Man', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed Clueless?', 'answer': 'Amy Heckerling', 'category': 'Comedies'}, {'question': 'Name the movie from the synopsis: A woman who lives in her darkened old family house with her two photosensitive children becomes convinced that the home is haunted.', 'answer': 'The Others', 'category': 'Horror/Thriller'}, {'question': 'What 2018 film do Blake Lively and Henry Golding play husband and wife?', 'answer': 'A Simple Favor', 'category': 'New Releases'}, {'question': 'Name the two actors that have played Rooster Cogburn.', 'answer': 'John Wayne (in True Grit, Rooster Cogburn), Jeff Bridges (in True Grit)', 'category': 'N/A'}, {'question': 'What 1940s drama starring Gregory Peck, Dorothy McGuire, John Garfield, and Celeste Holm concerns a journalist posing as a Jewish man to research an expose on anti-Semitism in New York City?', 'answer': "Gentleman's Agreement", 'category': 'Classics'}, {'question': 'What 1950s film starring Bing Crosby, Frank Sinatra, and Grace Kelly was based on the play The Philadelphia Story?', 'answer': 'High Society', 'category': 'Classics'}, {'question': "Who played the female lead alongside Bing Crosby and Bob Hope in 1942's Road to Morocco?", 'answer': 'Dorothy Lamour', 'category': 'Classics'}, {'question': "How many times does Scarlett O'Hara get married in Gone with the Wind?", 'answer': '3 (to Charles Hamilton, Frank Kennedy, Rhett Butler)', 'category': 'Classics'}, {'question': "Orson Welles plays which Shakespearean character in 1967's Chimes at Midnight?", 'answer': 'John Falstaff', 'category': 'Classics'}, {'question': "Who played Maria Nuñez in 1961's West Side Story?", 'answer': 'Natalie Wood', 'category': 'Classics'}, {'question': 'What comedic actor played sound engineer Gary Dixon in Anaconda?', 'answer': 'Owen Wilson', 'category': '1990s'}, {'question': 'In Wayne\'s World, what song is Wayne "denied" from playing in the guitar shop?', 'answer': 'Stairway to Heaven', 'category': '1990s'}, {'question': "Who plays Amy March, the youngest of the March girls, in 1994's Little Women?", 'answer': 'Kirsten Dunst, Samantha Mathis', 'category': '1990s'}, {'question': 'Which 90s film is about three of the most popular girls at Reagan High accidentally killing the prom queen when a kidnapping goes horribly wrong?', 'answer': 'Jawbreaker', 'category': '1990s'}, {'question': 'In the 1993 thriller Falling Down, who plays the wife of Michael Douglas\' "D-Fens" Beth Trevino?', 'answer': 'Barbara Hershey', 'category': '1990s'}, {'question': "What real grunge band were members of Cliff's band in the 1992 Cameron Crowe film Singles?", 'answer': 'Pearl Jam', 'category': '1990s'}, {'question': "Who provides the voice of the Monster in 2016's A Monster Calls?", 'answer': 'Liam Neeson', 'category': 'Fantasy/Sci-Fi'}, {'question': "In what film does Angelina Jolie play Colin Farrell's mother?", 'answer': 'Alexander', 'category': 'Angelina Jolie'}, {'question': 'Name two of the other soldiers who get pinned down with Mark Wahlberg in Lone Survivor.', 'answer': 'Ben Foster, Emile Hirsch, Taylor Kitsch', 'category': 'War'}, {'question': 'Who plays the leader of the resistance Edgar Friendly in Demolition Man?', 'answer': 'Denis Leary', 'category': 'Action/Adventure'}, {'question': 'Who directed the 1988 film Who Framed Roger Rabbit?', 'answer': 'Robert Zemeckis', 'category': 'Directors'}, {'question': "Who stars as John Proctor, a farmer trying to prove his wife's innocence during the Salem witch trials, in 1996's The Crucible?", 'answer': 'Daniel Day-Lewis', 'category': 'Dramas'}, {'question': 'Billy Connolly voices King Fergus in what animated film?', 'answer': 'Brave', 'category': 'Animated'}, {'question': "Who starred as Kane, Lena's special forces husband, in Annihilation?", 'answer': 'Oscar Isaac', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played weatherman Brick Tamland in Anchorman: The Legend of Ron Burgundy?', 'answer': 'Steve Carell', 'category': 'Comedies'}, {'question': "Who directed 2012's Sinister?", 'answer': 'Scott Derrickson', 'category': 'Horror/Thriller'}, {'question': 'In which film does Clint Eastwood deliver his famous line, "Go ahead, make my day."?', 'answer': 'Sudden Impact', 'category': 'Quotes'}, {'question': 'A zombie boy forms a relationship with a living girl in what 2013 film?', 'answer': 'Warm Bodies', 'category': 'N/A'}, {'question': "Who composed the score to Pixar's WALL-E?", 'answer': 'Thomas Newman', 'category': 'Scores & Soundtracks'}, {'question': 'In Baby Driver, Baby\'s "killer track" is from what 1970s rock band?', 'answer': 'Queen (who performed "Brighton Rock")', 'category': 'Scores & Soundtracks'}, {'question': 'The scores for The Terminator, Fright Night, and True Lies were all composed by whom?', 'answer': 'Brad Fiedel', 'category': 'Scores & Soundtracks'}, {'question': 'Who wrote the soundtrack for Escape from New York?', 'answer': 'John Carpenter', 'category': 'Scores & Soundtracks'}, {'question': "What actress played Sonia Kincaid, the wife of Samuel L. Jackson's character, in The Hitman's Bodyguard?", 'answer': 'Salma Hayek', 'category': 'Samuel L. Jackson'}, {'question': 'Samuel L. Jackson played a cop by the name of P.K. Highsmith in what film?', 'answer': 'The Other Guys', 'category': 'Samuel L. Jackson'}, {'question': 'Samuel L. Jackson played Sgt. Wes Luger in this 1993 parody of the Lethal Weapon franchise.', 'answer': "National Lampoon's Loaded Weapon 1", 'category': 'Samuel L. Jackson'}, {'question': "In 1408, who plays Samuel L. Jackson's co-lead Mike Enslin, a cynical, skeptical author?", 'answer': 'John Cusack', 'category': 'Samuel L. Jackson'}, {'question': 'Cameron Diaz stars alongside Julia Roberts and Dermot Mulroney in what 90s film?', 'answer': "My Best Friend's Wedding", 'category': 'Cameron Diaz'}, {'question': "In the fantasy drama The Shape of Water, who plays Elisa's best friend and fellow custodian Zelda?", 'answer': 'Octavia Spencer', 'category': 'Dramas'}, {'question': "At the end of the film The 'Burbs, what is in the trunk of the Klopeks' car?", 'answer': 'human bones', 'category': '1980s'}, {'question': "Who plays Billy Beane's assistant general manager Peter Brand in Moneyball?", 'answer': 'Jonah Hill', 'category': 'Brad Pitt'}, {'question': 'Who directed and starred in the 2006 spy drama The Good Shepherd?', 'answer': 'Robert De Niro', 'category': 'Spy'}, {'question': "In 1991's Beauty and the Beast, what character disguised themself as a snowman?", 'answer': 'LeFou', 'category': 'Disney'}, {'question': 'What rapper starred alongside Jennifer Lopez in Anaconda?', 'answer': 'Ice Cube', 'category': 'Action/Adventure'}, {'question': 'Harry Potter and the Chamber of Secrets was released in what year?', 'answer': '2002', 'category': 'Release Dates'}, {'question': 'Jamie Bell, Andy Serkis, and Daniel Craig all lend their voices to what 2011 adventure film?', 'answer': 'The Adventures of Tintin', 'category': 'Animated'}, {'question': 'What Oscar-nominated 2014 film featured Benedict Cumberbatch and had a tagline "Behind every code is an enigma"?', 'answer': 'The Imitation Game', 'category': 'Oscars'}, {'question': 'Who directed Blade Runner 2049?', 'answer': 'Denis Villeneuve', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played Gretchen Wieners, the princess of toaster pastry, in Mean Girls?', 'answer': 'Lacey Chabert', 'category': 'Comedies'}, {'question': 'Sarah Michelle Gellar and Bill Pullman star in what 2004 horror film?', 'answer': 'The Grudge', 'category': 'Horror/Thriller'}, {'question': 'Kirsten Dunst and Jay Hernandez star in this 2001 teen romance film.', 'answer': 'Crazy/Beautiful', 'category': 'Dramas'}, {'question': "In Wes Anderson's Moonrise Kingdom, who plays Scout Master Randy Ward?", 'answer': 'Edward Norton', 'category': 'Festival Darlings'}, {'question': "Who played Detective David Tapp in 2004's Saw?", 'answer': 'Danny Glover', 'category': 'Festival Darlings'}, {'question': "The rural areas of what midwestern state supplies the setting for 2010's Winter's Bone?", 'answer': 'Missouri', 'category': 'Festival Darlings'}, {'question': 'What 90s movie about a writer has the tagline, "Between Heaven and Hell, there\'s always Hollywood."?', 'answer': 'Barton Fink', 'category': 'Festival Darlings'}, {'question': 'Who wrote and directed The Shawshank Redemption?', 'answer': 'Frank Darabont', 'category': 'Directors'}, {'question': "Which film marked David Lynch's feature film directorial debut?", 'answer': 'Eraserhead', 'category': 'Directors'}, {'question': "Who directed 2017's biographical war drama Darkest Hour?", 'answer': 'Joe Wright', 'category': 'Directors'}, {'question': 'The screenplay for Rambo: First Blood Part II was written by Sylvester Stallone and which other famous director?', 'answer': 'James Cameron', 'category': 'Directors'}, {'question': 'Who directed Prisoners?', 'answer': 'Denis Villeneuve', 'category': 'Thriller'}, {'question': "Who is Tom Cruise's co-lead Malcolm Beech in Oblivion?", 'answer': 'Morgan Freeman', 'category': 'Tom Cruise'}, {'question': "In 2014's Neighbors, who plays the college dean Carol Gladstone?", 'answer': 'Lisa Kudrow', 'category': '2010s'}, {'question': 'Who plays Walter Sobchak in The Big Lebowski?', 'answer': 'John Goodman', 'category': '1990s'}, {'question': 'Who played the eBay customer in The 40-Year-Old Virgin who wants to buy boots with goldfish in them?', 'answer': 'Jonah Hill', 'category': 'Judd Apatow'}, {'question': 'What is the subtitle of the first Pirates of the Caribbean movie released in 2003?', 'answer': 'The Curse of the Black Pearl', 'category': 'Action/Adventure'}, {'question': 'Who played Wanda Gershwitz in A Fish Called Wanda?', 'answer': 'Jamie Lee Curtis', 'category': 'Comedies'}, {'question': 'What was the title of the Tommy Lee Jones sequel to The Fugitive?', 'answer': 'U.S. Marshals', 'category': 'Dramas'}, {'question': 'Who voiced Count Dracula in Hotel Transylvania?', 'answer': 'Adam Sandler', 'category': 'Animated'}, {'question': 'In Monty Python and the Holy Grail, what character does Arthur cut the arms and legs off of?', 'answer': 'the Black Knight', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What iconic villain says "I find your lack of faith disturbing."?', 'answer': 'Darth Vader (in Star Wars)', 'category': 'Quotes'}, {'question': 'What 2010 romantic horror film directed by Matt Reeves was about a 12-year-old boy who develops a friendship with a child vampire?', 'answer': 'Let Me In', 'category': 'Horror/Thriller'}, {'question': 'Who plays charismatic cult leader Billy Lee in Bad Times at the El Royale?', 'answer': 'Chris Hemsworth', 'category': 'New Releases'}, {'question': "Kevin Costner and Tim Robbins get caught in a love triangle with what actress in 1988's Bull Durham?", 'answer': 'Susan Sarandon', 'category': 'Famous Actors & Actresses'}, {'question': 'What Oscar-winning actor plays a private investigator in 1974, the Devil in 1987, and the President in 1996?', 'answer': 'Jack Nicholson (in Chinatown, The Witches of Eastwick, and Mars Attacks!)', 'category': 'Famous Actors & Actresses'}, {'question': "In Notting Hill, who has an uncredited cameo as Anna's American movie star boyfriend?", 'answer': 'Alec Baldwin', 'category': 'Famous Actors & Actresses'}, {'question': 'What was the first Shakespearean role that Orson Welles played in a film?', 'answer': 'Macbeth', 'category': 'Famous Actors & Actresses'}, {'question': 'In what film does Robin Williams play Maxwell "Wizard" Wallace, an arrogant and abusive vagrant that teaches homeless children music and employs them as street performers?', 'answer': 'August Rush', 'category': 'Robin Williams'}, {'question': 'Robin Williams plays a character by the name of John Keating in what 1989 film?', 'answer': 'Dead Poets Society', 'category': 'Robin Williams'}, {'question': "Who plays Robin Williams' co-lead in the family film RV?", 'answer': 'Cheryl Hines', 'category': 'Robin Williams'}, {'question': "Robin Williams is the reverend for John Krasinski and Mandy Moore's wedding in what film?", 'answer': 'License to Wed', 'category': 'Robin Williams'}, {'question': 'What is the only Wes Anderson directed film to feature Cate Blanchett in its cast?', 'answer': 'The Life Aquatic with Steve Zissou', 'category': 'Cate Blanchett'}, {'question': 'Name the two co-leads of the 2008 rom-com Four Christmases.', 'answer': 'Reese Witherspoon, Vince Vaughn', 'category': 'Rom-Coms'}, {'question': 'Which installment in the Paranormal Activity franchise is the only one to be set during the 1980s?', 'answer': 'Paranormal Activity 3', 'category': 'Horror'}, {'question': "In 2018's Searching, who plays David Kim, who is searching for his missing daughter?", 'answer': 'John Cho', 'category': 'New Releases'}, {'question': "Name the two actors who are vying for Bridget Jones' affections in Bridget Jones's Diary.", 'answer': 'Colin Firth, Hugh Grant', 'category': 'Romance'}, {'question': "Who plays the villainous Lord Henry Blackwood in 2009's Sherlock Holmes?", 'answer': 'Mark Strong', 'category': 'Action/Adventure'}, {'question': "In The Hangover, who plays Jade, the character that marries Ed Helms' character after a crazy night in Las Vegas?", 'answer': 'Heather Graham', 'category': 'Comedies'}, {'question': 'In Cast Away, what is on the FedEx box that Tom Hanks never opens?', 'answer': 'a pair of wings', 'category': 'Dramas'}, {'question': "This 1984 John Carpenter film, about an alien who comes to Earth and takes the form of a woman's dead husband, starred Karen Allen and Jeff Bridges.", 'answer': 'Starman', 'category': '1980s'}, {'question': 'Which James Bond actor appears in the fantasy adventure film Time Bandits?', 'answer': 'Sean Connery', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor, who also voiced Randall in Monsters, Inc., voiced Wayne the wolfman in Hotel Transylvania?', 'answer': 'Steve Buscemi', 'category': 'Animated'}, {'question': 'What 2010 horror film is about a group of strangers being stuck in an elevator and realizing that one of them may be Lucifer himself?', 'answer': 'Devil', 'category': 'Horror/Thriller'}, {'question': 'Jeff Goldblum famously says the line "Must go faster" in both Jurassic Park and what other 1990s film?', 'answer': 'Independence Day', 'category': '1990s'}, {'question': "In BlacKkKlansman, who played John David Washington's undercover counterpart Flip?", 'answer': 'Adam Driver', 'category': 'New Releases'}, {'question': 'What 2018 action-comedy starred Mila Kunis and Kate McKinnon?', 'answer': 'The Spy Who Dumped Me', 'category': 'New Releases'}, {'question': 'Name the film from the synopsis: After a malicious data hack exposes the secrets of the perpetually American town of Salem, chaos descends, and four girls must fight to survive, while coping with the hack themselves.', 'answer': 'Assassination Nation', 'category': 'New Releases'}, {'question': 'What 2018 historical drama stars Oscar Isaac and Ben Kingsley?', 'answer': 'Operation Finale', 'category': 'New Releases'}, {'question': "In Bumblebee, what does Charlie's mother get her for her birthday?", 'answer': 'a helmet', 'category': 'New Releases'}, {'question': 'In Ant-Man and the Wasp, who plays the old friend and former lab assistant to Hank Pym?', 'answer': 'Laurence Fishburne', 'category': 'New Releases'}, {'question': "In Gold, who plays Matthew McConaughey's longtime girlfriend Kay?", 'answer': 'Bryce Dallas Howard', 'category': 'Matthew McConaughey'}, {'question': "Who starred as Matthew McConaughey's love interest in Failure to Launch?", 'answer': 'Sarah Jessica Parker', 'category': 'Matthew McConaughey'}, {'question': 'Matthew McConaughey appears in which 2017 film based off a Stephen King novel?', 'answer': 'The Dark Tower', 'category': 'Matthew McConaughey'}, {'question': 'What 2006 sports drama tells the true story of a community trying to deal with the aftermath of a plane crash that kills an entire university football team?', 'answer': 'We Are Marshall', 'category': 'Matthew McConaughey'}, {'question': 'In Contact, what famous British actor plays industrialist S. R. Hadden, who funds the creation of the alien transport machine?', 'answer': 'John Hurt', 'category': 'Matthew McConaughey'}, {'question': "What former American President did Anthony Hopkins portray in Steven Spielberg's Amistad?", 'answer': 'John Quincy Adams', 'category': 'Matthew McConaughey'}, {'question': 'Who played Virginia Woolf in The Hours?', 'answer': 'Nicole Kidman', 'category': '2000s'}, {'question': 'In Sicario, who plays Ted, the Phoenix police officer that Kate takes back to her place?', 'answer': 'Jon Bernthal', 'category': 'Crime'}, {'question': 'In Paddington 2, what is the name of the prison cook played by Brendan Gleeson?', 'answer': 'Knuckles McGinty', 'category': 'New Releases'}, {'question': 'Name the only film Steven Spielberg has directed Leonardo DiCaprio in.', 'answer': 'Catch Me If You Can', 'category': 'Directors'}, {'question': "Who plays Dalton's best friend Wade Garrett in Road House?", 'answer': 'Sam Elliott', 'category': 'Action/Adventure'}, {'question': 'Both starring Morgan Freeman, which psychological thriller is the sequel to the 1997 film Kiss the Girls?', 'answer': 'Along Came a Spider', 'category': 'Horror/Thriller'}, {'question': 'Who played the not-too-bright Karen Smith in Mean Girls?', 'answer': 'Amanda Seyfried', 'category': 'Comedies'}, {'question': 'What fantasy film introduced the characters Jacob Black, Edward Cullen, and Bella Swan?', 'answer': 'Twilight', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the name of the city that is the home to Aladdin in Disney's Aladdin?", 'answer': 'Agrabah', 'category': 'Animated'}, {'question': "Who voices the baby Mikey in Look Who's Talking?", 'answer': 'Bruce Willis', 'category': '1980s'}, {'question': 'In what 2001 biopic was Pablo Escobar portrayed by Cliff Curtis?', 'answer': 'Blow', 'category': 'Dramas'}, {'question': 'Who directed The Frighteners?', 'answer': 'Peter Jackson', 'category': 'N/A'}, {'question': 'Who directed American History X?', 'answer': 'Tony Kaye', 'category': '1990s'}, {'question': 'What famous actor says the line, "That\'ll do, pig" in 1995\'s Babe?', 'answer': 'James Cromwell', 'category': '1990s'}, {'question': "In 1995's Friday, who plays Big Worm, the psychopathic neighborhood drug supplier?", 'answer': 'Faizon Love', 'category': '1990s'}, {'question': 'In Home Alone, what appliance located in the basement is Kevin afraid of?', 'answer': 'the furnace', 'category': '1990s'}, {'question': "After De Niro's character becomes paranoid in Goodfellas and starts killing off his family members towards the end of the film, what song plays when the dead bodies are being shown?", 'answer': 'Layla', 'category': '1990s'}, {'question': "Who plays Gale Weathers in 1996's Scream?", 'answer': 'Courteney Cox', 'category': '1990s'}, {'question': 'In Mission: Impossible – Fallout, who plays CIA assassin Walker?', 'answer': 'Henry Cavill', 'category': 'New Releases'}, {'question': "In 2018's Skyscraper, the highly advanced building that becomes the site of an intense hostage solution is named after what precious gemstone?", 'answer': 'a pearl', 'category': 'New Releases'}, {'question': 'Who plays Ted Kennedy in the drama Chappaquiddick?', 'answer': 'Jason Clarke', 'category': 'New Releases'}, {'question': "Which of New York City's boroughs is chosen as the location for the New Founding Fathers of America's initial social experiment in 2018's The First Purge?", 'answer': 'Staten Island', 'category': 'New Releases'}, {'question': 'In Avengers: Infinity War, who was the first hero that we saw turn to dust after the "snap"?', 'answer': 'Bucky Barnes', 'category': 'New Releases'}, {'question': "What NBA All-Star player stars as the titular legendary streetballer in 2018's Uncle Drew?", 'answer': 'Kyrie Irving', 'category': 'New Releases'}, {'question': 'Who directed Boogie Nights?', 'answer': 'Paul Thomas Anderson', 'category': 'Modern Classics'}, {'question': "In 1994's The Lion King, who voices adult Simba?", 'answer': 'Matthew Broderick', 'category': '1990s'}, {'question': 'Who plays the brilliant but volatile method actor Mike Shiner in the film Birdman?', 'answer': 'Edward Norton', 'category': '2010s'}, {'question': "Who stars as Bliss Cavendar, a Texas teen who transforms from beauty pageant contestant to roller derby star in 2009's Whip It?", 'answer': 'Elliot Page', 'category': 'Drew Barrymore'}, {'question': 'In Galaxy Quest, what is the name of the mysterious device that can rearrange matter to go back in time 13 seconds?', 'answer': 'the Omega 13', 'category': 'Fantasy/Sci-Fi'}, {'question': "What famous actress filmed her final role opposite Richard Dreyfuss in 1989's Always?", 'answer': 'Audrey Hepburn', 'category': 'Steven Spielberg'}, {'question': "Who stars as the iconic Atticus Finch in 1962's To Kill a Mockingbird?", 'answer': 'Gregory Peck', 'category': 'Dramas'}, {'question': 'Who played ballerina Elizabeth "Beth" MacIntyre / The Dying Swan in Black Swan?', 'answer': 'Winona Ryder', 'category': 'Horror/Thriller'}, {'question': 'In Toy Story 2, what is the name of the old prospector that we were introduced to?', 'answer': 'Stinky Pete', 'category': 'Animated'}, {'question': "Who stars as the resourceful mercenary Royce in 2010's Predators?", 'answer': 'Adrien Brody', 'category': 'Action/Adventure'}, {'question': 'Who plays the Christian philosopher Palmer Joss in the 1997 film Contact?', 'answer': 'Matthew McConaughey', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who directed 1996's Ransom?", 'answer': 'Ron Howard', 'category': 'Directors'}, {'question': 'Vince Vaughn and Jennifer Aniston starred in this 2006 comedy about the end of a relationship.', 'answer': 'The Break-Up', 'category': 'Comedies'}, {'question': 'What 2005 coming-of-age film stars Amber Tamblyn, America Ferrera, and Blake Lively?', 'answer': 'The Sisterhood of the Traveling Pants', 'category': 'Coming of Age'}, {'question': 'What actor was nominated for an Oscar for their role in Starman?', 'answer': 'Jeff Bridges', 'category': 'John Carpenter'}, {'question': "In John Carpenter's They Live, what kind of establishment was across from the shanty town soup kitchen that was the target of a police raid?", 'answer': 'a church', 'category': 'John Carpenter'}, {'question': 'What actor portrays the Duke in Escape from New York?', 'answer': 'Isaac Hayes', 'category': 'John Carpenter'}, {'question': 'What is the name of the cursed coastal town in The Fog?', 'answer': 'Antonio Bay', 'category': 'John Carpenter'}, {'question': 'Which actor co-stars with Virginia Madsen as drifter Harry Madox in the 1990 neo-noir The Hot Spot?', 'answer': 'Don Johnson', 'category': '1990s'}, {'question': 'Dan Aykroyd and Daniel Stern play rabid NBA fans who kidnap a player played by Damon Wayans in what 90s comedy?', 'answer': 'Celtic Pride', 'category': '1990s'}, {'question': "In the movie Rudy, who played D-Bob, Rudy's best friend once he got into Notre Dame?", 'answer': 'Jon Favreau', 'category': '1990s'}, {'question': 'Whoopi Goldberg plays a housekeeper who lights up the life of a grieving widower and his daughter in this 1994 film.', 'answer': 'Corrina, Corrina', 'category': '1990s'}, {'question': "Who directed 2018's First Man?", 'answer': 'Damien Chazelle', 'category': 'New Releases'}, {'question': 'In Independence Day, what represents Captain Hiller\'s "victory dance" for a successful mission?', 'answer': 'smoking a cigar', 'category': 'Will Smith'}, {'question': "In 2016's Hidden Figures, why does Katherine have to run a half mile across the NASA campus every day?", 'answer': 'to use a segregated bathroom', 'category': 'Biopics'}, {'question': 'What is the name of the Velociraptor that shares a special bond with Owen Grady in the Jurassic World films?', 'answer': 'Blue', 'category': 'Action/Adventure'}, {'question': 'What NBA superstar voices Gwangi, a large yeti who believes in the existence of the "smallfoot" in Smallfoot?', 'answer': 'LeBron James', 'category': 'Animated'}, {'question': 'Rob Reiner directed what adaptation of a Stephen King novel in the 1980s?', 'answer': 'Stand by Me', 'category': 'Dramas'}, {'question': 'Who plays Domino in Deadpool 2?', 'answer': 'Zazie Beetz', 'category': 'Comic Book'}, {'question': "Who directed 2018's Annihilation?", 'answer': 'Alex Garland', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played Jeanie Bueller, Ferris' sister, in Ferris Bueller's Day Off?", 'answer': 'Jennifer Grey', 'category': 'Comedies'}, {'question': 'In Unbreakable, what is David Dunn afraid of? What is his weakness?', 'answer': 'water', 'category': 'Horror/Thriller'}, {'question': "In the film Battle of the Sexes, what actor plays Billie Jean King's opponent Bobby Riggs?", 'answer': 'Steve Carell', 'category': 'Biopics'}, {'question': 'In which crime comedy would you find the following actors: Nick Moran, Jason Statham, Jason Flemyng, and Dexter Fletcher?', 'answer': 'Lock, Stock and Two Smoking Barrels', 'category': 'N/A'}, {'question': 'Which state are Loki and Bartleby banished to in Dogma?', 'answer': 'Wisconsin', 'category': 'Kevin Smith'}, {'question': "This actress played Rene Mosier, Brodie's ex-girlfriend, in Mallrats.", 'answer': 'Shannon Doherty', 'category': 'Kevin Smith'}, {'question': 'Who portrays porn star Brandon St. Randy in the movie Zack and Miri Make a Porno?', 'answer': 'Justin Long', 'category': 'Kevin Smith'}, {'question': 'In what Kevin Smith film will you hear the quote, "All Jedi had was a bunch of Muppets."?', 'answer': 'Clerks', 'category': 'Kevin Smith'}, {'question': 'Who plays comic book artist Banky Edwards in Chasing Amy?', 'answer': 'Jason Lee', 'category': 'Kevin Smith'}, {'question': "In 2004's Jersey Girl, who plays Arthur, Ollie's one-time protégé who gets him the job interview in the city?", 'answer': 'Jason Biggs', 'category': 'Kevin Smith'}, {'question': 'Olga Kurylenko played a Bond girl named Camille in what Daniel Craig Bond film?', 'answer': 'Quantum of Solace', 'category': 'James Bond'}, {'question': 'Which Bond film is set primarily in Japan?', 'answer': 'You Only Live Twice', 'category': 'James Bond'}, {'question': 'What artist performed three title songs in the Bond franchise?', 'answer': 'Shirley Bassey (in Goldfinger, Diamonds Are Forever, Moonraker)', 'category': 'James Bond'}, {'question': 'The evil organization of Janus can be found in which Pierce Brosnan era Bond film?', 'answer': 'GoldenEye', 'category': 'James Bond'}, {'question': 'In which James Bond film will you find a villain named Hugo Drax?', 'answer': 'Moonraker', 'category': 'James Bond'}, {'question': "Who played Tracy di Vicenzo, the woman James Bond marries at the end of On Her Majesty's Secret Service?", 'answer': 'Diana Rigg', 'category': 'James Bond'}, {'question': 'What 90s action thriller stars Kurt Russell, Steven Seagal, and Halle Berry?', 'answer': 'Executive Decision', 'category': 'Action/Adventure'}, {'question': "In Get Out, what is Chris's profession?", 'answer': 'photographer', 'category': 'Thriller'}, {'question': "What is Leonardo DiCaprio's wife's totem in the film Inception?", 'answer': 'a spinning top', 'category': '2010s'}, {'question': "Who stars as Tami Oldham, a young woman struggling to keep her injured boyfriend and herself alive after they sail through a hurricane in 2018's Adrift?", 'answer': 'Shailene Woodley', 'category': 'Biopics'}, {'question': 'What kind of animal does Kevin Hart voice in The Secret Life of Pets?', 'answer': 'a rabbit', 'category': 'Animated'}, {'question': 'What 2010 remake of an 80s classic had the tagline "A challenge he never imagined. A teacher he never expected."?', 'answer': 'The Karate Kid', 'category': 'Taglines'}, {'question': "Who stars as a journalist trying to discover the origins of the mysterious tape in 2002's The Ring?", 'answer': 'Naomi Watts', 'category': 'Horror/Thriller'}, {'question': "Which film in the Lethal Weapon franchise introduced Joe Pesci's Leo Getz?", 'answer': 'Lethal Weapon 2', 'category': 'Action/Adventure'}, {'question': "Who played DJay in 2005's Hustle & Flow?", 'answer': 'Terrence Howard', 'category': 'Dramas'}, {'question': 'Who voices the Grinch in the 2018 adaptation?', 'answer': 'Benedict Cumberbatch', 'category': 'Animated'}, {'question': 'Who plays the younger Joe in Looper?', 'answer': 'Joseph Gordon-Levitt', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name two films in which Judd Apatow has directed his wife Leslie Mann.', 'answer': 'The 40-Year-Old Virgin, Knocked Up, Funny People, This Is 40', 'category': 'Comedies'}, {'question': "Who directed 2017's Phantom Thread?", 'answer': 'Paul Thomas Anderson', 'category': 'Directors'}, {'question': 'What 2002 drama follows a young Māori girl trying to claim her place as chief amongst a strictly patriarchal New Zealand tribe?', 'answer': 'Whale Rider', 'category': 'Coming of Age'}, {'question': 'In Ready Player One, what Atari 2600 game had to be beaten in order to receive the final Easter egg and be awarded the last key?', 'answer': 'Adventure', 'category': 'New Releases'}, {'question': "Who directed 2018's Venom?", 'answer': 'Ruben Fleischer', 'category': 'New Releases'}, {'question': "In The Hate U Give, who plays the police officer that is Starr's Uncle Carlos?", 'answer': 'Common', 'category': 'New Releases'}, {'question': "Who plays Queen's manager John Reid in Bohemian Rhapsody?", 'answer': 'Aidan Gillen', 'category': 'New Releases'}, {'question': "Who plays Wade Watts in Steve Spielberg's adaptation of Ready Player One?", 'answer': 'Tye Sheridan', 'category': 'Steven Spielberg'}, {'question': 'What is the nickname given to the gifted humans who can predict future crimes in Minority Report?', 'answer': 'Precogs', 'category': 'Steven Spielberg'}, {'question': 'What MCU actor plays Captain Nicholls, the army officer who buys Joey for use in war, in War Horse?', 'answer': 'Tom Hiddleston', 'category': 'Steven Spielberg'}, {'question': "In E.T., what kind of animal was Elliott's science class supposed to dissect but instead let loose in the classroom?", 'answer': 'frogs', 'category': 'Steven Spielberg'}, {'question': 'Nora Ephron directed Meryl Streep and Amy Adams in what 2009 drama?', 'answer': 'Julie & Julia', 'category': 'Meryl Streep'}, {'question': 'Name the actor who played the jock in The Breakfast Club.', 'answer': 'Emilio Estevez', 'category': 'Coming of Age'}, {'question': 'James Stewart plays a character by the name of L. B. Jefferies in which Hitchcock film?', 'answer': 'Rear Window', 'category': 'Alfred Hitchcock'}, {'question': "In Dodgeball, how does Average Joe's coach Patches O'Houlihan die?", 'answer': 'he is hit by a falling sign in a casino', 'category': '2000s'}, {'question': "Who stars as Jesse Montgomery alongside Seann William Scott in Dude, Where's My Car??", 'answer': 'Ashton Kutcher', 'category': 'Comedies'}, {'question': "What classic Halloween costume is six-year-old Michael Myers wearing when he commits his first murder in 1978's Halloween?", 'answer': 'a clown', 'category': 'Horror/Thriller'}, {'question': "In the 2016 Best Picture winner Spotlight, what major event in the United States forces the Boston Globe's Spotlight team to put their investigation of sex abuse in the Catholic Church on hold?", 'answer': '9/11', 'category': 'Dramas'}, {'question': "Who plays Will Smith's girlfriend and eventual wife in Independence Day?", 'answer': 'Vivica A. Fox', 'category': 'Action/Adventure'}, {'question': "Who plays the villainous Thaddeus Valentine in 2018's Mortal Engines?", 'answer': 'Hugo Weaving', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1998 animated film features the songs "Playing with the Big Boys", "Deliver Us", and "When You Believe"?', 'answer': 'The Prince of Egypt', 'category': 'Animated'}, {'question': 'Gangs of New York, Road to Perdition, and Men in Black II all came out in what year?', 'answer': '2002', 'category': 'Release Dates'}, {'question': "What former Taxi co-star played Andy Kaufman's manager George Shapiro in Man on the Moon?", 'answer': 'Danny DeVito', 'category': 'Biopics'}, {'question': "Who stars as a small-town lawyer who must defend a man accused of killing his wife's attacker in 1959's classic crime drama Anatomy of a Murder?", 'answer': 'James Stewart', 'category': 'N/A'}, {'question': "Which rapper turned actor portrays dangerous criminal Desolation Williams in 2001's Ghosts of Mars?", 'answer': 'Ice Cube', 'category': 'John Carpenter'}, {'question': "Carpenter's The Thing was released on the same day as what other legendary sci-fi film?", 'answer': 'Blade Runner', 'category': 'John Carpenter'}, {'question': 'What popular video game series was inspired by the characters in Big Trouble in Little China?', 'answer': 'Mortal Kombat', 'category': 'John Carpenter'}, {'question': 'In what state does Starman crash-land in Starman?', 'answer': 'Wisconsin', 'category': 'John Carpenter'}, {'question': 'Which actress portrays Holly in They Live?', 'answer': 'Meg Foster', 'category': 'John Carpenter'}, {'question': "Amber Heard is institutionalized and becomes haunted by ghosts in 2011's The Ward. What is the name of the psychiatric hospital she is kept at?", 'answer': 'Coos Bay Psychiatric Hospital', 'category': 'John Carpenter'}, {'question': "In the film In Bruges, what Game of Thrones actor played the priest that was the target of Colin Farrell's hit?", 'answer': 'Ciarán Hinds', 'category': '2000s'}, {'question': 'In Avatar, who plays head of security detail Colonel Miles Quaritch?', 'answer': 'Stephen Lang', 'category': '2000s'}, {'question': 'In Hot Fuzz, what is the only word that the dimwitted Lurch utters throughout the film?', 'answer': 'Yarp', 'category': '2000s'}, {'question': 'In American Psycho, which actor plays Detective Donald Kimball, the man investigating Patrick Bateman?', 'answer': 'Willem Dafoe', 'category': '2000s'}, {'question': "What was the name of Nicole Kidman's character in Moulin Rouge!?", 'answer': 'Satine', 'category': '2000s'}, {'question': "Who stars with Drew Barrymore as a couple trying to get rid of an elderly tenant in 2003's Duplex?", 'answer': 'Ben Stiller', 'category': '2000s'}, {'question': 'Which horror classic features the line "They\'re coming to get you, Barbra!"?', 'answer': 'Night of the Living Dead', 'category': 'Quotes'}, {'question': "What is Jim Carrey's profession in 1997's Liar Liar?", 'answer': 'a lawyer', 'category': 'N/A'}, {'question': 'Reese Witherspoon, Josh Lucas and Patrick Dempsey starred in what 2002 romantic comedy?', 'answer': 'Sweet Home Alabama', 'category': 'N/A'}, {'question': 'Name the movie that begins with the narrated line, "People are always asking me if I know Tyler Durden."?', 'answer': 'Fight Club', 'category': 'N/A'}, {'question': 'What action film franchise features the following characters: Luther, Benji, Julia, Ethan Hunt, Lindsey Farris, and Owen Davian?', 'answer': 'Mission: Impossible', 'category': 'N/A'}, {'question': "In Disney's Frozen, who voices Anna?", 'answer': 'Kristen Bell', 'category': 'N/A'}, {'question': 'What 1989 Spielberg film stars Richard Dreyfuss as the ghost of a forest fire pilot watching his former girlfriend try to move on with her life after he tragically dies?', 'answer': 'Always', 'category': 'Steven Spielberg'}, {'question': "Who directed 2017's The Beguiled?", 'answer': 'Sofia Coppola', 'category': 'Nicole Kidman'}, {'question': "In Wayne's World, what is the name of Cassandra's band?", 'answer': 'Crucial Taunt', 'category': '1990s'}, {'question': 'Who directed the Al Pacino crime classic Dog Day Afternoon?', 'answer': 'Sidney Lumet', 'category': '1970s'}, {'question': 'Frank Oz provided the operation of the Wiseman in which 1986 fantasy movie?', 'answer': 'Labyrinth', 'category': 'Fantasy/Sci-Fi'}, {'question': "The character Figaro is what type of animal in Disney's Pinocchio?", 'answer': 'a cat', 'category': 'Animated'}, {'question': 'In Skyfall, Naomie Harris plays Eve, who is revealed to be what famous character?', 'answer': 'Miss Moneypenny', 'category': 'Action/Adventure'}, {'question': 'What movie earned Clint Eastwood his first Oscar as Best Director?', 'answer': 'Unforgiven', 'category': 'Oscars'}, {'question': 'Who directed the 1976 Stephen King classic Carrie?', 'answer': 'Brian De Palma', 'category': 'Horror/Thriller'}, {'question': "What is the profession of Bruce Willis' character at the beginning of The Fifth Element?", 'answer': 'a taxicab driver', 'category': 'Fantasy/Sci-Fi'}, {'question': "What two actresses star as sisters throwing one last party before selling their family home in 2015's Sisters?", 'answer': 'Amy Poehler, Tina Fey', 'category': 'Comedies'}, {'question': 'Which DCEU actor plays a teen named Patrick in The Perks of Being a Wallflower?', 'answer': 'Ezra Miller', 'category': 'Coming of Age'}, {'question': "In 2015's The Martian, who stars as the young astrodynamicist Rich Purnell, who formulates a plan to rescue Watney?", 'answer': 'Donald Glover', 'category': 'Dramas'}, {'question': 'The original Taken film, starring Liam Neeson, was released in what year?', 'answer': '2009', 'category': 'N/A'}, {'question': "What song does Rupert Everett's character inspire an entire restaurant to sing along with in My Best Friend's Wedding?", 'answer': 'I Say a Little Prayer', 'category': 'Julia Roberts'}, {'question': "What is Tess Ocean's job in Ocean's Eleven?", 'answer': 'an art curator', 'category': 'Julia Roberts'}, {'question': "Who directed 1999's Runaway Bride?", 'answer': 'Garry Marshall', 'category': 'Julia Roberts'}, {'question': "In 2010's Valentine's Day, Julia Roberts spends a majority of the film on an airplane seated next to what actor?", 'answer': 'Bradley Cooper', 'category': 'Julia Roberts'}, {'question': 'What model of car do Thelma and Louise drive around in in Thelma & Louise?', 'answer': 'a 1966 Ford Thunderbird convertible', 'category': 'Ridley Scott'}, {'question': 'Who played Ramesses in Exodus: Gods and Kings?', 'answer': 'Joel Edgerton', 'category': 'Ridley Scott'}, {'question': 'What Ridley Scott directed spy film stars Leonardo DiCaprio and Russell Crowe?', 'answer': 'Body of Lies', 'category': 'Ridley Scott'}, {'question': "What actress played mission commander Lewis of Mark Watney's team in The Martian?", 'answer': 'Jessica Chastain', 'category': 'Ridley Scott'}, {'question': "Who received an Academy Award for Best Actor in a Supporting Role for his performance in 2003's drama Mystic River?", 'answer': 'Tim Robbins', 'category': '2000s'}, {'question': 'Tom Hanks starred alongside Halle Berry, Jim Broadbent, and Hugo Weaving in what film?', 'answer': 'Cloud Atlas', 'category': 'Tom Hanks'}, {'question': "Who played Christine in 2004's The Phantom of the Opera?", 'answer': 'Emmy Rossum', 'category': 'Musicals'}, {'question': "What was Charlie Chaplin's first true talking picture?", 'answer': 'The Great Dictator', 'category': 'Classics'}, {'question': "Name two of the three actors that play Nicolas Cage's paramedic partners in Bringing Out the Dead.", 'answer': 'John Goodman, Tom Sizemore, Ving Rhames', 'category': 'Martin Scorsese'}, {'question': 'Jeff Goldblum and Geena Davis star together in what 1986 sci-fi/horror film?', 'answer': 'The Fly', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which film features the following characters: Nite Owl, Silk Spectre, and Ozymandias?', 'answer': 'Watchmen', 'category': 'Comic Book'}, {'question': 'In On the Waterfront, Terry Malloy was an up-and-comer in what sport?', 'answer': 'boxing', 'category': 'Dramas'}, {'question': 'Which 90s Disney movie has animal characters named Flit and Meeko?', 'answer': 'Pocahontas', 'category': 'Animated'}, {'question': 'What 2004 action film stars Denzel Washington and Dakota Fanning?', 'answer': 'Man on Fire', 'category': 'Action/Adventure'}, {'question': "Which star of TV's Friends co-starred in the films Analyze This and Romy and Michele's High School Reunion?", 'answer': 'Lisa Kudrow', 'category': 'Comedies'}, {'question': "Who directed 2004's Saw?", 'answer': 'James Wan', 'category': 'Horror/Thriller'}, {'question': 'Who played playboy Henry Roth in 50 First Dates?', 'answer': 'Adam Sandler', 'category': 'Rom-Coms'}, {'question': 'Name the 2004 comedy with the tagline "In search of wine. In search of women. In search of themselves."?', 'answer': 'Sideways', 'category': 'N/A'}, {'question': 'What classic Disney movie stars Fred MacMurray, introduces a substance called "Flubber" and features a flying Model T?', 'answer': 'The Absent-Minded Professor', 'category': 'Disney'}, {'question': "In Tangled, what symbol decorates the lanterns released by Rapunzel's parents?", 'answer': 'a sun', 'category': 'Disney'}, {'question': 'Who voices social worker Cobra Bubbles in Lilo & Stitch?', 'answer': 'Ving Rhames', 'category': 'Disney'}, {'question': 'What is the name of the evil marionette master who kidnaps Pinocchio to star in his shows?', 'answer': 'Stromboli', 'category': 'Disney'}, {'question': 'In Ralph Breaks the Internet, who voices the search engine character KnowsMore?', 'answer': 'Alan Tudyk', 'category': 'Disney'}, {'question': "In The Emperor's New Groove, Yzma's bumbling right-hand man Kronk gets information about Kuzco's whereabouts by talking to what woodland creature?", 'answer': 'a squirrel', 'category': 'Disney'}, {'question': 'Will Smith plays a character by the name of Cypher Raige in what sci-fi film?', 'answer': 'After Earth', 'category': 'Will Smith'}, {'question': 'Will Smith and Gene Hackman star in this 1998 thriller.', 'answer': 'Enemy of the State', 'category': 'Will Smith'}, {'question': 'James Cromwell plays scientist and inventor Alfred Lanning in what Will Smith film?', 'answer': 'I, Robot', 'category': 'Will Smith'}, {'question': 'In Hitch, who plays the shallow chauvinist Vance, who attempts to enlist Hitch to help him land a one-night stand with Casey?', 'answer': 'Jeffrey Donovan', 'category': 'Will Smith'}, {'question': 'Who plays the murder witness that Will Smith and Martin Lawrence have to protect in Bad Boys?', 'answer': 'Téa Leoni', 'category': 'Will Smith'}, {'question': 'Who directed The Legend of Bagger Vance?', 'answer': 'Robert Redford', 'category': 'Will Smith'}, {'question': "Who plays the self-absorbed pop diva Samantha James, who Chris accidentally brings to his hometown for Christmas in 2005's Just Friends?", 'answer': 'Anna Faris', 'category': 'Comedies'}, {'question': 'Kevin Costner has been in four movies that prominently feature baseball. Name three.', 'answer': 'Bull Durham, Field of Dreams, For Love of the Game, The Upside of Anger', 'category': 'Sports'}, {'question': "From 1998's Armageddon, other than Bruce Willis and Ben Affleck, name three actors that played a member of their hand-picked drilling crew.", 'answer': 'Clark Brolly, Ken Campbell, Michael Clarke Duncan, Owen Wilson, Steve Buscemi, Will Patton', 'category': 'Disaster'}, {'question': 'What 90s action thriller stars Steven Seagal, Kurt Russell, and Halle Berry?', 'answer': 'Executive Decision', 'category': 'Action/Adventure'}, {'question': 'How many times has Johnny Depp been nominated for an Academy Award?', 'answer': '3 (for Pirates of the Caribbean: The Curse of the Black Pearl, Finding Neverland, Sweeney Todd: The Demon Barber of Fleet Street)', 'category': 'Famous Actors & Actresses'}, {'question': "Denzel Washington plays a witty and debonair angel that goes by what name in The Preacher's Wife?", 'answer': 'Dudley', 'category': 'Denzel Washington'}, {'question': 'Which film in the Indiana Jones franchise involves a secret location called the Well of Souls?', 'answer': 'Raiders of the Lost Ark', 'category': 'Action/Adventure'}, {'question': 'In The Goonies, what is the name of the Fratrelli brother that Chunk befriends?', 'answer': 'Lotney "Sloth" Fratelli', 'category': 'Family'}, {'question': 'Who played Sonny Wortzik in the 1975 Dog Day Afternoon?', 'answer': 'Al Pacino', 'category': 'Dramas'}, {'question': "In Disney's Dumbo, what is the name of Dumbo's mouse friend?", 'answer': 'Timothy Q. Mouse', 'category': 'Animated'}, {'question': 'What was the name of the second film in the Matrix trilogy?', 'answer': 'The Matrix Reloaded', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name one of the two actors that play the sarcastic a cappella competition announcers in the Pitch Perfect trilogy.', 'answer': 'Elizabeth Banks, John Michael Higgins', 'category': 'Comedies'}, {'question': 'What 90s teen drama starred Tyrin Turner, Jada Pinkett, Larenz Tate, and Samuel L. Jackson?', 'answer': 'Menace II Society', 'category': '1990s'}, {'question': "Who directed 2014's Gone Girl?", 'answer': 'David Fincher', 'category': 'Horror/Thriller'}, {'question': 'In Legally Blonde, the résumé that Elle gives to Callahan is printed on pink paper. What else is it that, according to Elle, "gives it a little something extra."?', 'answer': 'it is scented', 'category': 'Rom-Coms'}, {'question': "Who plays Amy Schumer's sister in Trainwreck?", 'answer': 'Brie Larson', 'category': 'Rom-Coms'}, {'question': "In Bridget Jones's Diary, Bridget is invited to what she thinks is a costume party. What does she dress up as?", 'answer': 'a Playboy Bunny', 'category': 'Rom-Coms'}, {'question': "Nick Cannon's Love Don't Cost a Thing is a remake of what 80s rom-com?", 'answer': "Can't Buy Me Love", 'category': 'Rom-Coms'}, {'question': 'What classic comedy features the characters Danny Noonan, Ty Webb, and Carl Spackler?', 'answer': 'Caddyshack', 'category': 'Comedies'}, {'question': 'Who plays Larry Valentine in I Now Pronounce You Chuck & Larry?', 'answer': 'Kevin James', 'category': 'Comedies'}, {'question': 'What did the Wet Bandits change their name to in Home Alone 2?', 'answer': 'the Sticky Bandits', 'category': 'Comedies'}, {'question': "Who plays Ellie Wagner, who, along with her husband, becomes the foster parent to three children, in 2018's Instant Family?", 'answer': 'Rose Byrne', 'category': 'Comedies'}, {'question': "What famous Ocean's Eleven actor appeared in the film Cool World?", 'answer': 'Brad Pitt', 'category': 'Famous Actors & Actresses'}, {'question': 'Which character does John Ratzenberger voice in the Toy Story franchise?', 'answer': 'Hamm', 'category': 'Family'}, {'question': 'Who played the bumbling Otto West in A Fish Called Wanda?', 'answer': 'Kevin Kline', 'category': 'Comedies'}, {'question': 'Who stars as the titular Texas-born Tejano singer in the 1997 biopic Selena?', 'answer': 'Jennifer Lopez', 'category': 'Biopics'}, {'question': 'What 2017 film follows a single man raising his child prodigy niece as a normal kid, who is drawn into a custody battle with his mother?', 'answer': 'Gifted', 'category': 'Dramas'}, {'question': "Who plays Dr. Stephen Maturin in 2003's Master and Commander: The Far Side of the World?", 'answer': 'Paul Bettany', 'category': 'Action/Adventure'}, {'question': 'What 2017 film starred Naomi Scott, RJ Cyler, Bryan Cranston, and Elizabeth Banks?', 'answer': 'Power Rangers', 'category': 'Fantasy/Sci-Fi'}, {'question': "What kind of animal attacks the villainous Hopper the grasshopper at the end of A Bug's Life?", 'answer': 'a bird', 'category': 'Animated'}, {'question': "Who starred as Rick, Lou's inexperienced assistant, in Nightcrawler?", 'answer': 'Riz Ahmed', 'category': 'Horror/Thriller'}, {'question': 'Who plays good-hearted Ben, the man who decides to adopt the problem child, in the film Problem Child?', 'answer': 'John Ritter', 'category': '1990s'}, {'question': "Who plays Bryan Mills' ex-wife in the Taken franchise?", 'answer': 'Famke Janssen', 'category': 'Action/Adventure'}, {'question': "In 1992's Under Siege, the battleship that was hijacked shares its name with what state?", 'answer': 'Missouri', 'category': 'Action/Adventure'}, {'question': "Who directed 1998's The Mask of Zorro?", 'answer': 'Martin Campbell', 'category': 'Action/Adventure'}, {'question': "In Furious 7, Dom and his crew have to obtain the flash drive that contains the God's Eye in which Middle Eastern capital city?", 'answer': 'Abu Dhabi', 'category': 'Action/Adventure'}, {'question': 'What is the name of the human boy in The Good Dinosaur?', 'answer': 'Spot', 'category': 'Pixar'}, {'question': 'In The Incredibles, hero costume designer Edna Mode never includes what in her costume designs?', 'answer': 'capes', 'category': 'Pixar'}, {'question': 'What was the name of the fraternity of misfits that Mike joins in Monsters University?', 'answer': 'Oozma Kappa', 'category': 'Pixar'}, {'question': 'Lloyd Sherr replaced which legendary comedian as Fillmore in Cars 2?', 'answer': 'George Carlin', 'category': 'Pixar'}, {'question': "Who stars as Holden McNeil, a comic book artist hopelessly in love with a lesbian, in 1997's Chasing Amy?", 'answer': 'Ben Affleck', 'category': 'Rom-Coms'}, {'question': "Who stars as Nancy, an exotic dancer appearing in multiple storylines, in 2005's Sin City?", 'answer': 'Jessica Alba', 'category': 'Comic Book'}, {'question': 'Working Girl stars Melanie Griffith as Tess McGill. Who plays her love interest Jack Trainer?', 'answer': 'Harrison Ford', 'category': '1980s'}, {'question': 'Who directed the 1997 sci-fi horror film Mimic?', 'answer': 'Guillermo del Toro', 'category': 'Directors'}, {'question': 'What 1986 animated film features the original song by “Weird Al” Yankovic titled "Dare To Be Stupid"?', 'answer': 'The Transformers: The Movie', 'category': 'Animated'}, {'question': 'John Travolta and Jonathan Rhys Meyers played mismatched spies in which 2010 action thriller?', 'answer': 'From Paris with Love', 'category': 'Action/Adventure'}, {'question': 'Who directed The Grand Budapest Hotel?', 'answer': 'Wes Anderson', 'category': 'Directors'}, {'question': 'Which Tom Cruise movie depicts a young Irish couple struggling to become landowners after immigrating to the U.S.?', 'answer': 'Far and Away', 'category': 'Tom Cruise'}, {'question': 'Which 2002 romantic comedy stars Jennifer Lopez and Ralph Fiennes?', 'answer': 'Maid in Manhattan', 'category': 'Rom-Coms'}, {'question': 'Which Oscar-winning actress plays the character Mrs. Coulter in The Golden Compass?', 'answer': 'Nicole Kidman', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which film, based on a Saturday Night Live character, stars Tim Meadows, Billy Dee Williams, and John Witherspoon?', 'answer': 'The Ladies Man', 'category': 'Comedies'}, {'question': 'What classic silent film involves a vampire named Count Orlok?', 'answer': 'Nosferatu: A Symphony of Horror', 'category': 'Horror/Thriller'}, {'question': 'A young boy and his sister struggle to survive in war-torn Japan in this acclaimed Studio Ghibli film.', 'answer': 'Grave of the Fireflies', 'category': 'Animated'}, {'question': "In Tootsie, who plays the role of George Fields, Michael's agent?", 'answer': 'Sydney Pollack', 'category': 'N/A'}, {'question': 'Who played the character of Bob Cratchit in The Muppet Christmas Carol?', 'answer': 'Kermit the Frog (performed by Steve Whitmire)', 'category': '1990s'}, {'question': 'In what movie does Christian Slater play a teenage pirate radio DJ?', 'answer': 'Pump Up the Volume', 'category': '1990s'}, {'question': 'In Hot Shots! Part Deux, who plays President Thomas "Tug" Benson?', 'answer': 'Lloyd Bridges', 'category': '1990s'}, {'question': 'In the 1992 Steve Martin comedy Leap of Faith, who plays Will Braverman, a sheriff who tries to prevent the townspeople from being conned?', 'answer': 'Liam Neeson', 'category': '1990s'}, {'question': "What is Ivan Drago's son's name in Creed II?", 'answer': 'Viktor Drago', 'category': 'Sports'}, {'question': "In 2005's The Longest Yard, who plays Adam Sandler's newfound friend Caretaker?", 'answer': 'Chris Rock', 'category': 'Sports'}, {'question': "What actor portrayed Ricky Bobby's father in 2006's Talladega Nights: The Ballad of Ricky Bobby?", 'answer': 'Gary Cole', 'category': 'Sports'}, {'question': 'What sports film stars Omar Epps, Sanaa Lathan, Dennis Haysbert, and Alfre Woodard?', 'answer': 'Love & Basketball', 'category': 'Sports'}, {'question': 'In the film 2012, who played geologist Adriam Helmsley, chief science advisor to the President?', 'answer': 'Chiwetel Ejiofor', 'category': 'Disaster'}, {'question': "In the 90s disaster film Volcano, what MCU star plays Tommy Lee Jones' associate Emmit Reese?", 'answer': 'Don Cheadle', 'category': 'Disaster'}, {'question': 'Naomi Watts and Ewan McGregor star together in what 2012 disaster film?', 'answer': 'The Impossible', 'category': 'Disaster'}, {'question': 'What 1950s disaster film stars John Wayne as a pilot on a dying plane?', 'answer': 'The High and the Mighty', 'category': 'Disaster'}, {'question': 'Who directed the 2011 sci-fi thriller Source Code?', 'answer': 'Duncan Jones', 'category': 'Directors'}, {'question': "In Being John Malkovich, who plays Maxine Lund, Schwartz's co-worker who Cameron Diaz's Lotte eventually falls in love with?", 'answer': 'Catherine Keener', 'category': 'Cameron Diaz'}, {'question': "In Mamma Mia! Here We Go Again, what famous recording artist plays Sophie's grandmother Ruby?", 'answer': 'Cher', 'category': 'Musicals'}, {'question': 'Name the film that co-starred Robin Williams and Robert De Niro, which saw De Niro as a man unable to speak who begins speaking after he is given a special new drug.', 'answer': 'Awakenings', 'category': 'Famous Actors & Actresses'}, {'question': "In Steel Magnolias, what disorder does Julia Roberts' Shelby suffer from?", 'answer': 'Type 1 diabetes', 'category': 'Julia Roberts'}, {'question': 'What storybook character has the affection of Woody in Toy Story?', 'answer': 'Bo Peep', 'category': 'Pixar'}, {'question': 'In the movie Monty Python and the Holy Grail, what instrument is used to destroy the Killer Rabbit of Caerbannog?', 'answer': 'the Holy Hand Grenade of Antioch', 'category': 'Comedies'}, {'question': 'In what classic film will you hear the quote, "Listen to them. Children of the night. What music they make."?', 'answer': 'Dracula', 'category': 'Quotes'}, {'question': "Name two of the three actors who portray the classic Three Musketeers characters in 1998's The Man in the Iron Mask.", 'answer': 'Gérard Depardieu, Jeremy Irons, John Malkovich', 'category': 'Leonardo DiCaprio'}, {'question': 'Who played sad dad Cal Weaver in Crazy, Stupid, Love.?', 'answer': 'Steve Carell', 'category': 'Comedies'}, {'question': 'In Ralph Breaks the Internet, who voices the racer simply known as Shank?', 'answer': 'Gal Gadot', 'category': 'Animated'}, {'question': "Who directed 1995's The American President?", 'answer': 'Rob Reiner', 'category': 'Dramas'}, {'question': "Who stars as a U.S. Army officer who must go rogue to hunt for weapons of mass destruction in 2010's Green Zone?", 'answer': 'Matt Damon', 'category': 'Action/Adventure'}, {'question': 'Who starred as the unhinged Alexandra "Alex" Forrest in Fatal Attraction?', 'answer': 'Glenn Close', 'category': 'Horror/Thriller'}, {'question': 'In The Empire Strikes Back, Lando is the director of a mining facility located on which planet?', 'answer': 'Bespin', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which film saw Nicole Kidman receive her first Oscar nomination?', 'answer': 'Moulin Rouge!', 'category': 'Oscars'}, {'question': 'Which 80s movie includes the following quote: "It\'s a hundred and six miles to Chicago, we\'ve got a full tank of gas, half a pack of cigarettes, it\'s dark, and we\'re wearing sunglasses"?', 'answer': 'The Blues Brothers', 'category': 'Quotes'}, {'question': "Who directed 2006's The Holiday?", 'answer': 'Nancy Meyers', 'category': 'N/A'}, {'question': 'Kevin Costner "danced" with the wolves in Dances with Wolves, which was released in what year?', 'answer': '1990', 'category': 'Release Dates'}, {'question': "The King's Speech was released in what year?", 'answer': '2010', 'category': 'Release Dates'}, {'question': 'The very first RoboCop starring Peter Weller was released in what year?', 'answer': '1987', 'category': 'Release Dates'}, {'question': 'Lethal Weapon 2 was released in what year?', 'answer': '1989', 'category': 'Release Dates'}, {'question': 'In what year was the James Dean classic Rebel Without a Cause released?', 'answer': '1955', 'category': 'Release Dates'}, {'question': 'The Sandra Bullock film While You Were Sleeping was released in what year?', 'answer': '1995', 'category': 'Release Dates'}, {'question': 'Who directed Cate Blanchett as Annie Wilson, a resident fortune teller who possesses extrasensory perception in the 2000 thriller The Gift?', 'answer': 'Sam Raimi', 'category': 'Cate Blanchett'}, {'question': "Who plays right hand to Cate Blanchett's Hela, Skurge the Executioner, in Thor: Ragnarok?", 'answer': 'Karl Urban', 'category': 'Cate Blanchett'}, {'question': 'Cate Blanchett has received seven Academy Award nominations for acting. For which film did she win her first?', 'answer': 'The Aviator', 'category': 'Cate Blanchett'}, {'question': 'Cate Blanchett voiced the character of Valka in this 2014 animated film.', 'answer': 'How to Train Your Dragon 2', 'category': 'Cate Blanchett'}, {'question': "In 2001's Bandits, what was the media nickname given to Bruce Willis and Billy Bob Thornton's characters for their unique method of bank robbing?", 'answer': 'the Sleepover Bandits', 'category': 'Cate Blanchett'}, {'question': "Who directed Cate Blanchett and Sandra Bullock in Ocean's 8?", 'answer': 'Gary Ross', 'category': 'Cate Blanchett'}, {'question': 'Who starred as Jed in the 1984 war film Red Dawn?', 'answer': 'Patrick Swayze', 'category': 'Modern Classics'}, {'question': 'Who directed the classic crime film The Killing?', 'answer': 'Stanley Kubrick', 'category': 'Crime'}, {'question': "Who directed 2018's Overlord?", 'answer': 'Julius Avery', 'category': 'War'}, {'question': 'In Snatch, what is the preferred method of getting rid of bodies that the notorious criminal Brick Top mentions repeatedly throughout the film?', 'answer': 'feed them to pigs', 'category': 'Brad Pitt'}, {'question': 'Which film directed by Paul Thomas Anderson co-stars Tom Cruise, Julianne Moore, and Jason Robards?', 'answer': 'Magnolia', 'category': 'Dramas'}, {'question': 'Who plays Princess Pei-Pei in Shanghai Noon?', 'answer': 'Lucy Liu', 'category': 'Action/Adventure'}, {'question': "Who plays the villainous archenemy Dieter Von Cunth in 2010's MacGruber?", 'answer': 'Val Kilmer', 'category': 'Comedies'}, {'question': 'What type of animal is the title character in the animated film Norm of the North?', 'answer': 'a polar bear', 'category': 'Animated'}, {'question': 'Name the 90s sci-fi adventure film that has a lead character called the Mariner.', 'answer': 'Waterworld', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Christian Bale is a factory worker who suffers from severe insomnia in what psychological thriller?', 'answer': 'The Machinist', 'category': 'Horror/Thriller'}, {'question': "Who starred as Mercedes Lane opposite Corey Haim and Corey Feldman in 1988's License to Drive?", 'answer': 'Heather Graham', 'category': '1980s'}, {'question': 'For which film was Will Smith first nominated for a Lead Actor Oscar?', 'answer': 'Ali', 'category': 'Famous Actors & Actresses'}, {'question': 'In Undercover Brother, who played Conspiracy Brother?', 'answer': 'Dave Chappelle', 'category': 'Comedies'}, {'question': 'What brand of chewing gum sponsors Ricky Bobby in Talladega Nights?', 'answer': 'Big Red', 'category': 'Comedies'}, {'question': "Mel Gibson's and Helen Hunt's characters collaborate on an ad campaign for what sports brand in the 2000 romantic comedy What Women Want?", 'answer': 'Nike', 'category': 'Comedies'}, {'question': 'Wesley Snipes, Patrick Swayze, and what actor play drag queens in the 1995 comedy To Wong Foo, Thanks for Everything! Julie Newmar?', 'answer': 'John Leguizamo', 'category': 'Comedies'}, {'question': 'In Bridesmaids, what are the party favors being handed out to all the guests at the ridiculously over-the-top bridal shower?', 'answer': 'puppies', 'category': 'Comedies'}, {'question': "In Austin Powers: International Man of Mystery, what was the name of Number 2's henchwoman that Austin seduces?", 'answer': 'Alotta Fagina', 'category': 'Comedies'}, {'question': "This actress played Margaret Keane in Tim Burton's 2014 film Big Eyes.", 'answer': 'Amy Adams', 'category': 'Tim Burton'}, {'question': "This actress played Peg Boggs, Kim's mother and Avon lady extraordinaire, in Tim Burton's Edward Scissorhands.", 'answer': 'Dianne Wiest', 'category': 'Tim Burton'}, {'question': "In Tim Burton's Mars Attacks!, what Slim Whitman song kills the Martians?", 'answer': 'Indian Love Call', 'category': 'Tim Burton'}, {'question': "In Tim Burton's Batman, what is the Joker's real name?", 'answer': 'Jack Napier', 'category': 'Tim Burton'}, {'question': 'Tim Burton was producer, writer, and production designer for this 1993 animated film.', 'answer': 'The Nightmare Before Christmas', 'category': 'Tim Burton'}, {'question': 'Tim Burton received his first Golden Globe nomination for Best Director for this film.', 'answer': 'Sweeney Todd: The Demon Barber of Fleet Street', 'category': 'Tim Burton'}, {'question': "Who composed the score for 2009's Avatar?", 'answer': 'James Horner', 'category': 'Scores & Soundtracks'}, {'question': "Who stars as ex-Marine turned mercenary Terry Sheridan working alongside Lara Croft to recover the mythical Pandora's box in Tomb Raider: The Cradle of Life?", 'answer': 'Gerard Butler', 'category': 'Angelina Jolie'}, {'question': 'Charlie Sheen starred with Michael Biehn and Bill Paxton in what 1990 military action film?', 'answer': 'Navy SEALs', 'category': 'Charlie Sheen'}, {'question': "Who plays Sylvester Stallone's partner in Tango & Cash?", 'answer': 'Kurt Russell', 'category': 'Action/Adventure'}, {'question': 'In what classic 1955 coming-of-age film did James Dean famously cry "You\'re tearing me apart!"?', 'answer': 'Rebel Without a Cause', 'category': 'Classics'}, {'question': "1971's The French Connection follows a pair of narcotics cops investigating a smuggling ring in what U.S. city?", 'answer': 'New York City', 'category': 'Dramas'}, {'question': 'George Clooney and Meryl Streep star together in what 2009 animated film?', 'answer': 'Fantastic Mr. Fox', 'category': 'Animated'}, {'question': 'Who starred as the replicant blade runner K in Blade Runner 2049?', 'answer': 'Ryan Gosling', 'category': 'Fantasy/Sci-Fi'}, {'question': "What type of animal bursts out of the Christmas tree and wreaks havoc in National Lampoon's Christmas Vacation?", 'answer': 'a squirrel', 'category': 'Comedies'}, {'question': 'Which horror film involves a young priest named Damien Karras?', 'answer': 'The Exorcist', 'category': 'Horror/Thriller'}, {'question': 'What Oscar winner appears in the Night at the Museum franchise as the pharaoh Ahkmenrah?', 'answer': 'Rami Malek', 'category': 'Family'}, {'question': "Who directed 1991's New Jack City?", 'answer': 'Mario Van Peebles', 'category': 'Directors'}, {'question': 'For what movie did Sidney Lumet receive his first Oscar nomination?', 'answer': '12 Angry Men', 'category': 'Directors'}, {'question': "Kathryn Bigelow's directorial debut was with this 1984 film, which also featured Willem Dafoe in his first starring role?", 'answer': 'The Loveless', 'category': 'Directors'}, {'question': 'Who directed Any Given Sunday?', 'answer': 'Oliver Stone', 'category': 'Directors'}, {'question': 'Who directed the 2002 drama 25th Hour?', 'answer': 'Spike Lee', 'category': 'Directors'}, {'question': 'Who wrote, directed, and stars as Carol in the 2013 comedy In a World..., about a woman trying to make it in the voice-over industry?', 'answer': 'Lake Bell', 'category': 'Directors'}, {'question': 'In Silverado, who played a knife-wielding poker player named Slick?', 'answer': 'Jeff Goldblum', 'category': '1980s'}, {'question': "What comedian plays Rufus in Bill & Ted's Excellent Adventure?", 'answer': 'George Carlin', 'category': '1980s'}, {'question': 'Who wrote the screenplay for the Brian De Palma film Scarface?', 'answer': 'Oliver Stone', 'category': '1980s'}, {'question': 'In Footloose, Ren moved to a small farm town from what metropolitan city?', 'answer': 'Chicago', 'category': '1980s'}, {'question': 'In Spaceballs, what species is Barf?', 'answer': 'a mawg', 'category': '1980s'}, {'question': 'Which actress starred opposite Tom Hanks in the 1986 comedy The Money Pit?', 'answer': 'Shelley Long', 'category': '1980s'}, {'question': "What was the last name of Holly's annoying co-worker that gets himself killed in Die Hard?", 'answer': 'Ellis', 'category': 'Action/Adventure'}, {'question': 'Which 2018 comedy stars Ed Helms, Jon Hamm, and Jeremy Renner?', 'answer': 'Tag', 'category': 'New Releases'}, {'question': 'This Marvel actor played the father, Will Hayes, opposite Abigail Breslin in the 2008 film Definitely, Maybe.', 'answer': 'Ryan Reynolds', 'category': 'Dramas'}, {'question': 'In Widows, who plays Veronica, wife to renowned bank robber Harry Rawlings?', 'answer': 'Viola Davis', 'category': 'Crime'}, {'question': "Who directed 2015's Tomorrowland?", 'answer': 'Brad Bird', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the title of the third film in Ice Cube's Friday series?", 'answer': 'Friday After Next', 'category': 'Comedies'}, {'question': 'What famous Universal monster was portrayed by actors Lon Chaney Jr. and Benicio del Toro?', 'answer': 'the Wolf Man (Chaney Jr. in The Wolf Man, Frankenstein Meets the Wolf Man, House of Frankenstein, House of Dracula, Abbott and Costello Meet Frankenstein; del Toro in The Wolfman)', 'category': 'Horror/Thriller'}, {'question': "In what Pixar film does Sigourney Weaver provide the voice of a character called Ship's Computer?", 'answer': 'WALL-E', 'category': 'Animated'}, {'question': 'In It Happened One Night, what is the profession of the character played by Clark Gable?', 'answer': 'a reporter', 'category': 'Classics'}, {'question': "Who directed 1954's On the Waterfront?", 'answer': 'Elia Kazan', 'category': 'Classics'}, {'question': "Who directed Singin' in the Rain alongside Gene Kelly?", 'answer': 'Stanley Donen', 'category': 'Classics'}, {'question': "In which classic did James Cagney smash a grapefruit into Mae Clarke's face?", 'answer': 'The Public Enemy', 'category': 'Classics'}, {'question': "In Love, Simon, who plays Simon's father Jack?", 'answer': 'Josh Duhamel', 'category': 'Coming of Age'}, {'question': "In Saturday Night Fever, when Tony Manero isn't dancing, where does he work in a dead end job?", 'answer': 'in a hardware store', 'category': 'Coming of Age'}, {'question': "Who plays the adult version of Haley Joel Osment's character in Secondhand Lions?", 'answer': 'Josh Lucas', 'category': 'Coming of Age'}, {'question': 'Rob Reiner directed what 2010 movie about two eighth-graders who start to have feelings for each other despite being total opposites?', 'answer': 'Flipped', 'category': 'Coming of Age'}, {'question': 'Who directed If Beale Street Could Talk?', 'answer': 'Barry Jenkins', 'category': 'Romance'}, {'question': 'Drew Barrymore played Danielle in what 1998 Cinderella adaptation?', 'answer': 'Ever After', 'category': 'Drew Barrymore'}, {'question': 'Released in 1978, F.I.S.T. is the story of union boss Johnny Kovak. Who plays Kovak?', 'answer': 'Sylvester Stallone', 'category': '1970s'}, {'question': 'Which film in the Die Hard franchise is known for the line "Simon says."?', 'answer': 'Die Hard with a Vengeance', 'category': 'Action/Adventure'}, {'question': 'Who directed Lawrence of Arabia?', 'answer': 'David Lean', 'category': 'Classics'}, {'question': 'Chris Cooper plays horse trainer Tom Howard in what 2003 sports film?', 'answer': 'Seabiscuit', 'category': 'Famous Actors & Actresses'}, {'question': 'Who voices the character of the Underminer in The Incredibles and Incredibles 2?', 'answer': 'John Ratzenberger', 'category': 'Animated'}, {'question': 'Which actor plays Data in the Star Trek franchise?', 'answer': 'Brett Spiner (in Generations, First Contact, Insurrection, Nemesis)', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Justin Long, Anna Faris, Ryan Reynolds, and Dane Cook star in what 2005 film?', 'answer': 'Waiting...', 'category': 'Comedies'}, {'question': 'Karyn Kusama directed this 2009 horror film that was written by Diablo Cody and stars Amanda Seyfried.', 'answer': "Jennifer's Body", 'category': 'Horror/Thriller'}, {'question': "In 2018's A Star Is Born, Jackson Maine's limo driver and rehab therapist are played by two of Bradley Cooper's Alias co-stars. Name one of them.", 'answer': 'Greg Grunberg, Ron Rifkin', 'category': 'Dramas'}, {'question': 'In Jay and Silent Bob Strike Back, there was a sequel mentioned to Good Will Hunting, Good Will Hunting 2. What was the subtitle?', 'answer': 'Hunting Season', 'category': 'Kevin Smith'}, {'question': 'Who plays retired seaman Howard Howe in Tusk?', 'answer': 'Michael Parks', 'category': 'Kevin Smith'}, {'question': 'In Dogma, what is the name of the new religious icon Cardinal Glick is trying to make famous through his "Catholicism Wow" campaign?', 'answer': 'Buddy Christ', 'category': 'Kevin Smith'}, {'question': 'What is the name of the first porn film that Zack and Miri set out to make in Zack and Miri Make a Porno?', 'answer': 'Star Whores', 'category': 'Kevin Smith'}, {'question': 'Who wrote the screenplay for Spartacus?', 'answer': 'Dalton Trumbo', 'category': 'Stanley Kubrick'}, {'question': "Which war is the setting of Kubrick's Paths of Glory?", 'answer': 'World War I', 'category': 'Stanley Kubrick'}, {'question': 'What cast member from the original Star Wars trilogy was cast as a bodyguard in A Clockwork Orange?', 'answer': 'David Prowse', 'category': 'Stanley Kubrick'}, {'question': 'What Kubrick film was adapted from a novel by William Makepeace Thackeray?', 'answer': 'Barry Lyndon', 'category': 'Stanley Kubrick'}, {'question': 'Will Smith portrayed famous boxer Muhammad Ali in Ali, released in what year?', 'answer': '2001', 'category': 'Mixed Bag'}, {'question': 'Who plays the wizard Shazam in Shazam!?', 'answer': 'Djimon Hounsou', 'category': 'N/A'}, {'question': 'Which actor appeared in the films Chronicle, Red Tails, and That Awkward Moment?', 'answer': 'Michael B. Jordan', 'category': 'N/A'}, {'question': "Who directed 2002's Minority Report?", 'answer': 'Steven Spielberg', 'category': 'N/A'}, {'question': 'Which year saw the release of the Ang Lee film Life of Pi?', 'answer': '2012', 'category': 'N/A'}, {'question': 'Which one of the following 2007 films was not nominated for Best Picture? Juno, There Will Be Blood, or Gone Baby Gone?', 'answer': 'Gone Baby Gone', 'category': 'N/A'}, {'question': 'In which DC movie can you hear the following quote: "I won\'t kill you, but I don\'t have to save you."?', 'answer': 'Batman Begins', 'category': 'Comic Book'}, {'question': "At the beginning of 2006's Cars, there is a three-way tie between veteran The King, rookie Lightning McQueen, and infamous Chick Hicks. Who voices Chick Hicks?", 'answer': 'Michael Keaton', 'category': 'Pixar'}, {'question': "In Serendipity, John Cusack and Kate Beckinsale meet in Bloomingdale's while trying to buy what?", 'answer': 'black cashmere gloves', 'category': 'Romance'}, {'question': 'Paula Patton and Michael Nyqvist co-starred in what Mission: Impossible film?', 'answer': 'Mission: Impossible – Ghost Protocol', 'category': 'Action/Adventure'}, {'question': 'Name one of the two lead actresses in the 2003 rom-com Under the Tuscan Sun directed by Audrey Wells.', 'answer': 'Diane Lane, Sandra Oh', 'category': 'Rom-Coms'}, {'question': 'What 2010 coming-of-age biopic stars Kristen Stewart and Dakota Fanning as 70s rockers Joan Jett and Cherie Currie?', 'answer': 'The Runaways', 'category': 'Dramas'}, {'question': 'Who plays Calvin, the 14-year-old orphan turned NBA star, in Like Mike?', 'answer': "Lil' Bow Wow", 'category': 'Family'}, {'question': 'What is the subtitle of the third How to Train Your Dragon film?', 'answer': 'The Hidden World', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays the lead, Maya Vargas, in the 2018 comedy Second Act?', 'answer': 'Jennifer Lopez', 'category': 'Comedies'}, {'question': 'The Lament Configuration box is featured throughout what horror series?', 'answer': 'Hellraiser', 'category': 'Horror/Thriller'}, {'question': 'In The Peanuts Movie, which character fantasizes that he is a fighter pilot with a girlfriend named Fifi?', 'answer': 'Snoopy', 'category': 'Animated'}, {'question': 'Who sang the title song for the James Bond movie Thunderball?', 'answer': 'Tom Jones', 'category': 'James Bond'}, {'question': 'Which villain responded to Bond, "No, Mr. Bond, I expect you to die!" after James asked if he was expected to talk?', 'answer': 'Auric Goldfinger (in Goldfinger)', 'category': 'James Bond'}, {'question': 'Who plays Scaramanga, the assassin hired to kill James Bond, in The Man with the Golden Gun?', 'answer': 'Christopher Lee', 'category': 'James Bond'}, {'question': 'How many James Bond movies have won the Oscar for Best Original Song?', 'answer': '2 (Skyfall for "Skyfall", Spectre for "Writing\'s on the Wall")', 'category': 'James Bond'}, {'question': 'In The World Is Not Enough, Bond seeks out Valentin Zukovsky, a former Russian mafia boss and casino owner, for information. What British character actor and Harry Potter vet played Valentin?', 'answer': 'Robbie Coltrane', 'category': 'James Bond'}, {'question': 'In the 2002 film Die Another Day, James Bond spends 14 months as a prisoner in which country?', 'answer': 'North Korea', 'category': 'James Bond'}, {'question': "Who stars as the gun for hire known only as Agent 47 in 2007's Hitman?", 'answer': 'Timothy Olyphant', 'category': 'Video Game'}, {'question': 'Mike Newell directed what film based on a video game starring Jake Gyllenhaal?', 'answer': 'Prince of Persia: The Sands of Time', 'category': 'Video Game'}, {'question': 'In 1995\'s Mortal Kombat, after defeating what character did Johnny Cage leave an autographed photo on which he wrote "To my greatest fan"?', 'answer': 'Scorpion', 'category': 'Video Game'}, {'question': "Who plays Monarch, the eccentric, wealthy DJ who invites elite drivers to a winner-take-all race, in 2014's Need for Speed?", 'answer': 'Michael Keaton', 'category': 'Video Game'}, {'question': 'Paul W. S. Anderson has directed how many installments of the Resident Evil franchise?', 'answer': '4 (Resident Evil, Afterlife, Retribution, The Final Chapter)', 'category': 'Video Game'}, {'question': "In 2008's neo-noir Max Payne, who stars alongside Mark Wahlberg as Mona Sax, a woman trying to solve her sister's murder?", 'answer': 'Mila Kunis', 'category': 'Video Game'}, {'question': "Who played the lead Idi Amin in 2006's The Last King of Scotland?", 'answer': 'Forest Whitaker', 'category': 'Biopics'}, {'question': 'Who won the 1981 Best Actor Oscar after putting on 60 pounds to play the role?', 'answer': 'Robert De Niro (for Raging Bull)', 'category': 'Oscars'}, {'question': 'Lucille LeSueur became famous as what Classic Hollywood actress?', 'answer': 'Joan Crawford', 'category': 'Famous Actors & Actresses'}, {'question': "Who directed 2005's The Island?", 'answer': 'Michael Bay', 'category': 'Action/Adventure'}, {'question': 'Name the two lead actors in The Mirror Has Two Faces.', 'answer': 'Barbra Streisand, Jeff Bridges', 'category': 'Famous Actors & Actresses'}, {'question': "What is the name of Kate Winslet's character in Titanic?", 'answer': 'Rose DeWitt Bukater', 'category': 'Dramas'}, {'question': 'Which main character from a 1990s Disney animated film repeatedly says the line "Do you trust me?" over the course of the film?', 'answer': 'Aladdin', 'category': 'Animated'}, {'question': 'In Starship Troopers, what slang term do Earth soldiers use to refer to the alien creatures they are sent to fight?', 'answer': 'Bugs', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Queen Latifah and Steve Martin star in what 2003 film?', 'answer': 'Bringing Down the House', 'category': 'Comedies'}, {'question': 'Which actor plays a veteran detective named Somerset in Seven?', 'answer': 'Morgan Freeman', 'category': 'Horror/Thriller'}, {'question': 'What film stars Denzel Washington as Detective John Hobbes, investigating what appears to be a series of copycat murders after the original killer is put to death?', 'answer': 'Fallen', 'category': 'Crime'}, {'question': "In Black Panther, what is the name of Wakanda's all-female special forces, led by Okoye?", 'answer': 'the Dora Milaje', 'category': 'Comic Book'}, {'question': 'What is the subtitle of the sequel to Sin City, released in 2014?', 'answer': 'A Dame to Kill For', 'category': 'Comic Book'}, {'question': "In X2: X-Men United, what subject does Wolverine tell Bobby Drake's parents he teaches at the Xavier Institute?", 'answer': 'Art', 'category': 'Comic Book'}, {'question': "1994's The Crow is set in what U.S. city?", 'answer': 'Detroit', 'category': 'Comic Book'}, {'question': 'In Goodfellas, what song plays during the iconic long tracking shot of Henry and Karen entering the Copacabana?', 'answer': 'Then He Kissed Me', 'category': 'Scores & Soundtracks'}, {'question': 'Who composed the score for the J. J. Abrams directed Super 8?', 'answer': 'Michael Giacchino', 'category': 'Scores & Soundtracks'}, {'question': 'Which actress sings "Can\'t Take My Eyes Off Of You" to Jesus on a cross for her pageant talent in the film Drop Dead Gorgeous?', 'answer': 'Denise Richards', 'category': 'Scores & Soundtracks'}, {'question': 'Who composed the score for The Amazing Spider-Man 2?', 'answer': 'Hans Zimmer', 'category': 'Scores & Soundtracks'}, {'question': "In Pretty in Pink, who plays Andie's best friend Duckie?", 'answer': 'Jon Cryer', 'category': '1980s'}, {'question': 'Which Stallone film has the tagline "Two of L.A.\'s top rival cops are going to have to work together... Even if it kills them."?', 'answer': 'Tango & Cash', 'category': 'Sly & Arnie'}, {'question': 'Naomi Watts and Viggo Mortensen star together in what 2007 film about Russian gangsters in London?', 'answer': 'Eastern Promises', 'category': '2000s'}, {'question': "You'll find over-25-foot behemoths by the names of the Bloodbottler and the Fleshlumpeater in what 2016 film?", 'answer': 'The BFG', 'category': 'Family'}, {'question': "Who plays Nigel Gruff, a drunken gambling Welsh soccer player turned NFL kicker, in 2000's The Replacements?", 'answer': 'Rhys Ifans', 'category': 'Sports'}, {'question': "Who plays Vincent's girlfriend/manager in 1986's The Color of Money?", 'answer': 'Mary Elizabeth Mastrantonio', 'category': 'Tom Cruise'}, {'question': 'Ridley Scott directed Viggo Mortensen and Demi Moore in what 1997 action drama?', 'answer': 'G.I. Jane', 'category': 'Action/Adventure'}, {'question': "Jennifer Connelly plays Bradley Cooper's character's wife in what 2009 romance film?", 'answer': "He's Just Not That into You", 'category': 'Romance'}, {'question': 'Who played journalist Michael Rezendes in Spotlight?', 'answer': 'Mark Ruffalo', 'category': 'Dramas'}, {'question': 'What film features the immortal lines, "Surely you can\'t be serious." and "I am serious... and don\'t call me Shirley."?', 'answer': 'Airplane!', 'category': 'Quotes'}, {'question': 'What relation does Coco have to Miguel in the film Coco?', 'answer': 'his great-grandmother', 'category': 'Animated'}, {'question': 'Mike Myers plays a San Francisco poet that is afraid of committing to a relationship in what 1993 comedy?', 'answer': 'So I Married an Axe Murderer', 'category': 'Comedies'}, {'question': 'Which actor plays the title character in the 2012 Alex Cross?', 'answer': 'Tyler Perry', 'category': 'Horror/Thriller'}, {'question': "Which actor plays James Franco's father in Rise of the Planet of the Apes?", 'answer': 'John Lithgow', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which film released in 2000 won Best Picture at the Academy Awards?', 'answer': 'Gladiator', 'category': 'N/A'}, {'question': 'In what year does Bumblebee take place?', 'answer': '1987', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the name of the dragon in Dragonheart?', 'answer': 'Draco', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Blade Runner, who plays police officer Gaff, who is often found crafting origami figures?', 'answer': 'Edward James Olmos', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Willy Wonka & the Chocolate Factory, what is the name of the multi-dimensional glass elevator that Willy Wonka uses to fly the out of the factory?', 'answer': 'the Wonkavator', 'category': 'Fantasy/Sci-Fi'}, {'question': 'The songs "Willkommen" and "Maybe This Time" are featured in what musical?', 'answer': 'Cabaret', 'category': 'Musicals'}, {'question': "In High School Musical 3, who is the actor that played Chad Danforth, Troy's best friend?", 'answer': 'Corbin Bleu', 'category': 'Musicals'}, {'question': "In 1951's Royal Wedding, Fred Astaire thrilled audiences by dancing on what?", 'answer': 'on walls and the ceiling', 'category': 'Musicals'}, {'question': 'The King and I was set in what Asian country?', 'answer': 'Siam (now Thailand)', 'category': 'Musicals'}, {'question': "Who stars as H.I. McDunnough in the Coen brothers' Raising Arizona?", 'answer': 'Nicolas Cage', 'category': 'Comedies'}, {'question': 'Why does Sandra Bullock need to go undercover in Miss Congeniality?', 'answer': 'to prevent a terrorist from bombing a pageant', 'category': 'Sandra Bullock'}, {'question': 'Who plays the drug-addicted comedian Jeff Portnoy in Tropic Thunder?', 'answer': 'Jack Black', 'category': 'Comedies'}, {'question': 'Who wrote and directed the 1989 crime comedy Harlem Nights?', 'answer': 'Eddie Murphy', 'category': '1980s'}, {'question': 'In Fight Club, who plays Marla Singer, the woman Edward Norton befriends and begins a relationship with?', 'answer': 'Helena Bonham Carter', 'category': 'Dramas'}, {'question': 'Who directed 2 Fast 2 Furious?', 'answer': 'John Singleton', 'category': 'Action/Adventure'}, {'question': "What year saw the release of Pixar's WALL-E?", 'answer': '2008', 'category': 'Release Dates'}, {'question': 'Who plays Kevin Flynn, a former programmer and game developer, in Tron?', 'answer': 'Jeff Bridges', 'category': 'Fantasy/Sci-Fi'}, {'question': 'A family looks to prevent evil spirits from trapping their comatose child in a realm in what 2011 James Wan film?', 'answer': 'Insidious', 'category': 'Horror/Thriller'}, {'question': 'Who voiced Gwen Stacy in Spider-Man: Into the Spider-Verse?', 'answer': 'Hailee Steinfeld', 'category': 'Animated'}, {'question': 'Who played wedding columnist Iris Simpkins in The Holiday?', 'answer': 'Kate Winslet', 'category': 'N/A'}, {'question': "What actress played John Wayne's estranged wife in the movie McLintock!?", 'answer': "Maureen O'Hara", 'category': 'Westerns'}, {'question': "In Once Upon a Time in the West, Charles Bronson's character is named after what musical instrument?", 'answer': 'a harmonica', 'category': 'Westerns'}, {'question': 'In which movie will you find lead characters by the name of Robert LeRoy Parker and Harry Longabaugh?', 'answer': 'Butch Cassidy and the Sundance Kid', 'category': 'Westerns'}, {'question': "In 2017's Hostiles, who plays Colonel Abraham Biggs, Christian Bale's commanding officer?", 'answer': 'Stephen Lang', 'category': 'Westerns'}, {'question': 'Who directed the 2003 film Open Range?', 'answer': 'Kevin Costner', 'category': 'Westerns'}, {'question': 'Who is the star of the westerns Arrowhead, Will Penny, and Pony Express?', 'answer': 'Charlton Heston', 'category': 'Westerns'}, {'question': 'What 1956 film stars Sterling Hayden as the leader of a five-man heist at a racetrack?', 'answer': 'The Killing', 'category': 'Stanley Kubrick'}, {'question': 'Stanley Kubrick received his only Oscar for his work on 2001: A Space Odyssey. Which award did he win for that film?', 'answer': 'Best Special Visual Effects', 'category': 'Stanley Kubrick'}, {'question': 'What was the only performance in a Stanley Kubrick directed film to win an Oscar?', 'answer': 'Peter Ustinov in Spartacus', 'category': 'Stanley Kubrick'}, {'question': 'This Kubrick film starred Shelley Winters, Peter Sellers, and James Mason, all revolving around the central figure of what name?', 'answer': 'Lolita', 'category': 'Stanley Kubrick'}, {'question': 'Which actor plays Albus Dumbledore in Fantastic Beasts: The Crimes of Grindelwald?', 'answer': 'Jude Law', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2000s animated film has characters by the name of Kevin, Russell, Dug, Alpha, and Carl Fredricksen?', 'answer': 'Up', 'category': 'Animated'}, {'question': "In 1995's Casino, who plays De Niro's wife Ginger McKenna?", 'answer': 'Sharon Stone', 'category': 'Dramas'}, {'question': 'Who plays EMI executive Ray Foster in Bohemian Rhapsody?', 'answer': 'Mike Myers', 'category': 'Biopics'}, {'question': 'Who plays the sexy, but bad, Juno Skinner in True Lies?', 'answer': 'Tia Carrere', 'category': 'Action/Adventure'}, {'question': 'In Meet the Parents, what profession does Greg have that Jack and the future in-laws constantly mock him over?', 'answer': 'a nurse', 'category': 'Comedies'}, {'question': 'What spy thriller stars Ben Affleck and Morgan Freeman?', 'answer': 'The Sum of All Fears', 'category': 'Horror/Thriller'}, {'question': 'Who directed Good Will Hunting?', 'answer': 'Gus Van Sant', 'category': 'Directors'}, {'question': 'Daniel Day-Lewis "drank" your milkshake in in There Will Be Blood, which was released in what year?', 'answer': '2007', 'category': 'Release Dates'}, {'question': '10 Things I Hate About You was released in what year?', 'answer': '1999', 'category': 'Release Dates'}, {'question': 'In what year did Slumdog Millionaire come out?', 'answer': '2008', 'category': 'Release Dates'}, {'question': 'Robert Redford and Paul Newman teamed up in The Sting, which was released in what year?', 'answer': '1973', 'category': 'Release Dates'}, {'question': 'This actress won the Oscar for Best Supporting Actress at the 2018 Academy Awards.', 'answer': 'Allison Janney (for I, Tonya)', 'category': 'Oscars'}, {'question': 'What actress won an Academy Award for Best Actress for the 1954 film The Country Girl?', 'answer': 'Grace Kelly', 'category': 'Oscars'}, {'question': 'Christian Bale has won his only Academy Award for his role in what film?', 'answer': 'The Fighter', 'category': 'Oscars'}, {'question': 'What 2007 World War II era drama stars Keira Knightley, James McAvoy, and Saoirse Ronan?', 'answer': 'Atonement', 'category': 'Dramas'}, {'question': 'In what coming-of-age film does Jesse Eisenberg play a character who works at an amusement park for the summer?', 'answer': 'Adventureland', 'category': 'Coming of Age'}, {'question': 'In La La Land, who plays Bill, the owner of the restaurant who fires Sebastian for playing jazz music instead of the traditional Christmas setlist?', 'answer': 'J. K. Simmons', 'category': '2010s'}, {'question': 'Based off a Roald Dahl book, this film centers around a wonderful little girl who is a genius with a great teacher and bad parents.', 'answer': 'Matilda', 'category': 'Fantasy/Sci-Fi'}, {'question': 'This Pixar regular voiced Yeti, a.k.a. the Abominable Snowman, in Monsters, Inc..', 'answer': 'John Ratzenberger', 'category': 'Animated'}, {'question': 'Which beloved SNL performer had his final starring role in the 1998 western comedy Almost Heroes?', 'answer': 'Chris Farley', 'category': 'Comedies'}, {'question': 'While Christopher Lee played this character 9 times, Gary Oldman got his chance in 1992. Name the character.', 'answer': 'Dracula', 'category': 'Horror/Thriller'}, {'question': 'Robert Carlyle plays a Bond villain that feels no pain in which James Bond film?', 'answer': 'The World Is Not Enough', 'category': 'Action/Adventure'}, {'question': 'What 2017 dramedy follows a man who escapes life as a captive in an underground bunker and sets out to make a movie of the only TV show he has ever known?', 'answer': 'Brigsby Bear', 'category': 'N/A'}, {'question': "In 2014's The Railway Man, who stars as a former British soldier tortured by the memory of his time as a Japanese prisoner of war during World War II?", 'answer': 'Colin Firth', 'category': 'Nicole Kidman'}, {'question': 'Who directed Colin Farrell, Nicole Kidman, and Kirsten Dunst in the remake of The Beguiled?', 'answer': 'Sofia Coppola', 'category': 'Nicole Kidman'}, {'question': "Who plays India, the daughter of Kidman's character, in 2013's Stoker?", 'answer': 'Mia Wasikowska', 'category': 'Nicole Kidman'}, {'question': 'Who directed Kidman in the 2004 remake of The Stepford Wives?', 'answer': 'Frank Oz', 'category': 'Nicole Kidman'}, {'question': 'Robert Zemeckis made his directorial debut on what feature-length 1978 film?', 'answer': 'I Wanna Hold Your Hand', 'category': 'Directors'}, {'question': 'Robert Altman directed what 2000s film about a group of pretentious rich and famous coming together at a hunting resort only to become suspects when a murder occurs?', 'answer': 'Gosford Park', 'category': 'Directors'}, {'question': 'Ava DuVernay made her feature film directorial debut with this 2011 independent film, which she also wrote and produced.', 'answer': 'I Will Follow', 'category': 'Directors'}, {'question': "Who directed and appeared in 1993's Rookie of the Year?", 'answer': 'Daniel Stern', 'category': 'Directors'}, {'question': 'After being in London, An American Werewolf went where in the sequel?', 'answer': 'Paris', 'category': '1990s'}, {'question': "What MCU actor stars as a man trying to save a kidnapped woman after receiving a random phone call in 2004's Cellular?", 'answer': 'Chris Evans', 'category': 'Action/Adventure'}, {'question': "Who directed 2016's Hunt for the Wilderpeople?", 'answer': 'Taika Waititi', 'category': 'Directors'}, {'question': "Who plays Constantine's cab driver and apprentice Chas Kramer?", 'answer': 'Shia LaBeouf', 'category': 'Comic Book'}, {'question': 'Who directed The Spectacular Now?', 'answer': 'James Ponsoldt', 'category': 'Coming of Age'}, {'question': 'Which film, released in the year 2000, stars Chow Yun-fat and Michelle Yeoh?', 'answer': 'Crouching Tiger, Hidden Dragon', 'category': 'Action/Adventure'}, {'question': 'Jamie Lee Curtis has appeared in how many films in the Halloween franchise (as of May 2019)?', 'answer': "5 (1978's Halloween, 1981's Halloween II, H20: 20 Years Later, Resurrection, 2018's Halloween)", 'category': 'Horror/Thriller'}, {'question': 'Name one of the two main stars of the 2001 film Hardball, about Little League baseball.', 'answer': 'Diane Lane, Keanu Reeves', 'category': 'Dramas'}, {'question': 'Anne Hathaway voiced a bird by the name of Jewel in what 2011 animated film?', 'answer': 'Rio', 'category': 'Animated'}, {'question': 'Clint Eastwood received a Best Director nomination for what 2006 war film?', 'answer': 'Letters from Iwo Jima', 'category': 'Oscars'}, {'question': "1985's Spies Like Us starred Chevy Chase and which other Saturday Night Live alum?", 'answer': 'Dan Aykroyd', 'category': 'Comedies'}, {'question': "In 1986's Short Circuit, who played Stephanie Speck, the woman who befriends Johnny 5?", 'answer': 'Ally Sheedy', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actress co-stars as a character named Detroit in Sorry to Bother You?', 'answer': 'Tessa Thompson', 'category': 'New Releases'}, {'question': 'Who was the star of the westerns Big Jake, Chisum, and Cahill U.S. Marshal?', 'answer': 'John Wayne', 'category': 'Mixed Bag'}, {'question': 'Name the 1950s movie with characters like Edie Doyle, Johnny Friendly, Father Barry, and Charley Malloy.', 'answer': 'On the Waterfront', 'category': 'Mixed Bag'}, {'question': 'In what 80s teen drama will you find some teenagers playing chicken on a couple of tractors?', 'answer': 'Footloose', 'category': 'Mixed Bag'}, {'question': "In 1997's Starship Troopers, who plays the psychically gifted Col. Carl Jenkins, who leads the Military Intelligence effort against the bugs?", 'answer': 'Neil Patrick Harris', 'category': 'Mixed Bag'}, {'question': 'In Finding Neverland, who plays theatre producer Charles Frohman?', 'answer': 'Dustin Hoffman', 'category': 'Mixed Bag'}, {'question': 'What year saw the release of Speed, starring Keanu Reeves?', 'answer': '1994', 'category': 'Mixed Bag'}, {'question': 'In A Beautiful Mind, what Ivy League school did John Nash attend?', 'answer': 'Princeton University', 'category': 'Ron Howard'}, {'question': "Who plays Mel Gibson's wife in the Ron Howard crime thriller Ransom?", 'answer': 'Rene Russo', 'category': 'Ron Howard'}, {'question': 'A young Irish couple flees to the states, but subsequently struggles to obtain land and prosper freely, in which Ron Howard film?', 'answer': 'Far and Away', 'category': 'Ron Howard'}, {'question': 'In the Heart of the Sea author Herman Melville is played by which actor?', 'answer': 'Ben Whishaw', 'category': 'Ron Howard'}, {'question': "Who plays Russell Crowe's wife Mae in Cinderella Man?", 'answer': 'Renée Zellweger', 'category': 'Ron Howard'}, {'question': "In Ron Howard's How the Grinch Stole Christmas, who played Martha May Whovier, the woman the Grinch was in love with?", 'answer': 'Christine Baranski', 'category': 'Ron Howard'}, {'question': "What does Julia Roberts' character teach in Larry Crowne?", 'answer': 'speech', 'category': 'Julia Roberts'}, {'question': 'What drama stars Ron Rifkin, Guy Pearce, Danny DeVito, Russell Crowe, James Cromwell, and Kim Basinger?', 'answer': 'L.A. Confidential', 'category': 'N/A'}, {'question': 'In Clue, who plays Wadsworth the butler?', 'answer': 'Tim Curry', 'category': 'N/A'}, {'question': 'Who plays Ruth Bader Ginsburg in On the Basis of Sex?', 'answer': 'Felicity Jones', 'category': 'N/A'}, {'question': 'Who plays Jackie Robinson in 42?', 'answer': 'Chadwick Boseman', 'category': 'N/A'}, {'question': 'Who directed The Adventures of Tintin?', 'answer': 'Steven Spielberg', 'category': 'N/A'}, {'question': "What is the name of Aladdin's monkey friend?", 'answer': 'Abu', 'category': 'Disney'}, {'question': 'In La La Land, what classic film do Sebastian and Mia see together?', 'answer': 'Rebel Without a Cause', 'category': 'Musicals'}, {'question': 'What kind of bar were Alex and his three droogs sitting in at the beginning of A Clockwork Orange?', 'answer': 'a milk bar', 'category': '1970s'}, {'question': 'Who directed Safety Not Guaranteed?', 'answer': 'Colin Trevorrow', 'category': 'Romance'}, {'question': 'In Dallas Buyers Club, what actress plays Dr. Eve Saks, who attempts to help Ron with his diagnosis?', 'answer': 'Jennifer Garner', 'category': 'Dramas'}, {'question': "What two actors voice the con artists Tulio and Miguel in DreamWorks' The Road to El Dorado?", 'answer': 'Kevin Kline, Kenneth Branagh', 'category': 'Animated'}, {'question': "Name two of the three actresses who were the Angels from 2000's Charlie's Angels.", 'answer': 'Cameron Diaz, Drew Barrymore, Lucy Liu', 'category': 'Action/Adventure'}, {'question': 'This 2011 Nicolas Winding Refn film starred Ryan Gosling as a Hollywood stuntman.', 'answer': 'Drive', 'category': 'Crime'}, {'question': "Which actress plays an ambitious young woman named Natalie in 2009's Up in the Air?", 'answer': 'Anna Kendrick', 'category': 'Dramas'}, {'question': 'The 2015 film Home features which famous singer voicing the human character Tip?', 'answer': 'Rihanna', 'category': 'Animated'}, {'question': 'Which fantasy franchise features the characters Mr. Tumnus, Fenris Ulf, and Trumpkin the dwarf?', 'answer': 'The Chronicles of Narnia', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays Chaka King, the director of the Bluntman and Chronic film, in Jay and Silent Bob Strike Back?', 'answer': 'Chris Rock', 'category': 'Comedies'}, {'question': 'Adapted from a Stephen King novel, what film takes place in the fictional town of Derry, Maine?', 'answer': 'It', 'category': 'Horror/Thriller'}, {'question': 'In Fighting with My Family, what actor, often seen in comedic roles, plays WWE trainer Hutch Morgan, who was in charge of selecting candidates?', 'answer': 'Vince Vaughn', 'category': 'New Releases'}, {'question': 'In Jersey Girl, the family decides to do a song from Sweeney Todd for the talent show, while everyone else does a song from what musical?', 'answer': 'Cats', 'category': 'Kevin Smith'}, {'question': 'Which actor plays an eccentric detective named Guy LaPointe in Tusk and Yoga Hosers?', 'answer': 'Johnny Depp', 'category': 'Kevin Smith'}, {'question': 'Who has a cameo as a hippie named Brent, who Jay throws out of a van, in Jay and Silent Bob Strike Back?', 'answer': 'Seann William Scott', 'category': 'Kevin Smith'}, {'question': 'What type of food does Veronica bring to Dante for lunch in Clerks?', 'answer': 'lasagna', 'category': 'Kevin Smith'}, {'question': 'In which film is Silent Bob asked for advice, and he responds with "I got nothing."?', 'answer': 'Clerks II', 'category': 'Kevin Smith'}, {'question': 'Who plays the demon Azrael in Dogma?', 'answer': 'Jason Lee', 'category': 'Kevin Smith'}, {'question': 'Who was the star of the spoof movies Love at First Bite and Zorro, The Gay Blade?', 'answer': 'George Hamilton', 'category': 'Comedies'}, {'question': "In Ferris Bueller's Day Off, what is the name of the sausage king of Chicago?", 'answer': 'Abe Froman', 'category': 'Comedies'}, {'question': 'Which actress played pitcher Kit Keller in A League of Their Own?', 'answer': 'Lori Petty', 'category': 'Comedies'}, {'question': "What former James Bond actor played Happy Gilmore's former boss Mr. Larson?", 'answer': 'Richard Kiel', 'category': 'Comedies'}, {'question': 'What 90s film has Jack Lemmon and Walter Matthau pose as dance hosts in order to get on an all-expenses paid cruise?', 'answer': 'Out to Sea', 'category': 'Comedies'}, {'question': 'Which Python plays King Arthur in Monty Python and the Holy Grail?', 'answer': 'Graham Chapman', 'category': 'Comedies'}, {'question': 'Cate Blanchett starred as the witch Florence Zimmerman, opposite Jack Black, in this 2018 film.', 'answer': 'The House with a Clock in Its Walls', 'category': 'Cate Blanchett'}, {'question': "What is the first and last name of Samuel L. Jackson's character in Quentin Tarantino's Pulp Fiction?", 'answer': 'Jules Winnfield', 'category': 'Quentin Tarantino'}, {'question': "In Mission: Impossible – Fallout, who plays Julia's second husband who is working with her at the medical camp at the end of the film?", 'answer': 'Wes Bentley', 'category': 'Spy'}, {'question': 'Which pop music star provides the voice of young King Arthur in Shrek the Third?', 'answer': 'Justin Timberlake', 'category': 'Animated'}, {'question': 'Who played show host Caesar Flickerman in The Hunger Games?', 'answer': 'Stanley Tucci', 'category': 'Action/Adventure'}, {'question': "Which actor stars as the title character in 2011's Conan the Barbarian?", 'answer': 'Jason Momoa', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What film released in 2013 won Best Picture at the Academy Awards?', 'answer': '12 Years a Slave', 'category': 'Oscars'}, {'question': 'In Misery, author Paul Sheldon writes books about a character named Misery. What genre of book are they?', 'answer': 'romance', 'category': 'Horror/Thriller'}, {'question': 'In what comedy does Michael Keaton play a character that clones himself?', 'answer': 'Multiplicity', 'category': 'Comedies'}, {'question': 'What 2012 rom-com stars Jason Segel and Emily Blunt as a couple struggling to get married?', 'answer': 'The Five-Year Engagement', 'category': 'Rom-Coms'}, {'question': "In Charlie Wilson's War, what Oscar-winning actor portrays maverick CIA operative Gust Avrakotos?", 'answer': 'Philip Seymour Hoffman', 'category': 'Dramas'}, {'question': 'In Widows, who plays crime boss and politician Jamal Manning?', 'answer': 'Brian Tyree Henry', 'category': 'New Releases'}, {'question': 'In Teen Titans Go! To the Movies, what singer voices Tiger and sings the song "Upbeat Inspirational Song About Life"?', 'answer': 'Michael Bolton', 'category': 'New Releases'}, {'question': 'What stand-up comedian plays a single woman that wants to adopt an athlete in Instant Family?', 'answer': 'Iliza Shlesinger', 'category': 'New Releases'}, {'question': 'What is the name of the demon who prefers to inhabit the bodies of vulnerable males in Hereditary?', 'answer': 'Paimon', 'category': 'New Releases'}, {'question': 'What live-action/animated mix family comedy stars Bill Murray as Frank and Chris Rock as the voice of a white blood cell?', 'answer': 'Osmosis Jones', 'category': 'Family'}, {'question': 'What comedic actor played the Martian in the 1999 family film remake My Favorite Martian?', 'answer': 'Christopher Lloyd', 'category': 'Family'}, {'question': 'Paul Walker stars in what 1998 comedy about two surfer dudes who end up as Yellowstone park rangers?', 'answer': 'Meet the Deedles', 'category': 'Family'}, {'question': 'What actor plays veteran pitcher Chet Steadman in Rookie of the Year?', 'answer': 'Gary Busey', 'category': 'Family'}, {'question': 'Who played the character that simply went by the name Blondie in The Good, the Bad and the Ugly?', 'answer': 'Clint Eastwood', 'category': 'Westerns'}, {'question': 'Salma Hayek dances to the song "After Dark" in what 90s movie?', 'answer': 'From Dusk till Dawn', 'category': 'Scores & Soundtracks'}, {'question': 'Who directed Melissa McCarthy in Spy?', 'answer': 'Paul Feig', 'category': 'Spy'}, {'question': "Who plays farmer Jed Clampett, who becomes rich after discovering oil, in 1993's The Beverly Hillbillies?", 'answer': 'Jim Varney', 'category': 'Comedies'}, {'question': "In Bad Times at the El Royale, who plays Father Flynn's criminal partner and brother Felix O'Kelly?", 'answer': 'Nick Offerman', 'category': 'New Releases'}, {'question': 'What singer plays Aunty Entity in Mad Max Beyond Thunderdome?', 'answer': 'Tina Turner', 'category': 'Action/Adventure'}, {'question': 'In what 2012 baseball film does Clint Eastwood play a baseball scout alongside Amy Adams and Justin Timberlake?', 'answer': 'Trouble with the Curve', 'category': 'Dramas'}, {'question': "What actor plays Furious Styles, father of Cuba Gooding Jr.'s character, in Boyz n the Hood?", 'answer': 'Laurence Fishburne', 'category': '1990s'}, {'question': "Tony Goldwyn, Minnie Driver, Glenn Close, Lance Henriksen, and Rosie O'Donnell all lend their voices for what 90s animated film?", 'answer': 'Tarzan', 'category': 'Animated'}, {'question': 'What is the name of the android in Aliens?', 'answer': 'Bishop', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Natalie Portman starred opposite Ashton Kutcher in what 2011 romantic comedy?', 'answer': 'No Strings Attached', 'category': 'Comedies'}, {'question': "Which actress stars as a young mother who may be carrying the Devil's child in Rosemary's Baby?", 'answer': 'Mia Farrow', 'category': 'Horror/Thriller'}, {'question': "What actress voices Watevra Wa'Nabi in The Lego Movie 2: The Second Part?", 'answer': 'Tiffany Haddish', 'category': 'New Releases'}, {'question': "Which Oscar-winning actor plays a young man named Marius, a student revolutionary, in 2012's Les Misérables?", 'answer': 'Eddie Redmayne', 'category': 'N/A'}, {'question': 'Kurt Russell stars as a motorist whose wife is kidnapped in which 90s thriller?', 'answer': 'Breakdown', 'category': 'Thriller'}, {'question': 'Which actor plays the character of Leo Barnes in both The Purge: Anarchy and The Purge: Election Year?', 'answer': 'Frank Grillo', 'category': 'Thriller'}, {'question': "In the 2010 film Buried, how much is the initial ransom that the terrorists demand before they'll free Paul?", 'answer': '5 million dollars', 'category': 'Thriller'}, {'question': "Who plays David Dunn's wife Audrey in the 2000 superhero thriller Unbreakable?", 'answer': 'Robin Wright', 'category': 'Thriller'}, {'question': 'This movie takes place in San Jose, California and is completely told through computer and cell phone screens.', 'answer': 'Searching', 'category': 'New Releases'}, {'question': 'In Mary Poppins Returns, who plays Michael Banks?', 'answer': 'Ben Whishaw', 'category': 'New Releases'}, {'question': "Who directed 2018's Mary Queen of Scots?", 'answer': 'Josie Rourke', 'category': 'New Releases'}, {'question': 'In Overlord, the science lab is located beneath what kind of building?', 'answer': 'a church', 'category': 'New Releases'}, {'question': 'Adam Sandler stars as a comedian who is dying of cancer in what film?', 'answer': 'Funny People', 'category': 'Judd Apatow'}, {'question': 'Jake Gyllenhaal stars as a man obsessed with catching a killer terrorizing San Francisco in what 2007 film directed by David Fincher?', 'answer': 'Zodiac', 'category': 'Crime'}, {'question': 'Matthew McConaughey and Kate Hudson co-starred in what two romantic comedies?', 'answer': "How to Lose a Guy in 10 Days, Fool's Gold", 'category': 'Matthew McConaughey'}, {'question': "In One Flew Over the Cuckoo's Nest, McMurphy tries to get his fellow patients to vote for the chance to watch what special sporting event on television?", 'answer': 'the World Series', 'category': '1970s'}, {'question': 'Who wrote and directed the 1954 romantic classic Sabrina?', 'answer': 'Billy Wilder', 'category': 'Romance'}, {'question': 'What 1984 film stars Henry Thomas as a young boy on the run with his imaginary friend after he intercepts spy secrets hidden inside a video game?', 'answer': 'Cloak & Dagger', 'category': 'Spy'}, {'question': 'Who plays Charlie in Bumblebee?', 'answer': 'Hailee Steinfeld', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Simon West directed Jason Statham in what 2011 film also starring Ben Foster?', 'answer': 'The Mechanic', 'category': 'Action/Adventure'}, {'question': 'What early 90s pop group appears at the end of Bridesmaids?', 'answer': 'Wilson Phillips', 'category': 'Comedies'}, {'question': 'Which actress stars as a surfer named Nancy in the shark-themed thriller The Shallows?', 'answer': 'Blake Lively', 'category': 'Horror/Thriller'}, {'question': 'Who directed the film Fantastic Beasts: The Crimes of Grindelwald?', 'answer': 'David Yates', 'category': 'New Releases'}, {'question': "Who plays the daughter of Ryan Reynolds' character in Definitely, Maybe?", 'answer': 'Abigail Breslin', 'category': 'Rom-Coms'}, {'question': 'Who plays the character of Tre Styles in Boyz n the Hood?', 'answer': 'Cuba Gooding Jr.', 'category': 'Dramas'}, {'question': 'In what year was Home Alone 2: Lost in New York released?', 'answer': '1992', 'category': 'Release Dates'}, {'question': 'In the movie The Way of the Dragon (also referred to as Return of the Dragon), Bruce Lee fought Chuck Norris at which historical monument?', 'answer': 'the Colosseum', 'category': '1970s'}, {'question': 'Who directed Network?', 'answer': 'Sidney Lumet', 'category': '1970s'}, {'question': 'Who played Jane in the 1977 version of Fun with Dick and Jane?', 'answer': 'Jane Fonda', 'category': '1970s'}, {'question': 'Whose birthday is being celebrated at the end of The Godfather Part II?', 'answer': 'Vito Corleone', 'category': '1970s'}, {'question': 'What National League Central MLB team did Bernie Mac play for in Mr. 3000?', 'answer': 'the Milwaukee Brewers', 'category': 'Sports'}, {'question': 'What real-life ice skating star has a cameo in Ice Princess?', 'answer': 'Michelle Kwan', 'category': 'Sports'}, {'question': 'What is the name of the country club in Caddyshack?', 'answer': 'Bushwood Country Club', 'category': 'Sports'}, {'question': "Who played the title role in 1979's boxing drama The Champ?", 'answer': 'Jon Voight', 'category': 'Sports'}, {'question': 'Who directed the 2018 crime thriller The Mule?', 'answer': 'Clint Eastwood', 'category': 'Thriller'}, {'question': 'Who co-starred with Julia Roberts in I Love Trouble?', 'answer': 'Nick Nolte', 'category': 'Julia Roberts'}, {'question': 'A young Matthew McConaughey plays an MLB outfielder in what sports film?', 'answer': 'Angels in the Outfield', 'category': 'Matthew McConaughey'}, {'question': 'Who plays Gracie Law in Big Trouble in Little China?', 'answer': 'Kim Cattrall', 'category': 'Action/Adventure'}, {'question': "Who provides the voice for Beatrix Potter's classic literary character Peter Rabbit in 2018's Peter Rabbit?", 'answer': 'James Corden', 'category': 'Family'}, {'question': "Which actress received a Best Lead Actress Oscar nomination for 1988's Dangerous Liaisons?", 'answer': 'Glenn Close', 'category': 'Dramas'}, {'question': 'What year saw the release of Back to the Future Part II?', 'answer': '1989', 'category': 'Release Dates'}, {'question': "Who directed 2016's Warcraft?", 'answer': 'Duncan Jones', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Adam Sandler and Jennifer Aniston star in this 2011 comedy.', 'answer': 'Just Go with It', 'category': 'Comedies'}, {'question': 'What is the title of the 2007 prequel that tells the story of a young Hannibal Lecter?', 'answer': 'Hannibal Rising', 'category': 'Horror/Thriller'}, {'question': 'You can find the characters of Yzma, Kronk, Pacha, and Kuzco in this animated Disney film.', 'answer': "The Emperor's New Groove", 'category': 'Animated'}, {'question': 'Which Game of Thrones actor played Friar Tuck in the Russell Crowe film Robin Hood?', 'answer': 'Mark Addy', 'category': 'Ridley Scott'}, {'question': "In Gladiator, what animals are embossed on Maximus' chestplate armor?", 'answer': 'horses', 'category': 'Ridley Scott'}, {'question': "In Prometheus, what are the large pale aliens that are thought to be humanity's forerunners called?", 'answer': 'Engineers', 'category': 'Ridley Scott'}, {'question': 'In Blade Runner, what is the lifespan in years of the replicants that Deckard is chasing?', 'answer': '4 years', 'category': 'Ridley Scott'}, {'question': "Who played Frankenstein's monster in 1931's Frankenstein?", 'answer': 'Boris Karloff', 'category': 'Monster'}, {'question': "Who played Count Dracula in the 1992 gothic horror film Bram Stoker's Dracula?", 'answer': 'Gary Oldman', 'category': 'Monster'}, {'question': "In 2013's Warm Bodies, who plays Julie's father and leader of the human survivors, Colonel Grigio?", 'answer': 'John Malkovich', 'category': 'Monster'}, {'question': 'Excluding Godzilla himself, what monster has made the most appearances on film in the Godzilla universe?', 'answer': 'Mothra (in Godzilla vs. the Thing; Ghidrah, the Three-Headed Monster; Destroy All Monsters; Godzilla: King of the Monsters)', 'category': 'Monster'}, {'question': "In The Godfather, which of Don Corleone's children is the oldest?", 'answer': 'Sonny Corleone', 'category': 'Crime'}, {'question': 'In which movie musical does Gene Kelly play actor Don Lockwood, whose career turns upside down with the invention of talkies?', 'answer': "Singin' in the Rain", 'category': 'Musicals'}, {'question': 'John Williams won Best Music, Scoring Adaptation and Original Song Score in 1971 for what film?', 'answer': 'Fiddler on the Roof', 'category': 'Scores & Soundtracks'}, {'question': "Who plays John Connor in 2009's Terminator Salvation?", 'answer': 'Christian Bale', 'category': 'Action/Adventure'}, {'question': "Name either the female lead or the male lead in the 2019 romantic comedy Isn't It Romantic.", 'answer': 'Liam Hemsworth, Rebel Wilson', 'category': 'New Releases'}, {'question': "Tom Cruise's character says his final goodbye to which dying family member in the film Magnolia?", 'answer': 'his father', 'category': 'Dramas'}, {'question': 'The films Basic Instinct, The Crying Game, and Alien 3 all came out in what year?', 'answer': '1992', 'category': 'Release Dates'}, {'question': "Which actor from TV's Friends played Major Don West in 1998's Lost in Space?", 'answer': 'Matt LeBlanc', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In The Hangover, the protagonists find a tiger in their hotel room which belonged to whom?', 'answer': 'Mike Tyson', 'category': 'Comedies'}, {'question': "Who stars as Johnny Smith, a man who awakens from a coma to find he has psychic abilities, in David Cronenberg's The Dead Zone?", 'answer': 'Christopher Walken', 'category': 'Horror/Thriller'}, {'question': 'What animated film has main characters by the names of Esmeralda, Phoebus, Frollo, Victor, Hugo, and Laverne?', 'answer': 'The Hunchback of Notre Dame', 'category': 'Animated'}, {'question': 'In what 2008 film was Angelina Jolie directed by Clint Eastwood?', 'answer': 'Changeling', 'category': 'N/A'}, {'question': 'The Beautician and the Beast stars these two actors as the romantic leads.', 'answer': 'Fran Drescher, Timothy Dalton', 'category': 'Rom-Coms'}, {'question': 'In Notting Hill, Will claims his wife left him for a man who looks like which Hollywood heavyweight actor?', 'answer': 'Harrison Ford', 'category': 'Rom-Coms'}, {'question': "Who starred as Joan Wilder in Robert Zemeckis' Romancing the Stone?", 'answer': 'Kathleen Turner', 'category': 'Rom-Coms'}, {'question': 'Who directed Russell Crowe in the 2003 historical epic Master and Commander: The Far Side of the World?', 'answer': 'Peter Weir', 'category': 'Action/Adventure'}, {'question': 'Who played the Dragon Emperor in The Mummy: Tomb of the Dragon Emperor?', 'answer': 'Jet Li', 'category': 'Action/Adventure'}, {'question': 'In Con Air, who plays convict Nathan "Diamond Dog" Jones?', 'answer': 'Ving Rhames', 'category': 'Action/Adventure'}, {'question': "In Gremlins, what is the name of the struggling inventor who purchases a Mogwai for his son's Christmas present?", 'answer': 'Randall Peltzer', 'category': '1980s'}, {'question': 'Who directed the 1989 film Heathers?', 'answer': 'Michael Lehmann', 'category': '1980s'}, {'question': 'In Back to the Future, what was the first thing Marty tried to order to drink at the diner in 1955?', 'answer': 'Tab', 'category': '1980s'}, {'question': 'In Spider-Man: Homecoming, when the Chitauri grenade explodes, what famous D.C. landmark does Peter have to save his friends from?', 'answer': 'the Washington Monument', 'category': 'MCU'}, {'question': 'What actress played Vanity Fair reporter Christine Everhart in Iron Man and Iron Man 2?', 'answer': 'Leslie Bibb', 'category': 'MCU'}, {'question': 'On what planet did Star-Lord obtain the orb before he is attacked by Korath in Guardians of the Galaxy?', 'answer': 'Morag', 'category': 'MCU'}, {'question': "Prior to 2018's Ready Player One, John Williams provided the score for all of Spielberg's films except for two of them. The Color Purple and which other?", 'answer': 'Bridge of Spies', 'category': 'Steven Spielberg'}, {'question': 'Jack and Maggie are the names of a couple of kids in what Spielberg movie?', 'answer': 'Hook', 'category': 'Steven Spielberg'}, {'question': "Who plays Secretary of Defense Robert McNamara in Spielberg's The Post?", 'answer': 'Bruce Greenwood', 'category': 'Steven Spielberg'}, {'question': "In Blockers, who plays Kayla's overprotective and sports-obsessed father Mitchell Mannes?", 'answer': 'John Cena', 'category': 'Comedies'}, {'question': 'What actress does Adam Sandler need to convince to fall in love with him everyday in 50 First Dates?', 'answer': 'Drew Barrymore', 'category': 'Romance'}, {'question': "In Disney's Bambi, what type of animal is Flower?", 'answer': 'a skunk', 'category': 'Disney'}, {'question': 'Who starred as James Halliday, the deceased co-creator of the OASIS in Ready Player One?', 'answer': 'Mark Rylance', 'category': 'Steven Spielberg'}, {'question': "Who plays Tom Cruise's co-counsel Lieutenant Commander JoAnne Galloway in A Few Good Men?", 'answer': 'Demi Moore', 'category': 'Tom Cruise'}, {'question': 'Cate Blanchett plays the character of Lady Tremaine in this 2010s film.', 'answer': 'Cinderella (2015)', 'category': 'Cate Blanchett'}, {'question': 'Who plays the avatar Ruby Roundhouse in Jumanji: Welcome to the Jungle?', 'answer': 'Karen Gillan', 'category': 'Action/Adventure'}, {'question': "What 2007 crime film was legendary director Sidney Lumet's final directorial feature?", 'answer': "Before the Devil Knows You're Dead", 'category': 'Directors'}, {'question': 'What Top Gun actor stars alongside Warwick Davis as Madmartigan in Willow?', 'answer': 'Val Kilmer', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Michael Keaton plays Hunt Stevenson, who works for a large car manufacturer, in this 1986 comedy.', 'answer': 'Gung Ho', 'category': '1980s'}, {'question': 'In The Sound of Music, Maria makes playclothes for herself and the Von Trapp children out of what?', 'answer': 'her bedroom drapes', 'category': 'Musicals'}, {'question': 'Tom Hanks plays six characters in what drama?', 'answer': 'Cloud Atlas', 'category': 'Tom Hanks'}, {'question': 'Name three of the four lead actresses in the film Book Club.', 'answer': 'Candice Bergen, Diane Keaton, Jane Fonda, Mary Steenburgen', 'category': 'New Releases'}, {'question': 'Who plays John Belushi in the 1989 biopic Wired, making his film debut?', 'answer': 'Michael Chiklis', 'category': 'Biopics'}, {'question': 'Who directed Leonardo DiCaprio in The Man in the Iron Mask?', 'answer': 'Randall Wallace', 'category': 'Leonardo DiCaprio'}, {'question': 'Which film in the Fast and Furious franchise introduced Agent Luke Hobbs, as played by Dwayne Johnson?', 'answer': 'Fast Five', 'category': 'Action/Adventure'}, {'question': 'Who directed the 2018 film A Simple Favor?', 'answer': 'Paul Feig', 'category': 'Directors'}, {'question': "Who played British lieutenant T. E. Lawrence in David Lean's Lawrence of Arabia?", 'answer': "Peter O'Toole", 'category': 'Dramas'}, {'question': 'What does Captain Marvel crash into while arriving on Earth after escaping the Skrulls?', 'answer': 'a Blockbuster Video store', 'category': 'Comic Book'}, {'question': 'What 2016 fantasy film takes place in Azeroth, a realm of humans and orcs?', 'answer': 'Warcraft', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor, who played a Star Trek ship captain, narrated the 2012 comedy Ted?', 'answer': 'Patrick Stewart', 'category': 'Comedies'}, {'question': 'Nathan Fillion and Elizabeth Banks take on an alien parasite in what 2006 film directed by James Gunn?', 'answer': 'Slither', 'category': 'Horror/Thriller'}, {'question': 'What is the name of the leader of the sharks that brings Marlin and Dory to the Fish are Friends, Not Food meeting in Finding Nemo?', 'answer': 'Bruce', 'category': 'Animated'}, {'question': "In Sorry to Bother You, who plays Cash's uncle Sergio Green?", 'answer': 'Terry Crews', 'category': 'Comedies'}, {'question': "What comedy duo play the wedding crasher duo of Jeremy and John in 2005's Wedding Crashers?", 'answer': 'Vince Vaughn, Owen Wilson', 'category': 'Comedies'}, {'question': "Who plays Martin Lawrence's undercover partner John in 2000's Big Momma's House?", 'answer': 'Paul Giamatti', 'category': 'Comedies'}, {'question': 'How many malevolent Heather characters were there in the black comedy Heathers?', 'answer': '3 Heather characters', 'category': 'Comedies'}, {'question': 'What 1980s Disney animated film stars the voice talents of Kurt Russell and Mickey Rooney?', 'answer': 'The Fox and the Hound', 'category': 'Kurt Russell'}, {'question': 'Kurt Russell starred with Mel Gibson and Michelle Pfeiffer in what 1988 crime thriller?', 'answer': 'Tequila Sunrise', 'category': 'Kurt Russell'}, {'question': 'What was the name of the boat in Captain Ron?', 'answer': 'the Wanderer', 'category': 'Kurt Russell'}, {'question': 'In what western does Kurt Russell play Sheriff Franklin Hunt?', 'answer': 'Bone Tomahawk', 'category': 'Kurt Russell'}, {'question': "In West Side Story, Maria's brother Bernardo is the leader of which gang?", 'answer': 'the Sharks', 'category': 'Musicals'}, {'question': 'In Heat, name the actor who is gunned down in the street by Al Pacino after trying to use a little girl as a human shield.', 'answer': 'Tom Sizemore', 'category': 'Crime'}, {'question': "Which Parks and Rec alumnus voices Donna Lou Who, Cindy's overworked single mother, in 2018's The Grinch?", 'answer': 'Rashida Jones', 'category': 'New Releases'}, {'question': 'Richard Kelly directed Jake Gyllenhaal in what 2000s thriller?', 'answer': 'Donnie Darko', 'category': '2000s'}, {'question': 'In Kingsman: The Golden Circle, who plays the head of the Statesman, Champagne a.k.a. Champ?', 'answer': 'Jeff Bridges', 'category': 'Action/Adventure'}, {'question': 'John C. Reilly and Kevin Bacon star as bank robbing villains that take Meryl Streep and her family hostage in which Curtis Hanson film?', 'answer': 'The River Wild', 'category': 'Crime'}, {'question': "In 1993's In the Name of the Father, who stars as young Irishman Gerry Conlon?", 'answer': 'Daniel Day-Lewis', 'category': 'Dramas'}, {'question': 'Who does Rocky fight in the climactic boxing match in Rocky II?', 'answer': 'Apollo Creed', 'category': 'Sports'}, {'question': 'In what 2018 sci-fi film can the protagonist be found on a mission to acquire three keys to unlock the gate to the Golden Egg?', 'answer': 'Ready Player One', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name the 2003 action comedy in which Harrison Ford and Josh Hartnett play LAPD detectives who investigate the murder of a rap group.', 'answer': 'Hollywood Homicide', 'category': 'Comedies'}, {'question': 'Elsa Lanchester played the title character in which classic horror sequel?', 'answer': 'Bride of Frankenstein', 'category': 'Horror/Thriller'}, {'question': 'Who voices the main character, the lion Alex, in the Madagascar franchise?', 'answer': 'Ben Stiller', 'category': 'Animated'}, {'question': 'DiCaprio played Jim Carroll, who was a drugged-out teenager, in which biographical film?', 'answer': 'The Basketball Diaries', 'category': 'Leonardo DiCaprio'}, {'question': 'In Catch Me If You Can, Frank Abagnale poses as a pilot for which airline?', 'answer': 'Pan Am', 'category': 'Leonardo DiCaprio'}, {'question': "DiCaprio starred alongside this leading actress in 1995's The Quick and the Dead.", 'answer': 'Sharon Stone', 'category': 'Leonardo DiCaprio'}, {'question': "What's the name of the ambitious war movie the title character is producing at the beginning of The Aviator?", 'answer': "Hell's Angels", 'category': 'Leonardo DiCaprio'}, {'question': "Who played Leonardo DiCaprio's deceased wife in the thriller Shutter Island?", 'answer': 'Michelle Williams', 'category': 'Leonardo DiCaprio'}, {'question': 'This actress played Sal, the leader of the beach community, opposite Leonardo DiCaprio, in The Beach.', 'answer': 'Tilda Swinton', 'category': 'Leonardo DiCaprio'}, {'question': 'Robert Zemeckis directed Harrison Ford and Michelle Pfeiffer in this 2000 thriller.', 'answer': 'What Lies Beneath', 'category': 'Directors'}, {'question': 'Who directed such comedies as Superbad, Adventureland, and Paul?', 'answer': 'Greg Mottola', 'category': 'Directors'}, {'question': 'Who directed the Pixar films Monsters, Inc. and Inside Out?', 'answer': 'Pete Docter', 'category': 'Directors'}, {'question': 'Who made his directorial debut with the 1960 comedy The Bellboy?', 'answer': 'Jerry Lewis', 'category': 'Directors'}, {'question': 'Which actress was the director of the films In the Land of Blood and Honey and By the Sea?', 'answer': 'Angelina Jolie', 'category': 'Directors'}, {'question': 'Tod Williams, Henry Joost, and Christopher Landon all directed entries in this recent horror franchise.', 'answer': 'Paranormal Activity (2; 3, 4; The Marked Ones)', 'category': 'Directors'}, {'question': 'In Fast Times at Ridgemont High, who plays popular senior Brad Hamilton?', 'answer': 'Judge Reinhold', 'category': 'Mixed Bag'}, {'question': 'Who played the title character in Uncle Buck?', 'answer': 'John Candy', 'category': 'N/A'}, {'question': 'What film released in 2014 won Best Picture at the Academy Awards?', 'answer': 'Birdman or (The Unexpected Virtue of Ignorance)', 'category': 'N/A'}, {'question': 'Denzel Washington had famously never done a sequel to one of his films until which 2018 film?', 'answer': 'The Equalizer 2', 'category': 'N/A'}, {'question': "Which 2005 Steve Carell film served as Judd Apatow's directorial debut?", 'answer': 'The 40-Year-Old Virgin', 'category': 'N/A'}, {'question': 'Which Oscar-nominated coming-of-age movie was filmed over a 12-year period?', 'answer': 'Boyhood', 'category': 'N/A'}, {'question': 'What city is the main setting in the film Daylight?', 'answer': 'New York City', 'category': 'Sly & Arnie'}, {'question': 'You can find the characters of Gordie, Vern, Chris, and Teddy in what 1986 coming-of-age film?', 'answer': 'Stand by Me', 'category': '1980s'}, {'question': 'Name three of the five actors who played criminals in The Usual Suspects.', 'answer': 'Benicio del Toro, Gabriel Byrne, Kevin Pollak, Kevin Spacey, Stephen Baldwin', 'category': 'Crime'}, {'question': "Paul Dano and John Cusack portrayed which famous musician in 2015's Love & Mercy?", 'answer': 'Brian Wilson', 'category': 'Biopics'}, {'question': 'In Deadpool, what does Wade decide to do with Vanessa on their first date?', 'answer': 'play Skee-Ball', 'category': 'Comic Book'}, {'question': 'In the film Scrooged, what does arrogant TV executive Frank Cross send to most everyone on his Christmas list?', 'answer': 'monogrammed towels', 'category': 'Comedies'}, {'question': "Who plays Dillon in 1987's Predator?", 'answer': 'Carl Weathers', 'category': 'Action/Adventure'}, {'question': 'What animated film has the tagline "An unforgettable adventure she probably won\'t remember."?', 'answer': 'Finding Dory', 'category': 'Taglines'}, {'question': 'Who stars alongside Casey Affleck as Detective Angie Gennaro in Gone Baby Gone?', 'answer': 'Michelle Monaghan', 'category': 'Dramas'}, {'question': 'Who provides the voice for Mushu in Mulan?', 'answer': 'Eddie Murphy', 'category': 'Animated'}, {'question': 'Who portrays He-Man in Masters of the Universe?', 'answer': 'Dolph Lundgren', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name one of the two detectives that are assigned to follow Axel in Beverly Hills Cop.', 'answer': 'Billy Rosewood, John Taggart', 'category': 'Comedies'}, {'question': 'Teresa Palmer and Maria Bello are haunted by a shadowy figure known as Diana in what 2016 film directed by David F. Sandberg?', 'answer': 'Lights Out', 'category': 'Horror/Thriller'}, {'question': "In Call Me by Your Name, which acclaimed actor plays Elio's father?", 'answer': 'Michael Stuhlbarg', 'category': 'Dramas'}, {'question': 'Who was the lead and played both characters Susan Evers and Sharon McKendrick in the original The Parent Trap (1961)?', 'answer': 'Hayley Mills', 'category': 'Disney'}, {'question': 'In the Pirates of the Caribbean franchise, before joining a life of piracy, Will Turner was an apprentice in what profession?', 'answer': 'a blacksmith', 'category': 'Disney'}, {'question': 'In Big Hero 6, what comedic actor provides the voice for uber comic book fan and professional slacker Fred?', 'answer': 'T.J. Miller', 'category': 'Disney'}, {'question': "What is the name of Goofy's son in A Goofy Movie?", 'answer': 'Maximillan Goof', 'category': 'Disney'}, {'question': 'What is the name of the alien-hunting video game that Ralph goes into in Wreck-It Ralph?', 'answer': "Hero's Duty", 'category': 'Disney'}, {'question': 'In Mary Poppins Returns, who plays Wilkins and also voices a wolf?', 'answer': 'Colin Firth', 'category': 'Disney'}, {'question': 'In what Hanks film will you see him dealing with neighbors with the last name Klopek?', 'answer': "The 'Burbs", 'category': 'Tom Hanks'}, {'question': "Who plays the foul-mouthed, hot-headed janitor Gawain MacSam in 2004's The Ladykillers?", 'answer': 'Marlon Wayans', 'category': 'Tom Hanks'}, {'question': 'Tom Hanks plays the character of John Miller in what 90s film?', 'answer': 'Saving Private Ryan', 'category': 'Tom Hanks'}, {'question': 'Who played Bishop Aringarosa in The Da Vinci Code?', 'answer': 'Alfred Molina', 'category': 'Tom Hanks'}, {'question': 'Other than That Thing You Do!, what movie has Steve Zahn co-starred in with Tom Hanks?', 'answer': "You've Got Mail", 'category': 'Tom Hanks'}, {'question': 'Who directed Tom Hanks in The Terminal?', 'answer': 'Steven Spielberg', 'category': 'Tom Hanks'}, {'question': "Denzel Washington plays a desperate father who is trying to secure a heart for his sick son's much-needed transplant in what film?", 'answer': 'John Q.', 'category': 'Denzel Washington'}, {'question': 'Akira Kurosawa directed what film about a murder told from different points of view?', 'answer': 'Rashomon', 'category': 'Directors'}, {'question': "Who directed 2005's Zathura: A Space Adventure?", 'answer': 'Jon Favreau', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What Disney song won Best Original Song at the 1990 Academy Awards?', 'answer': 'Under the Sea (from The Little Mermaid)', 'category': 'Disney'}, {'question': 'What are the surnames of the two brothers in From Dusk till Dawn?', 'answer': 'Gecko', 'category': 'Quentin Tarantino'}, {'question': 'Who directed the 1994 adaptation of Little Women starring Winona Ryder and Claire Danes?', 'answer': 'Gillian Armstrong', 'category': '1990s'}, {'question': 'The book Shoeless Joe was turned into what baseball movie?', 'answer': 'Field of Dreams', 'category': 'N/A'}, {'question': 'What actor missed out on playing Wolverine due to his role as the villain in Mission: Impossible 2 running over schedule?', 'answer': 'Dougray Scott', 'category': 'N/A'}, {'question': "Who directed 1987's Lethal Weapon?", 'answer': 'Richard Donner', 'category': 'Action/Adventure'}, {'question': 'Harry Potter and the Goblet of Fire was released in what year?', 'answer': '2005', 'category': 'Release Dates'}, {'question': 'Who plays the real-life adventurer Aron Ralston in 127 Hours?', 'answer': 'James Franco', 'category': 'Dramas'}, {'question': 'What family film has the line "Keep the change, you filthy animal."?', 'answer': 'Home Alone', 'category': 'Quotes'}, {'question': 'Jon Turteltaub directed Nicolas Cage in what 2010 fantasy film?', 'answer': "The Sorcerer's Apprentice", 'category': 'Fantasy/Sci-Fi'}, {'question': "Who stars as Mike Peters, a struggling L.A. actor whose friends work to cure his loneliness after his long-term girlfriend dumps him, in 1996's Swingers?", 'answer': 'Jon Favreau', 'category': 'Comedies'}, {'question': 'The character Leatherface can be found in what horror franchise?', 'answer': 'Texas Chainsaw Massacre', 'category': 'Horror/Thriller'}, {'question': "In Toy Story, what is the name of Andy's next-door neighbor who tortures toys for his own amusement?", 'answer': 'Sid Phillips', 'category': 'Animated'}, {'question': 'Who portrayed Blofeld in You Only Live Twice?', 'answer': 'Donald Pleasance', 'category': 'James Bond'}, {'question': 'Bond gives Dominic Greene a can of what to drink, while stranding him in the desert in Quantum of Solace?', 'answer': 'motor oil', 'category': 'James Bond'}, {'question': 'Which actor from the X-Men franchise plays computer programmer Boris Grishenko in GoldenEye?', 'answer': 'Alan Cumming', 'category': 'James Bond'}, {'question': 'Dr. No largely takes place in what country in the Caribbean?', 'answer': 'Jamaica', 'category': 'James Bond'}, {'question': 'Tom Cruise plays an ex-Army investigator in this 2012 action film.', 'answer': 'Jack Reacher', 'category': 'Tom Cruise'}, {'question': "Who plays pilot and disavowed agent Franz Krieger, whom Tom Cruise recruits in 1996's Mission: Impossible?", 'answer': 'Jean Reno', 'category': 'Tom Cruise'}, {'question': "What oil brand serves as the sponsor on Randy Burns' (Michael Rooker's) car in the 1990 film Days of Thunder?", 'answer': 'Exxon', 'category': 'Tom Cruise'}, {'question': 'Tom Cruise plays a fast-talking car dealer in this 1980s drama.', 'answer': 'Rain Man', 'category': 'Tom Cruise'}, {'question': 'Who plays Lt. Aldo Raine, the leader of the Inglourious Basterds, in Inglourious Basterds?', 'answer': 'Brad Pitt', 'category': 'Quentin Tarantino'}, {'question': "Who stars as Tom Cruise's high school girlfriend Lisa in 1983's All the Right Moves?", 'answer': 'Lea Thompson', 'category': 'Tom Cruise'}, {'question': 'In Donnie Darko, what two-word phrase does Ms. Pomeroy tell Donnie is the most beautiful combination of words in the English language and turns out to be a key to the time paradox?', 'answer': 'cellar door', 'category': 'Drew Barrymore'}, {'question': "What is the full name of Kurt Russell's character in Escape from New York?", 'answer': 'S.D. Bob "Snake" Plissken', 'category': 'Action/Adventure'}, {'question': 'Who plays Lady Sarah in The Favourite?', 'answer': 'Rachel Weisz', 'category': 'New Releases'}, {'question': 'Who played Texas Ranger Marcus Hamilton in Hell or High Water?', 'answer': 'Jeff Bridges', 'category': 'Dramas'}, {'question': 'What is the name of the sequel to Fantasia?', 'answer': 'Fantasia 2000', 'category': 'Animated'}, {'question': "Who directed 1987's RoboCop?", 'answer': 'Paul Verhoeven', 'category': 'Fantasy/Sci-Fi'}, {'question': "What was Reese Witherspoon's character's name in Legally Blonde?", 'answer': 'Elle Woods', 'category': 'Comedies'}, {'question': 'Richard Kelly directed Jake Gyllenhaal in what 2000s thriller?', 'answer': 'Donnie Darko', 'category': 'Horror/Thriller'}, {'question': 'What is the title of the 1979 sequel to American Graffiti?', 'answer': 'More American Graffiti', 'category': 'Coming of Age'}, {'question': 'Who plays Cinderella in the movie Into the Woods?', 'answer': 'Anna Kendrick', 'category': 'N/A'}, {'question': 'Who played Biff in Back to the Future?', 'answer': 'Thomas F. Wilson', 'category': 'Modern Classics'}, {'question': 'What was the name of the English King in Braveheart that ruled during the time of William Wallace?', 'answer': 'Edward "Longshanks"', 'category': 'Modern Classics'}, {'question': "In Gladiator, who plays Juba, Maximus' closest friend and ally?", 'answer': 'Djimon Hounsou', 'category': 'Modern Classics'}, {'question': 'What 1980s toy does E.T. use to phone home?', 'answer': 'a Speak & Spell', 'category': 'Modern Classics'}, {'question': 'In Speed, what speed does the bus have to maintain to not explode?', 'answer': '50 miles per hour', 'category': 'Modern Classics'}, {'question': 'In Aliens, who plays Weyland representative Carter Burke?', 'answer': 'Paul Reiser', 'category': 'Modern Classics'}, {'question': 'In what 1970s film did Clint Eastwood play a gunfighter known simply as "The Stranger", who helps a small settlement hold off three outlaws?', 'answer': 'High Plains Drifter', 'category': 'Clint Eastwood'}, {'question': 'Clint Eastwood plays war vet and auto mechanic Walt Kowalski in what film?', 'answer': 'Gran Torino', 'category': 'Clint Eastwood'}, {'question': 'This Hollywood legend starred as the titular Sara in the film Two Mules for Sister Sara.', 'answer': 'Shirley MacLaine', 'category': 'Clint Eastwood'}, {'question': 'Which 1960s war film stars screen legends Richard Burton and Clint Eastwood?', 'answer': 'Where Eagles Dare', 'category': 'Clint Eastwood'}, {'question': "Clint Eastwood's character Philo Beddoe had a pet sidekick in Every Which Way but Loose. What kind of animal was it?", 'answer': 'an orangutan', 'category': 'Clint Eastwood'}, {'question': 'Clint Eastwood directed, produced, and starred in this 1985 western, whose name references one of the four Horsemen of the Apocalypse?', 'answer': 'Pale Rider', 'category': 'Clint Eastwood'}, {'question': 'Tom Hanks and Meryl Streep star in what 2017 historical thriller about the Pentagon Papers?', 'answer': 'The Post', 'category': 'Steven Spielberg'}, {'question': "In 2008's Wanted, who plays Sloan, the leader of the fraternity of assassins?", 'answer': 'Morgan Freeman', 'category': 'Angelina Jolie'}, {'question': 'In what 2002 film does Cameron Diaz star alongside Leonardo DiCaprio and Daniel Day-Lewis?', 'answer': 'Gangs of New York', 'category': 'Cameron Diaz'}, {'question': "Name two actors in the Altman family in 2014's dramedy This Is Where I Leave You.", 'answer': 'Adam Driver, Corey Stoll, Jane Fonda, Jason Bateman, Tina Fey', 'category': '2010s'}, {'question': 'In Ralph Breaks the Internet, who voices the algorithm Yesss, who helps Ralph with his videos?', 'answer': 'Taraji P. Henson', 'category': 'New Releases'}, {'question': 'In Matilda, what is the name of the terrifying closet filled with nails that the evil Miss Trunchbull constantly threatens to put bad students in?', 'answer': 'the Chokey', 'category': 'Family'}, {'question': 'Who plays Henry Jones, Sr. in Indiana Jones and the Last Crusade?', 'answer': 'Sean Connery', 'category': 'Action/Adventure'}, {'question': 'Tony Todd and Virginia Madsen star in what 1992 horror movie about a vengeful spirit who is summoned by saying his name five names into a mirror?', 'answer': 'Candyman', 'category': 'Horror/Thriller'}, {'question': 'Who plays the title character in the 2017 drama Roman J. Israel, Esq.?', 'answer': 'Denzel Washington', 'category': 'Dramas'}, {'question': 'Which Disney animated film has main characters named Judy Hopps and Nick Wilde?', 'answer': 'Zootopia', 'category': 'Animated'}, {'question': "What was Gollum's original name in the Lord of the Rings films?", 'answer': 'Sméagol', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What historical figure does Amy Adams portray in Night at the Museum: Battle of the Smithsonian?', 'answer': 'Amelia Earhart', 'category': 'Comedies'}, {'question': "Who directed 1985's The Goonies?", 'answer': 'Richard Donner', 'category': 'Family'}, {'question': 'What 2004 sports movie has the quote "Nobody makes me bleed my own blood - nobody!"?', 'answer': 'Dodgeball: A True Underdog Story', 'category': 'Quotes'}, {'question': 'Which film gave Meryl Streep her most recent Oscar nomination?', 'answer': 'The Post', 'category': 'N/A'}, {'question': "Who voiced the spider Charlotte in the 2006 family film Charlotte's Web?", 'answer': 'Julia Roberts', 'category': 'Famous Actors & Actresses'}, {'question': 'What classic Hollywood actor directed and also starred as Davy Crockett in the 1960s epic The Alamo?', 'answer': 'John Wayne', 'category': 'Famous Actors & Actresses'}, {'question': "Who played Bruce Willis's wife in the 1999 film The Story of Us?", 'answer': 'Michelle Pfeiffer', 'category': 'Famous Actors & Actresses'}, {'question': 'Scarlett Johansson and Rebecca Hall fall for the same man in The Prestige and what other movie?', 'answer': 'Vicky Cristina Barcelona', 'category': 'Famous Actors & Actresses'}, {'question': 'Who played Cassius "Cash" Green in the 2018 dark comedy Sorry to Bother You?', 'answer': 'Lakeith Stanfield', 'category': 'New Releases'}, {'question': 'John C. Reilly and Steve Coogan shared the screen twice in 2018. One film was Stan & Ollie. What was the other?', 'answer': 'Holmes & Watson', 'category': 'New Releases'}, {'question': 'In Game Night, Michelle thought she hooked up for a one-night stand with what celebrity?', 'answer': 'Denzel Washington', 'category': 'New Releases'}, {'question': 'Who played King Orm in Aquaman?', 'answer': 'Patrick Wilson', 'category': 'New Releases'}, {'question': "Who plays the double-crossing casino owner Willy Bank in Ocean's Thirteen?", 'answer': 'Al Pacino', 'category': 'Brad Pitt'}, {'question': 'Who voices Master Shifu, the trainer for martial arts masters in the Kung Fu Panda franchise?', 'answer': 'Dustin Hoffman', 'category': 'Angelina Jolie'}, {'question': 'In the 2015 comedy Unfinished Business, Vince Vaughn goes on a memorable business trip with his two employees. Name one of them.', 'answer': 'Dave Franco, Tom Wilkinson', 'category': '2010s'}, {'question': 'In The Big Sick, Kumail Nanjiani plays himself. Who plays his girlfriend/wife Emily Gardner?', 'answer': 'Zoe Kazan', 'category': 'Rom-Coms'}, {'question': "Who plays the villainous Mr. Barron in 2016's Miss Peregrine's Home for Peculiar Children?", 'answer': 'Samuel L. Jackson', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Moana, what is the name of the goddess that has her heart stolen by Maui?', 'answer': 'Te Fiti', 'category': 'Disney'}, {'question': "Who plays Sacha Baron Cohen's brother in The Brothers Grimsby?", 'answer': 'Mark Strong', 'category': 'N/A'}, {'question': "What is the full name of Michael Biehn's character in The Terminator?", 'answer': 'Kyle Reese', 'category': 'Action/Adventure'}, {'question': 'Governor Ratcliffe is a villain from what Disney film?', 'answer': 'Pocahontas', 'category': 'Animated'}, {'question': "Who plays single mother Josey in 2005's North Country?", 'answer': 'Charlize Theron', 'category': 'Dramas'}, {'question': "Who directed 2018's Bumblebee?", 'answer': 'Travis Knight', 'category': 'Directors'}, {'question': 'Matthew McConaughey and Christian Bale star in what 2000s film where the world is overrun with dragons?', 'answer': 'Reign of Fire', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Mean Girls, what day of the week are the Plastics required to wear pink?', 'answer': 'Wednesday', 'category': 'Comedies'}, {'question': 'What horror film features a mother and son who are haunted by a creature that they first see in a creepy picture book?', 'answer': 'The Babadook', 'category': 'Horror/Thriller'}, {'question': 'Which actor plays an ambitious cop named Avery, who must deal with department corruption, in The Place Beyond the Pines?', 'answer': 'Bradley Cooper', 'category': 'Crime'}, {'question': 'This 2004 comedy film had the tagline, "A romantic comedy. With zombies."?', 'answer': 'Shaun of the Dead', 'category': 'N/A'}, {'question': 'Which Roger Moore Bond film has a villain named Kananga?', 'answer': 'Live and Let Die', 'category': 'James Bond'}, {'question': 'Which alternative rock band performed the title song in The World Is Not Enough?', 'answer': 'Garbage', 'category': 'James Bond'}, {'question': 'Which actress plays Madeleine Swann in Spectre?', 'answer': 'Léa Seydoux', 'category': 'James Bond'}, {'question': 'Bond girl Kara Milovy plays what classical music instrument in The Living Daylights?', 'answer': 'a cello', 'category': 'James Bond'}, {'question': 'Which character in the Bond franchise has been played by actors Bernard Lee and Robert Brown?', 'answer': "M (in Dr. No, From Russia with Love, Goldfinger, Thunderball, You Only Live Twice, On Her Majesty's Secret Service, Diamonds Are Forever, Live and Let Die, The Man with the Golden Gun, The Spy Who Loved Me, Moonraker; Octopussy, A View to a Kill, The Living Daylights, Licence to Kill)", 'category': 'James Bond'}, {'question': 'In Live and Let Die, Jane Seymour plays a Bond girl who shares her name with a type of card game. What is her name?', 'answer': 'Solitaire', 'category': 'James Bond'}, {'question': 'Who stars alongside Domhnall Gleeson as the girl who he travels through time over and over again to woo in About Time?', 'answer': 'Rachel McAdams', 'category': 'Romance'}, {'question': "Who plays bad boy Patrick Verona, who is hired to go on a date with Kat Stratford, in 1999's 10 Things I Hate About You?", 'answer': 'Heath Ledger', 'category': 'Romance'}, {'question': 'In The Great Gatsby, what does Gatsby stare at every night to remind himself of how close Daisy is?', 'answer': 'a green light coming from the Buchanan dock', 'category': 'Romance'}, {'question': 'Spencer Tracy and Katherine Hepburn play married lawyers at odds in the courtroom in what film?', 'answer': "Adam's Rib", 'category': 'Romance'}, {'question': "What country music artist plays Brad's brother Dallas in Four Christmases?", 'answer': 'Tim McGraw', 'category': 'Romance'}, {'question': "Richard Gere is training to become an officer in what military branch in 1982's An Officer and a Gentleman?", 'answer': 'the Navy', 'category': 'Romance'}, {'question': 'Name the Angelina Jolie movie from the plot synopsis: a CIA agent goes on the run after a defector accuses her of being a Russian spy.', 'answer': 'Salt', 'category': 'Angelina Jolie'}, {'question': "Kristen Stewart played Jodie Foster's daughter in what film?", 'answer': 'Panic Room', 'category': 'Famous Actors & Actresses'}, {'question': 'In The Wrestler, where does Randy work when he is not fighting in the ring?', 'answer': 'the deli counter in a supermarket', 'category': 'Sports'}, {'question': 'Tom Hanks has portrayed Harvard symbologist Robert Langdon in how many films?', 'answer': '3 (The Da Vinci Code, Angels & Demons, Inferno)', 'category': 'Tom Hanks'}, {'question': 'Who played Dr. Abigail Chase in National Treasure?', 'answer': 'Diane Kruger', 'category': 'Action/Adventure'}, {'question': 'Bo Burnham wrote and directed this 2018 coming-of-age film.', 'answer': 'Eighth Grade', 'category': 'Coming of Age'}, {'question': 'What popular animated characters had their own 2005 feature titled The Curse of the Were-Rabbit?', 'answer': 'Wallace and Gromit', 'category': 'Animated'}, {'question': 'Who played the racist deputy in Three Billboards Outside Ebbing, Missouri?', 'answer': 'Sam Rockwell', 'category': 'Dramas'}, {'question': 'Who directed the 1987 sci-fi film RoboCop?', 'answer': 'Paul Verhoeven', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Good Night, and Good Luck, Munich, and Brokeback Mountain all came out in what year?', 'answer': '2005', 'category': 'Release Dates'}, {'question': "What breed of dog terrorizes Dee Wallace in 1983's Cujo?", 'answer': 'a St. Bernard', 'category': 'Horror/Thriller'}, {'question': 'In Monty Python and the Holy Grail, how many questions needed to be answered correctly in order to pass the Bridge of Death?', 'answer': '3 questions', 'category': 'Comedies'}, {'question': 'What actor, best known for roles in 80s and 90s television, played plantation owner Spencer "Big Daddy" Bennett in Django Unchained?', 'answer': 'Don Johnson', 'category': 'Quentin Tarantino'}, {'question': "In Inglourious Basterds, what was Fassbender's Lt. Archie Hicox's profession prior to joining the British army?", 'answer': 'a film critic', 'category': 'Quentin Tarantino'}, {'question': 'Michael Keaton appears in which Tarantino-directed film?', 'answer': 'Jackie Brown', 'category': 'Quentin Tarantino'}, {'question': 'Which martial arts legend plays the sword maker Hattori Hanzō in Kill Bill?', 'answer': 'Sonny Chiba', 'category': 'Quentin Tarantino'}, {'question': 'Who directed Welcome to Marwen?', 'answer': 'Robert Zemeckis', 'category': 'New Releases'}, {'question': 'You can find the character of Shank, voiced by Gal Gadot, and her game Slaughter Race, in what animated film?', 'answer': 'Ralph Breaks the Internet', 'category': 'New Releases'}, {'question': "Who plays Frank's wife Dolores in Green Book?", 'answer': 'Linda Cardellini', 'category': 'New Releases'}, {'question': 'In Creed II, who plays boxing trainer Tony "Little Duke" Evers?', 'answer': 'Wood Harris', 'category': 'New Releases'}, {'question': 'John Franklin plays a sinister young preacher named Isaac Chroner, who leads a cult that murders all the adults in the town of Gatlin, in what film based on a Stephen King story?', 'answer': 'Children of the Corn', 'category': 'Horror'}, {'question': 'Daniel Craig took on the role of 007 for the first time in what 2006 James Bond film?', 'answer': 'Casino Royale', 'category': 'N/A'}, {'question': 'Name the film from the following characters: Heywood, Warden Norton, Captain Hadley, Red, Brooks.', 'answer': 'The Shawshank Redemption', 'category': 'N/A'}, {'question': 'Who directed Wall Street?', 'answer': 'Oliver Stone', 'category': 'N/A'}, {'question': 'Who played ballerina Nina Sayers and the Swan Queen in Black Swan?', 'answer': 'Natalie Portman', 'category': 'N/A'}, {'question': 'Which one of the following actors has not played Hamlet in a film: Kenneth Branagh, Joseph Fiennes, or Mel Gibson?', 'answer': 'Joseph Fiennes', 'category': 'N/A'}, {'question': 'Who directed the 1987 film Empire of the Sun?', 'answer': 'Steven Spielberg', 'category': 'War'}, {'question': 'Emperor Zurg is the archnemesis of which Pixar character?', 'answer': 'Buzz Lightyear', 'category': 'Pixar'}, {'question': 'In Adaptation, who plays Susan Orlean, author of the nonfiction book The Orchid Thief that is being turned into a film?', 'answer': 'Meryl Streep', 'category': '2000s'}, {'question': 'Which Pixar film features the vocal talents of Brad Garrett and Janeane Garofalo?', 'answer': 'Ratatouille', 'category': 'Animated'}, {'question': "Who plays astronaut Ed White, Neil Armstrong's friend and neighbor, in First Man?", 'answer': 'Jason Clarke', 'category': 'Biopics'}, {'question': 'The brother and sister duo of John and Joan Cusack, alongside Minnie Driver and Dan Aykroyd, can be found in what film about a hitman attending his high school reunion?', 'answer': 'Grosse Pointe Blank', 'category': 'Famous Actors & Actresses'}, {'question': 'Who plays Owen Shaw in the Fast and Furious franchise?', 'answer': 'Luke Evans (in 6, 7, 8)', 'category': 'Action/Adventure'}, {'question': "Who plays a mother of two, Marlo Moreau, in 2018's Tully?", 'answer': 'Charlize Theron', 'category': 'Dramas'}, {'question': 'Al Pacino and Russell Crowe star in what Michael Mann film about exposing Big Tobacco on 60 Minutes?', 'answer': 'The Insider', 'category': '1990s'}, {'question': 'Rutger Hauer, Edward James Olmos, Daryl Hannah, and Harrison Ford star in what sci-fi film?', 'answer': 'Blade Runner', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Sacha Baron Cohen followed up his hit comedy Borat with this 2009 mockumentary.', 'answer': 'Brüno', 'category': 'Comedies'}, {'question': 'What 1991 horror thriller won Best Picture and was directed by Jonathan Demme?', 'answer': 'The Silence of the Lambs', 'category': 'Horror/Thriller'}, {'question': 'Sally Field played Aunt May in The Amazing Spider-Man. Who played Uncle Ben?', 'answer': 'Martin Sheen', 'category': 'Comic Book'}, {'question': 'Charlize Theron played a mysterious assassin in what 2005 sci-fi action film?', 'answer': 'Æon Flux', 'category': 'Charlize Theron'}, {'question': 'Who directed Charlize Theron and Ben Affleck in Reindeer Games?', 'answer': 'John Frankenheimer', 'category': 'Charlize Theron'}, {'question': "Charlize Theron starred in the 2001 film Sweet November with which of her The Devil's Advocate co-stars?", 'answer': 'Keanu Reeves', 'category': 'Charlize Theron'}, {'question': 'In Snow White and the Huntsman, the Evil Queen is able to transform into what kind of animal?', 'answer': 'a raven', 'category': 'Charlize Theron'}, {'question': 'Johnny Depp and Charlize Theron star in what 90s sci-fi thriller?', 'answer': "The Astronaut's Wife", 'category': 'Charlize Theron'}, {'question': 'Who directed Charlize Theron in the 1998 film Celebrity?', 'answer': 'Woody Allen', 'category': 'Charlize Theron'}, {'question': "Noah Emmerich plays Jim Carrey's best friend in this 90s film.", 'answer': 'The Truman Show', 'category': '1990s'}, {'question': "Who played Arnold Schwarzenegger's annoying next-door neighbor Ted in 1996's Jingle All the Way?", 'answer': 'Phil Hartman', 'category': '1990s'}, {'question': 'Eduardo Sánchez and Daniel Myrick directed which 90s horror film?', 'answer': 'The Blair Witch Project', 'category': '1990s'}, {'question': "Who plays the sheltered and naive Cecile Caldwell in 1999's Cruel Intentions?", 'answer': 'Selma Blair', 'category': '1990s'}, {'question': "Which character kills the traitorous Malagant in 1995's First Knight?", 'answer': 'Lancelot', 'category': '1990s'}, {'question': 'In The Boondock Saints, who plays Il Duce, criminal and father to Connor and Murphy?', 'answer': 'Billy Connolly', 'category': '2000s'}, {'question': 'Robert Rodriguez and Quentin Tarantino direct their love letter to 1970s exploitation films with what 2007 double feature film?', 'answer': 'Grindhouse', 'category': '2000s'}, {'question': "Name one of the two actors who play Seth Rogen's best friends and roommates in Funny People.", 'answer': 'Jason Schwartzman, Jonah Hill', 'category': 'Judd Apatow'}, {'question': "Who directed 1970's Korean war comedy M*A*S*H?", 'answer': 'Robert Altman', 'category': 'Directors'}, {'question': 'In The American President, who plays Washington lobbyist Sydney Ellen Wade?', 'answer': 'Annette Bening', 'category': 'Romance'}, {'question': 'In A Wrinkle in Time, what comedian plays the yoga-inspired character named Happy Medium?', 'answer': 'Zach Galifianakis', 'category': 'New Releases'}, {'question': 'Who directed Romancing the Stone?', 'answer': 'Robert Zemeckis', 'category': 'Action/Adventure'}, {'question': 'What year saw the release of Braveheart, Heat, and Seven?', 'answer': '1995', 'category': 'Release Dates'}, {'question': "Who plays famed astronaut Neil Armstrong in 2018's First Man?", 'answer': 'Ryan Gosling', 'category': 'Dramas'}, {'question': 'In The Lion King, what does "hakuna matata" mean?', 'answer': 'no worries', 'category': 'Animated'}, {'question': 'Which actress stars in the films The Fifth Element, The Fourth Kind, and Resident Evil?', 'answer': 'Milla Jovovich', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 90s teen comedy has the tagline "There\'s something about your first piece."?', 'answer': 'American Pie', 'category': 'Comedies'}, {'question': 'John Cusack and Samuel L. Jackson star in what 2007 film, based on a Stpehen King story, about an author who gets stuck in a haunted hotel room?', 'answer': '1408', 'category': 'Horror/Thriller'}, {'question': 'What Wes Anderson film follows young kids Sam Shakusky and Suzy Bishop, who fall in love in the 1960s?', 'answer': 'Moonrise Kingdom', 'category': 'Coming of Age'}, {'question': "Who directed Ice Cube and Kevin Hart in 2014's Ride Along?", 'answer': 'Tim Story', 'category': 'Directors'}, {'question': 'Rob Minkoff and Roger Allers directed what classic Disney animated film?', 'answer': 'The Lion King', 'category': 'Directors'}, {'question': 'Christopher McQuarrie has directed how many films in the Mission: Impossible series (as of August 2019)?', 'answer': '2 (Rogue Nation, Fallout)', 'category': 'Directors'}, {'question': 'Tate Taylor directed what 2011 period drama?', 'answer': 'The Help', 'category': 'Directors'}, {'question': 'Which Disney princess comes from Andalasia?', 'answer': 'Giselle (from Enchanted)', 'category': 'Disney'}, {'question': 'What Disney animated film features the song "Following the Leader"?', 'answer': 'Peter Pan', 'category': 'Disney'}, {'question': "What 90s film was Disney's first live-action remake of one of its earlier animated films, and starred Cary Elwes, Lena Headey, and Sam Neill?", 'answer': "Rudyard Kipling's The Jungle Book", 'category': 'Disney'}, {'question': 'Which animated film features the song "Best of Friends"?', 'answer': 'The Fox and the Hound', 'category': 'Disney'}, {'question': 'What 1994 film finds an archaeologist played by James Spader going on an intergalactic mission through a portal with an Army colonel played by Kurt Russell?', 'answer': 'Stargate', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays Mary Stuart in Mary Queen of Scots?', 'answer': 'Saoirse Ronan', 'category': 'New Releases'}, {'question': "In 2007's Waitress, who plays Dr. Jim Pomatter, the new doctor who starts an affair with the already pregnant Jenna?", 'answer': 'Nathan Fillion', 'category': 'Rom-Coms'}, {'question': 'Which actor stars as the lead character Aaron Cross in The Bourne Legacy?', 'answer': 'Jeremy Renner', 'category': 'Action/Adventure'}, {'question': 'This 2001 romantic comedy, about a dysfunctional Hollywood relationship, starred John Cusack, Catherine Zeta-Jones, Billy Crystal, and Julia Roberts.', 'answer': "America's Sweethearts", 'category': 'Rom-Coms'}, {'question': "Who plays widowed American President Andrew Shepherd in 1995's The American President?", 'answer': 'Michael Douglas', 'category': 'Dramas'}, {'question': 'An outcast half-wolf risks his life to prevent a deadly epidemic from ravaging Nome, Alaska in what film?', 'answer': 'Balto', 'category': 'Animated'}, {'question': "What is the last name of Harrison Ford's character in Blade Runner?", 'answer': 'Deckard', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed Beverly Hills Cop II?', 'answer': 'Tony Scott', 'category': 'Comedies'}, {'question': 'The finale of the Alfred Hitchcock film Saboteur takes place at what famous U.S. landmark?', 'answer': 'the Statue of Liberty', 'category': 'Horror/Thriller'}, {'question': 'Name the two movies that Robert Redford and Paul Newman have starred in together.', 'answer': 'Butch Cassidy and the Sundance Kid, The Sting', 'category': 'Famous Actors & Actresses'}, {'question': "Who played Lucy Emerson, Sam and Michael's mother, in The Lost Boys?", 'answer': 'Dianne Wiest', 'category': 'N/A'}, {'question': "Who stars alongside Kate Winslet as the other plane crash survivor in 2017's The Mountain Between Us?", 'answer': 'Idris Elba', 'category': 'Kate Winslet'}, {'question': 'Kate Winslet stars alongside Will Smith in what film?', 'answer': 'Collateral Beauty', 'category': 'Kate Winslet'}, {'question': 'In Quills, who played the profoundly religious and well-loved administrator at Charenton Asylum Coulmier?', 'answer': 'Joaquin Phoenix', 'category': 'Kate Winslet'}, {'question': 'How many separate factions are there in the dystopian society for teenagers to choose from in the Divergent series?', 'answer': '5 (Abnegation, Amity, Candor, Dauntless, Erudite)', 'category': 'Kate Winslet'}, {'question': '"Next time you have a chance to kill someone, don\'t hesitate." is a line from which action favorite?', 'answer': 'Die Hard', 'category': 'Quotes'}, {'question': 'In Apocalypse Now, Kurtz tells Willard that he is an "errand boy" sent by whom to collect the bill?', 'answer': 'grocery clerks', 'category': 'Quotes'}, {'question': 'Which 90s Tom Clancy adaptation contains the quote, "Hey, Ryan, be careful what you shoot at. Most things in here don\'t react too well to bullets."?', 'answer': 'The Hunt for Red October', 'category': 'Quotes'}, {'question': 'Which 90s crime favorite features the line, "You shoot me in a dream, you better wake up and apologize."?', 'answer': 'Reservoir Dogs', 'category': 'Quotes'}, {'question': "What director plays Denzel Washington's best friend Shorty in Malcolm X?", 'answer': 'Spike Lee', 'category': 'Biopics'}, {'question': 'Harrison Ford stars as Branch Rickey alongside Chadwick Boseman in what film?', 'answer': '42', 'category': 'Sports'}, {'question': "What primarily television actor stars alongside Brad Pitt and Julia Roberts as a gay hitman in 2001's The Mexican?", 'answer': 'James Gandolfini', 'category': 'Brad Pitt'}, {'question': "In Disney's Hercules, what kind of mythological creature is Phil?", 'answer': 'a satyr', 'category': 'Disney'}, {'question': 'Who plays Janet Armstrong in First Man?', 'answer': 'Claire Foy', 'category': 'Dramas'}, {'question': "In Waterworld, what is Kevin Costner's character offered by the trader in exchange for sex with Helen?", 'answer': 'paper', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays the lead in the 1995 action thriller Sudden Death?', 'answer': 'Jean-Claude Van Damme', 'category': 'Action/Adventure'}, {'question': 'Which MCU actor plays the jerk Ian in Weird Science?', 'answer': 'Robert Downey Jr.', 'category': '1980s'}, {'question': 'In what film, directed by Denis Villeneuve, do Hugh Jackman and Terrence Howard portray neighbors whose daughters are kidnapped?', 'answer': 'Prisoners', 'category': 'Dramas'}, {'question': 'What is the name of the character who provides advice through the line "Just keep swimming. Just keep swimming."?', 'answer': 'Dory (in Finding Nemo, Finding Dory)', 'category': 'Animated'}, {'question': "What is the name of Orlando Bloom's character in the Pirates of the Caribbean trilogy?", 'answer': 'William Turner Jr.', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2014 Seth Rogen comedy had a sequel titled Sorority Rising?', 'answer': 'Neighbors', 'category': 'Comedies'}, {'question': 'Jack Torrance and his family become the unwitting recipients of ghostly terror at what hotel in The Shining?', 'answer': 'the Overlook Hotel', 'category': 'Horror/Thriller'}, {'question': 'What film released in 1999 won Best Picture at the Academy Awards?', 'answer': 'American Beauty', 'category': 'Oscars'}, {'question': 'In First Man, who plays Buzz Aldrin?', 'answer': 'Corey Stoll', 'category': 'N/A'}, {'question': 'Who directed the Russell Crowe starring martial arts movie The Man with the Iron Fists?', 'answer': 'RZA', 'category': 'Directors'}, {'question': 'What was the directorial debut of Guy Ritchie?', 'answer': 'Lock, Stock and Two Smoking Barrels', 'category': 'Directors'}, {'question': "Who directed 2018's Won't You Be My Neighbor??", 'answer': 'Morgan Neville', 'category': 'Directors'}, {'question': 'Who directed A Quiet Place?', 'answer': 'John Krasinski', 'category': 'Directors'}, {'question': 'Who directed the 2008 comedy Pineapple Express?', 'answer': 'David Gordon Green', 'category': 'Directors'}, {'question': 'David O. Russell received his first Best Director Oscar nomination for which film?', 'answer': 'The Fighter', 'category': 'Directors'}, {'question': "Who stars as Will Smith's gossip columnist love interest in 2005's Hitch?", 'answer': 'Eva Mendes', 'category': '2000s'}, {'question': 'In the 2006 comedy Click, Adam Sandler finds a remote capable of controlling time and space while shopping at what retail store?', 'answer': 'Bed Bath & Beyond', 'category': '2000s'}, {'question': "What Academy Award winning actress played Cherry in 2006's Beerfest?", 'answer': "Mo'Nique", 'category': '2000s'}, {'question': "In The Hurt Locker, who plays Jeremy Renner's ex-wife Connie?", 'answer': 'Evangeline Lilly', 'category': '2000s'}, {'question': 'In Land of the Lost, what Cher song do Will Ferrell and Danny McBride sing together while touching the vibrating crystal?', 'answer': 'Believe', 'category': '2000s'}, {'question': 'Dwayne "The Rock" Johnson plays a gay bodyguard by the name of Elliot Wilhelm in which 2005 crime comedy? ', 'answer': 'Be Cool', 'category': '2000s'}, {'question': 'Cameron was nominated for a Golden Globe for this 2001 Cameron Crowe film.', 'answer': 'Vanilla Sky', 'category': 'Cameron Diaz'}, {'question': 'The Leslie Nielsen film Wrongfully Accused is a spoof of what film?', 'answer': 'The Fugitive', 'category': '1990s'}, {'question': 'In Independence Day, who plays the eccentric, alcoholic former fighter pilot Russell Casse, who insists that he was abducted by aliens?', 'answer': 'Randy Quaid', 'category': 'Action/Adventure'}, {'question': 'Who directed Ingrid Bergman and Gregory Peck in the classic drama Spellbound?', 'answer': 'Alfred Hitchcock', 'category': 'Directors'}, {'question': 'What Disney animated film has characters named Flounder and Scuttle?', 'answer': 'The Little Mermaid', 'category': 'Animated'}, {'question': "What actress won a date with Josh Duhamel in 2004's Win a Date with Tad Hamilton!?", 'answer': 'Kate Bosworth', 'category': 'Rom-Coms'}, {'question': 'An immortal warrior, played by Christopher Lambert, can be the "only one" in what 1986 film?', 'answer': 'Highlander', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who stars as Rusty Griswold in 2015's Vacation?", 'answer': 'Ed Helms', 'category': 'Comedies'}, {'question': 'In Hereditary, who plays Annie Graham, a miniaturist artist?', 'answer': 'Toni Collette', 'category': 'Horror/Thriller'}, {'question': "In what film does Tom Wilkinson play Kirsten Dunst's boss and romantic interest?", 'answer': 'Eternal Sunshine of the Spotless Mind', 'category': 'Dramas'}, {'question': "Which actor plays Priest Vallon, father of Leonardo DiCaprio's character, in Gangs of New York?", 'answer': 'Liam Neeson', 'category': 'N/A'}, {'question': 'This 2015 holiday comedy stars Diane Keaton and John Goodman as a divorcing couple and Timothée Chalamet as one of their grandchildren.', 'answer': 'Love the Coopers', 'category': 'Famous Actors & Actresses'}, {'question': 'What film had a star-studded cast that included Oprah Winfrey, Cuba Gooding Jr., Common, Tessa Thompson, and David Oyelowo?', 'answer': 'Selma', 'category': 'Famous Actors & Actresses'}, {'question': "Who directed and stars in 1993's The Man Without a Face?", 'answer': 'Mel Gibson', 'category': 'Famous Actors & Actresses'}, {'question': 'In what movie did Cybill Shepherd make her feature film debut?', 'answer': 'The Last Picture Show', 'category': 'Famous Actors & Actresses'}, {'question': 'Abigail Breslin received her first Oscar nomination for her supporting role in what 2006 film?', 'answer': 'Little Miss Sunshine', 'category': 'Oscars'}, {'question': 'Susan Sarandon has won her only Academy Award for her role in what film?', 'answer': 'Dead Man Walking', 'category': 'Oscars'}, {'question': "All the President's Men lost to which film for Best Picture at the Academy Awards?", 'answer': 'Rocky', 'category': 'Oscars'}, {'question': 'How many Academy Awards did The Shape of Water win in 2018?', 'answer': '4 (for Picture, Director, Original Score, Production Design)', 'category': 'Oscars'}, {'question': 'In Coco, what is the name of the famous song that Ernesto de la Cruz stole from Héctor?', 'answer': 'Remember Me', 'category': 'Pixar'}, {'question': "In 2018's A Star Is Born, who plays Ally's father Lorenzo?", 'answer': 'Andrew Dice Clay', 'category': 'Romance'}, {'question': 'Who plays Donald Rumsfeld in Vice?', 'answer': 'Steve Carell', 'category': 'New Releases'}, {'question': 'In Misery, Annie knows that Paul tried to escape because a ceramic figure of what kind of animal had been moved?', 'answer': 'a penguin', 'category': 'Horror'}, {'question': 'Who stars as a basketball player named Jackie Moon in the sports comedy Semi-Pro?', 'answer': 'Will Ferrell', 'category': 'Comedies'}, {'question': 'Joel Schumacher directed Demi Moore, Rob Lowe, and Emilio Estevez in what 1980s movie?', 'answer': "St. Elmo's Fire", 'category': 'Dramas'}, {'question': 'Who directed the films Darkman and A Simple Plan?', 'answer': 'Sam Raimi', 'category': 'Directors'}, {'question': 'What film stars Bradley Cooper as a struggling writer who uses a mysterious pill that allows him to use 100% of his brain abilities?', 'answer': 'Limitless', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what year did G.I. Joe: Retaliation come out?', 'answer': '2013', 'category': 'Release Dates'}, {'question': "Who voices the character of Valka, Hiccup's mother, in How to Train Your Dragon 2 and 3?", 'answer': 'Cate Blanchett', 'category': 'Animated'}, {'question': "What is the first name of Neve Campbell's character in the Scream franchise?", 'answer': 'Sidney', 'category': 'Horror/Thriller'}, {'question': 'What is the title of the sequel to the Jackie Chan Owen Wilson movie Shanghai Noon?', 'answer': 'Shanghai Knights', 'category': 'Action/Adventure'}, {'question': "Who played Leta Lestrange, Newt's former love, in Fantastic Beasts: The Crimes of Grindelwald?", 'answer': 'Zoë Kravitz', 'category': 'N/A'}, {'question': 'Name the film from the plot: James Bond investigates the hijacking of British and Russian submarines carrying nuclear warheads with the help of a KGB agent whose lover he killed.', 'answer': 'The Spy Who Loved Me', 'category': 'James Bond'}, {'question': 'John Glen holds the record for directing the most James Bond films, with how many entries to his name?', 'answer': '5 (For Your Eyes Only, Octopussy, A View to a Kill, The Living Daylights, Licence to Kill)', 'category': 'James Bond'}, {'question': 'Spectre opens with James Bond carrying out an unauthorized mission on the Day of the Dead in which Latin American city?', 'answer': 'Mexico City', 'category': 'James Bond'}, {'question': 'In Licence to Kill, villain Franz Sanchez torments Felix Leiter by having what type of animal attack him?', 'answer': 'a tiger shark', 'category': 'James Bond'}, {'question': 'Which James Bond movie marks the first appearance of John Cleese in the franchise?', 'answer': 'The World Is Not Enough', 'category': 'James Bond'}, {'question': 'Which actress played Bond girl Tiffany Case in Diamonds are Forever?', 'answer': 'Jill St. John', 'category': 'James Bond'}, {'question': 'In the 2017 film The Lost City of Z, who stars as British soldier and explorer Percy Fawcett?', 'answer': 'Charlie Hunnam', 'category': 'Dramas'}, {'question': "In Good Will Hunting, what phrase does Sean tell Will didn't apply to him when his wife was sick and in the hospital?", 'answer': 'visiting hours', 'category': 'Dramas'}, {'question': 'In the 2015 film Brooklyn, Saoirse Ronan plays a young woman who immigrated to New York from what country?', 'answer': 'Ireland', 'category': 'Dramas'}, {'question': "Who plays Shailene Woodley's love interest in the 2014 film The Fault in Our Stars?", 'answer': 'Ansel Elgort', 'category': 'Dramas'}, {'question': 'Who plays young Marcus in the 2002 comedy drama About a Boy?', 'answer': 'Nicholas Hoult', 'category': 'Dramas'}, {'question': "In Michael Radford's film Nineteen Eighty-Four based on the George Orwell novel, who played the lead role of Winston Smith?", 'answer': 'John Hurt', 'category': 'Dramas'}, {'question': 'In the film Drumline, who plays Doctor Lee, who is head of the band?', 'answer': 'Orlando Jones', 'category': 'Dramas'}, {'question': 'The 1996 comedy Kingpin revolves around which sport?', 'answer': 'bowling', 'category': 'N/A'}, {'question': 'Which film stars the following actors: Val Kilmer, Michael Rapaport, Dennis Hopper, Brad Pitt, Gary Oldman, and Samuel L. Jackson?', 'answer': 'True Romance', 'category': 'N/A'}, {'question': 'Name the movie from this quote: "this is going to be fun. We can stay up late, swapping manly stories, and in the morning, I\'m making waffles!".', 'answer': 'Shrek', 'category': 'N/A'}, {'question': 'Who plays linguist Louise Banks in Arrival?', 'answer': 'Amy Adams', 'category': 'N/A'}, {'question': "Who directed 1991's Point Break?", 'answer': 'Kathryn Bigelow', 'category': 'N/A'}, {'question': 'Who stars as radio funnyman Adrian Cronauer in Good Morning, Vietnam?', 'answer': 'Robin Williams', 'category': '1980s'}, {'question': "Who played Casey Affleck's nephew Patrick in Manchester by the Sea?", 'answer': 'Lucas Hedges', 'category': '2010s'}, {'question': "Name the actor who co-directed as well as starred in Singin' in the Rain.", 'answer': 'Gene Kelly', 'category': 'Classics'}, {'question': 'What is the name of the grumpy key master and administrator to Scare Floor F in Monsters, Inc.?', 'answer': 'Roz', 'category': 'Pixar'}, {'question': "How does Mel Gibson get the power to hear women's thoughts in What Women Want?", 'answer': 'he gets shocked in a bathtub while holding an electric hair dryer', 'category': 'Rom-Coms'}, {'question': 'In 12 Monkeys, who plays Dr. Peters, who is actually behind the viral outbreak?', 'answer': 'David Morse', 'category': 'Brad Pitt'}, {'question': 'What is the subtitle of the last Mad Max film, which was released in 2015?', 'answer': 'Fury Road', 'category': 'Action/Adventure'}, {'question': 'Who played Russell "Rusty" Griswold in National Lampoon\'s Vacation?', 'answer': 'Anthony Michael Hall', 'category': '1980s'}, {'question': 'John G. Avildsen directed Rocky and what other film in the Rocky franchise?', 'answer': 'Rocky V', 'category': 'Dramas'}, {'question': 'What classic 1952 western stars Gary Cooper and Grace Kelly?', 'answer': 'High Noon', 'category': 'Classics'}, {'question': 'In what science-fiction sequel does Jared Leto play a character named Niander Wallace?', 'answer': 'Blade Runner 2049', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2007 action comedy takes place mainly in the English country town of Sandford?', 'answer': 'Hot Fuzz', 'category': 'Comedies'}, {'question': "In Halloween, Jamie Lee Curtis' character's name is Laurie. What is her last name?", 'answer': 'Strode', 'category': 'Horror/Thriller'}, {'question': 'In what classic Disney animated film will you find a couple of crooked individuals by the names of Horace and Jasper?', 'answer': 'One Hundred and One Dalmatians', 'category': 'Animated'}, {'question': 'In The Sixth Sense, how did the ghost girl, whom Haley Joel Osment sees under the bed, die?', 'answer': 'she was poisoned', 'category': 'Thriller'}, {'question': "Who plays U.S. Marshal Samuel Gerard, hunting Harrison Ford's Richard Kimble, in 1993's The Fugitive?", 'answer': 'Tommy Lee Jones', 'category': 'Thriller'}, {'question': "Which Black Panther actor plays Reggie Wayne, Kate's partner, in the crime thriller Sicario?", 'answer': 'Daniel Kaluuya', 'category': 'Thriller'}, {'question': 'This actor stars alongside Hugh Jackman as Detective Loki in Prisoners.', 'answer': 'Jake Gyllenhaal', 'category': 'Thriller'}, {'question': "Who plays Natalie Portman's assistant Darcy in Thor and Thor: The Dark World?", 'answer': 'Kat Dennings', 'category': 'Natalie Portman'}, {'question': 'Who does John Carroll Lynch play opposite Natalie Portman in Jackie?', 'answer': 'Lyndon B. Johnson', 'category': 'Natalie Portman'}, {'question': 'What actor from the Marvel Cinematic Universe played Andrew in Black Swan alongside Natalie Portman?', 'answer': 'Sebastian Stan', 'category': 'Natalie Portman'}, {'question': "Who is Natalie Portman's co-lead in No Strings Attached?", 'answer': 'Ashton Kutcher', 'category': 'Natalie Portman'}, {'question': 'Which Spielberg film stars Shia LaBeouf, Cate Blanchett, Karen Allen, and John Hurt?', 'answer': 'Indiana Jones and the Kingdom of the Crystal Skull', 'category': 'Steven Spielberg'}, {'question': "Who directed, starred in, and co-wrote 1998's Life Is Beautiful?", 'answer': 'Roberto Benigni', 'category': 'Dramas'}, {'question': 'Who directed the Chris Hemsworth 2013 race car film Rush?', 'answer': 'Ron Howard', 'category': 'Sports'}, {'question': 'What sweet treat does the White Witch offer Edmund in exchange for bringing his siblings to her in The Lion, the Witch and the Wardrobe?', 'answer': 'Turkish Delight', 'category': '2000s'}, {'question': "What famous comedic actor stars as Jack Frost in 2003's The Santa Clause 3: The Escape Clause?", 'answer': 'Martin Short', 'category': 'Family'}, {'question': "In The Insider, Al Pacino's character works on which TV show?", 'answer': '60 Minutes', 'category': '1990s'}, {'question': 'What action adventure film stars Dwayne Johnson, Seann William Scott, and Christopher Walken?', 'answer': 'The Rundown', 'category': 'Action/Adventure'}, {'question': 'This 1997 crime drama was based off a true story and starred Al Pacino and Johnny Depp.', 'answer': 'Donnie Brasco', 'category': '1990s'}, {'question': "Who directed 2012's The Master?", 'answer': 'Paul Thomas Anderson', 'category': 'Dramas'}, {'question': 'Who played Sharon Norbury, the calculus teacher, in Mean Girls?', 'answer': 'Tina Fey', 'category': 'Coming of Age'}, {'question': 'Who stars as the character Chris Kelvin in the 2002 sci-fi drama Solaris?', 'answer': 'George Clooney', 'category': 'Fantasy/Sci-Fi'}, {'question': 'An adventurous 11-year-old girl finds another world that is a strangely idealized version of her frustrating home but has sinister secrets in what 2009 stop motion film?', 'answer': 'Coraline', 'category': 'Animated'}, {'question': 'Which horror movie franchise has featured performances from such actors as Dennis Hopper, Viggo Mortensen, Matthew McConaughey, and Jessica Biel?', 'answer': 'Texas Chainsaw Massacre (in 2, 3, 4, 5)', 'category': 'Horror/Thriller'}, {'question': 'What 2006 comedy features the creation of the fictional South Harmon Institute of Technology?', 'answer': 'Accepted', 'category': 'Comedies'}, {'question': "In Stand by Me, how does narrator Richard Dreyfuss say River Phoenix's character Chris died?", 'answer': 'he was stabbed breaking up a fight in a restaurant', 'category': 'Coming of Age'}, {'question': 'What coming-of-age movie is based on the life of Chazz Palminteri?', 'answer': 'A Bronx Tale', 'category': 'Coming of Age'}, {'question': 'Josh Hamilton plays father to Elsie Fisher in what coming-of-age film?', 'answer': 'Eighth Grade', 'category': 'Coming of Age'}, {'question': 'John and Joan Cusack star in what 1984 coming-of-age film?', 'answer': 'Sixteen Candles', 'category': 'Coming of Age'}, {'question': 'Gabriele Muccino directed Will Smith in what 2000s drama?', 'answer': 'The Pursuit of Happyness', 'category': 'Will Smith'}, {'question': 'In Independence Day, what kind of animal is represented on the engagement ring that Will Smith plans to give to his girlfriend?', 'answer': 'a dolphin', 'category': 'Will Smith'}, {'question': 'In Men in Black, who plays Newton, the morgue attendant who kept swatting flies?', 'answer': 'David Cross', 'category': 'Will Smith'}, {'question': "In 2004's Shark Tale, who voices Oscar's best friend Angie the angelfish, who also works at the Whale Wash?", 'answer': 'Renée Zellweger', 'category': 'Will Smith'}, {'question': 'Which actor plays Dell Scott, a man who cares for a quadriplegic named Philip, in The Upside?', 'answer': 'Kevin Hart', 'category': 'New Releases'}, {'question': 'Sandra Bullock played a computer programmer who had her identity stolen by a rogue government agency in what 1995 film?', 'answer': 'The Net', 'category': 'Sandra Bullock'}, {'question': 'In the 2012 film Ted, John and Ted get to meet the actor who plays the lead in their favorite film, which is what?', 'answer': 'Flash Gordon', 'category': '2010s'}, {'question': "In U-571, McConaughey's Lt. Tyler takes over command after his superior officer, Lt. Commander Dahlgren, is killed. Who played Lt. Commander Dahlgren?", 'answer': 'Bill Paxton', 'category': 'Matthew McConaughey'}, {'question': 'Which film in the Lethal Weapon franchise finds Riggs and Murtaugh taking on a crooked former cop named Jack Travis?', 'answer': 'Lethal Weapon 3', 'category': 'Action/Adventure'}, {'question': '2009 saw the release of this Quentin Tarantino film.', 'answer': 'Inglourious Basterds', 'category': 'Release Dates'}, {'question': 'This 1987 film, directed by Luis Valdez, tells the life story of rocker Ritchie Valens.', 'answer': 'La Bamba', 'category': 'Dramas'}, {'question': 'Who directed Apocalypse Now?', 'answer': 'Francis Ford Coppola', 'category': 'Directors'}, {'question': 'In what 2014 Disney film does Elle Fanning play Princess Aurora?', 'answer': 'Maleficent', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played Megan Price, the groom's overbearing sister, in Bridesmaids?", 'answer': 'Melissa McCarthy', 'category': 'Comedies'}, {'question': 'The Last Key is the title of an installment in what 2010s horror franchise?', 'answer': 'Insidious', 'category': 'Horror/Thriller'}, {'question': 'Who voiced James P. "Sulley" Sullivan in Monsters, Inc.?', 'answer': 'John Goodman', 'category': 'Animated'}, {'question': 'This film was the last musical to win the Best Picture Oscar.', 'answer': 'Chicago', 'category': 'Oscars'}, {'question': 'Almost Famous received four Oscar nominations, and won one. For what category did the movie win?', 'answer': 'Screenplay Written Directly for the Screen', 'category': 'Oscars'}, {'question': 'Tom Hanks received his first Best Actor nomination for what film?', 'answer': 'Big', 'category': 'Oscars'}, {'question': 'This film was the last Best Picture winner to also win Oscars in every other category it was nominated in.', 'answer': 'The Lord of the Rings: The Return of the King', 'category': 'Oscars'}, {'question': 'What is the first feature film Denzel Washington directed?', 'answer': 'Antwone Fisher', 'category': 'Denzel Washington'}, {'question': 'Robert Duvall plays the hostage negotiator Lieutenant Frank Grimes in what Denzel Washington film?', 'answer': 'John Q.', 'category': 'Denzel Washington'}, {'question': 'Denzel Washington and Spike Lee have worked together how many times?', 'answer': "4 (Mo' Better Blues, Malcolm X, He Got Game, Inside Man)", 'category': 'Denzel Washington'}, {'question': 'Sharing its name with a classic fairy tale character and Disney princess, what is the name of the program the FBI use to see four days into the past in Déjà Vu?', 'answer': 'Snow White', 'category': 'Denzel Washington'}, {'question': "What is Rocky's brother-in-law's name in the Rocky franchise?", 'answer': 'Paulie Pennino', 'category': 'Modern Classics'}, {'question': 'Which 80s action movie featured one of the villains named Theo exclaiming "The quarterback is toast!"?', 'answer': 'Die Hard', 'category': 'Action/Adventure'}, {'question': "Name three actors who played greasers in Francis Ford Coppola's The Outsiders.", 'answer': 'C. Thomas Howell, Emilio Estevez, Matt Dillon, Patrick Swayze, Ralph Macchio, Rob Lowe, Tom Cruise', 'category': 'Coming of Age'}, {'question': 'Who played Effie Trinket in the Hunger Games franchise?', 'answer': 'Elizabeth Banks', 'category': 'Action/Adventure'}, {'question': 'Which actor starred in the 2004 Stephen King adaptation Secret Window?', 'answer': 'Johnny Depp', 'category': 'Horror/Thriller'}, {'question': 'Who played opposite Kevin Spacey as a fellow negotiator in the 1998 action thriller The Negotiator? ', 'answer': 'Samuel L. Jackson', 'category': 'Dramas'}, {'question': 'Drew Goddard directed this 2018 crime drama starring Jeff Bridges, Dakota Johnson, Jon Hamm, and Chris Hemsworth.', 'answer': 'Bad Times at the El Royale', 'category': 'Crime'}, {'question': 'What 1981 fantasy epic tells the story of King Arthur, Merlin, and the sword that was pulled from the stone?', 'answer': 'Excalibur', 'category': 'Fantasy/Sci-Fi'}, {'question': "In what 90s comedy does Christina Applegate's Sue Ellen Crandall fake her way into an executive assistant job in order to take care of her four siblings for the summer?", 'answer': "Don't Tell Mom the Babysitter's Dead", 'category': 'Comedies'}, {'question': 'In Finding Nemo, who voices Gill, the fish living in the dentist office aquarium that is the leader of the Tank Gang?', 'answer': 'Willem Dafoe', 'category': 'Animated'}, {'question': "What actor played the fearless leader known as Fearless Leader in 2000's The Adventures of Rocky and Bullwinkle?", 'answer': 'Robert De Niro', 'category': 'Famous Actors & Actresses'}, {'question': "What male actor did Julia co-star with in 2009's Duplicity?", 'answer': 'Clive Owen', 'category': 'Julia Roberts'}, {'question': 'In Pretty Woman, why does the guy driving past Vivian and Kit want a "freebie"?', 'answer': 'it is his birthday', 'category': 'Julia Roberts'}, {'question': "In 1989's Steel Magnolias, what kind of business does Dolly Parton's Truvy Jones own where the group of women spend most of their time?", 'answer': 'a beauty salon', 'category': 'Julia Roberts'}, {'question': "1998's Mystic Pizza is set in a small coastal town in what New England state?", 'answer': 'Connecticut', 'category': 'Julia Roberts'}, {'question': "What is Bradley Cooper's character's name in A Star Is Born?", 'answer': 'Jackson Maine', 'category': 'Dramas'}, {'question': "In One Flew Over the Cuckoo's Nest, who played the stuttering Billy Bibbit?", 'answer': 'Brad Dourif', 'category': 'Dramas'}, {'question': 'Don Cheadle and Joaquin Phoenix star in what historical drama?', 'answer': 'Hotel Rwanda', 'category': 'Dramas'}, {'question': 'What country does Penny Lane go to at the end of Almost Famous?', 'answer': 'Morocco', 'category': 'Dramas'}, {'question': "Name the two co-leads of White Men Can't Jump.", 'answer': 'Wesley Snipes, Woody Harrelson', 'category': 'Sports'}, {'question': "In There's Something About Mary, who plays private detective Pat Healy, who Ben Stiller hires to find Mary?", 'answer': 'Matt Dillon', 'category': 'Cameron Diaz'}, {'question': 'Who won a Best Supporting Actor Oscar in 2016 for his role in Moonlight?', 'answer': 'Mahershala Ali', 'category': 'Dramas'}, {'question': "What famous English comedic actor plays the eccentric billionaire who funds the race between strangers in 2001's Rat Race?", 'answer': 'John Cleese', 'category': '2000s'}, {'question': 'Emma Thompson won the Best Actress Oscar in 1993 for her role in what movie based on a book by E. M. Forster?', 'answer': 'Howards End', 'category': 'Oscars'}, {'question': "In 2008's Step Brothers, Dale and Brennan plan to start an entertainment company. What is the name of their company-to-be?", 'answer': 'Prestige Worldwide', 'category': 'Comedies'}, {'question': 'Who directed the 2017 film Valerian and the City of a Thousand Planets?', 'answer': 'Luc Besson', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the title of the 1991 sequel to Bill & Ted's Excellent Adventure?", 'answer': "Bill & Ted's Bogus Journey", 'category': '1990s'}, {'question': 'What 1980s drama stars William Hurt, Albert Brooks, and Holly Hunter?', 'answer': 'Broadcast News', 'category': 'Dramas'}, {'question': 'Warren Beatty directed and starred in what 1990 comic adaptation?', 'answer': 'Dick Tracy', 'category': 'Comic Book'}, {'question': 'In Tron: Legacy, who plays a fearless warrior named Quorra?', 'answer': 'Olivia Wilde', 'category': 'Action/Adventure'}, {'question': 'Who plays Scott Evil in the Austin Powers films?', 'answer': 'Seth Green', 'category': 'Comedies'}, {'question': 'What David Fincher directed thriller involves a main character who has the nickname "Amazing Amy"?', 'answer': 'Gone Girl', 'category': 'Horror/Thriller'}, {'question': 'What Disney animated film features such characters as the March Hare, the Dormouse, the Walrus, and the Carpenter?', 'answer': 'Alice in Wonderland', 'category': 'Animated'}, {'question': 'In E.T. the Extra-Terrestrial, what do Michael and Elliott dress E.T. up as on Halloween to get him out of the house?', 'answer': 'a ghost', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Scarlett Johansson stars in this 2014 sci-fi film about an extraterrestrial who drives around Scotland attempting to lure unsuspecting men into her van. Once there, she seduces and sends them into another dimension where they are nothing more than meat.', 'answer': 'Under the Skin', 'category': 'Fantasy/Sci-Fi'}, {'question': "In King Arthur: Legend of the Sword, who plays Arthur's uncle and the tyrannical ruthless king of Britain, Vortigern?", 'answer': 'Jude Law', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Disney's Maleficent, what is the name of the princess played by Elle Fanning?", 'answer': 'Aurora', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays Danny Witwer in the Tom Cruise film Minority Report?', 'answer': 'Colin Farrell', 'category': 'Tom Cruise'}, {'question': 'Who directed Tom Cruise in the war drama Lions for Lambs?', 'answer': 'Robert Redford', 'category': 'Tom Cruise'}, {'question': 'Tom Cruise stars in what 2001 Cameron Crowe film?', 'answer': 'Vanilla Sky', 'category': 'Tom Cruise'}, {'question': 'In Risky Business, who plays the prostitute Lana?', 'answer': 'Rebecca De Mornay', 'category': 'Tom Cruise'}, {'question': 'What is the name of the second film in the Vacation franchise?', 'answer': "National Lampoon's European Vacation", 'category': 'Comedies'}, {'question': 'What 2013 drama stars Cate Blanchett, Sally Hawkins, and Alec Baldwin?', 'answer': 'Blue Jasmine', 'category': '2010s'}, {'question': 'In Toy Story 3, what was the name of the daycare that Woody, Buzz, and the gang are mistakenly dropped off at?', 'answer': 'Sunnyside Daycare', 'category': 'Pixar'}, {'question': 'Steve McQueen and Paul Newman can be found in what 1974 disaster film?', 'answer': 'The Towering Inferno', 'category': 'Action/Adventure'}, {'question': 'What 2011 animated film features the voice talents of Isla Fisher, Abigail Breslin, Ned Beatty, Bill Nighy, and Johnny Depp?', 'answer': 'Rango', 'category': 'Animated'}, {'question': 'Daniel Day-Lewis received an Oscar nomination for playing the character Reynolds Woodcock in what 2010s film?', 'answer': 'Phantom Thread', 'category': 'Dramas'}, {'question': 'What 90s film has the line "I guess it comes down to a simple choice, really. Get busy living, or get busy dying."?', 'answer': 'The Shawshank Redemption', 'category': 'Quotes'}, {'question': 'What is the full name of the ship computer that goes rogue in 2001: A Space Odyssey?', 'answer': 'HAL 9000', 'category': 'Fantasy/Sci-Fi'}, {'question': "What stand-up comedian / actor co-starred with Owen Wilson in 2002's I Spy?", 'answer': 'Eddie Murphy', 'category': 'Comedies'}, {'question': 'In Interview with the Vampire, who plays Claudia, the young dying girl turned into a vampire by Tom Cruise?', 'answer': 'Kirsten Dunst', 'category': 'Horror/Thriller'}, {'question': "What type of insect becomes a protector to the kids in 1989's Honey, I Shrunk the Kids?", 'answer': 'an ant', 'category': '1980s'}, {'question': 'Which 1980s film is about a nerdy outcast that secretly pays the most popular girl in school to go out with him to make him popular?', 'answer': "Can't Buy Me Love", 'category': '1980s'}, {'question': "In National Lampoon's Christmas Vacation, what is Clark going to do with his Christmas bonus?", 'answer': 'install a swimming pool', 'category': '1980s'}, {'question': 'What store does Raymond say that he gets his underwear from in Rain Man?', 'answer': 'Kmart', 'category': '1980s'}, {'question': "What stand-up comic played Maurice, Akeem's co-worker in Coming to America?", 'answer': 'Louie Anderson', 'category': '1980s'}, {'question': 'Who plays Eddie Valiant in Who Framed Roger Rabbit?', 'answer': 'Bob Hoskins', 'category': '1980s'}, {'question': 'In Major League, Indians radio announcer Harry Doyle is played by what real-life baseball broadcaster?', 'answer': 'Bob Uecker', 'category': 'Sports'}, {'question': "Samuel L. Jackson's Ken Carter coaches what high school sport in 2005's Coach Carter?", 'answer': 'basketball', 'category': 'Sports'}, {'question': "Who plays Quincy's father Zeke in Love & Basketball?", 'answer': 'Dennis Haysbert', 'category': 'Sports'}, {'question': 'What 2001 sports romance stars Freddie Prinze Jr. as an aspiring pitcher in the Cape Cod Baseball League?', 'answer': 'Summer Catch', 'category': 'Sports'}, {'question': 'In the Harry Potter franchise, who plays the highly regarded wandmaker Mr. Ollivander?', 'answer': 'John Hurt', 'category': 'Harry Potter'}, {'question': 'What 80s comedy has the tagline "A lively comedy about a guy who isn\'t."?', 'answer': "Weekend at Bernie's", 'category': 'N/A'}, {'question': 'Which eye is Kubo missing in Kubo and the Two Strings?', 'answer': 'his left eye', 'category': 'N/A'}, {'question': 'What is the subtitle of the 1993 Robin Hood spoof, which was directed by Mel Brooks?', 'answer': 'Men in Tights', 'category': 'N/A'}, {'question': 'What teen comedy franchise features characters named Jim Levenstein, Michelle Flaherty, and Paul Finch?', 'answer': 'American Pie', 'category': 'N/A'}, {'question': 'The Hunger Games: Catching Fire was released in what year?', 'answer': '2013', 'category': 'N/A'}, {'question': 'Sean Connery and Nicolas Cage take on the villainous Ed Harris in what 1996 Michael Bay film?', 'answer': 'The Rock', 'category': 'Action/Adventure'}, {'question': 'How many feature length films has Denzel Washington directed?', 'answer': '3 (Antwone Fisher, The Great Debaters, Fences)', 'category': 'Denzel Washington'}, {'question': "Who stars as Lucas, the intelligent but socially inept 14-year-old high school student in 1986's Lucas?", 'answer': 'Corey Haim', 'category': '1980s'}, {'question': 'Who plays the bar owner Lil Lovell in Coyote Ugly?', 'answer': 'Maria Bello', 'category': 'Dance'}, {'question': "In Hitch, what does Kevin James' character throw away right before he plants a big kiss on the woman of his dreams?", 'answer': 'his inhaler', 'category': 'Will Smith'}, {'question': 'In American Beauty, Lester Burnham asked for what vegetable dish to be passed to him several times, only to throw the dish into the wall?', 'answer': 'asparagus', 'category': 'Dramas'}, {'question': "Which actor makes a silent cameo as a priest at the beginning of 1978's Invasion of the Body Snatchers?", 'answer': 'Robert Duvall', 'category': 'N/A'}, {'question': 'What martial arts action film has an animated sequence that tells the backstory of a character named O-Ren Ishii?', 'answer': 'Kill Bill: Volume 1', 'category': 'Action/Adventure'}, {'question': 'What year was Gangs of New York released?', 'answer': '2002', 'category': 'Release Dates'}, {'question': "Who plays the lead in the 1999 film Boys Don't Cry?", 'answer': 'Hilary Swank', 'category': 'Dramas'}, {'question': "Who plays Apple co-founder Steve Wozniak in 2015's Steve Jobs?", 'answer': 'Seth Rogen', 'category': '2010s'}, {'question': 'What scientific anomaly has caused the world to crumble in Children of Men?', 'answer': 'women cannot get pregnant', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who directed 1986's Three Amigos?", 'answer': 'John Landis', 'category': 'Comedies'}, {'question': "1986's Manhunter was the first film to feature the character Hannibal Lecter. What was the title of its 2002 remake?", 'answer': 'Red Dragon', 'category': 'Horror/Thriller'}, {'question': 'Which Pixar film involves a Boy Scout like group called the Wilderness Explorers?', 'answer': 'Up', 'category': 'Animated'}, {'question': 'How many times has Spielberg directed Tom Cruise?', 'answer': '2 (Minority Report, War of the Worlds)', 'category': 'Steven Spielberg'}, {'question': 'Tom Hanks loses his coat to a gang of thugs in Germany in what Spielberg film?', 'answer': 'Bridge of Spies', 'category': 'Steven Spielberg'}, {'question': "In Saving Private Ryan, how many of James Ryan's brothers have died?", 'answer': '3 brothers', 'category': 'Steven Spielberg'}, {'question': 'In the climax of The Lost World: Jurassic Park, a T. rex manages to escape in what city?', 'answer': 'San Diego', 'category': 'Steven Spielberg'}, {'question': 'In what Ben Affleck film will you hear the quote "No matter how much you change, you still have to pay the price for the things you\'ve done."?', 'answer': 'The Town', 'category': 'Quotes'}, {'question': 'What Best Picture winner features the quote "Every man dies, not every man really lives."?', 'answer': 'Braveheart', 'category': 'Quotes'}, {'question': 'In which classic holiday film will you find the quote "no man is a failure who has friends."?', 'answer': "It's a Wonderful Life", 'category': 'Quotes'}, {'question': '"I believe in America." is the opening line to what crime classic?', 'answer': 'The Godfather', 'category': 'Quotes'}, {'question': 'Will Ferrell and Mark Wahlberg star as Detectives Gamble and Hoitz in what 2010 buddy cop?', 'answer': 'The Other Guys', 'category': '2010s'}, {'question': 'In Who Framed Roger Rabbit, Judge Doom wants to destroy Toontown to build what in its place?', 'answer': 'a freeway', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Minority Report, what is the name of the female Precog that helps Tom Cruise?', 'answer': 'Agatha Lively', 'category': 'Tom Cruise'}, {'question': 'What 2016 drama stars Adam Driver and Andrew Garfield?', 'answer': 'Silence', 'category': 'Martin Scorsese'}, {'question': "Who played Hanna's father Erik in the 2011 film Hanna?", 'answer': 'Eric Bana', 'category': 'Thriller'}, {'question': 'Xander Cage is the protagonist of two films in what action franchise?', 'answer': 'XXX', 'category': 'Action/Adventure'}, {'question': 'What Baz Luhrmann film stars Leonardo DiCaprio, Carey Mulligan, and Joel Edgerton?', 'answer': 'The Great Gatsby', 'category': 'Famous Actors & Actresses'}, {'question': "Who played big-game hunter Denys Finch Hatton, opposite Meryl Streep, in 1985's Out of Africa?", 'answer': 'Robert Redford', 'category': 'Dramas'}, {'question': 'Who directed Julia Roberts and Richard Gere in the 1999 rom-com Runaway Bride?', 'answer': 'Garry Marshall', 'category': '1990s'}, {'question': 'Who plays Oz in Oz the Great and Powerful?', 'answer': 'James Franco', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What Judd Apatow movie has the line "Marriage is like a tense, unfunny version of Everybody Loves Raymond, only it doesn\'t last 22 minutes. It lasts forever."?', 'answer': 'Knocked Up', 'category': 'Comedies'}, {'question': 'What iconic horror movie villain had a "bride" named Tiffany?', 'answer': 'Chucky', 'category': 'Horror/Thriller'}, {'question': "You'll find the sinister Stromboli in what classic animated Disney film?", 'answer': 'Pinocchio', 'category': 'Animated'}, {'question': 'In Red State, the first on-screen victim of a radical fundamentalist church is a man who they say is guilty of what sin?', 'answer': 'homosexuailty', 'category': 'Kevin Smith'}, {'question': "What is the first name of the 15-year-old girl who is writing a book about men's sex drives in Mallrats?", 'answer': 'Tricia', 'category': 'Kevin Smith'}, {'question': 'What game is played on the roof of the convenience store in Clerks?', 'answer': 'hockey', 'category': 'Kevin Smith'}, {'question': 'Carrie Fisher plays a woman with what profession in Jay and Silent Bob Strike Back?', 'answer': 'a nun', 'category': 'Kevin Smith'}, {'question': 'Who played single Wall Street executive Jack Campbell, the man who wakes up on Christmas Day in an alternate reality where he married his former girlfriend, in The Family Man?', 'answer': 'Nicolas Cage', 'category': '2000s'}, {'question': 'Which actor has a cameo as John Lennon in Walk Hard: The Dewey Cox Story?', 'answer': 'Paul Rudd', 'category': '2000s'}, {'question': 'In Almost Famous, who plays rock journalist Lester Bangs?', 'answer': 'Philip Seymour Hoffman', 'category': '2000s'}, {'question': "Who directed 2004's The Notebook?", 'answer': 'Nick Cassavetes', 'category': '2000s'}, {'question': 'Jake and Elwood are "on a mission from God" in what 1980s comedy?', 'answer': 'The Blues Brothers', 'category': 'Comedies'}, {'question': 'Steven Spielberg directed Haley Joel Osment in what 2001 sci-fi film?', 'answer': 'A.I. Artificial Intelligence', 'category': 'Steven Spielberg'}, {'question': "What country music star plays Sandra Bullock's husband in The Blind Side?", 'answer': 'Tim McGraw', 'category': 'Sandra Bullock'}, {'question': 'In Aquaman, Arthur and Mera are ambushed in Sicily when a fully armored David emerges and is now known as what?', 'answer': 'Black Manta', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In The Devil Wears Prada, what is the name of the magazine where Meryl Streep is the editor-in-chief?', 'answer': 'Runway', 'category': 'Rom-Coms'}, {'question': 'What famous musician plays Kieffer, one of the German nihilists, in The Big Lebowski?', 'answer': 'Flea', 'category': 'Modern Classics'}, {'question': 'What modern action franchise features such characters as Roman Pearce, Sean Boswell, and Mr. Nobody?', 'answer': 'Fast & Furious', 'category': 'Action/Adventure'}, {'question': 'Which actor has played the famous characters Max Cady, Travis Bickle, and Vito Corleone?', 'answer': 'Robert De Niro (in Cape Fear, Taxi Driver, The Godfather Part II)', 'category': 'Famous Actors & Actresses'}, {'question': 'The films The Deer Hunter and Coming Home depict the struggles of veterans from what war?', 'answer': 'the Vietnam War', 'category': 'Dramas'}, {'question': 'What type of animal is Mr. Peabody in the 2014 film Mr. Peabody & Sherman?', 'answer': 'a white beagle', 'category': 'Animated'}, {'question': 'Who stars as an alien named Klaatu in the 2008 remake of The Day the Earth Stood Still?', 'answer': 'Keanu Reeves', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the film Fantastic Mr. Fox?', 'answer': 'Wes Anderson', 'category': 'Directors'}, {'question': 'Which MCU actor plays a tracker who aids with a murder investigation in the 2017 mystery thriller Wind River?', 'answer': 'Jeremy Renner', 'category': 'Horror/Thriller'}, {'question': "Which actor plays Todd, the son of Adam Sandler's character, in the 2012 comedy That's My Boy?", 'answer': 'Andy Samberg', 'category': 'Comedies'}, {'question': 'David Spade and John Goodman voice Kuzco and Pacha respectively in what Disney film?', 'answer': "The Emperor's New Groove", 'category': 'N/A'}, {'question': 'In the film Lilo & Stitch, what is the word that means family?', 'answer': 'ohana', 'category': 'Disney'}, {'question': 'In the film One Hundred and One Dalmatians, dog owners Roger and Anita reside in what city?', 'answer': 'London', 'category': 'Disney'}, {'question': 'What was the name of the villain in the 1985 animated film The Black Cauldron?', 'answer': 'the Horned King', 'category': 'Disney'}, {'question': 'Who provides the speaking voice for Captain Li Shang in the film Mulan?', 'answer': 'BD Wong', 'category': 'Disney'}, {'question': 'Edgar is the name of the villainous butler in what Disney animated film?', 'answer': 'The Aristocats', 'category': 'Disney'}, {'question': "What is the name of the speaking tree that serves as Pocahontas' guide in the film Pocahontas?", 'answer': 'Grandmother Willow', 'category': 'Disney'}, {'question': 'This 1989 drama tells the story of an English teacher at the fictional Welton Academy who inspires his students through poetry.', 'answer': 'Dead Poets Society', 'category': '1980s'}, {'question': 'Michael Ritchie directed Chevy Chase in two films in what comedy series?', 'answer': 'Fletch', 'category': '1980s'}, {'question': 'Kenneth Branagh starred in and directed an adaptation of which Shakespeare play in 1989?', 'answer': 'Henry V', 'category': '1980s'}, {'question': 'This 1980 film directed by Michael Apted tells the story of a country superstar named Loretta Lynn.', 'answer': "Coal Miner's Daughter", 'category': '1980s'}, {'question': "What popular 80s hard rock band is shown filming a music video during the big movie studio climax of the all-time classic Pee-wee's Big Adventure?", 'answer': 'Twisted Sister', 'category': '1980s'}, {'question': 'Which 90210 actress played Heather Duke in the 1989 film Heathers?', 'answer': 'Shannen Doherty', 'category': '1980s'}, {'question': 'Who directed the 2019 film Men in Black: International?', 'answer': 'F. Gary Gray', 'category': 'Directors'}, {'question': "In the Coen Brothers film Inside Llewyn Davis, the title character takes care of his neighbor's pet. What type of pet?", 'answer': 'a cat', 'category': 'Dramas'}, {'question': 'What film starring Tom Hanks and directed by Robert Zemeckis won Best Picture at the 1995 Academy Awards?', 'answer': 'Forrest Gump', 'category': 'Oscars'}, {'question': 'Who directed the 2018 reboot of a classic sci-fi creature franchise The Predator?', 'answer': 'Shane Black', 'category': 'New Releases'}, {'question': 'Peter Stormare plays Russian cosmonaut Lev Andropov in charge of the space station in what 90s film?', 'answer': 'Armageddon', 'category': 'Action/Adventure'}, {'question': 'You\'ll hear the following quote in what classic romantic comedy: "When you realize you want to spend the rest of your life with somebody, you want the rest of your life to start as soon as possible."?', 'answer': 'When Harry Met Sally...', 'category': 'Quotes'}, {'question': 'What is the subtitle of the 1991 sequel to An American Tail?', 'answer': 'Fievel Goes West', 'category': 'Animated'}, {'question': 'What 1998 weed-themed comedy starred Dave Chappelle and Jim Brewer?', 'answer': 'Half Baked', 'category': 'Comedies'}, {'question': 'Oprah Winfrey made her feature film debut in what film from director Steven Spielberg?', 'answer': 'The Color Purple', 'category': 'Dramas'}, {'question': 'Who plays Martin Riggs in the Lethal Weapon franchise?', 'answer': 'Mel Gibson', 'category': 'Action/Adventure'}, {'question': 'Who plays the adult hero Trevor Anderson in the 2008 film Journey to the Center of the Earth?', 'answer': 'Brendan Fraser', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which famous action star plays the villainous Toymaker in Spy Kids 3-D: Game Over?', 'answer': 'Sylvester Stallone', 'category': 'Family'}, {'question': 'Which famous movie monster has been played by Robert De Niro, Christopher Lee, and Aaron Eckhart?', 'answer': "Frankenstein's monster (in Mary Shelley's Frankenstein, The Curse of Frankenstein, and I, Frankenstein)", 'category': 'Horror/Thriller'}, {'question': 'Melissa Leo won a Best Supporting Actress Oscar for what boxing drama?', 'answer': 'The Fighter', 'category': 'Oscars'}, {'question': 'What 2018 coming-of-age film stars Nick Robinson, Jennifer Garner, and Josh Duhamel?', 'answer': 'Love, Simon', 'category': 'N/A'}, {'question': 'In Jurassic Park, what three-word phrase does John Hammond repeatedly use when describing his park?', 'answer': 'Spared no expense.', 'category': 'Steven Spielberg'}, {'question': "Who stars as the slave rebellion's leader Cinqué in 1997's Amistad?", 'answer': 'Djimon Hounsou', 'category': 'Steven Spielberg'}, {'question': "In Spielberg's war comedy 1941, two volunteer lookouts spend the film stationed on what kind of civilian structure on the coast that ends up being attacked by a submarine?", 'answer': 'a Ferris wheel', 'category': 'Steven Spielberg'}, {'question': 'What famous musician has a cameo in Hook as a police inspector?', 'answer': 'Phil Collins', 'category': 'Steven Spielberg'}, {'question': "Who played Norman Bates in Gus Van Sant's 1998 remake of Psycho?", 'answer': 'Vince Vaughn', 'category': 'Horror'}, {'question': 'The 2007 Spanish zombie horror film Rec was remade a year later in 2008 under what name?', 'answer': 'Quarantine', 'category': 'Horror'}, {'question': 'In the Evil Dead films, what brand/make of car does Ash drive?', 'answer': 'a 1973 Oldsmobile Delta 88 Royale', 'category': 'Horror'}, {'question': 'William Peter Blatty directed George C. Scott as Police Lieutenant Kinderman, who becomes consumed by a series of murders that relate to a killer known as the Gemini Killer, in what film?', 'answer': 'The Exorcist III', 'category': 'Horror'}, {'question': 'Who directed the Oscar-winning film The Revenant?', 'answer': 'Alejandro G. Iñárritu', 'category': 'Directors'}, {'question': 'In Welcome to Marwen, who stars as Mark Hogencamp, the man who uses modified dolls to create a fantasy world?', 'answer': 'Steve Carell', 'category': 'New Releases'}, {'question': 'Which Star Trek actor played Dr. Brackish Okun, the scientist in charge of research at Area 51, in Independence Day?', 'answer': 'Brent Spiner', 'category': 'Action/Adventure'}, {'question': 'What 2014 sports drama tells the true story of a sports agent who decides to recruit Indian cricket players for Major League Baseball?', 'answer': 'Million Dollar Arm', 'category': 'Sports'}, {'question': 'What 2005 animated movie has a new take on a classic fairytale with characters and stars Anne Hathaway, Glenn Close, and Patrick Warburton?', 'answer': 'Hoodwinked!', 'category': 'Animated'}, {'question': "In the National Treasure franchise, who plays Agent Sadusky, who is always right on the heels of Nicolas Cage's Benjamin Gates?", 'answer': 'Harvey Keitel', 'category': 'N/A'}, {'question': 'Which comedic actor plays futuristic talk show host Ruby Rhod in The Fifth Element?', 'answer': 'Chris Tucker', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays FBI agent Adam Frawley, who is pursuing Ben Affleck's character, in The Town?", 'answer': 'Jon Hamm', 'category': 'Crime'}, {'question': 'Jeremy Irvine stars as Albert in this 2011 Spielberg film set in World War I.', 'answer': 'War Horse', 'category': 'Dramas'}, {'question': 'David Leitch directs Charlize Theron in this 2017 action film about an undercover MI6 agent.', 'answer': 'Atomic Blonde', 'category': 'Action/Adventure'}, {'question': 'In Brave, how many brothers does Merida have?', 'answer': '3 (Hamish, Harris, Hubert)', 'category': 'Animated'}, {'question': 'Who plays Chris Farley\'s father, "Big Tom" Callahan, in 1995\'s Tommy Boy?', 'answer': 'Brian Dennehy', 'category': 'Comedies'}, {'question': 'Who directed the 2013 horror smash hit The Conjuring?', 'answer': 'James Wan', 'category': 'Horror/Thriller'}, {'question': 'Which Irish filmmaker has helmed the Shakespeare adaptations Hamlet, Henry V, and Much Ado About Nothing?', 'answer': 'Kenneth Branagh', 'category': 'Directors'}, {'question': "This actress played Marilyn Monroe opposite Eddie Redmayne in 2011's My Week with Marilyn.", 'answer': 'Michelle Williams', 'category': 'Mixed Bag'}, {'question': 'Susanna Fogel directed this 2018 raunchy comedy.', 'answer': 'The Spy Who Dumped Me', 'category': 'Mixed Bag'}, {'question': 'What European country did Serpico move to after retiring from the police force?', 'answer': 'Switzerland', 'category': 'Mixed Bag'}, {'question': 'What year saw the release of The Day After Tomorrow?', 'answer': '2004', 'category': 'Mixed Bag'}, {'question': 'Who sang the theme song "Streets of Philadelphia" for the film Philadelphia?', 'answer': 'Bruce Springsteen', 'category': 'Denzel Washington'}, {'question': 'Denzel Washington stars alongside Bob Hoskins in what 1990 comedy about a dead lawyer whose ghost teams up with the cop whom was donated his heart?', 'answer': 'Heart Condition', 'category': 'Denzel Washington'}, {'question': 'Who played Dr. Betty Shabazz in the Denzel Washington drama Malcolm X?', 'answer': 'Angela Bassett', 'category': 'Denzel Washington'}, {'question': "In the film 2 Guns, Denzel Washington and Mark Wahlberg must work together despite each being undercover for separate agencies. What government agency does Denzel's character Bobby work for?", 'answer': 'the DEA', 'category': 'Denzel Washington'}, {'question': 'This mockumentary about beauty pageants, and the lengths that some contestants will go to win, stars Kirstie Alley, Kirsten Dunst, and Denise Richards.', 'answer': 'Drop Dead Gorgeous', 'category': 'Comedies'}, {'question': 'Drew Barrymore and Adam Sandler find themselves stuck together at an African resort for families in this rom-com.', 'answer': 'Blended', 'category': 'Rom-Coms'}, {'question': 'Drew Barrymore plays the character Dylan Sanders in what action franchise?', 'answer': "Charlie's Angels", 'category': 'Drew Barrymore'}, {'question': "Who played the role of J. Edgar Hoover in 2009's Public Enemies?", 'answer': 'Billy Crudup', 'category': 'Crime'}, {'question': "Who played Princess Buttercup in 1987's The Princess Bride?", 'answer': 'Robin Wright', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played the vile President Coriolanus Snow in The Hunger Games?', 'answer': 'Donald Sutherland', 'category': 'Action/Adventure'}, {'question': "Who plays the ambitious young jazz drummer Andrew in 2014's Whiplash?", 'answer': 'Miles Teller', 'category': 'Dramas'}, {'question': 'What 1980s film features the line "Are you trying to tell me that my mother has got the hots for me?"?', 'answer': 'Back to the Future', 'category': 'Quotes'}, {'question': 'Who provides the voice of the title character in Detective Pikachu?', 'answer': 'Ryan Reynolds', 'category': 'New Releases'}, {'question': "Who starred opposite Eddie Murphy as the character Louis Winthorpe III in 1983's Trading Places?", 'answer': 'Dan Aykroyd', 'category': 'Comedies'}, {'question': 'What 2019 psychological horror film was directed by Tate Taylor and starred Octavia Spencer?', 'answer': 'Ma', 'category': 'Horror/Thriller'}, {'question': "Who voices Poppy, the happiest Troll ever born, in 2016's Trolls?", 'answer': 'Anna Kendrick', 'category': 'Animated'}, {'question': 'Who directed the Mark Wahlberg war film Lone Survivor?', 'answer': 'Peter Berg', 'category': 'N/A'}, {'question': 'What famous landmark does Grace Jones jump from in A View to a Kill?', 'answer': 'the Eiffel Tower', 'category': 'James Bond'}, {'question': 'The character of Pussy Galore appears in which Bond film?', 'answer': 'Goldfinger', 'category': 'James Bond'}, {'question': 'In the Bond franchise, who was the first actor to portray M?', 'answer': 'Bernard Lee', 'category': 'James Bond'}, {'question': "In The Man with the Golden Gun, what was the name of Scaramanga's tiny assistant?", 'answer': 'Nick Nack', 'category': 'James Bond'}, {'question': 'Which film did Cameron Diaz and Spike Jonze work on together?', 'answer': 'Being John Malkovich', 'category': 'Cameron Diaz'}, {'question': "Who was Cameron Diaz's co-lead in the 2008 romantic comedy What Happens in Vegas?", 'answer': 'Ashton Kutcher', 'category': 'Cameron Diaz'}, {'question': "In My Sister's Keeper, Cameron Diaz plays a mom named Sara. Who plays her daughter Anna in the film?", 'answer': 'Abigail Breslin', 'category': 'Cameron Diaz'}, {'question': "Who played Cameron Diaz's sister Rose in the 2005 film In Her Shoes?", 'answer': 'Toni Collette', 'category': 'Cameron Diaz'}, {'question': 'Cameron Diaz has played the role of Princess Fiona how many times in the Shrek franchise?', 'answer': '4', 'category': 'Cameron Diaz'}, {'question': 'How many Daniel Craig James Bond films has Sam Mendes directed?', 'answer': '2 (Skyfall, Spectre)', 'category': 'Directors'}, {'question': 'What popular 2003 Christmas comedy finally received a sequel in 2016?', 'answer': 'Bad Santa', 'category': 'Comedies'}, {'question': "Which MCU actress co-stars with Natalie Portman in 2018's Annihilation as the character Josie?", 'answer': 'Tessa Thompson', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Hotel Transylvania 3: Summer Vacation, which old-school comedian voiced Vlad, who is Dracula's dad?", 'answer': 'Mel Brooks', 'category': 'New Releases'}, {'question': "2014's The Theory of Everything, starring Eddie Redmayne and Felicity Jones, is about what real-life physicist?", 'answer': 'Stephen Hawking', 'category': 'Dramas'}, {'question': 'What year saw the release of Toy Story 3?', 'answer': '2010', 'category': 'Release Dates'}, {'question': 'Who won an Oscar for portraying musician Ray Charles in Ray?', 'answer': 'Jamie Foxx', 'category': 'Oscars'}, {'question': 'In the Maze Runner series, who plays the lead, Thomas?', 'answer': "Dylan O'Brien", 'category': 'Action/Adventure'}, {'question': 'Which film in the Planet of the Apes franchise features a supporting turn by Gary Oldman?', 'answer': 'Dawn of the Planet of the Apes', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Planes, Trains and Automobiles, Steve Martin leaves from what city to get home to Chicago for Thanksgiving?', 'answer': 'New York City', 'category': 'Comedies'}, {'question': 'Dan Trachtenberg directed Mary Elizabeth Winstead and John Goodman in what 2016 thriller set in a bunker?', 'answer': '10 Cloverfield Lane', 'category': 'Horror/Thriller'}, {'question': "Who directed 2018's Isle of Dogs?", 'answer': 'Wes Anderson', 'category': 'Animated'}, {'question': 'The 2000 film O Brother, Where Art Thou? is loosely based on which famous Greek literary work?', 'answer': 'the Odyssey', 'category': 'N/A'}, {'question': 'Val Kilmer appeared early in his career in which 1984 spy comedy?', 'answer': 'Top Secret!', 'category': 'Spy'}, {'question': 'What Lost actor plays an IMF agent who is killed in an early scene of Mission: Impossible – Ghost Protocol?', 'answer': 'Josh Holloway', 'category': 'Spy'}, {'question': "What was Pierce Brosnan's first James Bond film?", 'answer': 'GoldenEye', 'category': 'Spy'}, {'question': "Who plays Ben Affleck's boss at the CIA, Jack O'Donnell, in Argo?", 'answer': 'Bryan Cranston', 'category': 'Spy'}, {'question': 'In Insomnia, who plays the murder suspect Walter Finch?', 'answer': 'Robin Williams', 'category': 'Christopher Nolan'}, {'question': 'David Bowie makes a cameo in what Christopher Nolan movie?', 'answer': 'The Prestige', 'category': 'Christopher Nolan'}, {'question': "In Dunkirk, what item on Tom Hardy's Spitfire plane gets damaged during a dogfight?", 'answer': 'the fuel gauge', 'category': 'Christopher Nolan'}, {'question': 'Christopher Nolan was an executive producer on this 2014 Johnny Depp flop.', 'answer': 'Transcendence', 'category': 'Christopher Nolan'}, {'question': 'Toy Story was the first film released by Pixar. Which 1998 film was the second?', 'answer': "A Bug's Life", 'category': 'Pixar'}, {'question': 'What 2008 action thriller stars Shia LaBeouf and Michelle Monaghan?', 'answer': 'Eagle Eye', 'category': 'Action/Adventure'}, {'question': 'In what 80s comedy do Bill Murray and Harold Ramis enlist in the army?', 'answer': 'Stripes', 'category': '1980s'}, {'question': "Who played the lead role of Carol Aird in 2015's Carol?", 'answer': 'Cate Blanchett', 'category': 'Dramas'}, {'question': "In Toy Story 4, Tony Hale voices the spork that Woody tries to rescue. What is the spork's name?", 'answer': 'Forky', 'category': 'Animated'}, {'question': 'Johnny Depp played real-life gangster Whitey Bulger in what 2015 film?', 'answer': 'Black Mass', 'category': 'Crime'}, {'question': 'What comedy franchise features the bumbling Inspector Clouseau?', 'answer': 'the Pink Panther', 'category': 'Comedies'}, {'question': "Who directed 2015's The Gift?", 'answer': 'Joel Edgerton', 'category': 'Horror/Thriller'}, {'question': 'In The Empire Strikes Back, to whom does Darth Vader say the following quote: "I am altering the deal. Pray I don\'t alter it any further."?', 'answer': 'Lando Calrissian', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which 90s movie has the tagline "Protecting the Earth from the scum of the universe"?', 'answer': 'Men in Black', 'category': 'N/A'}, {'question': "Who won Best Director Oscars for the classic films Mr. Deeds Goes to Town and You Can't Take It with You?", 'answer': 'Frank Capra', 'category': 'Directors'}, {'question': "What popular actor was the director of 2018's Mid90s?", 'answer': 'Jonah Hill', 'category': 'Directors'}, {'question': 'How many theatrical features have been directed by Kevin Costner?', 'answer': '3 (Dances with Wolves, The Postman, Open Range)', 'category': 'Directors'}, {'question': 'Steven Soderbergh directed Gina Carano, Michael Fassbender, and Ewan McGregor in which 2012 film?', 'answer': 'Haywire', 'category': 'Directors'}, {'question': 'In what year was Shutter Island released?', 'answer': '2010', 'category': 'Release Dates'}, {'question': 'Top Gun was released in what year?', 'answer': '1986', 'category': 'Release Dates'}, {'question': 'In what year was Trouble with the Curve released?', 'answer': '2012', 'category': 'Release Dates'}, {'question': "What year saw Boris Karloff debut as Frankenstein's monster and Bela Lugosi debut as Dracula in their respective movies?", 'answer': '1931', 'category': 'Release Dates'}, {'question': 'Peter Weir directed Russell Crowe and Paul Bettany in what 2003 film?', 'answer': 'Master and Commander: The Far Side of the World', 'category': 'Action/Adventure'}, {'question': 'What 1976 comedy starring Jodie Foster and Barbara Harris was remade in 2003?', 'answer': 'Freaky Friday', 'category': 'Jodie Foster'}, {'question': 'What is the first and last name of the one-eyed green monster voiced by Billy Crystal in Monsters, Inc.?', 'answer': 'Mike Wazowski', 'category': 'Pixar'}, {'question': 'Who played the role of the husband whose wife cheats on him in the 1983 horror thriller Possession?', 'answer': 'Sam Neill', 'category': 'Horror'}, {'question': 'Who voices Boss Baby in the 2017 film The Boss Baby?', 'answer': 'Alec Baldwin', 'category': 'Animated'}, {'question': 'Roland Emmerich directed this 2013 action film starring Channing Tatum and Jamie Foxx.', 'answer': 'White House Down', 'category': 'Directors'}, {'question': 'Who played Gandhi in the 1982 historical drama Gandhi?', 'answer': 'Ben Kingsley', 'category': 'Dramas'}, {'question': 'What action franchise features such characters as Jim Phelps, Owen Davian, and Ilsa Faust?', 'answer': 'Mission: Impossible', 'category': 'Action/Adventure'}, {'question': 'What 2007 fantasy adventure film stars Charlie Cox, Claire Danes, and Michelle Pfeiffer?', 'answer': 'Stardust', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 80s crime comedy film stars Nicolas Cage and Holly Hunter?', 'answer': 'Raising Arizona', 'category': 'Comedies'}, {'question': "What name is used to refer to the killer in 1995's Seven?", 'answer': 'John Doe', 'category': 'Horror/Thriller'}, {'question': 'What year saw the release of Dumb and Dumber?', 'answer': '1994', 'category': 'Release Dates'}, {'question': 'What MCU film has the line "Doth mother know you weareth her drapes?"?', 'answer': 'The Avengers', 'category': 'N/A'}, {'question': "Who directed 1964's Dr. Strangelove?", 'answer': 'Stanley Kubrick', 'category': 'Classics'}, {'question': 'Who plays Squadron Leader and prison escape organizer Roger "Big X" Bartlett in the 1963 film The Great Escape?', 'answer': 'Richard Attenborough', 'category': 'Classics'}, {'question': 'Who directed the Cary Grant classic His Girl Friday?', 'answer': 'Howard Hawks', 'category': 'Classics'}, {'question': 'What year did Cool Hand Luke come out?', 'answer': '1967', 'category': 'Classics'}, {'question': 'In Ghostbusters II, who is the subject of the evil painting?', 'answer': 'Vigo the Carpathian', 'category': '1980s'}, {'question': 'What song from the Top Gun soundtrack won Best Original Song at the Academy Awards?', 'answer': 'Take My Breath Away', 'category': '1980s'}, {'question': "Who plays Paul Davenport, Susan's ex-boyfriend in the film Big?", 'answer': 'John Heard', 'category': '1980s'}, {'question': 'What actor starred as Officer Jack Ramsay in the 1984 sci-fi action film Runaway?', 'answer': 'Tom Selleck', 'category': '1980s'}, {'question': 'What actress famously plays the first victim in Scream?', 'answer': 'Drew Barrymore', 'category': '1990s'}, {'question': "Who plays Jason Bateman's wife in 2018's Game Night?", 'answer': 'Rachel McAdams', 'category': 'Comedies'}, {'question': 'Drew Barrymore and Adam Sandler star in what 1980s set romantic comedy?', 'answer': 'The Wedding Singer', 'category': 'Romance'}, {'question': "Who plays Michael Fassbender's intruding sister, Sissy, in 2011's Shame?", 'answer': 'Carey Mulligan', 'category': 'Dramas'}, {'question': "Who directed 2007's The Mist?", 'answer': 'Frank Darabont', 'category': 'Horror/Thriller'}, {'question': 'Parabellum is the subtitle to an installment of what action franchise?', 'answer': 'John Wick', 'category': 'Action/Adventure'}, {'question': 'Who starred alongside Ralph Fiennes as the nurse Hana in the romantic drama The English Patient?', 'answer': 'Juliette Binoche', 'category': 'Dramas'}, {'question': "Who played Fred Flintstone in 1994's The Flintstones?", 'answer': 'John Goodman', 'category': '1990s'}, {'question': 'In the 2014 dystopian thriller Snowpiercer, what type of vehicle is the Snowpiercer?', 'answer': 'a train', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which two actresses co-starred together in the 2008 comedy Baby Mama?', 'answer': 'Amy Poehler, Tina Fey', 'category': 'Comedies'}, {'question': "Who directed 1983's Scarface?", 'answer': 'Brian De Palma', 'category': 'Directors'}, {'question': 'In what Disney animated film will you find main characters by the names of Tiana and Prince Naveen?', 'answer': 'The Princess and the Frog', 'category': 'Animated'}, {'question': 'Name the 2015 film with the tagline "Bring Him Home".', 'answer': 'The Martian', 'category': 'N/A'}, {'question': 'What 80s action star famously died in the first act of Executive Decision?', 'answer': 'Steven Seagal', 'category': '1990s'}, {'question': 'Who plays Mark Renton, who is trying to "choose life" away from heroin, in Danny Boyle\'s Trainspotting?', 'answer': 'Ewan McGregor', 'category': '1990s'}, {'question': 'Who plays the young activist Nina who tags along with Bulworth in the 1998 film Bulworth?', 'answer': 'Halle Berry', 'category': '1990s'}, {'question': 'What 1990 film was directed by Jerry Zucker and received a Best Picture Oscar nomination?', 'answer': 'Ghost', 'category': '1990s'}, {'question': 'Paranormal investigators Ed and Lorraine Warren work to help a family terrorized by a dark presence in their farmhouse in what 2013 film?', 'answer': 'The Conjuring', 'category': 'Horror'}, {'question': 'What 2016 South Korean action horror film features commuters struggling to survive during a zombie outbreak?', 'answer': 'Train to Busan', 'category': 'Horror'}, {'question': 'What is the name of the town in The Blair Witch Project?', 'answer': 'Burkittsville', 'category': 'Horror'}, {'question': 'In what 1980 film does George C. Scott play a man who moves into a haunted house after the tragic death of his family?', 'answer': 'The Changeling', 'category': 'Horror'}, {'question': 'What is the name of the ruling Elf played by Cate Blanchett in the Lord of the Rings and the Hobbit films?', 'answer': 'Galadriel', 'category': 'Famous Actors & Actresses'}, {'question': 'In K-19: The Widowmaker, who stars as Captain Alexei Vostrikov, commander of the first Soviet ballistic missile nuclear submarine?', 'answer': 'Harrison Ford', 'category': 'Biopics'}, {'question': 'Chris Pratt and Jennifer Lawrence co-star in what 2016 sci-fi film?', 'answer': 'Passengers', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Happy Gilmore, what is the name of the top pro golfer, played by Christopher McDonald, who starts a bitter rivalry with Happy?', 'answer': 'Shooter McGavin', 'category': 'Sports'}, {'question': "In 1997's Private Parts, what Oscar winner plays Howard Stern's boss at one point in his career, named Dee Dee?", 'answer': 'Allison Janney', 'category': '1990s'}, {'question': 'The 1988 drama Mississippi Burning, loosely based on true events and featuring Willem Dafoe, was directed by whom?', 'answer': 'Alan Parker', 'category': 'Dramas'}, {'question': "Who stars in 2005's Kiss Kiss Bang Bang as a thief who is mistaken for an actor?", 'answer': 'Robert Downey Jr.', 'category': 'Crime'}, {'question': 'What 1990 Stephen King adaptation features characters named Paul Sheldon and Annie Wilkes?', 'answer': 'Misery', 'category': 'Horror/Thriller'}, {'question': "Who stars as Elizabeth Bennet in 2005's Pride & Prejudice?", 'answer': 'Keira Knightley', 'category': 'Dramas'}, {'question': 'Which musical artist stars as Gazelle in Zootopia?', 'answer': 'Shakira', 'category': 'Animated'}, {'question': 'What 2016 sci-fi film stars Michael Shannon, Joel Edgerton, Adam Driver, and Kirsten Dunst?', 'answer': 'Midnight Special', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played Inspector Clouseau in the 2006 remake of The Pink Panther?', 'answer': 'Steve Martin', 'category': 'Comedies'}, {'question': 'In the film Young Guns, who has the role of Josiah Gordon "Doc" Scurlock?', 'answer': 'Kiefer Sutherland', 'category': 'Westerns'}, {'question': 'Robert De Niro and Charles Grodin star in what 80s action comedy?', 'answer': 'Midnight Run', 'category': 'Action/Adventure'}, {'question': 'In what film does Eastwood say "You see, in this world there\'s two kinds of people, my friend: those with loaded guns and those who dig. You dig."?', 'answer': 'The Good, the Bad and the Ugly', 'category': 'Clint Eastwood'}, {'question': "Who plays a fugitive, whom Eastwood's character is tasked with apprehending, in 1993's A Perfect World?", 'answer': 'Kevin Costner', 'category': 'Clint Eastwood'}, {'question': 'In what film does Eastwood play an aging Secret Service Agent trying to stop an assassination plot?', 'answer': 'In the Line of Fire', 'category': 'Clint Eastwood'}, {'question': 'Clint Eastwood starred with Lee Marvin in this 1969 musical.', 'answer': 'Paint Your Wagon', 'category': 'Clint Eastwood'}, {'question': "What movie stars Arnold Schwarzenegger as a Los Angeles firefighter seeking to avenge his son's and wife's deaths?", 'answer': 'Collateral Damage', 'category': 'Sly & Arnie'}, {'question': "What was the last name of Arnie's character in Last Action Hero?", 'answer': 'Slater', 'category': 'Sly & Arnie'}, {'question': 'What 90s thriller stars Sylvester Stallone, Sharon Stone, James Woods, and Eric Roberts?', 'answer': 'The Specialist', 'category': 'Sly & Arnie'}, {'question': 'In Commando, how many men does Kirby leave to protect John and his daughter?', 'answer': '2 men', 'category': 'Sly & Arnie'}, {'question': 'Who starred as Will Kane in the classic High Noon?', 'answer': 'Gary Cooper', 'category': 'Westerns'}, {'question': 'Steven Spielberg directed this science-fiction film released in 2005.', 'answer': 'War of the Worlds', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the John Wick franchise, he is bestowed the nickname Baba Yaga in Russian, which translates to what?', 'answer': 'the Boogeyman', 'category': 'Action/Adventure'}, {'question': 'Edward James Olmos plays drug lord Papi Greco in what Denzel Washington film?', 'answer': '2 Guns', 'category': 'Denzel Washington'}, {'question': "In Better Off Dead, John Cusack's Lane Myer challenges his ex-girlfriend's new beau to compete in what kind of sport in an attempt to win her back?", 'answer': 'skiing', 'category': '1980s'}, {'question': "What fictional brand of cigarettes has made multiple appearances in Tarantino's films including The Hateful Eight, Inglourious Basterds, Kill Bill, and Pulp Fiction?", 'answer': 'Red Apple cigarettes', 'category': 'Quentin Tarantino'}, {'question': 'Who plays the hot-tempered school bus driver in Billy Madison?', 'answer': 'Chris Farley', 'category': 'Comedies'}, {'question': 'What 1997 post-apocalyptic film stars Kevin Costner and Will Patton?', 'answer': 'The Postman', 'category': 'Action/Adventure'}, {'question': 'What is the name of the character voiced by Dwayne "The Rock" Johnson in Moana?', 'answer': 'Maui', 'category': 'Family'}, {'question': 'What 90s romantic drama stars Sarah Michelle Gellar, Ryan Phillippe, and Reese Witherspoon?', 'answer': 'Cruel Intentions', 'category': '1990s'}, {'question': 'What 2016 film stars Bill Murray, Ben Kingsley, Idris Elba, Scarlett Johansson, and Christopher Walken?', 'answer': 'The Jungle Book', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What action movie star has become the U.S. President in The Simpsons Movie?', 'answer': 'Arnold Schwarzenegger', 'category': 'Animated'}, {'question': 'Released in 2017, what is the subtitle of the second Annabelle film that acted as a prequel to the first?', 'answer': 'Creation', 'category': 'Horror/Thriller'}, {'question': 'Kirsten Dunst and Orlando Bloom star in what 2005 Cameron Crowe film?', 'answer': 'Elizabethtown', 'category': 'Dramas'}, {'question': 'Who directed the 1999 Al Pacino film Any Given Sunday?', 'answer': 'Oliver Stone', 'category': 'N/A'}, {'question': "In 1964's Goldfinger, after destroying a drug laboratory in Latin America, James Bond travels where for a vacation?", 'answer': 'Miami', 'category': 'James Bond'}, {'question': 'Who played Bond girl Kara Milovy in The Living Daylights?', 'answer': "Maryam d'Abo", 'category': 'James Bond'}, {'question': 'Gemma Arterton plays a Bond girl in Quantum of Solace whose name evokes a famous Beatles song. What is her name?', 'answer': 'Strawberry Fields', 'category': 'James Bond'}, {'question': 'Who directed every official James Bond film that was released in the 1980s?', 'answer': 'John Glen', 'category': 'James Bond'}, {'question': 'What smooth jazz legend plays himself in A Bad Moms Christmas?', 'answer': 'Kenny G', 'category': '2010s'}, {'question': 'What real-life musician plays the character Cinna, who gives Katniss her wardrobe, in the Hunger Games films?', 'answer': 'Lenny Kravitz', 'category': '2010s'}, {'question': 'In what 2014 film does Tom Hanks play a real-life airline pilot who makes a miracle landing on the Hudson River?', 'answer': 'Sully', 'category': '2010s'}, {'question': 'In what 2013 comedy does a character named Scottie P get a misspelled tattoo saying "No Ragrets"?', 'answer': "We're the Millers", 'category': '2010s'}, {'question': 'Which SNL star co-stars with Chris Kattan in the 1998 comedy A Night at the Roxbury?', 'answer': 'Will Ferrell', 'category': 'Comedies'}, {'question': 'What martial arts legend starred in the films Rumble in the Bronx and The Tuxedo?', 'answer': 'Jackie Chan', 'category': 'Action/Adventure'}, {'question': "Who starred opposite Jack Nicholson in the 2003 romantic drama Something's Gotta Give?", 'answer': 'Diane Keaton', 'category': 'Dramas'}, {'question': 'Who played "princess" Claire Standish in The Breakfast Club?', 'answer': 'Molly Ringwald', 'category': '1980s'}, {'question': 'Neill Blomkamp directed this 2009 sci-fi film starring Sharlto Copley.', 'answer': 'District 9', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who is the lead character in the 2010 drama / teen film Easy A?', 'answer': 'Emma Stone', 'category': 'Coming of Age'}, {'question': 'What 1968 George Romero film is known for creating the modern zombie genre?', 'answer': 'Night of the Living Dead', 'category': 'Horror/Thriller'}, {'question': "Who voiced the robot in 1999's The Iron Giant?", 'answer': 'Vin Diesel', 'category': 'Animated'}, {'question': 'Who plays the villainous Raoul Silva in Skyfall?', 'answer': 'Javier Bardem', 'category': 'Action/Adventure'}, {'question': 'Who directed the 2000 martial arts film Crouching Tiger, Hidden Dragon?', 'answer': 'Ang Lee', 'category': 'Action/Adventure'}, {'question': "What is the name of Captain Nemo's ship in 20,000 Leagues Under the Sea?", 'answer': 'the Nautilus', 'category': 'Action/Adventure'}, {'question': "Who plays the lead, Mitch Robbins, in 1991's City Slickers?", 'answer': 'Billy Crystal', 'category': '1990s'}, {'question': "1997's Volcano takes place in what U.S. city?", 'answer': 'Los Angeles', 'category': '1990s'}, {'question': 'What is the subtitle of Gremlins 2?', 'answer': 'The New Batch', 'category': '1990s'}, {'question': "Who plays snobby socialite Daphne Kluger, who wears the valuable Toussaint diamond necklace during the heist in Ocean's 8?", 'answer': 'Anne Hathaway', 'category': 'Sandra Bullock'}, {'question': 'Who directed Speed?', 'answer': 'Jan de Bont', 'category': 'Sandra Bullock'}, {'question': 'In what 90s action film did Sandra Bullock play a by the book cop named Lenina Huxley?', 'answer': 'Demolition Man', 'category': 'Sandra Bullock'}, {'question': 'Who plays Simon Callem, the protagonist, in The Gift?', 'answer': 'Jason Bateman', 'category': 'Thriller'}, {'question': 'Charlie Sheen starred as Topper Harley in what 90s spoof comedy series?', 'answer': 'Hot Shots!', 'category': 'Charlie Sheen'}, {'question': 'Which member of the Little Rascals is known for having one spiked hair?', 'answer': '"Alfalfa" Switzer', 'category': 'Family'}, {'question': 'Who plays coach Morris Buttermaker in the 1976 Bad News Bears?', 'answer': 'Walter Matthau', 'category': 'Sports'}, {'question': 'What 2005 movie musical begins on Christmas Eve and ends on Christmas a year later?', 'answer': 'Rent', 'category': 'Musicals'}, {'question': 'Who directed Ewan McGregor and Nicole Kidman in Moulin Rouge!?', 'answer': 'Baz Luhrmann', 'category': 'Romance'}, {'question': 'Tony Scott directed Eddie Murphy in what 1987 film?', 'answer': 'Beverly Hills Cop II', 'category': '1980s'}, {'question': 'Who directed the superhero flick Hancock?', 'answer': 'Peter Berg', 'category': '2000s'}, {'question': 'What 1991 fantasy comedy follows a young woman whose unstable life becomes even more complicated when her wild imaginary childhood friend reappears?', 'answer': 'Drop Dead Fred', 'category': '1990s'}, {'question': "In 2018's A Star Is Born, which comedian plays Jack's friend Noodles?", 'answer': 'Dave Chappelle', 'category': 'Dramas'}, {'question': 'Who played writer Helen Sharp opposite Meryl Streep in the 1992 film Death Becomes Her?', 'answer': 'Goldie Hawn', 'category': 'Famous Actors & Actresses'}, {'question': 'Who provides the voice of Marlin in the Finding Nemo franchise?', 'answer': 'Albert Brooks', 'category': 'Animated'}, {'question': "Who plays Bruce Willis' son in 2013's A Good Day to Die Hard?", 'answer': 'Jai Courtney', 'category': 'Action/Adventure'}, {'question': "Who stars as the sorcerer Balthazar in the 2010 film The Sorcerer's Apprentice?", 'answer': 'Nicolas Cage', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Spaceballs, what is the name of the gangster that Lone Starr is in debt to?', 'answer': 'Pizza the Hutt', 'category': 'Comedies'}, {'question': 'What actress made her feature film debut with a starring role in Halloween?', 'answer': 'Jamie Lee Curtis', 'category': 'Horror/Thriller'}, {'question': "Who played Tracy's mother, Edna Turnblad, in the 2007 remake of Hairspray?", 'answer': 'John Travolta', 'category': 'Musicals'}, {'question': 'Terrence Malick wrote and directed what 1974 crime drama?', 'answer': 'Badlands', 'category': 'N/A'}, {'question': 'Who plays Rudyard Kipling in the 1975 adventure film The Man Who Would Be King?', 'answer': 'Christopher Plummer', 'category': '1970s'}, {'question': 'The irreverent adventures of Hawkeye Pierce and Trapper John can be found in what Robert Altman film?', 'answer': 'M*A*S*H', 'category': '1970s'}, {'question': "Who plays Annie's troubled brother Duane in Annie Hall?", 'answer': 'Christopher Walken', 'category': '1970s'}, {'question': "Who played the role of the shy teenage girl named Holly in Terrence Malick's Badlands?", 'answer': 'Sissy Spacek', 'category': '1970s'}, {'question': 'What 1971 film marked the directorial debut of George Lucas?', 'answer': 'THX 1138', 'category': '1970s'}, {'question': "In All the President's Men, where did Bob Woodward have all of his secret meetings with Deep Throat?", 'answer': 'in a parking garage', 'category': '1970s'}, {'question': 'Who plays Louis Creed, the father of Gage, in the 2019 version of Pet Sematary?', 'answer': 'Jason Clarke', 'category': 'New Releases'}, {'question': 'Who plays the billionaire Jack Morris, who funds the underwater research facility that the Meg appears at?', 'answer': 'Rainn Wilson', 'category': 'New Releases'}, {'question': 'BlacKkKlansman won Spike Lee his first ever Oscar. What award did he win?', 'answer': 'Best Adapted Screenplay', 'category': 'New Releases'}, {'question': "Who voices Scar in 2019's The Lion King?", 'answer': 'Chiwetel Ejiofor', 'category': 'New Releases'}, {'question': 'Which Mission: Impossible alumnus played the villain Morgana in The Kid Who Would Be King?', 'answer': 'Rebecca Ferguson', 'category': 'New Releases'}, {'question': 'Which Oscar-winning actress plays Dr. Chiren, a master cyborg engineer, in Alita: Battle Angel?', 'answer': 'Jennifer Connelly', 'category': 'New Releases'}, {'question': 'In what Nicole Kidman film can you find a mysterious substance known as Dust that supposedly connects parallel universes?', 'answer': 'The Golden Compass', 'category': 'Nicole Kidman'}, {'question': "Who wrote and directed 2000's crime comedy Snatch?", 'answer': 'Guy Ritchie', 'category': 'N/A'}, {'question': 'In the Star Wars franchise, Queen Amidala is from which planet?', 'answer': 'Naboo', 'category': 'N/A'}, {'question': 'Who plays actress Anna Scott in Notting Hill?', 'answer': 'Julia Roberts', 'category': 'N/A'}, {'question': 'In what post-apocalyptic tale does Denzel Washington play a blind man?', 'answer': 'The Book of Eli', 'category': 'N/A'}, {'question': 'In 1954\'s Rear Window, who played injured photographer L. B. "Jeff" Jefferies?', 'answer': 'James Stewart', 'category': 'N/A'}, {'question': 'Will Smith is a professional "date doctor" in what comedy?', 'answer': 'Hitch', 'category': 'Will Smith'}, {'question': 'After Moulin Rouge!, Nicole Kidman worked with Baz Luhrmann once more for which 2008 film?', 'answer': 'Australia', 'category': 'Nicole Kidman'}, {'question': 'Who plays an aging boxer named "Honey" Roy Palmer in the 1992 film Diggstown?', 'answer': 'Louis Gossett Jr.', 'category': 'Sports'}, {'question': "What is the name of Captain Hook's first mate in Peter Pan?", 'answer': 'Mr. Smee', 'category': 'Disney'}, {'question': 'Who sings the iconic song "You\'ve Got a Friend in Me" in the original Toy Story?', 'answer': 'Randy Newman', 'category': 'Animated'}, {'question': 'Martin Campbell directed Antonio Banderas and Catherine Zeta-Jones in what 1998 swashbuckling adventure film?', 'answer': 'The Mask of Zorro', 'category': 'Action/Adventure'}, {'question': "Who wrote and directed 2018's Molly's Game?", 'answer': 'Aaron Sorkin', 'category': 'Dramas'}, {'question': 'Sandra Bullock was in three films in 2009. Name one of them.', 'answer': 'The Proposal, All About Steve, The Blind Side', 'category': 'Famous Actors & Actresses'}, {'question': 'What 1954 Disney film features Captain Nemo and his ship the Nautilus?', 'answer': '20,000 Leagues Under the Sea', 'category': 'Fantasy/Sci-Fi'}, {'question': "What famous comedian both starred in and directed 2014's Top Five?", 'answer': 'Chris Rock', 'category': 'Comedies'}, {'question': "Who plays Robert Thorn, the surrogate father of Damien, in Richard Donner's 1976 film The Omen?", 'answer': 'Gregory Peck', 'category': 'Horror/Thriller'}, {'question': 'What year saw the release of Warrior and Tinker Tailor Soldier Spy?', 'answer': '2011', 'category': 'Release Dates'}, {'question': 'Which SNL alum plays the annoying brother-in-law of John Candy in the comedy The Great Outdoors?', 'answer': 'Dan Aykroyd', 'category': 'N/A'}, {'question': 'In what film did Charlize Theron co-star with Matt Damon?', 'answer': 'The Legend of Bagger Vance', 'category': 'Charlize Theron'}, {'question': 'What Woody Allen film starred Charlize Theron, Dan Aykroyd, and Helen Hunt?', 'answer': 'The Curse of the Jade Scorpion', 'category': 'Charlize Theron'}, {'question': 'What is the title of the second Snow White and the Huntsman film?', 'answer': "The Huntsman: Winter's War", 'category': 'Charlize Theron'}, {'question': 'What Academy Award winner wrote the screenplay for the 2011 dramedy Young Adult?', 'answer': 'Diablo Cody', 'category': 'Charlize Theron'}, {'question': "Who played Charlize Theron's co-lead, Professor O'Hara, in Mighty Joe Young?", 'answer': 'Bill Paxton', 'category': 'Charlize Theron'}, {'question': 'Where do Aileen Wuornos and Selby Wall meet for their date where they kiss for the first time in the film Monster?', 'answer': 'a roller skating rink', 'category': 'Charlize Theron'}, {'question': "Who plays Brie Larson's son Jack in 2015's Room?", 'answer': 'Jacob Tremblay', 'category': 'Dramas'}, {'question': 'Timothy Olyphant stars as the lead in what 2007 film based off a video game series?', 'answer': 'Hitman', 'category': 'Action/Adventure'}, {'question': 'The 90s crime thriller Entrapment stars Sean Connery and whom as the female co-lead?', 'answer': 'Catherine Zeta-Jones', 'category': 'Crime'}, {'question': 'Who directed Aquaman?', 'answer': 'James Wan', 'category': 'New Releases'}, {'question': 'Chris Columbus directed Robin Williams in what 1999 sci-fi film?', 'answer': 'Bicentennial Man', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played the lead 17-year-old Veronica Sawyer in the dark comedy Heathers?', 'answer': 'Winona Ryder', 'category': 'Comedies'}, {'question': "You'll find the character of King Triton in what Disney animated film?", 'answer': 'The Little Mermaid', 'category': 'Animated'}, {'question': "The 2007 double feature Grindhouse featured Quentin Tarantino's Death Proof and what Robert Rodriguez film?", 'answer': 'Planet Terror', 'category': 'Horror/Thriller'}, {'question': 'Who directed Mel Gibson in The Patriot?', 'answer': 'Roland Emmerich', 'category': 'N/A'}, {'question': 'Fast Times at Ridgemont High was released in what year?', 'answer': '1982', 'category': 'Release Dates'}, {'question': 'Basic Instinct, The Crying Game, and Alien 3 all came out in what year?', 'answer': '1992', 'category': 'Release Dates'}, {'question': 'What year did the very first movie in the Fast & Furious franchise, The Fast and the Furious, start off this successful franchise?', 'answer': '2001', 'category': 'Release Dates'}, {'question': 'The Michael Douglas film The American President was released in what year?', 'answer': '1995', 'category': 'Release Dates'}, {'question': "In what year was DiCaprio's J. Edgar film released?", 'answer': '2011', 'category': 'Release Dates'}, {'question': 'In what year was The Wolf of Wall Street released?', 'answer': '2013', 'category': 'Release Dates'}, {'question': "This actress played Will Smith's wife in the 1998 thriller Enemy of the State.", 'answer': 'Regina King', 'category': 'Will Smith'}, {'question': "In 2015's Concussion, Will Smith played Dr. Bennet Omalu. What U.S. football city did he do the majority of his early research in?", 'answer': 'Pittsburgh', 'category': 'Will Smith'}, {'question': 'Will Smith plays a man who writes letters to Time, Love, and Death in this 2016 film.', 'answer': 'Collateral Beauty', 'category': 'Will Smith'}, {'question': 'Will Smith produced this 2008 film, which starred Queen Latifah, Dakota Fanning, and Jennifer Hudson and was based on the novel by Sue Monk Kidd.', 'answer': 'The Secret Life of Bees', 'category': 'Will Smith'}, {'question': 'Bill Murray stars as zany camp counselor Tripper Harrison in this 1979 comedy.', 'answer': 'Meatballs', 'category': 'Comedies'}, {'question': "In 2000's Gone in 60 Seconds, who plays Nicolas Cage's old flame Sway?", 'answer': 'Angelina Jolie', 'category': 'Action/Adventure'}, {'question': 'Michel Gondry directed Jim Carrey in what 2000s film?', 'answer': 'Eternal Sunshine of the Spotless Mind', 'category': 'Dramas'}, {'question': 'Which actor won an Oscar for portraying Truman Capote in the 2005 film Capote?', 'answer': 'Philip Seymour Hoffman', 'category': 'Biopics'}, {'question': 'Who plays the character of Valkyrie in Thor: Ragnarok?', 'answer': 'Tessa Thompson', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Batman Forever features Batman taking on which two iconic villains?', 'answer': 'the Riddler, Two-Face', 'category': 'Comic Book'}, {'question': "Who plays Laurie Strode's daughter, Karen, in 2018's Halloween?", 'answer': 'Judy Greer', 'category': 'Horror/Thriller'}, {'question': 'What animated film based on a Dr. Seuss book stars the voice talents of Zac Efron, Taylor Swift, Ed Helms, and Danny DeVito?', 'answer': 'The Lorax', 'category': 'Animated'}, {'question': 'In which film does Cameron Diaz star alongside Leslie Mann and Kate Upton?', 'answer': 'The Other Woman', 'category': 'N/A'}, {'question': 'Name the film in which Humphrey Bogart plays Detective Sam Spade.', 'answer': 'The Maltese Falcon', 'category': 'Classics'}, {'question': 'Who plays the corrupt police captain that Charlton Heston uncovers in Touch of Evil?', 'answer': 'Orson Welles', 'category': 'Classics'}, {'question': 'What classic film inspired the characters in Sleepless in Seattle to meet at the Empire State Building?', 'answer': 'An Affair to Remember', 'category': 'Classics'}, {'question': 'Who directed the 1927 silent classic Metropolis?', 'answer': 'Fritz Lang', 'category': 'Classics'}, {'question': 'Rosemary Clooney and Bing Crosby play Betty and Bob in what 1954 holiday classic?', 'answer': 'White Christmas', 'category': 'Classics'}, {'question': 'What 1955 sci-fi classic features a group of nuclear scientists unknowingly being recruited by aliens to save their planet, Metaluna, from destruction?', 'answer': 'This Island Earth', 'category': 'Classics'}, {'question': 'In the film Tropic Thunder, who plays Kevin Sandusky, the novice actor and only person to attend boot camp before filming?', 'answer': 'Jay Baruchel', 'category': 'Matthew McConaughey'}, {'question': "In 1996's road trip comedy Larger Than Life, Bill Murray inherits what kind of exotic animal after his father passes away?", 'answer': 'an elephant', 'category': 'Matthew McConaughey'}, {'question': 'Who wrote and directed the 2013 coming-of-age drama Mud?', 'answer': 'Jeff Nichols', 'category': 'Matthew McConaughey'}, {'question': "Steven Knight directs McConaughey in 2019's Serenity opposite this A-list actress who plays the character of Karen Zariakas.", 'answer': 'Anne Hathaway', 'category': 'Matthew McConaughey'}, {'question': 'The crime drama White Boy Rick is set during which decade?', 'answer': 'the 1980s', 'category': 'Matthew McConaughey'}, {'question': 'What thriller starred Matthew McConaughey and was directed by William Friedkin?', 'answer': 'Killer Joe', 'category': 'Matthew McConaughey'}, {'question': "What is the name of the title character in Disney's The Hunchback of Notre Dame?", 'answer': 'Quasimodo', 'category': 'Animated'}, {'question': 'How many Oscars has Jack Nicholson won in his career?', 'answer': '3 (for One Flew Over the Cuckoo’s Nest, Terms of Endearment, As Good as It Gets)', 'category': 'Oscars'}, {'question': 'Who directed the 2016 indie dramedy The Lobster?', 'answer': 'Yorgos Lanthimos', 'category': 'Directors'}, {'question': 'Who plays Willie Scott in Indiana Jones and the Temple of Doom?', 'answer': 'Kate Capshaw', 'category': 'Action/Adventure'}, {'question': "In 2010's The Town, Ben Affleck falls for Claire, the manager of the bank they rob. Who plays Claire?", 'answer': 'Rebecca Hall', 'category': 'Dramas'}, {'question': 'Christian Bale and Sam Worthington starred in what 2009 sci-fi action film?', 'answer': 'Terminator Salvation', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played the titular father in 1991's remake of Father of the Bride?", 'answer': 'Steve Martin', 'category': '1990s'}, {'question': 'Name one of the four lead performers in the 2015 horror film Crimson Peak.', 'answer': 'Charlie Hunnam, Jessica Chastain, Mia Wasikowska, Tom Hiddleston', 'category': 'Horror/Thriller'}, {'question': "Who plays the Sheriff of Nottingham in 1991's Robin Hood: Prince of Thieves?", 'answer': 'Alan Rickman', 'category': 'Action/Adventure'}, {'question': 'Mel Gibson lends his voice to the lead character in what 2000s stop-motion animated film?', 'answer': 'Chicken Run', 'category': 'Animated'}, {'question': 'What 2010 historical drama stars Colin Firth and Geoffrey Rush?', 'answer': "The King's Speech", 'category': 'Famous Actors & Actresses'}, {'question': 'What 1970s comedy includes the characters Bo Darville, Cledus Snow, and Sheriff Buford T. Justice?', 'answer': 'Smokey and the Bandit', 'category': 'Comedies'}, {'question': 'In Hot Tub Time Machine 2, who plays the character who, after time travelling, becomes famous from stealing Blacked Eyed Peas songs for his own gain?', 'answer': 'Craig Robinson', 'category': '2010s'}, {'question': "Which actress plays Molly, Jonah Hill's love interest in 21 Jump Street?", 'answer': 'Brie Larson', 'category': '2010s'}, {'question': "In the crime comedy Game Night, who plays Jason Bateman's brother who was kidnapped and must be found by Bateman and his friends?", 'answer': 'Kyle Chandler', 'category': '2010s'}, {'question': 'In the 2017 movie The House, who star as Scott and Kate Johansen, who open up an illegal casino in their basement?', 'answer': 'Will Ferrell, Amy Poehler', 'category': '2010s'}, {'question': "Who directed 2014's Nightcrawler, starring Jake Gyllenhaal?", 'answer': 'Dan Gilroy', 'category': '2010s'}, {'question': 'What Tom Hooper film was released in 2012?', 'answer': 'Les Misérables', 'category': '2010s'}, {'question': 'In the film The Terminator, what is the make and model of the cybernetic assassin sent to kill Sarah Connor?', 'answer': 'T-800', 'category': '1980s'}, {'question': "What is the occupation of Steve Martin's character in the 1987 comedy Roxanne?", 'answer': 'a firefighter', 'category': '1980s'}, {'question': 'In the 1983 action film Blue Thunder, which actor plays a cop in charge of piloting the new high-tech helicopter?', 'answer': 'Roy Scheider', 'category': '1980s'}, {'question': 'This classic character actress known for her distinctive voice plays the Ghost of Christmas Present opposite Bill Murray in Scrooged.', 'answer': 'Carol Kane', 'category': '1980s'}, {'question': 'What quaint town is the setting for the majority of the film Gremlins?', 'answer': 'Kingston Falls', 'category': '1980s'}, {'question': "What is the full name of Daniel LaRusso's main rival in The Karate Kid?", 'answer': 'Johnny Lawrence', 'category': '1980s'}, {'question': 'Name one film in which Nicolas Cage is directed by Jon Turteltaub.', 'answer': "National Treasure, National Treasure: Book of Secrets, The Sorcerer's Apprentice", 'category': 'Directors'}, {'question': "Richard Linklater's Everybody Wants Some!! follows a team of college-aged boys who all play what sport?", 'answer': 'baseball', 'category': '2010s'}, {'question': "Which actress made her final theatrical film appearance as Wilma's mother in the 1994 Flintstones movie?", 'answer': 'Elizabeth Taylor', 'category': 'Famous Actors & Actresses'}, {'question': 'Annie Potts voices which character in the Toy Story franchise?', 'answer': 'Bo Peep', 'category': 'Animated'}, {'question': "Who stars as Betsy, the object of Travis Bickle's obsession, in the 1976 film Taxi Driver?", 'answer': 'Cybill Shepherd', 'category': 'Dramas'}, {'question': 'What was the first collaboration between Martin Scorsese and Robert De Niro?', 'answer': 'Mean Streets', 'category': 'Directors'}, {'question': 'John Sturges directed Steve McQueen and James Garner in what film about prisoners escaping a Nazi prison camp?', 'answer': 'The Great Escape', 'category': 'Action/Adventure'}, {'question': 'What Jim Henson directed film takes place in the realm of Thra?', 'answer': 'The Dark Crystal', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name the two leads of the 2018 film Night School.', 'answer': 'Kevin Hart, Tiffany Haddish', 'category': 'New Releases'}, {'question': 'Which actress starred in the M. Night Shyamalan films The Village and Lady in the Water?', 'answer': 'Bryce Dallas Howard', 'category': 'Horror/Thriller'}, {'question': 'Which 2012 found footage comedy depicts an epic birthday party that goes off the rails?', 'answer': 'Project X', 'category': 'Comedies'}, {'question': 'Who directed the remakes of Cheaper by the Dozen and The Pink Panther?', 'answer': 'Shawn Levy', 'category': 'Directors'}, {'question': 'After directing Return of the Jedi, Richard Marquand went on to make what 1985 thriller starring Glenn Close and Jeff Bridges?', 'answer': 'Jagged Edge', 'category': 'Directors'}, {'question': "Who directed Ansel Elgort, Jamie Foxx, and Lily James in 2017's Baby Driver?", 'answer': 'Edgar Wright', 'category': 'Directors'}, {'question': 'Who directed Al Pacino to an Oscar in Scent of a Woman?', 'answer': 'Martin Brest', 'category': 'Directors'}, {'question': 'What legendary filmmaker directed the 1958 crime drama Touch of Evil?', 'answer': 'Orson Welles', 'category': 'Directors'}, {'question': 'What was the directorial debut of Christopher McQuarrie?', 'answer': 'The Way of the Gun', 'category': 'Directors'}, {'question': "In 1995's Casper, which of the four main Ghostbusters actors has a cameo as his character from the Ghostbusters franchise?", 'answer': 'Dan Aykroyd', 'category': '1990s'}, {'question': 'Jonathan Taylor Thomas starred in which 1998 film named after a popular Christmas song?', 'answer': "I'll Be Home for Christmas", 'category': '1990s'}, {'question': 'What actor stars in The Hard Way as a pampered Hollywood star posing as a cop to research a role?', 'answer': 'Michael J. Fox', 'category': '1990s'}, {'question': "What Spider-Man franchise actor plays drug dealer Rahad Jackson in Paul Thomas Anderson's Boogie Nights?", 'answer': 'Alfred Molina', 'category': '1990s'}, {'question': 'In what 1994 film does Joe Pesci play a homeless man who offers life advice to a college student?', 'answer': 'With Honors', 'category': '1990s'}, {'question': 'What 90s comedy drama features an ensemble cast that includes Vanessa Williams, Vivica A. Fox, and Nia Long?', 'answer': 'Soul Food', 'category': '1990s'}, {'question': 'Who won Best Supporting Actor for The Godfather Part II?', 'answer': 'Robert De Niro', 'category': 'Oscars'}, {'question': "Who played Arthur's mother in Aquaman?", 'answer': 'Nicole Kidman', 'category': 'Comic Book'}, {'question': 'What 2010 film stars Donnie Yen as a Wing Chun martial arts master who heroically takes a stand for the Chinese people during the Japanese invasion of 1937?', 'answer': 'Ip Man', 'category': 'Biopics'}, {'question': "Who plays Shaun's stepdad, Phillip, in Edgar Wright's Shaun of the Dead?", 'answer': 'Bill Nighy', 'category': '2000s'}, {'question': 'What is the name of the demon that possessed Regan in The Exorcist?', 'answer': 'Pazuzu', 'category': 'Horror'}, {'question': 'For what film did Charlize Theron receive her second Oscar nomination?', 'answer': 'North Country', 'category': 'Charlize Theron'}, {'question': 'Robert De Niro and Zac Efron starred in what 2016 comedy?', 'answer': 'Dirty Grandpa', 'category': 'Comedies'}, {'question': "Which actress played the title character in 1976's Carrie?", 'answer': 'Sissy Spacek', 'category': 'Horror/Thriller'}, {'question': 'Which 1979 Spielberg film stars Dan Aykroyd, John Belushi, and Ned Beatty?', 'answer': '1941', 'category': 'Directors'}, {'question': 'What famous cartoon characters were the subjects of a 2017 animated film subtitled The Lost Village?', 'answer': 'the Smurfs', 'category': 'Animated'}, {'question': "Who starred as Jane in 2016's The Legend of Tarzan?", 'answer': 'Margot Robbie', 'category': 'Action/Adventure'}, {'question': "Who directed 2008's The Wrestler?", 'answer': 'Darren Aronofsky', 'category': 'Dramas'}, {'question': 'Which Disney animated classic is known for the line "always let your conscience be your guide."?', 'answer': 'Pinocchio', 'category': 'Quotes'}, {'question': 'In Percy Jackson & the Olympians: The Lightning Thief, Percy is revealed to be the son of which Greek god?', 'answer': 'Poseidon', 'category': 'Fantasy/Sci-Fi'}, {'question': "Hitting it off at the Cannes Film Festival, who plays the lead, Betty, in 2001's Mulholland Drive?", 'answer': 'Naomi Watts', 'category': 'Festival Darlings'}, {'question': 'What is the profession of Tony, who Eilis falls for in the movie Brooklyn?', 'answer': 'a plumber', 'category': 'Festival Darlings'}, {'question': "Life changes for Malcolm, a geek who's surviving life in a tough neighborhood, after a chance invitation to an underground party leads him and his friends into a Los Angeles adventure in what Sundance favorite?", 'answer': 'Dope', 'category': 'Festival Darlings'}, {'question': 'Who plays car dealer and Baptist preacher Marshall Eamons in Boy Erased?', 'answer': 'Russell Crowe', 'category': 'Festival Darlings'}, {'question': 'What documentary, which premiered at Sundance, follows two African-American high school students in Chicago as they strive towards making it to the NBA?', 'answer': 'Hoop Dreams', 'category': 'Festival Darlings'}, {'question': 'What 2017 indie drama tells the story of an aspiring, young rapper struggling to achieve her dream in poverty-stricken New Jersey?', 'answer': 'Patti Cake$', 'category': 'Festival Darlings'}, {'question': "Who plays the difficult and wealthy boyfriend, Trent, of Duncan's mother in The Way, Way Back?", 'answer': 'Steve Carell', 'category': 'Coming of Age'}, {'question': "Who stars as a charismatic teen genius named Chris Knight in 1985's Real Genius?", 'answer': 'Val Kilmer', 'category': 'Coming of Age'}, {'question': 'What school subject did Max Fischer say he "saved" in Rushmore?', 'answer': 'Latin', 'category': 'Coming of Age'}, {'question': 'Which actress plays the title character in the teen comedy I Love You, Beth Cooper?', 'answer': 'Hayden Panettiere', 'category': 'Coming of Age'}, {'question': 'Boyhood takes place in what U.S. state?', 'answer': 'Texas', 'category': 'Coming of Age'}, {'question': "In the 1992 movie School Ties, Matt Damon's character cheats on a final exam on what subject near the end of the movie?", 'answer': 'History', 'category': 'Coming of Age'}, {'question': 'Who stars alongside Billy Crystal as the co-lead in When Harry Met Sally...?', 'answer': 'Meg Ryan', 'category': 'Romance'}, {'question': 'In Get Out, what does Missy Armitage call the location when someone enters the void while being hypnotized in the 2017 horror movie?', 'answer': 'the Sunken Place', 'category': 'Thriller'}, {'question': "Who plays astronaut Jim Lovell in Ron Howard's Apollo 13?", 'answer': 'Tom Hanks', 'category': '1990s'}, {'question': "In 1980's Flash Gordon, what is the name of the evil emperor played by Max von Sydow?", 'answer': 'Ming the Merciless', 'category': '1980s'}, {'question': "Who stars as Truman's friend and partner Harper Lee in 2005's Capote?", 'answer': 'Catherine Keener', 'category': 'Biopics'}, {'question': 'Name two of the three names given to the kids in the 3 Ninjas series.', 'answer': 'Colt, Rocky, Tum Tum', 'category': 'Family'}, {'question': "Brendan Fraser and Rachel Weisz reteam against Arnold Vosloo's Mummy in what 2001 film?", 'answer': 'The Mummy Returns', 'category': 'Action/Adventure'}, {'question': 'In what film does Cameron Diaz play the club lounge singer Tina Carlyle?', 'answer': 'The Mask', 'category': 'Famous Actors & Actresses'}, {'question': 'Which actor plays Detective Popeye Doyle in The French Connection?', 'answer': 'Gene Hackman', 'category': 'Dramas'}, {'question': 'Which early 1990s movie had the tagline "Go ahead, you tell him you didn\'t do your homework."?', 'answer': 'Kindergarten Cop', 'category': 'Taglines'}, {'question': 'Who plays the lead Perseus in the remake of Clash of the Titans and its sequel Wrath of the Titans?', 'answer': 'Sam Worthington', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2013 comedy sequel has the subtitle The Legend Continues?', 'answer': 'Anchorman 2: The Legend Continues', 'category': 'Comedies'}, {'question': 'What horror film, and its remake, features a pet cat named Church?', 'answer': 'Pet Sematary', 'category': 'Horror/Thriller'}, {'question': 'Who voices Batman in The Lego Movie and The Lego Batman Movie?', 'answer': 'Will Arnett', 'category': 'Animated'}, {'question': 'Who directed Mel Gibson in The Patriot?', 'answer': 'Roland Emmerich', 'category': 'N/A'}, {'question': 'Bond gets married to a woman named Tracy in what James Bond film?', 'answer': "On Her Majesty's Secret Service", 'category': 'James Bond'}, {'question': "In what Roger Moore Bond film does Bond drop a villain who appears to be Blofeld into a factory chimney during the film's cold open?", 'answer': 'For Your Eyes Only', 'category': 'James Bond'}, {'question': "In 1997's Tomorrow Never Dies, who stars as Elliot Carver, a psychotic media mogul who plans to provoke global war to boost sales and ratings for his news division?", 'answer': 'Jonathan Pryce', 'category': 'James Bond'}, {'question': "Which actress played Vesper Lynd in 2006's Casino Royale?", 'answer': 'Eva Green', 'category': 'James Bond'}, {'question': 'Sean Connery played James Bond seven times. What was the fourth film in which he portrayed the spy?', 'answer': 'Thunderball', 'category': 'James Bond'}, {'question': "Which famous pop band performed the title track for 1985's A View to a Kill?", 'answer': 'Duran Duran', 'category': 'James Bond'}, {'question': 'Who starred as hitman Arthur Bishop in the original 1972 film The Mechanic?', 'answer': 'Charles Bronson', 'category': '1970s'}, {'question': 'Who played Detective Hercule Poirot in the 1974 version of Murder on the Orient Express?', 'answer': 'Albert Finney', 'category': '1970s'}, {'question': 'In the 1975 cult classic Death Race 2000, the lead character is named after what Universal horror monster?', 'answer': "Frankenstein's monster", 'category': '1970s'}, {'question': "Who played the titular character in 1977's MacArthur?", 'answer': 'Gregory Peck', 'category': '1970s'}, {'question': "In 1976's Taxi Driver, what name does Travis tell the Secret Service agent his name is?", 'answer': 'Henry Krinkle', 'category': '1970s'}, {'question': 'What is the name of the fighter that Rocky fights in the very first fight in the original Rocky film?', 'answer': 'Spider Rico', 'category': '1970s'}, {'question': 'Which 2016 film follows Katherine G. Johnson, Dorothy Vaughan, and Mary Jackson and their struggles at NASA during the 1960s?', 'answer': 'Hidden Figures', 'category': 'Biopics'}, {'question': 'Who co-starred with Denzel Washington in the 2010 film Unstoppable?', 'answer': 'Chris Pine', 'category': 'Action/Adventure'}, {'question': 'Who plays mobster Carmine Falcone in Batman Begins?', 'answer': 'Tom Wilkinson', 'category': 'Comic Book'}, {'question': 'In Any Given Sunday, what is the name of the football team that Cameron Diaz owns and manages?', 'answer': 'the Miami Sharks', 'category': 'Cameron Diaz'}, {'question': 'Nathan Fillion plays a bumbling constable named Dogberry in which 2013 film?', 'answer': 'Much Ado About Nothing', 'category': 'Famous Actors & Actresses'}, {'question': 'What 1989 thriller stars Nicole Kidman and Sam Neill as a sailing couple who find a mysterious stranger abandoning a sinking ship in the middle of the ocean?', 'answer': 'Dead Calm', 'category': 'Nicole Kidman'}, {'question': "Who directed 1997's Face/Off?", 'answer': 'John Woo', 'category': 'Action/Adventure'}, {'question': 'Emma Stone starred as Olive Penderghast, a modern-day Hester Prynne in this film inspired by The Scarlet Letter.', 'answer': 'Easy A', 'category': 'Rom-Coms'}, {'question': 'What 90s mystery stars John Travolta, Madeleine Stowe, James Cromwell, and Timothy Hutton?', 'answer': "The General's Daughter", 'category': 'Dramas'}, {'question': "In 2018's Widows, Liam Neeson plays a professional thief who is married to whom?", 'answer': 'Viola Davis', 'category': 'Crime'}, {'question': "What is the name of Geoffrey Rush's character in the Pirates of the Caribbean films?", 'answer': 'Hector Barbossa', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who stars as country singer Dewey Cox in Walk Hard: The Dewey Cox Story?', 'answer': 'John C. Reilly', 'category': 'Comedies'}, {'question': "Who voiced young Simba in 1994's The Lion King?", 'answer': 'Jonathan Taylor Thomas', 'category': 'Animated'}, {'question': 'What 2001 horror film stars Gina Philips and Justin Long as a sister and brother who encounter a flesh-eating creature on a backcountry road?', 'answer': 'Jeepers Creepers', 'category': 'Horror/Thriller'}, {'question': 'Fatal Attraction, Evil Dead II, and Good Morning, Vietnam were all released in what year?', 'answer': '1987', 'category': 'N/A'}, {'question': 'What film featuring Farley Granger and Robert Walker is about a young tennis player and a charming psychopath that intend to exchange murders?', 'answer': 'Strangers on a Train', 'category': 'Alfred Hitchcock'}, {'question': 'What Hitchcock film featuring Cary Grant and Grace Kelly is set in the French Riviera?', 'answer': 'To Catch a Thief', 'category': 'Alfred Hitchcock'}, {'question': 'The Trouble with Harry, from 1955, marked the movie debut of what Oscar-winning actress?', 'answer': 'Shirley MacLaine', 'category': 'Alfred Hitchcock'}, {'question': 'In Vertigo, Jimmy Stewart plays a retired what?', 'answer': 'a policeman', 'category': 'Alfred Hitchcock'}, {'question': "What establishment is Green Manors, the setting of Hitchcock's Spellbound?", 'answer': 'a mental hospital', 'category': 'Alfred Hitchcock'}, {'question': 'What is the name of the de Winter estate in Rebecca?', 'answer': 'Manderley', 'category': 'Alfred Hitchcock'}, {'question': 'Who plays Douglas Quaid in the 2012 remake of Total Recall?', 'answer': 'Colin Farrell', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed Ex Machina?', 'answer': 'Alex Garland', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played the sorcerer Balthazar Blake in Disney's The Sorcerer's Apprentice?", 'answer': 'Nicolas Cage', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Looper, what is the nickname of the man who in the future will overthrow the five crime bosses and close all the loops?', 'answer': 'the Rainmaker', 'category': 'Fantasy/Sci-Fi'}, {'question': 'At the beginning of the film Mortal Kombat, who is the reigning Mortal Kombat champion?', 'answer': 'Goro', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the first name of Christopher Lambert's character in Highlander?", 'answer': 'Connor', 'category': 'Fantasy/Sci-Fi'}, {'question': "What was Gollum's original name in the Lord of the Rings films?", 'answer': 'Sméagol', 'category': 'Modern Classics'}, {'question': 'What 2003 war film stars Jude Law, Nicole Kidman, and Renée Zellweger?', 'answer': 'Cold Mountain', 'category': 'War'}, {'question': "In 2005's Serenity, who plays the relentless Alliance Operative sent to track down River Tam?", 'answer': 'Chiwetel Ejiofor', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Emily Blunt made her second film appearance in this 2006 David Frankel film.', 'answer': 'The Devil Wears Prada', 'category': 'Famous Actors & Actresses'}, {'question': 'What 2005 adventure fantasy film stars Matt Damon and Heath Ledger?', 'answer': 'The Brothers Grimm', 'category': 'Action/Adventure'}, {'question': "Who is the male lead in 2011's Midnight in Paris?", 'answer': 'Owen Wilson', 'category': 'Romance'}, {'question': 'What 2005 film stars Eric Bana, Daniel Craig, and Ciarán Hinds?', 'answer': 'Munich', 'category': 'Dramas'}, {'question': 'What famous actor directed the films Leatherheads and The Ides of March?', 'answer': 'George Clooney', 'category': 'Famous Actors & Actresses'}, {'question': "What is the name of Robin Wright's character in The Princess Bride?", 'answer': 'Buttercup', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Ace Ventura: Pet Detective, who plays the Dolphins' publicist Melissa, who hires Ace to find their missing mascot?", 'answer': 'Courteney Cox', 'category': 'Comedies'}, {'question': "In 2010's The Wolfman, who plays the main protagonist of the film Lawrence Talbot?", 'answer': 'Benicio del Toro', 'category': 'Horror/Thriller'}, {'question': "Robin Williams lent his voice to two animated films in 1992. Disney's Aladdin and what other film?", 'answer': 'FernGully: The Last Rainforest', 'category': 'Animated'}, {'question': 'Which SNL alum plays the annoying brother-in-law of John Candy in the comedy The Great Outdoors?', 'answer': 'Dan Aykroyd', 'category': 'N/A'}, {'question': 'Who plays the Huntsman in the film Snow White and the Huntsman?', 'answer': 'Chris Hemsworth', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Nonlinear orthography is a form of otherworldly communication in what 2016 sci-fi film?', 'answer': 'Arrival', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the 2011 film Super 8, what item does Joe always keep with him as a memento of his dead mother?', 'answer': 'a locket', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the name of Maurice Evans' character, the lead scientist of the Ape National Assembly in the original Planet of the Apes film?", 'answer': 'Dr. Zaius', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays the vile Bellatrix Lestrange in the Harry Potter films?', 'answer': 'Helena Bonham Carter', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the subtitle of the 2017 King Arthur movie starring Charlie Hunnam?', 'answer': 'Legend of the Sword', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Aerosmith, Alice Cooper, ZZ Top, and Ted Nugent all provide songs for what 1993 comedy?', 'answer': 'Dazed and Confused', 'category': 'Scores & Soundtracks'}, {'question': 'Who composed the score for Commando?', 'answer': 'James Horner', 'category': 'Scores & Soundtracks'}, {'question': 'Who composed the score for Zero Dark Thirty?', 'answer': 'Alexandre Desplat', 'category': 'Scores & Soundtracks'}, {'question': '"Eye of the Tiger" first appeared in which Rocky film?', 'answer': 'Rocky III', 'category': 'Scores & Soundtracks'}, {'question': 'M.I.A.\'s song "Paper Planes" appears in what Danny Boyle film?', 'answer': 'Slumdog Millionaire', 'category': 'Scores & Soundtracks'}, {'question': 'Lesley Barber composed the score for what 2016 film that was later nominated for a Best Picture Oscar?', 'answer': 'Manchester by the Sea', 'category': 'Scores & Soundtracks'}, {'question': "Who stars as Kevin Costner's co-lead in 1996's Tin Cup?", 'answer': 'Rene Russo', 'category': 'Romance'}, {'question': "Who stars as Tonya's on-again, off-again boyfriend and husband Jeff Gillooly in I, Tonya?", 'answer': 'Sebastian Stan', 'category': 'Biopics'}, {'question': 'Hugh Jackman and Meg Ryan starred in what 2001 romantic comedy?', 'answer': 'Kate & Leopold', 'category': 'Comedies'}, {'question': 'Who plays Mr. Miyagi in The Karate Kid?', 'answer': 'Pat Morita', 'category': '1980s'}, {'question': 'Clancy Brown plays Byron Hadley, the brutal captain of the prison guards, in this 1994 classic drama.', 'answer': 'The Shawshank Redemption', 'category': 'Dramas'}, {'question': 'Ron Howard directed Kurt Russell in this 1991 drama about firefighters.', 'answer': 'Backdraft', 'category': 'Directors'}, {'question': 'What 2016 Disney remake stars Robert Redford and Bryce Dallas Howard?', 'answer': "Pete's Dragon", 'category': 'Fantasy/Sci-Fi'}, {'question': "What year saw the release of the films Glory, Tim Burton's Batman, and Born on the Fourth of July?", 'answer': '1989', 'category': 'Release Dates'}, {'question': 'A caving expedition goes horribly wrong, as the explorers become trapped and ultimately pursued by a strange breed of predators in what 2006 film?', 'answer': 'The Descent', 'category': 'Horror/Thriller'}, {'question': 'What 2014 stop-motion animated film featured the voice talents of Ben Kingsley, Nick Frost, Tracy Morgan, Steve Blum, and Dee Bradley Baker?', 'answer': 'The Boxtrolls', 'category': 'Animated'}, {'question': 'Who stars opposite Kurt Russell in the 1987 comedy Overboard?', 'answer': 'Goldie Hawn', 'category': 'Kurt Russell'}, {'question': 'Kurt Russell plays a trained killer who is dumped on a barren planet in what 90s sci-fi action film?', 'answer': 'Soldier', 'category': 'Kurt Russell'}, {'question': "Who plays Kurt Russell's co-lead in 3000 Miles to Graceland?", 'answer': 'Kevin Costner', 'category': 'Kurt Russell'}, {'question': 'In the movie Captain Ron, why does Captain Ron tell Martin Harvey to stay out of the jungle?', 'answer': 'there are guerrillas in the woods', 'category': 'Kurt Russell'}, {'question': 'Who plays police chief Hauk in the Kurt Russell classic Escape from New York?', 'answer': 'Lee Van Cleef', 'category': 'Kurt Russell'}, {'question': 'Kurt Russell starred in this 1984 Jonathan Demme film opposite Goldie Hawn.', 'answer': 'Swing Shift', 'category': 'Kurt Russell'}, {'question': 'Brendan Fraser, Steve Buscemi, and Adam Sandler play three band members looking for their big break who hold a radio station hostage with plastic guns when they refuse to play their demo tape in what film?', 'answer': 'Airheads', 'category': 'Comedies'}, {'question': 'Who played Frederick, the brother of Santa in Fred Claus?', 'answer': 'Vince Vaughn', 'category': 'Comedies'}, {'question': 'Mike Myers followed up Shrek the Third with this financial disappointment in 2008.', 'answer': 'The Love Guru', 'category': 'Comedies'}, {'question': 'What actor plays the nefarious Professor James Moriarty in Holmes & Watson?', 'answer': 'Ralph Fiennes', 'category': 'Comedies'}, {'question': 'In Tootsie, actor Michael Dorsey poses as a woman named Dorothy Michaels, and is hired to act in what type of TV program?', 'answer': 'a daytime soap opera', 'category': 'Comedies'}, {'question': 'Which actor shows up as an aggressive football/soccer megafan Mad Maynard in EuroTrip?', 'answer': 'Vinnie Jones', 'category': 'Comedies'}, {'question': 'Who plays the sultry Sugar Kane in Some Like It Hot?', 'answer': 'Marilyn Monroe', 'category': 'Classics'}, {'question': 'Who plays the IMF technical field agent Benji Dunn in the Mission: Impossible franchise?', 'answer': 'Simon Pegg', 'category': 'Action/Adventure'}, {'question': "Who plays Colonel William Ludlow, head of the Ludlow family in 1994's Legends of the Fall?", 'answer': 'Anthony Hopkins', 'category': 'Brad Pitt'}, {'question': 'In what 1960s comedy does Walter Matthau angrily throw a plate of linguini against the wall of his apartment?', 'answer': 'The Odd Couple', 'category': 'Comedies'}, {'question': 'Name three films that have featured Jon Favreau and Vince Vaughn as actors together.', 'answer': 'Rudy, Swingers, Made, The Break-Up, Four Christmases, Couples Retreat, Term Life', 'category': 'Famous Actors & Actresses'}, {'question': 'In what war film will you find the phrase "Born to Kill" written on combat helmets?', 'answer': 'Full Metal Jacket', 'category': 'War'}, {'question': 'Prince Caspian is the subtitle of the second installment of what franchise?', 'answer': 'The Chronicles of Narnia', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays the lead in the 2010 thriller The American?', 'answer': 'George Clooney', 'category': 'Famous Actors & Actresses'}, {'question': 'Name the 2011 film in which Leonardo DiCaprio was directed by Clint Eastwood and starred alongside Armie Hammer.', 'answer': 'J. Edgar', 'category': 'Dramas'}, {'question': 'Wolfgang Petersen directed this 1997 action film starring Harrison Ford and Gary Oldman.', 'answer': 'Air Force One', 'category': 'Action/Adventure'}, {'question': 'Audrey Tautou stars as a waitress in France in what film?', 'answer': 'Amélie', 'category': '2000s'}, {'question': 'Who plays psychiatrist Ben Sobel in the comedy Analyze This?', 'answer': 'Billy Crystal', 'category': 'Comedies'}, {'question': 'Who stars as a private detective named Matthew Scudder in the 2014 thriller A Walk Among the Tombstones?', 'answer': 'Liam Neeson', 'category': 'Horror/Thriller'}, {'question': 'What Disney animated classic is known for the line "think of the happiest things. It\'s the same as having wings."?', 'answer': 'Peter Pan', 'category': 'Animated'}, {'question': 'Which MCU actor co-starred with Kumail Nanjiani in the action comedy Stuber?', 'answer': 'Dave Bautista', 'category': 'N/A'}, {'question': 'Who played the Mummy in the 2017 film?', 'answer': 'Sofia Butella', 'category': 'Monster'}, {'question': 'What is the name of the 2016 sci-fi black comedy about an unemployed writer, Gloria, who is unwittingly causing a giant monster to wreak havoc halfway across the world?', 'answer': 'Colossal', 'category': 'Monster'}, {'question': "What is the name of Raleigh Becket's Jaeger in Pacific Rim?", 'answer': 'Gipsy Danger', 'category': 'Monster'}, {'question': 'What critically acclaimed actor took over for Robert Englund as Freddy Krueger in the 2010 remake of A Nightmare on Elm Street?', 'answer': 'Jackie Earle Haley', 'category': 'Monster'}, {'question': 'Who plays The Director in The Cabin in the Woods?', 'answer': 'Sigourney Weaver', 'category': 'Monster'}, {'question': "This actor's first leading role in a feature film was as Steve Andrews in the 1958 version of The Blob.", 'answer': 'Steve McQueen', 'category': 'Monster'}, {'question': "Who plays Cruise's co-lead, Major Susan Turner, in Jack Reacher: Never Go Back?", 'answer': 'Cobie Smulders', 'category': 'Tom Cruise'}, {'question': 'Who directed Born on the Fourth of July?', 'answer': 'Oliver Stone', 'category': 'Tom Cruise'}, {'question': "In A Few Good Men, who plays Santiago's commanding officer, Lieutenant Jonathan James Kendrick?", 'answer': 'Kiefer Sutherland', 'category': 'Tom Cruise'}, {'question': 'Tom Cruise and Morgan Freeman star in this 2013 sci-fi action film.', 'answer': 'Oblivion', 'category': 'Tom Cruise'}, {'question': 'In Jerry Maguire, Jerry is fired from a big sports agency. How many of the other employees leave with him to start a new agency?', 'answer': '1', 'category': 'Tom Cruise'}, {'question': 'Who plays the club owner, Dennis Dupree, in Rock of Ages?', 'answer': 'Alec Baldwin', 'category': 'Tom Cruise'}, {'question': "Who plays the character of Keller Dover, a man whose daughter goes missing, in 2013's Prisoners?", 'answer': 'Hugh Jackman', 'category': 'Thriller'}, {'question': "Who plays wealthy businessman Edward Lewis in 1990's Pretty Woman?", 'answer': 'Richard Gere', 'category': 'Romance'}, {'question': "Who lends his voice to the character of Jim Hawkins in 2002's Treasure Planet?", 'answer': 'Joseph Gordon-Levitt', 'category': 'Disney'}, {'question': 'What 1970s Ralph Bakshi cartoon features drug, sex, and cats?', 'answer': 'Fritz the Cat', 'category': 'Animated'}, {'question': "Who plays the skillful hacker Nine Ball in Ocean's 8?", 'answer': 'Rihanna', 'category': 'Sandra Bullock'}, {'question': 'In Midnight in Paris, who plays famous writer F. Scott Fitzgerald?', 'answer': 'Tom Hiddleston', 'category': 'Modern Classics'}, {'question': 'What 1979 comedy was directed by Carl Reiner and stars Steve Martin?', 'answer': 'The Jerk', 'category': 'Comedies'}, {'question': "Who voices the title character in 2010's Megamind?", 'answer': 'Will Ferrell', 'category': 'Animated'}, {'question': "Amadeus is the middle name of what famous composer whose life is chronicled in 1984's Amadeus?", 'answer': 'Wolfgang Amadeus Mozart', 'category': 'Dramas'}, {'question': 'Who plays absentminded professor Philip Brainard in the 1997 film Flubber?', 'answer': 'Robin Williams', 'category': 'Family'}, {'question': 'What sci-fi franchise features characters named Cornelius, Zira, and Caesar?', 'answer': 'Planet of the Apes', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what 1985 film do a group of senior citizens find new life after swimming in a pool with pods containing alien lifeforms?', 'answer': 'Cocoon', 'category': '1980s'}, {'question': 'What 2016 horror film stars Anya Taylor-Joy and was directed by Robert Eggers?', 'answer': 'The Witch', 'category': 'Horror/Thriller'}, {'question': "Who plays the insurance salesman / ex-cop caught up in a criminal conspiracy during his daily commute home in 2018's The Commuter?", 'answer': 'Liam Neeson', 'category': 'Action/Adventure'}, {'question': 'What Disney animated film series features two lead characters by the names of Bernard and Bianca?', 'answer': 'The Rescuers', 'category': 'N/A'}, {'question': "Who plays Professor Norman in Luc Besson's Lucy?", 'answer': 'Morgan Freeman', 'category': 'Scarlett Johansson'}, {'question': 'Scarlett Johansson finds herself in a troubled relationship with whom in the romantic comedy drama Don Jon?', 'answer': 'Joseph Gordon-Levitt', 'category': 'Scarlett Johansson'}, {'question': 'What type of animal did Scarlett Johansson voice in the 2016 animated film Sing?', 'answer': 'a crested porcupine', 'category': 'Scarlett Johansson'}, {'question': 'Scarlett Johansson played Mary Boleyn in The Other Boleyn Girl. Who played her sister, Anne?', 'answer': 'Natalie Portman', 'category': 'Scarlett Johansson'}, {'question': 'How many Academy Awards has Scarlett Johansson been nominated for in her career (as of November 2019)?', 'answer': '0', 'category': 'Scarlett Johansson'}, {'question': 'Which Scarlett Johansson film shares its title with both a novel and a famous painting?', 'answer': 'Girl with a Pearl Earring', 'category': 'Scarlett Johansson'}, {'question': 'In Bring It On, what class does Torrance agree to take in order to appease her mother?', 'answer': 'Advanced Chemistry', 'category': 'Dance'}, {'question': "This actress played the jealous Nikki in 2010's Burlesque.", 'answer': 'Kristen Bell', 'category': 'Dance'}, {'question': 'This 1985 film, about a girl whose dream is to be on a show called Dance TV, starred Sarah Jessica Parker and Helen Hunt.', 'answer': 'Girls Just Want to Have Fun', 'category': 'Dance'}, {'question': 'What is the name of the sequel to Saturday Night Fever?', 'answer': 'Staying Alive', 'category': 'Dance'}, {'question': 'In Hairspray, what is the name of the TV show that Tracy auditions for?', 'answer': 'The Corny Collins Show', 'category': 'Dance'}, {'question': 'This actress played the role of Ariel in the 2011 remake of Footloose.', 'answer': 'Julianne Hough', 'category': 'Dance'}, {'question': "Other than Brad Pitt and George Clooney, name two other actors that play members of their team in Ocean's Eleven.", 'answer': 'Bernie Mac, Carl Reiner, Casey Affleck, Don Cheadle, Eddie Jemison, Elliott Gould, Matt Damon, Scott Caan, Shaobo Qin', 'category': 'Famous Actors & Actresses'}, {'question': 'Tom Hanks and Dan Aykroyd star in what 1987 comedy as Sgt. Joe Friday and Pep Streebeck?', 'answer': 'Dragnet', 'category': 'Tom Hanks'}, {'question': "Who plays the famously hot-headed tennis player John McEnroe in 2018's Borg vs McEnroe?", 'answer': 'Shia LaBeouf', 'category': 'Sports'}, {'question': "In Vanilla Sky, Cameron Diaz and Tom Cruise's characters suffer what type of accident, with dire consequences?", 'answer': 'a car crash', 'category': 'Cameron Diaz'}, {'question': 'In Watchmen, who is the only character to be part of both the Minutemen and the Crimebusters vigilante groups?', 'answer': 'the Comedian', 'category': 'Comic Book'}, {'question': 'In Road House, Dalton has three rules for his staff at the Double Deuce: 1) Never underestimate your opponent, 2) Take it outside, and what was the third?', 'answer': 'Be nice', 'category': 'Action/Adventure'}, {'question': 'Who starred as the lead in the 2003 action film Paycheck?', 'answer': 'Ben Affleck', 'category': 'Action/Adventure'}, {'question': 'Burt Reynolds and Dom DeLuise lend their voices to what 1989 animated film?', 'answer': 'All Dogs Go to Heaven', 'category': 'Animated'}, {'question': "Who plays the real-life person Joy Mangano in 2015's Joy?", 'answer': 'Jennifer Lawrence', 'category': 'Dramas'}, {'question': 'Who directed Conan the Barbarian and Red Dawn?', 'answer': 'John Milius', 'category': 'Directors'}, {'question': "Who played the title character in 1995's Johnny Mnemonic?", 'answer': 'Keanu Reeves', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1976 sports comedy stars Walter Matthau as an alcoholic Little League coach?', 'answer': 'The Bad News Bears', 'category': 'Comedies'}, {'question': 'What horror film stars Jared Leto, Willem Dafoe, and Christian Bale?', 'answer': 'American Psycho', 'category': 'Horror/Thriller'}, {'question': 'Gore Verbinski directed this 2002 horror film starring Naomi Watts.', 'answer': 'The Ring', 'category': 'Horror/Thriller'}, {'question': 'In the 2011 film The Smurfs, what actor stars as Patrick, who lets the Smurfs stay in his apartment?', 'answer': 'Neil Patrick Harris', 'category': 'Family'}, {'question': 'Hugh Grant and Julia Roberts team up for this 1999 romance film.', 'answer': 'Notting Hill', 'category': 'N/A'}, {'question': "Flynn's Arcade is featured in what film?", 'answer': 'Tron', 'category': 'Video Game'}, {'question': 'Who pays Garona Halforcen, the half-orc, half-human hybrid in Warcraft?', 'answer': 'Paula Patton', 'category': 'Video Game'}, {'question': "Who plays Alan Rikkin, CEO of Abstergo Industries, in Assassin's Creed?", 'answer': 'Jeremy Irons', 'category': 'Video Game'}, {'question': 'What video game movie franchise had the 2012 entry Revelation?', 'answer': 'Silent Hill', 'category': 'Video Game'}, {'question': 'What animated video game franchise features the voice talents of Jason Sudeikis and Josh Gad?', 'answer': 'Angry Birds', 'category': 'Video Game'}, {'question': 'Which Fast & Furious actress plays the character Rain in the Resident Evil franchise?', 'answer': 'Michelle Rodriguez', 'category': 'Video Game'}, {'question': 'Shirley MacLaine won the Best Actress Oscar for what film?', 'answer': 'Terms of Endearment', 'category': 'Oscars'}, {'question': 'Al Pacino was nominated for two Academy Awards for films released in 1992. He won for Scent of a Woman. What was the other film he was nominated for?', 'answer': 'Glengarry Glen Ross', 'category': 'Oscars'}, {'question': 'Lina Wertmüller was the first woman to be nominated for this category in 1977.', 'answer': 'Best Director (for Seven Beauties)', 'category': 'Oscars'}, {'question': 'How many Oscars did La La Land win at the 89th Academy Awards?', 'answer': '6 (for Director, Actress, Cinematography, Original Score, Original Song, Production Design)', 'category': 'Oscars'}, {'question': 'Before The Return of the King, this 1987 film was the last Best Picture winner to win Oscars in every category it was nominated in.', 'answer': 'The Last Emperor', 'category': 'Oscars'}, {'question': 'For what film did legendary director Akira Kurosawa receive his only Oscar nomination for Best Director?', 'answer': 'Ran', 'category': 'Oscars'}, {'question': "This actor starred as the lead in Christopher Nolan's Memento.", 'answer': 'Guy Pearce', 'category': 'Thriller'}, {'question': "In 1997's Princess Mononoke, Princess Mononoke is raised by what kind of animal?", 'answer': 'wolves', 'category': 'Animated'}, {'question': 'What rap / hip hop artist had his songs featured in The Amazing Spider-Man 2, Divergent, and Black Panther?', 'answer': 'Kendrick Lamar', 'category': 'Scores & Soundtracks'}, {'question': "What type of animal are Judge Doom's henchmen in Who Framed Roger Rabbit?", 'answer': 'weasels', 'category': 'Modern Classics'}, {'question': "In 1987's The Last Emperor, who plays Reginald Johnston, a kindly Scotsman appointed as the Emperor's tutor to give him a Western-style education?", 'answer': "Peter O'Toole", 'category': 'Biopics'}, {'question': 'What 2003 film stars Bill Murray and Scarlett Johansson?', 'answer': 'Lost in Translation', 'category': 'Dramas'}, {'question': 'Barry Sonnenfield directed this 1999 bomb starring Will Smith.', 'answer': 'Wild Wild West', 'category': 'Action/Adventure'}, {'question': 'What film for the 2013 Academy Awards beat out such films as Life of Pi, Django Unchained, and Silver Linings Playbook for the Best Picture Award?', 'answer': 'Argo', 'category': 'Oscars'}, {'question': 'Who plays the lead of Augustus Waters in The Fault in Our Stars?', 'answer': 'Ansel Elgort', 'category': 'Romance'}, {'question': 'What James Cameron film stars Ed Harris, Mary Elizabeth Mastrantonio, and Michael Biehn?', 'answer': 'The Abyss', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Peyton Reed directed Kirsten Dunst, Eliza Dushku, and Gabrielle Union in what 2000 comedy?', 'answer': 'Bring It On', 'category': 'Comedies'}, {'question': 'Which John Carpenter film revolves around Arnie Cunningham and a vintage 1958 Plymouth Fury?', 'answer': 'Christine', 'category': 'Horror/Thriller'}, {'question': 'Bill Hader voices a wannabe scientist in the small town of Swallow Falls in what 2009 animated film?', 'answer': 'Cloudy with a Chance of Meatballs', 'category': 'Animated'}, {'question': 'Who plays English cartographer Reginald in the 1995 dramedy The Englishman who Went up a Hill but Came down a Mountain?', 'answer': 'Hugh Grant', 'category': '1990s'}, {'question': 'Which film is described by the following synopsis: "As corruption grows in 1950s Los Angeles, three policemen investigate a series of murders with their own brand of justice."?', 'answer': 'L.A. Confidential', 'category': '1990s'}, {'question': "In the 1990 comedy The Freshman, Matthew Broderick's character studies what subject at NYU college?", 'answer': 'film', 'category': '1990s'}, {'question': "In American History X, Norton's racist character ends up bonding with an African-American man in prison over their love of what sport?", 'answer': 'basketball', 'category': '1990s'}, {'question': 'Who directed The Long Kiss Goodnight starring Geena Davis and Samuel L. Jackson?', 'answer': 'Renny Harlin', 'category': '1990s'}, {'question': 'Which 1992 Woody Allen film was the last collaboration between him and Mia Farrow?', 'answer': 'Husbands and Wives', 'category': '1990s'}, {'question': 'In Titanic, Rose has several paintings from which, now famous, artist whom Cal claims is a finger painter who "won\'t amount to a thing"?', 'answer': 'Picasso', 'category': 'Kate Winslet'}, {'question': 'Who directed Leonardo DiCaprio and Kate Winslet in the 2008 film Revolutionary Road?', 'answer': 'Sam Mendes', 'category': 'Kate Winslet'}, {'question': "Who plays Hamlet to Kate Winslet's Ophelia in 1996's Hamlet?", 'answer': 'Kenneth Branagh', 'category': 'Kate Winslet'}, {'question': 'Kate Winslet starred with Melanie Lynskey in this 1994 film, directed by Peter Jackson.', 'answer': 'Heavenly Creatures', 'category': 'Kate Winslet'}, {'question': 'In Finding Neverland, who plays troubled young Peter Llewelyn Davies, whom J. M. Barrie bases Peter Pan off of?', 'answer': 'Freddie Highmore', 'category': 'Kate Winslet'}, {'question': 'In Movie 43, Kate Winslet plays Beth, who goes on a blind date with a man that has a severe deformity. Who plays that man?', 'answer': 'Hugh Jackman', 'category': 'Kate Winslet'}, {'question': 'Flesh-eating beetles called scarabs are featured prominently in this 1999 film starring Brendan Fraser.', 'answer': 'The Mummy', 'category': 'Action/Adventure'}, {'question': "You'll find the characters by the names of Captain Louis Renault and Rick Blaine in what film?", 'answer': 'Casablanca', 'category': 'Classics'}, {'question': 'Who directed Hugh Jackman in Logan?', 'answer': 'James Mangold', 'category': 'Comic Book'}, {'question': 'What famous musician plays Robert "Bob" Paulson, friend of the Narrator and recruit of Tyler Durden in Fight Club?', 'answer': 'Meat Loaf', 'category': 'Brad Pitt'}, {'question': "Who starred as the lead Stewart Graff, a former USC football player, in 1974's Earthquake?", 'answer': 'Charlton Heston', 'category': 'Disaster'}, {'question': 'Michel Gondry directed Jim Carrey in this 2004 drama.', 'answer': 'Eternal Sunshine of the Spotless Mind', 'category': 'Dramas'}, {'question': 'What 2005 action film stars Josh Lucas, Jamie Foxx, and Jessica Biel?', 'answer': 'Stealth', 'category': 'Action/Adventure'}, {'question': 'Gore Verbinski directed this 2002 horror film.', 'answer': 'The Ring', 'category': 'Horror/Thriller'}, {'question': 'Who voices Chicken Little in the 2005 Disney film Chicken Little?', 'answer': 'Zach Braff', 'category': 'Animated'}, {'question': 'Who played the female warrior Neytiri in Avatar?', 'answer': 'Zoe Saldana', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1993 crime film stars Al Pacino and Sean Penn?', 'answer': "Carlito's Way", 'category': 'Crime'}, {'question': 'What year saw the release of True Lies?', 'answer': '1994', 'category': 'Release Dates'}, {'question': 'Who plays the scene-stealing best friend Goh Peik Lin in Crazy Rich Asians?', 'answer': 'Awkwafina', 'category': 'Comedies'}, {'question': 'Who was nominated for an Academy Award for their role as Joe Gould in the film Cinderella Man?', 'answer': 'Paul Giamatti', 'category': 'N/A'}, {'question': 'Who played two identical-looking characters, Simon and James, in the 2014 Richard Ayoade film The Double?', 'answer': 'Jesse Eisenberg', 'category': 'Dramas'}, {'question': 'Which 2010s film, which follows real-life events, is known for the line "I\'m the captain now."?', 'answer': 'Captain Phillips', 'category': 'Dramas'}, {'question': 'Jason Robards plays editor of The Washington Post, Ben Bradlee, in what film?', 'answer': "All the President's Men", 'category': 'Dramas'}, {'question': 'Miracle at St. Anna, a movie set in Italy during World War II, was directed by whom?', 'answer': 'Spike Lee', 'category': 'Dramas'}, {'question': "What is the profession of Tom Hanks' character in 1993's Philadelphia?", 'answer': 'a lawyer', 'category': 'Dramas'}, {'question': 'Who played the titular Duchess of Devonshire in the 2008 drama The Duchess?', 'answer': 'Keira Knightley', 'category': 'Dramas'}, {'question': 'Robin Williams plays U.S. President Dwight D. Eisenhower in what 2013 film?', 'answer': "Lee Daniels' The Butler", 'category': 'Robin Williams'}, {'question': "Robin Williams' first foray into dramatic work was with what 1982 feature film?", 'answer': 'The World According to Garp', 'category': 'Robin Williams'}, {'question': "Which actor plays Neil's father in Dead Poets Society?", 'answer': 'Kurtwood Smith', 'category': 'Robin Williams'}, {'question': 'Robin Williams received his first Oscar nomination for Best Actor for which film?', 'answer': 'Good Morning, Vietnam', 'category': 'Robin Williams'}, {'question': "Who directed Robin Williams and Nathan Lane in 1996's The Birdcage?", 'answer': 'Mike Nichols', 'category': 'Robin Williams'}, {'question': 'Robin Williams stars alongside John Travolta in this 2009 film.', 'answer': 'Old Dogs', 'category': 'Robin Williams'}, {'question': "What is the name of Charlie Kaufman's fictional identical brother in the film Adaptation?", 'answer': 'Donald Kaufman', 'category': 'Dramas'}, {'question': 'What movie features the ensemble cast of Forest Whitaker, Nicolas Cage, Sean Penn, Jennifer Jason Leigh, Judge Reinhold, and Phoebe Cates?', 'answer': 'Fast Times at Ridgemont High', 'category': 'N/A'}, {'question': 'This actor played Willy Wonka in the 2005 film Charlie and the Chocolate Factory.', 'answer': 'Johnny Depp', 'category': 'N/A'}, {'question': 'Who directed the 1995 western the Quick and the Dead?', 'answer': 'Sam Raimi', 'category': 'N/A'}, {'question': "Who played Dana Barrett in 1984's Ghostbusters?", 'answer': 'Sigourney Weaver', 'category': 'N/A'}, {'question': 'Who plays Gomer Pyle in Full Metal Jacket?', 'answer': "Vincent D'Onofrio", 'category': 'N/A'}, {'question': "Who plays Apple creator Steve Jobs in 2015's Steve Jobs?", 'answer': 'Michael Fassbender', 'category': '2010s'}, {'question': 'Who won the Oscar for Best Director at the 2017 Academy Awards ceremony?', 'answer': 'Damien Chazelle', 'category': 'Oscars'}, {'question': 'Jodie Foster stars in what 1980 drama that focuses on four teenage girls who live high-risk lifestyles?', 'answer': 'Foxes', 'category': 'Jodie Foster'}, {'question': 'Jonah Hill and Russell Brand star in what 2010 comedy?', 'answer': 'Get Him to the Greek', 'category': 'Comedies'}, {'question': 'What Oscar-winning actress made her film debut in the 1991 coming-of-age film The Man in the Moon?', 'answer': 'Reese Witherspoon', 'category': 'Coming of Age'}, {'question': 'In the Shrek franchise, who voices Puss in Boots?', 'answer': 'Antonio Banderas', 'category': 'Animated'}, {'question': 'In what film will you hear Daniel Day-Lewis famously say, "I... drink... your... milkshake!"?', 'answer': 'There Will Be Blood', 'category': 'Quotes'}, {'question': 'Jake Gyllenhaal and Michael Peña star as LAPD partners in what 2012 crime drama?', 'answer': 'End of Watch', 'category': 'Dramas'}, {'question': "Who plays the title character in 1994's Richie Rich?", 'answer': 'Macaulay Culkin', 'category': 'Family'}, {'question': 'Who directed Joseph Gordon-Levitt and Bruce Willis in the 2012 sci-fi film Looper?', 'answer': 'Rian Johnson', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who was Brittany Murphy's co-lead in 2003's Just Married?", 'answer': 'Ashton Kutcher', 'category': 'Comedies'}, {'question': 'Which actress plays teenager Madison Russell in Godzilla: King of the Monsters?', 'answer': 'Millie Bobby Brown', 'category': 'Action/Adventure'}, {'question': "In Ocean's Thirteen, which actor is made to wear a fake nose several times throughout the film?", 'answer': 'Matt Damon', 'category': 'Famous Actors & Actresses'}, {'question': 'What 2019 animated film features the voice talents of Kelly Clarkson, Nick Jonas, Blake Shelton, and Pitbull?', 'answer': 'UglyDolls', 'category': 'N/A'}, {'question': 'In Mary Poppins Returns, who plays Cousin Topsy, who runs a fix-it workshop in London?', 'answer': 'Meryl Streep', 'category': 'New Releases'}, {'question': 'Michelle Williams appeared in two films in 2018. I Feel Pretty and what?', 'answer': 'Venom', 'category': 'New Releases'}, {'question': "In the remake of What Women Want, What Men Want, what is Ali Davis' profession?", 'answer': 'a sports agent', 'category': 'New Releases'}, {'question': 'Who plays the Director of the CIA in Mission: Impossible – Fallout?', 'answer': 'Angela Bassett', 'category': 'New Releases'}, {'question': 'In Finding Nemo, what nickname was Nemo given in the fish tank at the dentist office?', 'answer': 'Sharkbait', 'category': 'Pixar'}, {'question': "In Incredibles 2, who voices Winston Deavor, a superhero fan who wants to bring back superheroes through revamping the public's perception?", 'answer': 'Bob Odenkirk', 'category': 'Pixar'}, {'question': 'What was the first Pixar movie to be nominated for Best Picture at the Oscars?', 'answer': 'Up', 'category': 'Pixar'}, {'question': 'In Brave, what is the name of the monstrous bear that was the prince from old legends?', 'answer': "Mor'du", 'category': 'Pixar'}, {'question': 'What year saw the release of the James Bond film GoldenEye?', 'answer': '1995', 'category': 'Release Dates'}, {'question': 'Which actor played Sonny Corleone in The Godfather?', 'answer': 'James Caan', 'category': 'N/A'}, {'question': 'What character did Kevin Smith portray in Clerks, Mallrats, and Dogma?', 'answer': 'Silent Bob', 'category': 'N/A'}, {'question': 'What was the first collaboration between actor Tom Hanks and director Steven Spielberg?', 'answer': 'Saving Private Ryan', 'category': 'N/A'}, {'question': 'Who directed the 2006 film Apocalypto?', 'answer': 'Mel Gibson', 'category': 'N/A'}, {'question': 'Leslie Nielsen plays the incompetent Frank Drebin in what comedy franchise?', 'answer': 'The Naked Gun', 'category': 'N/A'}, {'question': "Who won a Best Actress Oscar for their role in 2006's The Queen?", 'answer': 'Helen Mirren', 'category': 'Oscars'}, {'question': "Who stars as a past-his-prime tennis pro whose ambition is rekindled when he meets a rising female player in 2004's Wimbledon?", 'answer': 'Paul Bettany', 'category': 'Sports'}, {'question': 'Name the film where you can hear Robert De Niro say the line "if you don\'t cooperate, you\'re gonna suffer from \'fistophobia\'."?', 'answer': 'Midnight Run', 'category': 'Crime'}, {'question': 'What 2008 action comedy stars Seth Rogen and James Franco?', 'answer': 'Pineapple Express', 'category': 'Action/Adventure'}, {'question': 'Which movie legend played the male lead in the Hitchcock films Suspicion and Notorious?', 'answer': 'Cary Grant', 'category': 'Famous Actors & Actresses'}, {'question': 'Who played the title character in The Talented Mr. Ripley?', 'answer': 'Matt Damon', 'category': 'Dramas'}, {'question': 'In Forrest Gump, Forrest meets which member of the Beatles?', 'answer': 'John Lennon', 'category': '1990s'}, {'question': 'What 80s sci-fi film stars Dennis Quaid, Martin Short, and Meg Ryan?', 'answer': 'Innerspace', 'category': 'Fantasy/Sci-Fi'}, {'question': "Which actress plays Paul Rudd's fiancée in I Love You, Man?", 'answer': 'Rashida Jones', 'category': 'Comedies'}, {'question': "Who plays reporter Mikael Blomkvist in 2011's The Girl with the Dragon Tattoo?", 'answer': 'Daniel Craig', 'category': 'Horror/Thriller'}, {'question': "Who directed 2012's stop-motion Disney film Frankenweenie?", 'answer': 'Tim Burton', 'category': 'Animated'}, {'question': 'What year did Harry Potter and the Prisoner of Azkaban release in theaters?', 'answer': '2004', 'category': 'N/A'}, {'question': "In Blade Runner, before he dies, Roy Batty says that all of the incredible moments he's witnessed will be lost like what?", 'answer': 'tears in rain', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays the White Queen in 2010's Alice in Wonderland?", 'answer': 'Anne Hathaway', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the acronym used for the virtual reality game in Ready Player One?', 'answer': 'the OASIS', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What film starred Elijah Wood, Jordana Brewster, and Josh Hartnett as students who suspect that their teachers are aliens after a series of bizarre occurrences?', 'answer': 'The Faculty', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who stars as vampire hematologist Edward Dalton in Daybreakers?', 'answer': 'Ethan Hawke', 'category': 'Fantasy/Sci-Fi'}, {'question': 'This 1985 film, directed by Wolfgang Petersen, starred Dennis Quaid and Lou Gossett Jr.', 'answer': 'Enemy Mine', 'category': 'Fantasy/Sci-Fi'}, {'question': "In David Fincher's Seven, who plays the police captain?", 'answer': 'R. Lee Ermey', 'category': 'David Fincher'}, {'question': "In Panic Room, what health condition does Kristen Stewart's Sarah have that causes complications during the home invasion?", 'answer': 'diabetes', 'category': 'David Fincher'}, {'question': 'In Alien 3, what Game of Thrones actor plays former inmate and facility doctor Dr. Clemens?', 'answer': 'Charles Dance', 'category': 'David Fincher'}, {'question': 'For which film did David Fincher receive his first Academy Award nomination for Best Director?', 'answer': 'The Curious Case of Benjamin Button', 'category': 'David Fincher'}, {'question': "In The Social Network, after Facebook launched, it was said Mark was the biggest thing on Harvard's campus, which included 19 Nobel laureates, 15 Pulitzer Prize winners, two future Olympians, and a what?", 'answer': 'movie star', 'category': 'David Fincher'}, {'question': 'The first victim that Somerset and Mills encounter in Seven was "guilty" of which sin?', 'answer': 'gluttony', 'category': 'David Fincher'}, {'question': 'In The Disaster Artist, what does Tommy force Greg to do, which costs Greg the opportunity for a small role on a popular TV show?', 'answer': 'shave his beard', 'category': 'Dramas'}, {'question': "Who stars as the lead in 2018's Death Wish?", 'answer': 'Bruce Willis', 'category': 'N/A'}, {'question': 'Who played the well-meaning inventor father in Honey, I Shrunk the Kids?', 'answer': 'Rick Moranis', 'category': 'N/A'}, {'question': 'What 2006 sci-fi film co-stars Julianne Moore, Michael Caine, Chiwetel Ejiofor, and Clive Owen?', 'answer': 'Children of Men', 'category': 'N/A'}, {'question': 'What 1985 John Hughes movie involves two teenage boys who create a woman using their computer?', 'answer': 'Weird Science', 'category': 'N/A'}, {'question': 'What year saw the release of the Victor Fleming movie Gone with the Wind?', 'answer': '1939', 'category': 'N/A'}, {'question': 'What 1998 film saw Cate Blanchett receive her first Oscar nomination?', 'answer': 'Elizabeth', 'category': 'Oscars'}, {'question': "In Hook, what multiple-Oscar-nominated actress cameos as a man and pirate on Hook's crew?", 'answer': 'Glenn Close', 'category': 'Steven Spielberg'}, {'question': 'Angelina Jolie co-stars with her father Jon Voight in two films. Lara Croft: Tomb Raider and what other film?', 'answer': "Lookin' to Get Out", 'category': 'Angelina Jolie'}, {'question': "Who directed 2002's The Bourne Identity?", 'answer': 'Doug Liman', 'category': 'Action/Adventure'}, {'question': 'Which Robin Williams film has the tagline "Laughter is contagious."?', 'answer': 'Patch Adams', 'category': 'Taglines'}, {'question': 'Denzel Washington and Julia Roberts starred in what 1993 legal thriller?', 'answer': 'The Pelican Brief', 'category': 'Dramas'}, {'question': 'Gore Verbinski directed Dane DeHaan in what 2017 psychological horror film?', 'answer': 'A Cure for Wellness', 'category': 'Horror/Thriller'}, {'question': 'In what 1987 sci-fi film will you find the quote "Dead or alive, you\'re coming with me."?', 'answer': 'RoboCop', 'category': 'Fantasy/Sci-Fi'}, {'question': 'You can find the characters of Neal Page and Del Griffith in what 1987 John Hughes film?', 'answer': 'Planes, Trains and Automobiles', 'category': 'Comedies'}, {'question': 'Bill Pullman and Bridget Fonda fight a giant crocodile in this 1999 horror thriller.', 'answer': 'Lake Placid', 'category': 'Horror/Thriller'}, {'question': 'Who voiced the lead character of Bolt the dog in Bolt?', 'answer': 'John Travolta', 'category': 'Animated'}, {'question': 'In what film did Lauren Bacall make her feature debut alongside Humphrey Bogart?', 'answer': 'To Have and Have Not', 'category': 'Classics'}, {'question': "In Miracle on 34th Street, Kris brings the rivalry between Macy's and what other department store to an end, just in time for the Christmas season?", 'answer': 'Gimbels', 'category': 'Classics'}, {'question': "In what European city did Carol Reed's The Third Man take place?", 'answer': 'Vienna', 'category': 'Classics'}, {'question': 'In West Side Story, before falling in love with Tony, Maria has an arranged fiancé. What is his name?', 'answer': 'Chino Martin', 'category': 'Classics'}, {'question': 'In Erin Brockovich, what type of accident caused the injury Erin has at the beginning of the film?', 'answer': 'a car accident', 'category': 'Julia Roberts'}, {'question': 'What 1997 film co-stars Julia Roberts and Mel Gibson?', 'answer': 'Conspiracy Theory', 'category': 'Julia Roberts'}, {'question': "Who plays Julia Roberts' patient and love interest in 1991's Dying Young?", 'answer': 'Campbell Scott', 'category': 'Julia Roberts'}, {'question': 'Julia Roberts plays the producer of a financial show in what film?', 'answer': 'Money Monster', 'category': 'Julia Roberts'}, {'question': "Which actor played the Penguin in 1966's Batman: The Movie?", 'answer': 'Burgess Meredith', 'category': 'Comic Book'}, {'question': 'Who played U.S. President James Marshall in Air Force One?', 'answer': 'Harrison Ford', 'category': 'N/A'}, {'question': 'Who directed Shutter Island?', 'answer': 'Martin Scorsese', 'category': 'N/A'}, {'question': "Who plays Scotty in J. J. Abrams' Star Trek?", 'answer': 'Simon Pegg', 'category': 'N/A'}, {'question': 'What kind of creature is Gizmo in Gremlins?', 'answer': 'a Mogwai', 'category': 'N/A'}, {'question': 'Who was the headlining star in the 90s action films The Specialist and Assassins?', 'answer': 'Sylvester Stallone', 'category': 'Action/Adventure'}, {'question': 'Which actor has played characters such as Lt. Daniel Kaffee, Ethan Hunt, and Frank T.J. Mackey?', 'answer': 'Tom Cruise (in A Few Good Men, Mission: Impossible franchise, Magnolia)', 'category': 'Famous Actors & Actresses'}, {'question': "Who played Chuckie Sullivan, Will's best friend in Good Will Hunting?", 'answer': 'Ben Affleck', 'category': 'Dramas'}, {'question': 'Which Disney animated film is known for the song lyric "a tale as old as time"?', 'answer': 'Beauty and the Beast', 'category': 'Animated'}, {'question': 'Who played John Connor in Terminator Salvation?', 'answer': 'Christian Bale', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed Elf?', 'answer': 'Jon Favreau', 'category': 'Comedies'}, {'question': 'Who starred as lawyer and adulterer Dan Gallagher in Fatal Attraction?', 'answer': 'Michael Douglas', 'category': 'Horror/Thriller'}, {'question': "What two classic cartoon characters famously take part in a dueling piano duet in 1988's Who Framed Roger Rabbit?", 'answer': 'Daffy Duck, Donald Duck', 'category': '1980s'}, {'question': 'Wally Pfister won his Best Cinematography Academy Award for what Christopher Nolan film?', 'answer': 'Inception', 'category': 'Christopher Nolan'}, {'question': "In Dunkirk, what is the name of the sailing vessel captained by Mark Rylance's character?", 'answer': 'Moonstone', 'category': 'Christopher Nolan'}, {'question': 'Who plays Dr. Mann, the brilliant scientist who was one of the original astronauts sent through the wormhole in Interstellar?', 'answer': 'Matt Damon', 'category': 'Christopher Nolan'}, {'question': 'Finish the quote from The Dark Knight Rises: "You don\'t fear death. You welcome it. Your punishment must be more...".', 'answer': 'severe', 'category': 'Christopher Nolan'}, {'question': "Which sports film finds Kurt Russell coaching the 1980 US men's hockey team?", 'answer': 'Miracle', 'category': 'Kurt Russell'}, {'question': "Which actress plays Kurt Russell's wife in the 1992 thriller Unlawful Entry?", 'answer': 'Madeleine Stowe', 'category': 'Kurt Russell'}, {'question': 'In which Kurt Russell film will you find the quote "Give my regards to King Tut"?', 'answer': 'Stargate', 'category': 'Kurt Russell'}, {'question': 'Kurt Russell first appeared in which Fast and the Furious movie?', 'answer': 'Furious 7', 'category': 'Kurt Russell'}, {'question': 'Who stars as Benjamin, a widower looking to start over with his kids in the Cameron Crowe film We Bought a Zoo?', 'answer': 'Matt Damon', 'category': 'Dramas'}, {'question': 'Who directs Will Smith in the film Ali?', 'answer': 'Michael Mann', 'category': 'Will Smith'}, {'question': 'In Upgrade, who plays the lead Grey Trace who is implanted with the STEM technology?', 'answer': 'Logan Marshall-Green', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played Robert Ford in The Assassination of Jesse James by the Coward Robert Ford?', 'answer': 'Casey Affleck', 'category': 'Brad Pitt'}, {'question': 'Tony Amendola plays a disillusioned priest named Father Perez in Annabelle and what other Conjuring universe film?', 'answer': 'The Curse of La Llorona', 'category': 'Horror'}, {'question': 'Who was the star in the martial arts action films Fist of Fury and The Way of the Dragon?', 'answer': 'Bruce Lee', 'category': 'Action/Adventure'}, {'question': 'What music star played a psychotic character named Bishop in the 1992 crime thriller Juice?', 'answer': 'Tupac Shakur', 'category': '1990s'}, {'question': 'Who played Mary Poppins author P. L. Travers in Saving Mr. Banks?', 'answer': 'Emma Thompson', 'category': 'Dramas'}, {'question': 'Who played Neil Armstrong in First Man?', 'answer': 'Ryan Gosling', 'category': 'New Releases'}, {'question': "Who played Army Colonel Jack O'Neill in 1994's Stargate?", 'answer': 'Kurt Russell', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actress provides the voice of weather girl Sam Sparks in Cloudy with a Chance of Meatballs?', 'answer': 'Anna Faris', 'category': 'Animated'}, {'question': 'Which film in the Scream franchise takes place mainly in Hollywood during the filming of a Stab sequel?', 'answer': 'Scream 3', 'category': 'Horror/Thriller'}, {'question': 'In Mike and Dave Need Wedding Dates, name one of the two actresses that play Alice and Tatiana, who answer their ad and accompany them to Hawaii.', 'answer': 'Anna Kendrick, Aubrey Plaza', 'category': 'Comedies'}, {'question': 'This iconic actress starred opposite Cary Grant and Jimmy Stewart in the classic 1940 film The Philadelphia Story.', 'answer': 'Katharine Hepburn', 'category': 'N/A'}, {'question': "Haley Joel Osment can see dead people in M. Night Shyamalan's The Sixth Sense. Who plays his mother Lynn Sear in the film?", 'answer': 'Toni Collette', 'category': 'Horror'}, {'question': 'What horror film stars Karen Gillan as a woman trying to exonerate her brother, who was convicted for murder, by proving the crime was caused by a supernatural mirror?', 'answer': 'Oculus', 'category': 'Horror'}, {'question': "In Thirteen Ghosts, F. Murray Abraham's character dies, leaving his home to Arthur, his nephew and a widower with two children, played by which Galaxy Quest actor?", 'answer': 'Tony Shalhoub', 'category': 'Horror'}, {'question': "In Shaun of the Dead, which actor plays Philip, Shaun's stepfather?", 'answer': 'Bill Nighy', 'category': 'Horror'}, {'question': 'Natalie Portman makes an appearance in what Michael Mann film?', 'answer': 'Heat', 'category': 'Natalie Portman'}, {'question': 'Natalie Portman plays the warrior Isabel in what 2011 comedy?', 'answer': 'Your Highness', 'category': 'Natalie Portman'}, {'question': 'Natalie Portman and Oscar Isaac star together in what 2018 drama?', 'answer': 'Annihilation', 'category': 'Natalie Portman'}, {'question': "Natalie Portman makes a cameo as the President's daughter in what 90s comedy?", 'answer': 'Mars Attacks!', 'category': 'Natalie Portman'}, {'question': 'Warren Beatty has been nominated in over 4 different Oscar categories. For which one has he won his only Oscar?', 'answer': 'Best Director (for Reds)', 'category': 'Oscars'}, {'question': 'Jeff Bridges has been nominated for an Academy Award 7 times. What film got him his first nomination?', 'answer': 'The Last Picture Show', 'category': 'Oscars'}, {'question': 'Who received Best Director nominations for the classic films A Foreign Affair, Stalag 17, and Witness for the Prosecution?', 'answer': 'Billy Wilder', 'category': 'Oscars'}, {'question': 'Name this Best Picture winning film on the synopsis: "A young nurse tends to a badly-burned plane crash victim. Flashbacks reveal his involvement in a fateful love affair."', 'answer': 'The English Patient', 'category': 'Oscars'}, {'question': "What was Pixar's third theatrically released film, released in 1999?", 'answer': 'Toy Story 2', 'category': 'Pixar'}, {'question': 'What actor won Best Actor in 1988 for his role in Rain Man?', 'answer': 'Dustin Hoffman', 'category': 'Oscars'}, {'question': 'In Jurassic Park, who plays park owner John Hammond?', 'answer': 'Richard Attenborough', 'category': '1990s'}, {'question': 'This 1980s action superstar was originally considered for the role of Axel Foley in Beverly Hills Cop.', 'answer': 'Sylvester Stallone', 'category': 'Famous Actors & Actresses'}, {'question': 'Which 1995 rom-com was written by, directed by, and stars Billy Crystal, and co-stars Debra Winger?', 'answer': 'Forget Paris', 'category': 'Rom-Coms'}, {'question': 'Owen Wilson has been directed by Wes Anderson 6 times. Name three of the movies.', 'answer': 'Bottle Rocket, The Royal Tenenbaums, The Life Aquatic with Steve Zissou, The Darjeeling Limited, Fantastic Mr. Fox, The Grand Budapest Hotel', 'category': 'Famous Actors & Actresses'}, {'question': 'In Mission: Impossible – Rogue Nation, what is the name of the international terrorist organization led by Solomon Lane?', 'answer': 'the Syndicate', 'category': 'Spy'}, {'question': 'In the film Blade Runner 2049, who plays Sapper Morton, the Nexus 8 model replicate that K is sent to retire at the beginning of the movie?', 'answer': 'Dave Bautista', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1989 romantic comedy features the line, "I gave her my heart, she gave me a pen."?', 'answer': 'Say Anything...', 'category': 'Quotes'}, {'question': 'Who directed Alita: Battle Angel?', 'answer': 'Robert Rodriguez', 'category': 'Action/Adventure'}, {'question': "Which actor received an Oscar nomination for 2016's Hell or High Water?", 'answer': 'Jeff Bridges', 'category': 'Oscars'}, {'question': "Who played Will Smith's son in The Pursuit of Happyness?", 'answer': 'Jaden Smith', 'category': 'Dramas'}, {'question': 'In which animated film does the band Smash Mouth perform the songs "All Star" and "I\'m a Believer"?', 'answer': 'Shrek', 'category': 'Animated'}, {'question': "Which musician played the Goblin King in 1986's Labyrinth?", 'answer': 'David Bowie', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what famous comedy will you find the Black Knight, the Holy Hand Grenade of Antioch, and the Bridge of Death?', 'answer': 'Monty Python and the Holy Grail', 'category': 'Comedies'}, {'question': 'Who directed the mystery thriller Shutter Island?', 'answer': 'Martin Scorsese', 'category': 'Horror/Thriller'}, {'question': 'Which comic book adaptation film depicts an anti-government crusader who wears a mask of the historical figure Guy Fawkes?', 'answer': 'V for Vendetta', 'category': 'Comic Book'}, {'question': 'What comic book movie sequel features cameos from Brad Pitt, Bill Skarsgard, and Matt Damon?', 'answer': 'Deadpool 2', 'category': 'N/A'}, {'question': 'How many rings were given to the dwarf lords?', 'answer': '7', 'category': 'Middle-earth'}, {'question': 'Who is the first of the fellowship to offer to accompany Frodo to Mordor after Gandalf?', 'answer': 'Aragorn', 'category': 'Middle-earth'}, {'question': 'Who plays King Théoden in the Lord of the Rings films?', 'answer': 'Bernard Hill', 'category': 'Middle-earth'}, {'question': 'What Doctor Who veteran played the wizard Radagast the Brown in the Hobbit trilogy?', 'answer': 'Sylvester McCoy', 'category': 'Middle-earth'}, {'question': 'Who played Alex Murphy, a.k.a. RoboCop, in the 1987 film of the same name?', 'answer': 'Peter Weller', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In King Arthur: Legend of the Sword, who plays former knight Sir Bedivere, leader of the resistance?', 'answer': 'Djimon Hounsou', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who played Giselle in the 2007 Disney film Enchanted?', 'answer': 'Amy Adams', 'category': 'Fantasy/Sci-Fi'}, {'question': 'This 1985 fantasy film, written and directed by Walter Murch, is a direct sequel to the 1939 classic The Wizard of Oz.', 'answer': 'Return to Oz', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays Sandra Bullock's co-lead in the film Two Weeks Notice?", 'answer': 'Hugh Grant', 'category': 'Romance'}, {'question': 'What 1994 film had 3 songs that were nominated for Best Original Song?', 'answer': 'The Lion King', 'category': 'Oscars'}, {'question': "In 1992's Aladdin, who does Aladdin pretend to be to save Jasmine from having her hand cut off by the merchant in the marketplace?", 'answer': 'her brother', 'category': 'Disney'}, {'question': "What iconic actor plays the title character in 1971's The Abominable Dr. Phibes?", 'answer': 'Vincent Price', 'category': 'Horror'}, {'question': 'Who played Marshal Samuel Gerard in The Fugitive and U.S. Marshals?', 'answer': 'Tommy Lee Jones', 'category': 'Action/Adventure'}, {'question': 'The Mummy, starring Brendan Fraser, came out in what year?', 'answer': '1999', 'category': 'Release Dates'}, {'question': "What Best Picture winning film follows England's 1924 Olympic running team?", 'answer': 'Chariots of Fire', 'category': 'Dramas'}, {'question': 'What DCEU actor provides the voice of Flynn Rider in the film Tangled?', 'answer': 'Zachary Levi', 'category': 'Animated'}, {'question': "What actress starred as astronomer Ellie Arroway in 1997's Contact?", 'answer': 'Jodie Foster', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed Zack and Miri Make a Porno?', 'answer': 'Kevin Smith', 'category': 'Comedies'}, {'question': "What Star Wars actor provides the voice of Chucky in 2019's Child's Play?", 'answer': 'Mark Hamill', 'category': 'Horror/Thriller'}, {'question': 'Hugh Jackman plays what celebrated entertainer in The Greatest Showman?', 'answer': 'P. T. Barnum', 'category': 'Family'}, {'question': "1996's Bottle Rocket was the directorial debut of what filmmaker?", 'answer': 'Wes Anderson', 'category': 'N/A'}, {'question': 'What drama stars Andrew Garfield, Michael Shannon, and Laura Dern and is about a recently unemployed single father struggling to get back his foreclosed home by working for the real estate broker that is the source of his frustration?', 'answer': '99 Homes', 'category': 'Festival Darlings'}, {'question': 'What was the title of the 2004 documentary from Michael Moore that criticized the U.S. involvement in the Iraq War?', 'answer': 'Fahrenheit 9/11', 'category': 'Festival Darlings'}, {'question': "In 2018's Colette, who plays Colette's husband Henry?", 'answer': 'Dominic West', 'category': 'Festival Darlings'}, {'question': "In The Fisher King, Robin Williams plays Parry, a deluded homeless man who claims it's his mission to find what?", 'answer': 'the Holy Grail', 'category': 'Festival Darlings'}, {'question': "In 2004's Hotel Rwanda, two African tribes are the cause of the genocide in Rwanda. The Hutus and the what?", 'answer': 'Tutsis', 'category': 'Festival Darlings'}, {'question': 'Who plays young Stevie in the film Mid90s?', 'answer': 'Sunny Suljic', 'category': 'Festival Darlings'}, {'question': 'In Moonstruck, where does Ronny suggest he and Loretta go before he will stop seeing her?', 'answer': 'the opera', 'category': 'Rom-Coms'}, {'question': 'In Legally Blonde, who plays Brooke Windham, the murder defendant Elle befriends?', 'answer': 'Ali Larter', 'category': 'Rom-Coms'}, {'question': 'Who played the title character in the teen rom-com I Love You, Beth Cooper?', 'answer': 'Hayden Panettiere', 'category': 'Rom-Coms'}, {'question': 'What group sings at the wedding at the very end of Bridesmaids?', 'answer': 'Wilson Phillips', 'category': 'Rom-Coms'}, {'question': "Which iconic actress played Grandma Annie in 2009's The Proposal?", 'answer': 'Betty White', 'category': 'Rom-Coms'}, {'question': "This comedic actress played Anita, Josie's promiscuous co-worker, in 1999's Never Been Kissed.", 'answer': 'Molly Shannon', 'category': 'Rom-Coms'}, {'question': 'Who provided the score for the films Apollo 13, A Beautiful Mind, and Braveheart?', 'answer': 'James Horner', 'category': 'Scores & Soundtracks'}, {'question': 'John Malkovich plays the evil king Galbatorix, who has his own black dragon, in what 2006 film?', 'answer': 'Eragon', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What Friends actor starred in the 1996 comedy Ed, playing a baseball pitcher who has a chimpanzee as a roommate and a teammate?', 'answer': 'Matt LeBlanc', 'category': 'Sports'}, {'question': 'John Carpenter directed Chevy Chase in what 1992 film?', 'answer': 'Memoirs of an Invisible Man', 'category': 'Directors'}, {'question': 'What Mike Nichols film stars Elizabeth Taylor and Richard Burton as a destructive married couple?', 'answer': "Who's Afraid of Virginia Woolf?", 'category': 'Dramas'}, {'question': 'Which actor stars in multiple roles in the psychological thriller Raising Cain?', 'answer': 'John Lithgow', 'category': 'Famous Actors & Actresses'}, {'question': 'Which action franchise features such characters as Oddjob, Jaws, and Xenia Onatopp?', 'answer': 'James Bond (in Goldfinger, The Spy Who Loved Me / Moonraker, GoldenEye)', 'category': 'Action/Adventure'}, {'question': 'Who plays the role of Elton John in the film Rocketman?', 'answer': 'Taron Egerton', 'category': 'New Releases'}, {'question': 'In what 1989 film will you hear this phrase: "O Captain! My Captain!"?', 'answer': 'Dead Poets Society', 'category': 'Dramas'}, {'question': "Who directed 2005's War of the Worlds?", 'answer': 'Steven Spielberg', 'category': 'Directors'}, {'question': 'In Jumanji: Welcome to the Jungle, who plays the avatar Franklin "Mouse" Finbar, who is a weapons carrier and zoologist that has a weakness for cake?', 'answer': 'Kevin Hart', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Seth Rogen and Bill Hader play wacky cops in what 2007 teen comedy?', 'answer': 'Superbad', 'category': 'Comedies'}, {'question': 'Which horror franchise centers on a boy named Damien who may be the Antichrist?', 'answer': 'The Omen', 'category': 'Horror/Thriller'}, {'question': "Wilbur is what type of animal in the animated classic Charlotte's Web?", 'answer': 'a pig', 'category': 'Animated'}, {'question': 'Meryl Streep starred as vain actress Madeline Ashton in this 1992 comedy.', 'answer': 'Death Becomes Her', 'category': 'Meryl Streep'}, {'question': "Who directed 2014's Into the Woods?", 'answer': 'Rob Marshall', 'category': 'Meryl Streep'}, {'question': "Kevin Kline plays Meryl Streep's emotionally unstable lover Nathan Landau in this film.", 'answer': "Sophie's Choice", 'category': 'Meryl Streep'}, {'question': 'In what film does Meryl Streep act opposite Stanley Tucci, Emily Blunt, and Simon Baker?', 'answer': 'The Devil Wears Prada', 'category': 'Meryl Streep'}, {'question': "Who plays the wife of Philip Seymour Hoffman's character in The Master?", 'answer': 'Amy Adams', 'category': 'Paul Thomas Anderson'}, {'question': 'In Magnolia, an unusual event occurs when what type of animal falls from the skies above Los Angeles?', 'answer': 'frogs', 'category': 'Paul Thomas Anderson'}, {'question': 'Who stars as private detective "Doc" Sportello in Inherent Vice?', 'answer': 'Joaquin Phoenix', 'category': 'Paul Thomas Anderson'}, {'question': 'Who plays porn director Jack Horner in Boogie Nights?', 'answer': 'Burt Reynolds', 'category': 'Paul Thomas Anderson'}, {'question': "In Dances with Wolves, Lt. John Dunbar is fighting during which war in the film's opening?", 'answer': 'the Civil War', 'category': 'Dramas'}, {'question': 'Who directed the 1974 comedy Blazing Saddles?', 'answer': 'Mel Brooks', 'category': 'Comedies'}, {'question': 'What Stanley Kubrick movie did Nicole Kidman star in?', 'answer': 'Eyes Wide Shut', 'category': 'Famous Actors & Actresses'}, {'question': 'Who plays cigar-chomping fighter Wild Bill Kelso in the Spielberg film 1941?', 'answer': 'John Belushi', 'category': 'Steven Spielberg'}, {'question': 'Denzel Washington plays a former Marine named John Creasy in what 2004 film?', 'answer': 'Man on Fire', 'category': 'Action/Adventure'}, {'question': 'What 2010 action film stars Bruce Willis, Morgan Freeman, and Helen Mirren?', 'answer': 'Red', 'category': 'Action/Adventure'}, {'question': 'Brad Pitt plays an Irish gypsy, or "pikey", in what 2000 crime film?', 'answer': 'Snatch', 'category': 'Crime'}, {'question': 'Who stars as Whitey Bulger in the crime drama Black Mass?', 'answer': 'Johnny Depp', 'category': 'Dramas'}, {'question': 'What 80s film is known for the line "greed, for lack of a better word, is good"?', 'answer': 'Wall Street', 'category': 'Quotes'}, {'question': 'Who plays the android David in Prometheus?', 'answer': 'Michael Fassbender', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who co-stars with Ben Stiller as Hutch in 2004's Starsky & Hutch?", 'answer': 'Owen Wilson', 'category': 'Comedies'}, {'question': 'What 2017 horror film stars Jaeden Lieberher, Finn Wolfhard, and Sophia Lillis?', 'answer': 'It', 'category': 'Horror/Thriller'}, {'question': 'What 1998 Dreamworks animated film tells the biblical story of Moses?', 'answer': 'The Prince of Egypt', 'category': 'Animated'}, {'question': 'Who played Mouth in The Goonies?', 'answer': 'Corey Feldman', 'category': 'N/A'}, {'question': 'In what 2007 film does a killer use a cattle bolt gun as his weapon of choice?', 'answer': 'No Country for Old Men', 'category': '2000s'}, {'question': "What business does Adam Sandler's Longfellow Deeds own in 2000's Mr. Deeds?", 'answer': 'a pizzeria', 'category': '2000s'}, {'question': "Who plays Justin Long's best friend Sherman Schrader in the 2006 comedy Accepted?", 'answer': 'Jonah Hill', 'category': '2000s'}, {'question': 'What city does Lost in Translation take place in?', 'answer': 'Tokyo', 'category': '2000s'}, {'question': "In Avatar, what is the name of the sacred tree of the Na'vi?", 'answer': 'the Tree of Souls', 'category': '2000s'}, {'question': 'In 50 First Dates, Lucy wakes up every day thinking it is which day of the week?', 'answer': 'Sunday', 'category': '2000s'}, {'question': 'Who co-stars with Denzel in the John Grisham adaptation of The Pelican Brief?', 'answer': 'Julia Roberts', 'category': 'Denzel Washington'}, {'question': "In the film Flight, who plays a drug dealer named Harling who delivers his inventory to Denzel's character in a hotel room?", 'answer': 'John Goodman', 'category': 'Denzel Washington'}, {'question': "Who plays the villainous Dave York, Robert McCall's former partner, in Antoine Fuqua's The Equalizer 2?", 'answer': 'Pedro Pascal', 'category': 'Denzel Washington'}, {'question': 'In Remember the Titans, Coach Boone gives a speech to his players at the site of what famous wartime battle?', 'answer': 'the Battle of Gettysburg', 'category': 'Denzel Washington'}, {'question': 'Denzel Washington starred in what 90s film that features performances by Viggo Mortensen, James Gandolfini, and Steve Zahn?', 'answer': 'Crimson Tide', 'category': 'Denzel Washington'}, {'question': 'What 2012 film stars Denzel Washington and Ryan Reynolds?', 'answer': 'Safe House', 'category': 'Denzel Washington'}, {'question': 'What Disney villain has blue flames for hair?', 'answer': 'Hades (in Hercules)', 'category': 'Animated'}, {'question': '1988 German film Wings of Desire was remade as what film in 1998 with Nicolas Cage and Meg Ryan?', 'answer': 'City of Angels', 'category': 'Famous Actors & Actresses'}, {'question': 'Which actor plays a character simply called "Control", who is the mentor of Gary Oldman\'s character in Tinker Tailor Soldier Spy?', 'answer': 'John Hurt', 'category': 'Spy'}, {'question': "Who plays a train hijacker called Ryder in 2009's The Taking of Pelham 123?", 'answer': 'John Travolta', 'category': 'Action/Adventure'}, {'question': 'What 2018 romantic comedy stars Constance Wu, Henry Golding, and Awkwafina?', 'answer': 'Crazy Rich Asians', 'category': 'Rom-Coms'}, {'question': "Who stars as the pacifist Desmond Doss in 2016's Hacksaw Ridge?", 'answer': 'Andrew Garfield', 'category': 'Dramas'}, {'question': 'Who composed the score for Up?', 'answer': 'Michael Giacchino', 'category': 'Animated'}, {'question': 'Hugh Jackman and Sigourney Weaver were directed by Neill Blomkamp in what 2015 sci-fi movie?', 'answer': 'Chappie', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What SNL actress co-starred with Mila Kunis in The Spy Who Dumped Me?', 'answer': 'Kate McKinnon', 'category': 'Comedies'}, {'question': 'Who played Norman Bates in Psycho II and Psycho III?', 'answer': 'Anthony Perkins', 'category': 'Horror/Thriller'}, {'question': 'Which actor plays Willie Mays Hayes in Major League?', 'answer': 'Wesley Snipes', 'category': '1980s'}, {'question': 'Who directed Leonardo DiCaprio in The Beach?', 'answer': 'Danny Boyle', 'category': 'Leonardo DiCaprio'}, {'question': "Who stars as Helen Gandy in Clint Eastwood's J. Edgar?", 'answer': 'Naomi Watts', 'category': 'Leonardo DiCaprio'}, {'question': 'Leonardo DiCaprio plays a character by the name of Hugh Glass in what 2015 film?', 'answer': 'The Revenant', 'category': 'Leonardo DiCaprio'}, {'question': 'The 2002 drama Catch Me If You Can earned two Oscar nominations. Which actor was nominated in the Supporting Actor category?', 'answer': 'Christopher Walken', 'category': 'Leonardo DiCaprio'}, {'question': 'Who directed the 2015 mockumentary horror comedy What We Do in the Shadows?', 'answer': 'Jemaine Clement, Taika Waititi', 'category': 'Horror'}, {'question': 'Which film follows four teenage witches named Sarah, Nancy, Bonnie, and Rochelle?', 'answer': 'The Craft', 'category': 'Horror'}, {'question': 'Ash was a student at what university in The Evil Dead?', 'answer': 'Michigan State University', 'category': 'Horror'}, {'question': 'What is the name of the demons in Hellraiser?', 'answer': 'Cenobites', 'category': 'Horror'}, {'question': 'What 2019 horror film stars Elizabeth Banks and was produced by James Gunn?', 'answer': 'Brightburn', 'category': 'New Releases'}, {'question': 'What 80s sci-fi epic was directed by David Lynch and stars Kyle MacLachlan, Max von Sydow, Patrick Stewart, and Sting?', 'answer': 'Dune', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who voices Miles' father Jefferson in Spider-Man: Into the Spider-Verse?", 'answer': 'Brian Tyree Henry', 'category': 'Comic Book'}, {'question': 'What film in the Mission: Impossible franchise was directed by Pixar filmmaker Brad Bird?', 'answer': 'Mission: Impossible – Ghost Protocol', 'category': 'Action/Adventure'}, {'question': 'Will Smith plays an assassin and his clone in what 2019 thriller?', 'answer': 'Gemini Man', 'category': 'New Releases'}, {'question': "Who stars as Dick Cheney in 2018's Vice?", 'answer': 'Christian Bale', 'category': 'Dramas'}, {'question': "What is the name of Gaston's short-statured sidekick in Beauty and the Beast?", 'answer': 'LeFou', 'category': 'Animated'}, {'question': 'Who plays teenager Kim Boggs in Edward Scissorhands?', 'answer': 'Winona Ryder', 'category': 'Fantasy/Sci-Fi'}, {'question': "Which actress swaps bodies with Lindsay Lohan in 2003's Freaky Friday?", 'answer': 'Jamie Lee Curtis', 'category': 'Comedies'}, {'question': 'Who stars as Nick Dunne in the David Fincher thriller Gone Girl?', 'answer': 'Ben Affleck', 'category': 'Horror/Thriller'}, {'question': 'Who plays crop duster pilot Russell Casse in Independence Day?', 'answer': 'Randy Quaid', 'category': '1990s'}, {'question': "Which actor co-stars with Kate Beckinsale as the main lead in 2001's Serendipity?", 'answer': 'John Cusack', 'category': 'N/A'}, {'question': 'Who plays Maude Lebowski in The Big Lebowski?', 'answer': 'Julianne Moore', 'category': 'Coen Brothers'}, {'question': 'What film focuses on the character Larry Gopnik, a college professor whose life unravels during the 1960s?', 'answer': 'A Serious Man', 'category': 'Coen Brothers'}, {'question': "In Raising Arizona, Nicolas Cage's character steals what brand of diaper from a liquor store?", 'answer': 'Huggies', 'category': 'Coen Brothers'}, {'question': "In No Country for Old Men, Josh Brolin's character finds after stumbling onto a drug deal gone wrong a satchel that holds how much money?", 'answer': '2 million dollars', 'category': 'Coen Brothers'}, {'question': 'Nicolas Cage has won his only Oscar for what film?', 'answer': 'Leaving Las Vegas', 'category': 'Oscars'}, {'question': 'Michael Keaton received his only Oscar nomination for what film?', 'answer': 'Birdman or (The Unexpected Virtue of Ignorance)', 'category': 'Oscars'}, {'question': 'Who won an Academy Award for playing Edwin Hoover in Little Miss Sunshine?', 'answer': 'Alan Arkin', 'category': 'Oscars'}, {'question': 'What was the first musical to win Best Picture?', 'answer': 'The Broadway Melody', 'category': 'Oscars'}, {'question': 'What Best Picture winning film was directed by Guillermo del Toro?', 'answer': 'The Shape of Water', 'category': 'Oscars'}, {'question': 'Name two of the actors portraying the members of N.W.A in Straight Outta Compton.', 'answer': "Aldis Hodge, Corey Hawkins, Jason Mitchell, Neil Brown Jr., O'Shea Jackson Jr.", 'category': 'Biopics'}, {'question': 'Which actress plays Alita in the 2019 Alita: Battle Angel?', 'answer': 'Rosa Salazar', 'category': 'New Releases'}, {'question': 'Who directed the 90s action film Face/Off?', 'answer': 'John Woo', 'category': 'Action/Adventure'}, {'question': 'In Scott Pilgrim vs. the World, how many total evil exes must Scott defeat?', 'answer': '7 evil exes', 'category': 'Comic Book'}, {'question': 'What 2018 historical drama stars Emma Stone, Rachel Weisz, and Olivia Colman?', 'answer': 'The Favourite', 'category': 'Dramas'}, {'question': 'Which actor played the real life individuals Jim Lovell, Richard Phillips, and Walt Disney?', 'answer': 'Tom Hanks (in Apollo 13, Captain Phillips, Saving Mr. Banks)', 'category': 'Famous Actors & Actresses'}, {'question': "Which actress stars as a character called the Major in 2017's Ghost in the Shell?", 'answer': 'Scarlett Johansson', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What spoof franchise had the installments "The Smell of Fear" and "The Final Insult"?', 'answer': 'The Naked Gun', 'category': 'Comedies'}, {'question': "Who plays Lisbeth Salander in 2018's The Girl in the Spider's Web?", 'answer': 'Claire Foy', 'category': 'Horror/Thriller'}, {'question': 'What film features such characters as Oogie Boogie and the Clown with the Tear-Away Face?', 'answer': 'The Nightmare Before Christmas', 'category': 'Animated'}, {'question': 'What 80s action film is known for the line "Come out to the coast. We\'ll get together, have a few laughs"?', 'answer': 'Die Hard', 'category': 'N/A'}, {'question': 'Nora Ephron directed what movie, based on a 60s TV sitcom, that starred Nicole Kidman and Will Ferrell?', 'answer': 'Bewitched', 'category': 'Nora Ephron'}, {'question': "Nora Ephron wrote the screenplay for 1990's My Blue Heaven, in which what famous comedian plays a mobster who moves to suburbia?", 'answer': 'Steve Martin', 'category': 'Nora Ephron'}, {'question': 'Which performer stars in the Nora Ephron films Michael and Lucky Numbers?', 'answer': 'John Travolta', 'category': 'Nora Ephron'}, {'question': "Which actress, known for TV's The Simpsons, stars as a single mom turned stand-up comic in Nora Ephron's directorial debut This Is My Life?", 'answer': 'Julie Kavner', 'category': 'Nora Ephron'}, {'question': 'Anne Hathaway co-stars with Julie Andrews in what 2001 Disney family film?', 'answer': 'The Princess Diaries', 'category': 'Anne Hathaway'}, {'question': "In Colossal, a giant monster inexplicably attacks what Asian country whenever Anne Hathaway's character gets drunk?", 'answer': 'South Korea', 'category': 'Anne Hathaway'}, {'question': 'Anne Hathaway appears in The Dark Knight Rises and what other film from director Christopher Nolan?', 'answer': 'Interstellar', 'category': 'Anne Hathaway'}, {'question': "In Les Misérables, what is the title of the song that Fantine, Anne Hathaway's character, famously sings during her moment of despair?", 'answer': 'I Dreamed a Dream', 'category': 'Anne Hathaway'}, {'question': "In the film Daddy's Little Girls, Gabrielle Union plays a lawyer who falls in love with a single dad played by Idris Elba. What is his blue-collar profession?", 'answer': 'a mechanic', 'category': 'Tyler Perry'}, {'question': 'Which actress is the lead in the rom-com 27 Dresses?', 'answer': 'Katherine Heigl', 'category': 'N/A'}, {'question': 'What MCU film received a Best Picture nomination?', 'answer': 'Black Panther', 'category': 'N/A'}, {'question': 'Who directed the 2019 film Us?', 'answer': 'Jordan Peele', 'category': 'N/A'}, {'question': 'In what year were the comedies Anchorman, Dodgeball, and Mean Girls released?', 'answer': '2004', 'category': 'N/A'}, {'question': "Who plays Grocer, the chief rival to John Cusack's character, in Grosse Pointe Blank?", 'answer': 'Dan Aykroyd', 'category': 'N/A'}, {'question': 'Who stars as the lead Anthony Swofford in the war film Jarhead?', 'answer': 'Jake Gyllenhaal', 'category': 'War'}, {'question': "Who stars as detective Hercule Poirot in Sidney Lumet's 1974 adaptation of Murder on the Orient Express?", 'answer': 'Albert Finney', 'category': '1970s'}, {'question': "What is the subtitle of the 2003 sequel to Charlie's Angels?", 'answer': 'Full Throttle', 'category': 'Action/Adventure'}, {'question': "Michael Cera and Kat Dennings starred in this 2008 Peter Sollett rom-com about two strangers who go in search of their favorite band's secret show.", 'answer': "Nick & Norah's Infinite Playlist", 'category': 'Rom-Coms'}, {'question': 'Who stars as an aging Broadway actress named Margo Channing in the Academy Award winning All About Eve?', 'answer': 'Bette Davis', 'category': 'Classics'}, {'question': 'In the Apatow written and produced Heavyweights, what is the name of Tony Perkis\' new head counselor who is from "far away"?', 'answer': 'Lars', 'category': 'Judd Apatow'}, {'question': 'Angelina Jolie stars in what 2014 Disney film?', 'answer': 'Maleficent', 'category': 'N/A'}, {'question': 'Who co-starred opposite Charlie Sheen in the 1990 comedy Men at Work?', 'answer': 'Emilio Estevez', 'category': 'N/A'}, {'question': "Who plays Detective Lee Butters, who is dating the daughter of Danny Glover's character, in Lethal Weapon 4?", 'answer': 'Chris Rock', 'category': 'Action/Adventure'}, {'question': 'What 80s film is known for the line "nobody puts Baby in a corner"?', 'answer': 'Dirty Dancing', 'category': '1980s'}, {'question': 'What famous 1957 film from director Sidney Lumet follows a jury as they deliberate on the case of a young man accused of murder?', 'answer': '12 Angry Men', 'category': 'Dramas'}, {'question': 'Brad Pitt plays an Irish gypsy, or "pikey", in what 2000 crime film?', 'answer': 'Snatch', 'category': 'Crime'}, {'question': 'Who directed the 2005 film Serenity?', 'answer': 'Joss Whedon', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2015 holiday comedy stars Joseph Gordon-Levitt, Seth Rogen, and Anthony Mackie?', 'answer': 'The Night Before', 'category': 'Comedies'}, {'question': 'What 2018 horror film stars Toni Collette, Alex Wolff, and Gabriel Byrne?', 'answer': 'Hereditary', 'category': 'Horror/Thriller'}, {'question': "Who voices the title character in 2018's The Grinch?", 'answer': 'Benedict Cumberbatch', 'category': 'Animated'}, {'question': "This Academy Award winning actress played Lady Tremaine, the evil stepmother in Disney's live-action adaptation of Cinderella.", 'answer': 'Cate Blanchett', 'category': 'N/A'}, {'question': 'What is the subtitle of the second Twilight film?', 'answer': 'New Moon', 'category': 'Young Adult Adaptations'}, {'question': 'What actress is the lead in The Mortal Instruments: City of Bones?', 'answer': 'Lily Collins', 'category': 'Young Adult Adaptations'}, {'question': 'Which actor plays Augustus Waters in The Fault in Our Stars?', 'answer': 'Ansel Elgort', 'category': 'Young Adult Adaptations'}, {'question': 'Which actor plays Gale Hawthorne in the Hunger Games franchise?', 'answer': 'Liam Hemsworth', 'category': 'Young Adult Adaptations'}, {'question': 'What 2005 YA adaptation stars Blake Lively, America Ferrera, Amber Tamblyn, and Alexis Bledel?', 'answer': 'The Sisterhood of the Traveling Pants', 'category': 'Young Adult Adaptations'}, {'question': "What pop music superstar plays a character named Rosemary in 2014's The Giver?", 'answer': 'Taylor Swift', 'category': 'Young Adult Adaptations'}, {'question': 'What 1992 comedy has multiple endings, including the "Scooby-Doo ending"?', 'answer': "Wayne's World", 'category': '1990s'}, {'question': 'What 1999 comedy stars Steve Martin and Eddie Murphy, and depicts the making of a fictional film called "Chubby Rain"?', 'answer': 'Bowfinger', 'category': '1990s'}, {'question': 'What Best Picture winning film had the characters Ned Logan, W. W. Beauchamp, Delilah Fitzgerald, and Skinny Dubois?', 'answer': 'Unforgiven', 'category': '1990s'}, {'question': 'In the 1990 movie Presumed Innocent, who plays lawyer Alejandro "Sandy" Stern?', 'answer': 'Raul Julia', 'category': '1990s'}, {'question': 'In Austin Powers: The Spy Who Shagged Me, Dr. Evil and Scott exchange emotional words on national TV on whose talk show?', 'answer': 'Jerry Springer', 'category': '1990s'}, {'question': 'Which 1994 thriller, based on a Michael Crichton novel, stars Michael Douglas and Demi Moore?', 'answer': 'Disclosure', 'category': '1990s'}, {'question': 'Johnny Depp made his acting debut in what Wes Craven horror classic?', 'answer': 'A Nightmare on Elm Street', 'category': 'Famous Actors & Actresses'}, {'question': 'What 2012 martial arts film, made in Indonesia, was directed by Gareth Evans?', 'answer': 'The Raid: Redemption', 'category': 'Action/Adventure'}, {'question': 'What 2000s spy film has the following actors in its cast: Christopher Plummer, Mark Strong, Amanda Peet, William Hurt, and Chris Cooper?', 'answer': 'Syriana', 'category': 'Spy'}, {'question': 'Which martial arts superstar starred in the action films The One, Unleashed, and Fearless?', 'answer': 'Jet Li', 'category': 'Action/Adventure'}, {'question': "Who directed 2018's A Simple Favor?", 'answer': 'Paul Feig', 'category': 'Directors'}, {'question': 'What historical drama stars Daniel Day-Lewis, Sally Field, and Tommy Lee Jones?', 'answer': 'Lincoln', 'category': 'Dramas'}, {'question': 'What famous comedic actor provides the voice of Horton in Horton Hears a Who!?', 'answer': 'Jim Carrey', 'category': 'Animated'}, {'question': 'Ana de Armas, Robin Wright, Dave Bautista, and Jared Leto co-star in what 2017 sci-fi film?', 'answer': 'Blade Runner 2049', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What year 2000 comedy stars Breckin Meyer, Seann William Scott, and Tom Green?', 'answer': 'Road Trip', 'category': 'Comedies'}, {'question': 'Which MCU actor plays the character of Curt in The Cabin in the Woods?', 'answer': 'Chris Hemsworth', 'category': 'Horror/Thriller'}, {'question': 'What Saturday Night Live alum played supporting characters in the following films: Small Soldiers, Coneheads, and Jingle All the Way?', 'answer': 'Phil Hartman', 'category': 'Famous Actors & Actresses'}, {'question': 'Who plays the character Louis Gara, a con recently released from prison, in the film Jackie Brown?', 'answer': 'Robert De Niro', 'category': 'N/A'}, {'question': 'Who directed Batman v Superman: Dawn of Justice?', 'answer': 'Zack Snyder', 'category': 'DCEU'}, {'question': 'David Harbour of Stranger Things fame makes an appearance as a government agent Dexter Tolliver in which DCEU film?', 'answer': 'Suicide Squad', 'category': 'DCEU'}, {'question': 'Who plays Steppenwolf in Justice League?', 'answer': 'Ciarán Hinds', 'category': 'DCEU'}, {'question': 'Who plays the last surviving member of the Council of Wizards who gives Billy his powers in Shazam!?', 'answer': 'Djimon Hounsou', 'category': 'DCEU'}, {'question': 'In Batman v Superman: Dawn of Justice, Jimmy Olsen is an undercover operative from what government organization?', 'answer': 'the CIA', 'category': 'DCEU'}, {'question': 'Who plays Chato Santana, better known as El Diablo, in Suicide Squad?', 'answer': 'Jay Hernandez', 'category': 'DCEU'}, {'question': 'The Coen Brothers have directed two remakes in their career. The Ladykillers is one. What is the other?', 'answer': 'True Grit', 'category': 'Coen Brothers'}, {'question': 'In the film Hail, Caesar!, which Star Wars actor plays Hobby Doyle, a young actor who is known for singing cowboy roles?', 'answer': 'Alden Ehrenreich', 'category': 'Coen Brothers'}, {'question': 'Which actress plays fast-talking reporter Amy Archer in The Hudsucker Proxy?', 'answer': 'Jennifer Jason Leigh', 'category': 'Coen Brothers'}, {'question': 'Which film is known for the song "Man of Constant Sorrow"?', 'answer': 'O Brother, Where Art Thou?', 'category': 'Coen Brothers'}, {'question': 'The Coens wrote the screenplay for this 2014 war film that they did not direct.', 'answer': 'Unbroken', 'category': 'Coen Brothers'}, {'question': 'A malicious possessing spirit is killed with an ice pick in the beginning of which 2000s Coen Brother film?', 'answer': 'A Serious Man', 'category': 'Coen Brothers'}, {'question': 'Walk the Line is a biopic of what famous singer and his various successes and personal struggles?', 'answer': 'Johnny Cash', 'category': 'Biopics'}, {'question': 'Who plays James Bond in the films You Only Live Twice and Diamonds are Forever?', 'answer': 'Sean Connery', 'category': 'Action/Adventure'}, {'question': 'Who plays the lead Sawyer Valentini in Unsane?', 'answer': 'Claire Foy', 'category': 'Horror'}, {'question': 'Who plays Judas, betrayer of Jesus, in The Last Temptation of Christ?', 'answer': 'Harvey Keitel', 'category': 'Martin Scorsese'}, {'question': "What actor played the Bulgarian, the crime boss looking for the witness protection list, in 2018's Game Night?", 'answer': 'Michael C. Hall', 'category': 'Comedies'}, {'question': 'Which frequent Disney collaborator plays Ben Chapman, the racist manager of the Philadelphia Phillies that taunts Jackie Robinson, in 42?', 'answer': 'Alan Tudyk', 'category': 'Sports'}, {'question': 'Who stars as Gaston in the 2017 live-action remake of Beauty and the Beast?', 'answer': 'Luke Evans', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who directed 2018's A Star Is Born?", 'answer': 'Bradley Cooper', 'category': 'Dramas'}, {'question': "Pee-wee's Big Adventure was the feature film debut of what famous director?", 'answer': 'Tim Burton', 'category': 'Directors'}, {'question': "Who starred as explorer Dirk Pitt in 2005's Sahara?", 'answer': 'Matthew McConaughey', 'category': 'Action/Adventure'}, {'question': 'What 2008 Disney animated film features a dog who stars in a TV show and embarks on a cross-country trek to save his human co-star?', 'answer': 'Bolt', 'category': 'Animated'}, {'question': 'Who directed The Breakfast Club?', 'answer': 'John Hughes', 'category': 'Comedies'}, {'question': 'What 70s horror film is about housewives being replaced by overly "perfect" doppelgängers, and had a remake starring Nicole Kidman?', 'answer': 'The Stepford Wives', 'category': 'Horror/Thriller'}, {'question': 'In what Julia Roberts film will you hear the quote "Big mistake! Big! Huge!"?', 'answer': 'Pretty Woman', 'category': 'Quotes'}, {'question': 'What film was the first collaboration between Christopher Nolan and Christian Bale?', 'answer': 'Batman Begins', 'category': 'N/A'}, {'question': 'Julia Roberts voiced a character in what animated film about ants?', 'answer': 'The Ant Bully', 'category': 'Julia Roberts'}, {'question': 'Julia Roberts starred with Lucas Hedges in this 2018 drama.', 'answer': 'Ben Is Back', 'category': 'Julia Roberts'}, {'question': 'Julia Roberts co-stars with Tom Hanks and Philip Seymour Hoffman in what 2007 film?', 'answer': "Charlie Wilson's War", 'category': 'Julia Roberts'}, {'question': 'Who directed Erin Brockovich?', 'answer': 'Steven Soderbergh', 'category': 'Julia Roberts'}, {'question': 'Who plays the highly awkward boom mic operator Scotty J in Boogie Nights?', 'answer': 'Philip Seymour Hoffman', 'category': 'Paul Thomas Anderson'}, {'question': 'What was the first Paul Thomas Anderson film to be nominated for Best Picture?', 'answer': 'There Will Be Blood', 'category': 'Paul Thomas Anderson'}, {'question': 'In Phantom Thread, fashion designer Reynolds Woodcock first meets his love interest Alma while she is doing what job?', 'answer': 'waitress', 'category': 'Paul Thomas Anderson'}, {'question': 'In Punch-Drunk Love, Philip Seymour Hoffman plays a shady character who owns a store that sells what?', 'answer': 'mattresses', 'category': 'Paul Thomas Anderson'}, {'question': 'Game of Thrones actor Kit Harington plays a gladiator in this 2014 disaster film.', 'answer': 'Pompeii', 'category': 'Disaster'}, {'question': "Who played the aging version of Zorro who passes on his mantle in 1998's The Mask of Zorro?", 'answer': 'Anthony Hopkins', 'category': 'Action/Adventure'}, {'question': 'Jodie Foster plays card-playing con artist Mrs. Annabelle Bransford in what western?', 'answer': 'Maverick', 'category': 'Jodie Foster'}, {'question': 'Who directed Matthew McConaughey in the thriller Killer Joe?', 'answer': 'William Friedkin', 'category': 'Matthew McConaughey'}, {'question': 'Charlie Sheen plays a farmer named Ted Logan in the third installment of what parody series?', 'answer': 'Scary Movie', 'category': 'Charlie Sheen'}, {'question': 'What classic Hollywood actor was the narrator of History of the World, Part I?', 'answer': 'Orson Welles', 'category': '1980s'}, {'question': 'Denzel Washington reprised the role of Robert McCall in what 2018 action sequel?', 'answer': 'The Equalizer 2', 'category': 'Action/Adventure'}, {'question': "Which MCU actor plays Brand, Mikey's older brother, in The Goonies?", 'answer': 'Josh Brolin', 'category': '1980s'}, {'question': 'Who plays real life individual Aron Ralston in the 2010 film 127 Hours?', 'answer': 'James Franco', 'category': 'Dramas'}, {'question': 'Which actor appeared in the films Rudy, Swingers, Iron Man, and Chef?', 'answer': 'Jon Favreau', 'category': 'Famous Actors & Actresses'}, {'question': 'What landmark 1968 sci-fi film starred Charlton Heston and was directed by Franklin J. Schaffner?', 'answer': 'Planet of the Apes', 'category': 'Fantasy/Sci-Fi'}, {'question': "What is the profession of Jim Carrey's character in 1997's Liar Liar?", 'answer': 'a lawyer', 'category': 'Comedies'}, {'question': 'What 1999 horror film was about three film students who vanished after traveling into a Maryland forest to film a documentary?', 'answer': 'The Blair Witch Project', 'category': 'Horror/Thriller'}, {'question': "This actor played the evil Judge Doom in 1988's Who Framed Roger Rabbit.", 'answer': 'Christopher Lloyd', 'category': 'Animated'}, {'question': 'Who directed the 2008 crime caper RocknRolla?', 'answer': 'Guy Ritchie', 'category': 'N/A'}, {'question': 'What Oscar-nominated actress played the lead in the 2013 film The Host?', 'answer': 'Saoirse Ronan', 'category': 'Young Adult Adaptations'}, {'question': 'In the first Maze Runner film, the youths are forced to live in a large area they call the what?', 'answer': 'the Glade', 'category': 'Young Adult Adaptations'}, {'question': 'The human race is almost extinct as a series of alien attacks cause natural disasters in what 2016 YA film?', 'answer': 'The 5th Wave', 'category': 'Young Adult Adaptations'}, {'question': "2013's Beautiful Creatures takes place in what southern U.S. state?", 'answer': 'South Carolina', 'category': 'Young Adult Adaptations'}, {'question': 'Ben Affleck appeared in two films from director Michael Bay. Armageddon and which other film?', 'answer': 'Pearl Harbor', 'category': 'Matt & Ben'}, {'question': "What famous actor directed Matt Damon in 2017's Suburbicon?", 'answer': 'George Clooney', 'category': 'Matt & Ben'}, {'question': "In Ben Affleck's Live by Night, who plays a young sex worker named Loretta Figgis?", 'answer': 'Elle Fanning', 'category': 'Matt & Ben'}, {'question': 'Matt Damon has been nominated for Best Actor twice, for Good Will Hunting and what 2010s film?', 'answer': 'The Martian', 'category': 'Matt & Ben'}, {'question': 'Sandra Bullock plays the character of Gracie Hart in what film?', 'answer': 'Miss Congeniality, Miss Congeniality 2: Armed and Fabulous', 'category': 'Famous Actors & Actresses'}, {'question': "In 2005's Hitch, Hitch takes Sara on a private tour of what New York location for their first date?", 'answer': 'Ellis Island', 'category': 'Comedies'}, {'question': "Who plays Clarke, Leslie Mann's husband, in Funny People?", 'answer': 'Eric Bana', 'category': 'Judd Apatow'}, {'question': 'In what 90s film does Dennis Hopper play a villain who says "Pop quiz, hotshot!"?', 'answer': 'Speed', 'category': 'Action/Adventure'}, {'question': 'What actress starred in the 2019 films Fighting with My Family and Midsommar?', 'answer': 'Florence Pugh', 'category': 'New Releases'}, {'question': 'Who stars as Whitey Bulger in the crime drama Black Mass?', 'answer': 'Johnny Depp', 'category': 'Dramas'}, {'question': 'Who plays Perry White in Man of Steel?', 'answer': 'Laurence Fishburne', 'category': 'Comic Book'}, {'question': 'In what 90s sci-fi action movie does a crew operate two space shuttles called Freedom and Independence?', 'answer': 'Armageddon', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what Adam Sandler comedy will you find the fictional college football team the Louisiana Cougars?', 'answer': 'The Waterboy', 'category': 'Comedies'}, {'question': 'Who plays marine biologist Matt Hooper in Jaws?', 'answer': 'Richard Dreyfuss', 'category': 'Horror/Thriller'}, {'question': 'Who plays Princess Anna in Frozen?', 'answer': 'Kristen Bell', 'category': 'Animated'}, {'question': 'In what 1983 film will you hear a criminal say "The world is yours!"?', 'answer': 'Scarface', 'category': 'N/A'}, {'question': 'Adam Sandler plays Barry Egan, a man that owns a company that markets themed toilet plungers and other novelty items, in what film?', 'answer': 'Punch-Drunk Love', 'category': 'Adam Sandler'}, {'question': 'Adam Sandler voices the character of Donald the capuchin monkey in what 2011 family film?', 'answer': 'Zookeeper', 'category': 'Adam Sandler'}, {'question': "Who plays Lucy Whitmore, Henry's love interest with short-term memory loss, in 50 First Dates?", 'answer': 'Drew Barrymore', 'category': 'Adam Sandler'}, {'question': 'Who plays Satan in Little Nicky?', 'answer': 'Harvey Keitel', 'category': 'Adam Sandler'}, {'question': 'Who plays the role of James "Caretaker" Farrell in The Longest Yard?', 'answer': 'Chris Rock', 'category': 'Adam Sandler'}, {'question': 'In the film Hotel Transylvania, who voices the character of the Invisible Man?', 'answer': 'David Spade', 'category': 'Adam Sandler'}, {'question': "In 1999's Dogma, which comedic actor plays Rufus the 13th apostle?", 'answer': 'Chris Rock', 'category': 'Kevin Smith'}, {'question': 'Yoga Hosers takes place in what country?', 'answer': 'Canada', 'category': 'Kevin Smith'}, {'question': "In which Kevin Smith film does Ben Affleck's brother Casey have a quick cameo?", 'answer': 'Chasing Amy', 'category': 'Kevin Smith'}, {'question': 'What comic book legend plays himself in Mallrats as he dispenses advice to Brodie?', 'answer': 'Stan Lee', 'category': 'Kevin Smith'}, {'question': 'In 2010\'s Cop Out, James "Jimmy" Monroe and Paul Hodges are detectives in which city?', 'answer': 'New York City', 'category': 'Kevin Smith'}, {'question': "In Clerks, Randal asks Dante which Star Wars film he prefers. What is Dante's answer?", 'answer': 'The Empire Strikes Back', 'category': 'Kevin Smith'}, {'question': 'In what film does Arnold Schwarzenegger say the line "ice to meet you"?', 'answer': 'Batman & Robin', 'category': 'Sly & Arnie'}, {'question': "What is the collective name of the trilogy of films Shaun of the Dead, Hot Fuzz, and The World's End?", 'answer': 'the Three Flavours Cornetto trilogy', 'category': 'Comedies'}, {'question': "In Mystic Pizza, what does Daisy fill Charles's car with when she thinks she has caught him cheating on her?", 'answer': 'fish', 'category': 'Julia Roberts'}, {'question': 'Who plays the villain Brixton in Fast & Furious Presents: Hobbs & Shaw?', 'answer': 'Idris Elba', 'category': 'Action/Adventure'}, {'question': 'What 2013 film focuses on real-life white collar criminal Jordan Belfort?', 'answer': 'The Wolf of Wall Street', 'category': 'Crime'}, {'question': "Who stars as newspaper editor Ben Bradlee in 2017's The Post?", 'answer': 'Tom Hanks', 'category': 'Dramas'}, {'question': 'Name the movie from the quote: "Tower, this is Ghost Rider requesting a flyby.".', 'answer': 'Top Gun', 'category': 'Quotes'}, {'question': 'Who plays Gwen DeMarco, an actress who portrays the character Lt. Madison in Galaxy Quest?', 'answer': 'Sigourney Weaver', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which Oscar-winning actress co-stars with Rebel Wilson in The Hustle?', 'answer': 'Anne Hathaway', 'category': 'Comedies'}, {'question': 'In what Hitchcock-inspired thriller does Shia LaBeouf play a teenager under house arrest who suspects his neighbor of murder?', 'answer': 'Disturbia', 'category': 'Horror/Thriller'}, {'question': 'What Disney film follows Tiana, who lives in New Orleans and dreams of opening a restaurant?', 'answer': 'The Princess and the Frog', 'category': 'Animated'}, {'question': 'Jack Nicholson won his first Oscar for what film?', 'answer': "One Flew Over the Cuckoo's Nest", 'category': 'N/A'}, {'question': 'Who directed Rogue One: A Star Wars Story?', 'answer': 'Gareth Edwards', 'category': 'Star Wars'}, {'question': 'Who portrays Jango Fett in Star Wars: Episode II – Attack of the Clones?', 'answer': 'Temuera Morrison', 'category': 'Star Wars'}, {'question': 'How many TIE Fighters are in pursuit of the Millennium Falcon after it escapes from the Death Star in A New Hope?', 'answer': '4', 'category': 'Star Wars'}, {'question': 'Who says "Fear leads to anger. Anger leads to hate. Hate leads to suffering."?', 'answer': 'Yoda', 'category': 'Star Wars'}, {'question': 'What J. J. Abrams regular appears as Snap Wexley in The Force Awakens and The Rise of Skywalker?', 'answer': 'Greg Grunberg', 'category': 'Star Wars'}, {'question': 'In how many films of the Star Wars franchise does Darth Maul appear?', 'answer': '2 (Phantom Menace, Solo)', 'category': 'Star Wars'}, {'question': 'At the end of Toy Story, what gift does Andy get for Christmas?', 'answer': 'a puppy', 'category': 'Pixar'}, {'question': 'In The Incredibles, after the public turns on superheroes, the government initiates which program to force heroes to permanently keep their secret identities?', 'answer': 'Superhero Relocation Program', 'category': 'Pixar'}, {'question': 'What is the name of the young cook that Remy befriends in Ratatouille?', 'answer': 'Alfredo Linguini', 'category': 'Pixar'}, {'question': 'Who composed the score for both The Incredibles and Up?', 'answer': 'Michael Giacchino', 'category': 'Pixar'}, {'question': 'What is the name of the giant ship that humans now live on in WALL-E?', 'answer': 'the Axiom', 'category': 'Pixar'}, {'question': "In Monsters, Inc., what do the monsters discover is more powerful than children's screams?", 'answer': 'laughter', 'category': 'Pixar'}, {'question': 'Name one of the two leads of the 2009 film Old Dogs.', 'answer': 'John Travolta, Robin Williams', 'category': 'Famous Actors & Actresses'}, {'question': "Who played Morticia Addams in 1991's The Addams Family?", 'answer': 'Anjelica Huston', 'category': 'Family'}, {'question': 'Who played Rose Tico in Star Wars: The Last Jedi?', 'answer': 'Kelly Marie Tran', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2014 rom-com stars Jenny Slate as a comedienne whose unplanned pregnancy forces her to confront the reality of independent womanhood for the first time?', 'answer': 'Obvious Child', 'category': 'Rom-Coms'}, {'question': "Who plays professional spin artist Nick Naylor in Jason Reitman's Thank You for Smoking?", 'answer': 'Aaron Eckhart', 'category': 'Modern Classics'}, {'question': 'What 2011 film deals with the spreading of the virus MEV-1 and the ensuing pandemic?', 'answer': 'Contagion', 'category': 'Disaster'}, {'question': "Which actor co-stars with Samuel L. Jackson in the action crime movie The Hitman's Bodyguard?", 'answer': 'Ryan Reynolds', 'category': 'Action/Adventure'}, {'question': "Which actress starred in the films Death Becomes Her, Florence Foster Jenkins, and It's Complicated?", 'answer': 'Meryl Streep', 'category': 'Famous Actors & Actresses'}, {'question': 'Who plays the male lead in the the boxing drama Southpaw?', 'answer': 'Jake Gyllenhaal', 'category': 'Dramas'}, {'question': "Al Pacino stars in which film in the Ocean's franchise?", 'answer': "Ocean's Thirteen", 'category': 'Crime'}, {'question': "Who plays the Red Queen in 2010's Alice in Wonderland?", 'answer': 'Helena Bonham Carter', 'category': 'Fantasy/Sci-Fi'}, {'question': "Hannibal Buress and Jeremy Renner star in this comedy about a group of friends who play an elaborate annual game that's been going on for 30 years.", 'answer': 'Tag', 'category': 'Comedies'}, {'question': 'In what 2019 film does a young woman attempt to rescue her father during a hurricane while fighting for her life against alligators?', 'answer': 'Crawl', 'category': 'Horror/Thriller'}, {'question': 'Kevin James voices what famous movie monster in the Hotel Transylvania series?', 'answer': "Frankenstein's monster", 'category': 'Animated'}, {'question': 'Which film from director Steven Spielberg won the Best Picture Oscar?', 'answer': "Schindler's List", 'category': 'Oscars'}, {'question': 'How many times has David Lynch been nominated for Best Director?', 'answer': '3 (The Elephant Man, Blue Velvet, Mulholland Drive)', 'category': 'Oscars'}, {'question': 'Who directed the film Bowling for Columbine, which won the Oscar for Best Documentary Feature?', 'answer': 'Michael Moore', 'category': 'Oscars'}, {'question': 'What film won the Best Original Song Oscar for "Colors of the Wind"?', 'answer': 'Pocahontas', 'category': 'Oscars'}, {'question': 'Who directed A Bronx Tale?', 'answer': 'Robert De Niro', 'category': 'Crime'}, {'question': 'Who plays the title character of Jack Carter in the 1971 crime thriller Get Carter?', 'answer': 'Michael Caine', 'category': 'Crime'}, {'question': 'Who wrote and directed Bad Times at the El Royale?', 'answer': 'Drew Goddard', 'category': 'Crime'}, {'question': 'A character by the name of Kumar gets stuck in a freezer in what 90s heist film?', 'answer': 'Bottle Rocket', 'category': 'Crime'}, {'question': 'What MCU actress stars opposite Adam Driver in Marriage Story?', 'answer': 'Scarlett Johansson', 'category': 'New Releases'}, {'question': 'What 1967 coming-of-age drama involves a love triangle between Katharine Ross, Anne Bancroft, and Dustin Hoffman?', 'answer': 'The Graduate', 'category': 'Coming of Age'}, {'question': 'In The Princess and the Frog, what type of animal is Ray, who is in love with a star?', 'answer': 'a firefly', 'category': 'Family'}, {'question': "Who plays Chris Pine's brother, Tanner Howard, in Hell or High Water?", 'answer': 'Ben Foster', 'category': 'Crime'}, {'question': 'What is the name of the famous billionaire, played by Guy Pearce, in Iron Man 3?', 'answer': 'Aldrich Killian', 'category': 'Comic Book'}, {'question': 'In what 1995 action film does Antonio Banderas star as the character El Mariachi?', 'answer': 'Desperado', 'category': 'Action/Adventure'}, {'question': 'Who directed Baby Driver?', 'answer': 'Edgar Wright', 'category': 'Crime'}, {'question': 'What 2017 romantic drama stars Timothée Chalamet and Armie Hammer?', 'answer': 'Call Me by Your Name', 'category': 'Dramas'}, {'question': 'Who stars as a puppeteer named Craig Schwartz in Being John Malkovich?', 'answer': 'John Cusack', 'category': '1990s'}, {'question': 'Michelle Williams, Rachel Weisz, and Mila Kunis play witches in this 2013 fantasy prequel.', 'answer': 'Oz the Great and Powerful', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which music icon stars alongside Kevin Hart in Ride Along?', 'answer': 'Ice Cube', 'category': 'Comedies'}, {'question': "Which Oscar-winning actress plays the main lead in 2019's Ma?", 'answer': 'Octavia Spencer', 'category': 'Horror/Thriller'}, {'question': 'What classic animated Disney film tells the story of the wizard Merlin and young Arthur?', 'answer': 'The Sword in the Stone', 'category': 'Animated'}, {'question': 'In what 1964 musical will you find the songs "Jolly Holiday" and "Let\'s Go Fly a Kite"?', 'answer': 'Mary Poppins', 'category': 'Musicals'}, {'question': 'What 1960s movie is based on the life of comedienne Fanny Brice?', 'answer': 'Funny Girl', 'category': 'Musicals'}, {'question': 'Who starred as Pink Lady Stephanie Zinone in the 1982 musical sequel Grease 2?', 'answer': 'Michelle Pfeiffer', 'category': 'Musicals'}, {'question': 'Name the musical: A female girly club entertainer in Weimar Republic era Berlin romances two men while the Nazy Party rises to power around them.', 'answer': 'Cabaret', 'category': 'Musicals'}, {'question': 'Rooney Mara plays the childhood sweetheart to a character by the name of Theodore in which Scarlett Johansson co-starring film?', 'answer': 'Her', 'category': 'Scarlett Johansson'}, {'question': 'Scarlett Johansson made her feature film debut in which 1994 film?', 'answer': 'North', 'category': 'Scarlett Johansson'}, {'question': "What is the name of the snake voiced by Scarlett Johansson in 2016's The Jungle Book?", 'answer': 'Kaa', 'category': 'Scarlett Johansson'}, {'question': 'In Lost in Translation, Bob Harris is in Tokyo to film a commercial for what kind of product?', 'answer': 'whisky', 'category': 'Scarlett Johansson'}, {'question': 'Who plays oceanographer Matt Hooper in Jaws?', 'answer': 'Richard Dreyfuss', 'category': 'Steven Spielberg'}, {'question': 'In which Hitchcock movie does Cary Grant play a character by the name of Roger O. Thornhill?', 'answer': 'North by Northwest', 'category': 'Famous Actors & Actresses'}, {'question': 'In Kill Bill: Volume 1, while discussing a possible duel, Vernita Green attempts to kill the Bride with a gun hidden in what kitchen item?', 'answer': 'a cereal box', 'category': 'Quentin Tarantino'}, {'question': 'Who plays Harvey Dent in The Dark Knight?', 'answer': 'Aaron Eckhart', 'category': 'Modern Classics'}, {'question': 'In The Hundred-Foot Journey, who plays the owner of the French Michelin star restaurant who starts a rivalry with an Indian family who opens a restaurant across the street?', 'answer': 'Helen Mirren', 'category': '2010s'}, {'question': 'The Banks family is looking for their bank share certificate in Mary Poppins Returns. Where do they end up finding the certificate?', 'answer': 'on their old kite', 'category': 'New Releases'}, {'question': 'What action film stars Charlize Theron, Sofia Boutella, and James McAvoy?', 'answer': 'Atomic Blonde', 'category': 'Action/Adventure'}, {'question': 'Who directed the films The Lost Boys, Phone Booth, and The Phantom of the Opera?', 'answer': 'Joel Schumacher', 'category': 'Directors'}, {'question': 'Who played psychologist Sean Maguire in Good Will Hunting?', 'answer': 'Robin Williams', 'category': 'Dramas'}, {'question': 'In what 80s fantasy adventure will you find Arnold Schwarzenegger strapped to something called the Wheel of Pain?', 'answer': 'Conan the Barbarian', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 90s comedy has the line, "The rug really tied the room together."?', 'answer': 'The Big Lebowski', 'category': 'Comedies'}, {'question': 'What horror franchise is known for the line "I want to play a game."?', 'answer': 'Saw', 'category': 'Horror/Thriller'}, {'question': 'Who plays a convict who is the brother of boxer Casey Affleck in the crime drama Out of the Furnace?', 'answer': 'Christian Bale', 'category': 'Crime'}, {'question': 'What is the name of the teenager who takes on the mantle of Spider-Man, voiced by Shameik Moore, in Spider-Man: Into the Spider-Verse?', 'answer': 'Miles Morales', 'category': 'Animated'}, {'question': 'Who played Joan Jett in the 2010 biographical drama The Runaways?', 'answer': 'Kristen Stewart', 'category': 'Biopics'}, {'question': "Who played Abraham Lincoln's son Robert Todd Lincoln in 2012's Lincoln?", 'answer': 'Joseph Gordon-Levitt', 'category': 'Biopics'}, {'question': 'Kevin Kline portrayed what classic film star in the 2014 film The Last of Robin Hood?', 'answer': 'Errol Flynn', 'category': 'Biopics'}, {'question': 'In Hidden Figures, which famous astronaut do the three main heroines help launch to space?', 'answer': 'John Glenn', 'category': 'Biopics'}, {'question': 'Who played Jane Hawking, wife to Stephen Hawking, in the 2014 film The Theory of Everything?', 'answer': 'Felicity Jones', 'category': 'Biopics'}, {'question': 'Infamous was the Truman Capote biopic that co-starred Sandra Bullock. Who played Capote?', 'answer': 'Toby Jones', 'category': 'Biopics'}, {'question': 'What kind of vehicle did the Joker escape in after his bank heist at the beginning of The Dark Knight?', 'answer': 'a school bus', 'category': 'DC'}, {'question': "A Green Lantern's ring and power batteries are fueled by what?", 'answer': 'willpower', 'category': 'DC'}, {'question': "Who portrays the character of John Constantine in 2005's Constantine?", 'answer': 'Keanu Reeves', 'category': 'DC'}, {'question': "What is the Penguin's real name in Batman Returns?", 'answer': 'Oswald Cobblepot', 'category': 'DC'}, {'question': "Who directed 1982's Swamp Thing?", 'answer': 'Wes Craven', 'category': 'DC'}, {'question': 'What comedian co-starred alongside Christopher Reeve in Superman III?', 'answer': 'Richard Pryor', 'category': 'DC'}, {'question': 'Who plays Tiffany Maxwell in Silver Linings Playbook?', 'answer': 'Jennifer Lawrence', 'category': 'Rom-Coms'}, {'question': "In Mamma Mia! Here We Go Again, what MCU actor plays Sophie's husband Sky?", 'answer': 'Dominic Cooper', 'category': 'Musicals'}, {'question': 'What was the name given to the man that held Joy and Jack captive in Room?', 'answer': 'Old Nick', 'category': 'Dramas'}, {'question': "What Oscar winning actress plays Jason Statham's mother in The Fate of the Furious?", 'answer': 'Helen Mirren', 'category': 'Action/Adventure'}, {'question': 'Robert De Niro plays a gangster named Sam "Ace" Rothstein in what 1995 crime film?', 'answer': 'Casino', 'category': '1990s'}, {'question': 'What 2013 film stars Leonardo DiCaprio and is based on a classic novel by F. Scott Fitzgerald?', 'answer': 'The Great Gatsby', 'category': 'Dramas'}, {'question': "Who plays Bradley Cooper's older brother Bobby in A Star Is Born?", 'answer': 'Sam Elliott', 'category': 'Dramas'}, {'question': 'Josh Gad provides the voice of a dog named Bailey who is reincarnated several times in what 2017 family film?', 'answer': "A Dog's Purpose", 'category': 'Family'}, {'question': 'Garrett Hedlund plays James Hook, and Hugh Jackman plays Blackbeard, in this 2015 fantasy film.', 'answer': 'Pan', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor starred as Irwin "Fletch" Fletcher in 1985\'s Fletch?', 'answer': 'Chevy Chase', 'category': 'Comedies'}, {'question': 'Who directed the 2015 found footage film about a trip to see grandparents gone wrong, The Visit?', 'answer': 'M. Night Shyamalan', 'category': 'Horror/Thriller'}, {'question': 'Matthew McConaughey, Reese Witherspoon, Scarlett Johansson, and Taron Egerton lent their voices to what 2016 animated film?', 'answer': 'Sing', 'category': 'Animated'}, {'question': 'Which Paul Thomas Anderson film stars Adam Sandler?', 'answer': 'Punch-Drunk Love', 'category': 'Paul Thomas Anderson'}, {'question': 'What is the last name of Paul and Eli, the twin brothers played by Paul Dano in There Will Be Blood?', 'answer': 'Sunday', 'category': 'Paul Thomas Anderson'}, {'question': 'Who plays Frank T.J. Mackey in Magnolia?', 'answer': 'Tom Cruise', 'category': 'Paul Thomas Anderson'}, {'question': 'Which MCU actor plays Lieutenant Detective Christian F. "Bigfoot" Bjornsen in 2014\'s Inherent Vice?', 'answer': 'Josh Brolin', 'category': 'Paul Thomas Anderson'}, {'question': 'What 2019 film follows a young man who runs away from a care facility to make his dream of becoming a professional wrestler come true?', 'answer': 'The Peanut Butter Falcon', 'category': 'New Releases'}, {'question': 'The main events of The Nun take place at a monastery in what Eastern European country?', 'answer': 'Romania', 'category': 'New Releases'}, {'question': 'Marielle Heller directed what 2018 biopic starring Melissa McCarthy?', 'answer': 'Can You Ever Forgive Me?', 'category': 'New Releases'}, {'question': "Who provides the voice of Scar in 2019's The Lion King?", 'answer': 'Chiwetel Ejiofor', 'category': 'New Releases'}, {'question': 'Brad Pitt plays a World War II officer named Don "Wardaddy" Collier in what film?', 'answer': 'Fury', 'category': 'Brad Pitt'}, {'question': 'Who plays just-paroled army ranger Cameron Poe, who must fly home aboard a prison transport flight dubbed "Jailbird" in Con Air?', 'answer': 'Nicolas Cage', 'category': 'Action/Adventure'}, {'question': "Who wrote Home Alone, National Lampoon's Christmas Vacation, and the 1994 remake of Miracle on 34th Street?", 'answer': 'John Hughes', 'category': 'Comedies'}, {'question': 'Who directed the 2018 crime thriller Widows?', 'answer': 'Steve McQueen', 'category': 'Crime'}, {'question': "What Oscar-winning actor provides the voice of King Hrothgar in Robert Zemeckis' Beowulf?", 'answer': 'Anthony Hopkins', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what 1984 Robin Williams film does he declare "I defect!" at a Bloomingdale\'s department store in New York?', 'answer': 'Moscow on the Hudson', 'category': '1980s'}, {'question': 'Liam Neeson and Taylor Kitsch star in what action-adventure film based on a board game?', 'answer': 'Battleship', 'category': 'Action/Adventure'}, {'question': 'Tim Curry stars as Long John Silver opposite Kermit the Frog as Captain Smollett in what 1996 family film?', 'answer': 'Muppet Treasure Island', 'category': 'Family'}, {'question': 'Colin Trevorrow directed this 2017 film about a genius boy who hatches a plan to rescue a young girl from her abusive stepfather.', 'answer': 'The Book of Henry', 'category': 'Dramas'}, {'question': 'Paul Giamatti plays the Rhino in which Spider-Man film?', 'answer': 'The Amazing Spider-Man 2', 'category': 'Comic Book'}, {'question': "Who starred as Captain Malcolm Reynolds in 2005's Serenity?", 'answer': 'Nathan Fillion', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What Oscar-winning actor co-stars with Anne Hathaway in the 2015 comedy The Intern?', 'answer': 'Robert De Niro', 'category': 'Comedies'}, {'question': "Who directed 2015's Crimson Peak?", 'answer': 'Guillermo del Toro', 'category': 'Horror/Thriller'}, {'question': 'What is the name of the main character in the film An American Tail?', 'answer': 'Fievel Mousekewitz', 'category': 'Animated'}, {'question': "This actor played shy newcomer Todd Anderson in 1989's Dead Poets Society.", 'answer': 'Ethan Hawke', 'category': '1980s'}, {'question': 'Who directed Eddie Murphy in Beverly Hills Cop?', 'answer': 'Martin Brest', 'category': '1980s'}, {'question': "In what 80s film does Tom Cruise run a brothel out of his parents' house?", 'answer': 'Risky Business', 'category': '1980s'}, {'question': 'Jeff Bridges plays a retired player of what sport in the 1984 romantic thriller Against All Odds?', 'answer': 'American football', 'category': '1980s'}, {'question': 'Who stars in the 1983 comedy Mr. Mom as a stay-at-home dad?', 'answer': 'Michael Keaton', 'category': '1980s'}, {'question': 'Who directed Dirty Rotten Scoundrels?', 'answer': 'Frank Oz', 'category': '1980s'}, {'question': 'The films Let Me In and 30 Days of Night depict what type of movie monster?', 'answer': 'vampires', 'category': 'Horror'}, {'question': 'What franchise involves a villain whose actual name is John Kramer?', 'answer': 'Saw', 'category': 'Horror'}, {'question': "What musician-turned-actor plays Renfield in Bram Stoker's Dracula?", 'answer': 'Tom Waits', 'category': 'Horror'}, {'question': 'What is the third zombie film that George A. Romero directed in his Dead franchise?', 'answer': 'Day of the Dead', 'category': 'Horror'}, {'question': 'In what David Cronenberg horror movie can you find the character of Nicki Brand, played by Deborah Harry?', 'answer': 'Videodrome', 'category': 'Horror'}, {'question': 'A young woman Jay is pursued by a supernatural entity after a sexual encounter in what 2010s film?', 'answer': 'It Follows', 'category': 'Horror'}, {'question': 'In which 2000s film does Tom play FBI agent Carl Hanratty?', 'answer': 'Catch Me If You Can', 'category': 'Tom Hanks'}, {'question': 'What was the first film in which Ryan Gosling and Emma Stone had an on-screen romance?', 'answer': 'Crazy, Stupid, Love.', 'category': 'Romance'}, {'question': 'Tilda Swinton plays Helena Markos, Madame Blanc, and Dr. Klemperer in what 2018 horror film?', 'answer': 'Suspiria', 'category': '2010s'}, {'question': 'Who plays the bar owner Lil Lovell in Coyote Ugly?', 'answer': 'Maria Bello', 'category': 'Dance'}, {'question': "What is the title of Chef Gusteau's cookbook, as well as his motto, in the 2007 Pixar film Ratatouille?", 'answer': 'Anyone Can Cook', 'category': 'Pixar'}, {'question': "Who plays the Trojan prince Paris in 2004's Troy?", 'answer': 'Orlando Bloom', 'category': 'Action/Adventure'}, {'question': 'Who plays the role of Robert Graysmith in the 2007 crime thriller Zodiac?', 'answer': 'Jake Gyllenhaal', 'category': 'Crime'}, {'question': 'Name this Best Picture winning film: a criminal pleads insanity and is admitted to a mental institution where he rebels against the oppressive head nurse.', 'answer': "One Flew Over the Cuckoo's Nest", 'category': 'Dramas'}, {'question': 'Who directed films in the Mission: Impossible, Star Wars, and Star Trek franchises?', 'answer': 'J. J. Abrams (Mission: Impossible III; Star Wars: The Force Awakens, Star Wars: The Rise of Skywalker; Star Trek, Star Trek Into Darkness)', 'category': 'Directors'}, {'question': "Which actor stars as a magician named Jonathan Barnavelt in 2018's The House with a Clock in Its Walls?", 'answer': 'Jack Black', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the title of the third Austin Powers film?', 'answer': 'Austin Powers in Goldmember', 'category': 'Comedies'}, {'question': 'Which famous actress, who is also a popstar, stars in the 2015 thriller The Boy Next Door?', 'answer': 'Jennifer Lopez', 'category': 'Horror/Thriller'}, {'question': 'Which Lord of the Rings actor provides the voice of a penguin named Mumble in Happy Feet?', 'answer': 'Elijah Wood', 'category': 'Animated'}, {'question': "In the film Blockers, who plays Julie's single mother Lisa Decker?", 'answer': 'Leslie Mann', 'category': 'Festival Darlings'}, {'question': "In St. Vincent, who plays Vincent's pregnant Russian love interest Daka Parimova?", 'answer': 'Naomi Watts', 'category': 'Festival Darlings'}, {'question': "This director, who also helmed Frances Ha, directed 2005's The Squid and the Whale.", 'answer': 'Noah Baumbach', 'category': 'Festival Darlings'}, {'question': 'In the film Boy Erased, who plays the chief therapist Victor Sykes?', 'answer': 'Joel Edgerton', 'category': 'Festival Darlings'}, {'question': 'What 1986 historical drama was directed by Roland Joffé and starred Robert De Niro and Jeremy Irons?', 'answer': 'The Mission', 'category': 'Festival Darlings'}, {'question': 'In Me and Earl and the Dying Girl, teenager Rachel is afflicted with what type of cancer?', 'answer': 'leukemia', 'category': 'Festival Darlings'}, {'question': 'You can find the characters of Shooter McGavin, Chubbs Peterson, Virginia Venit, and Hal in what Adam Sandler film?', 'answer': 'Happy Gilmore', 'category': 'Adam Sandler'}, {'question': "Who plays the role of Eric Gordon, who is trying to take Billy's rightful spot from his retiring father as the company heir, in the film Billy Madison?", 'answer': 'Bradley Whitford', 'category': 'Adam Sandler'}, {'question': 'Who plays the character of Rex, the bass player of the Lone Rangers, in the film Airheads?', 'answer': 'Steve Buscemi', 'category': 'Adam Sandler'}, {'question': 'Who plays LAPD officer Jack Carter, who goes by the undercover name Rock Keats, in Bulletproof?', 'answer': 'Damon Wayans', 'category': 'Adam Sandler'}, {'question': 'What acclaimed filmmaker directed Adam Sandler in the 2015 fantasy film The Cobbler?', 'answer': 'Tom McCarthy', 'category': 'Adam Sandler'}, {'question': "Who plays President Will Cooper in 2015's Pixels?", 'answer': 'Kevin James', 'category': 'Adam Sandler'}, {'question': 'This 2014 ensemble film stars Ralph Fiennes as a concierge who must prove his innocence when he is framed for murder.', 'answer': 'The Grand Budapest Hotel', 'category': '2010s'}, {'question': "Who stars as Susanna, who is an 18-year-old committed to a mental institution in 1999's Girl, Interrupted?", 'answer': 'Winona Ryder', 'category': 'Angelina Jolie'}, {'question': "Who directed 1978's Superman?", 'answer': 'Richard Donner', 'category': 'Directors'}, {'question': 'Who directed the Sean Penn Timothy Hutton spy drama The Falcon and the Snowman?', 'answer': 'John Schlesinger', 'category': 'Spy'}, {'question': "Jean-Claude Van Damme stars opposite what actor in 1992's Universal Soldier?", 'answer': 'Dolph Lundgren', 'category': '1990s'}, {'question': "In what Judd Apatow film do the film's leads take a road trip to Las Vegas, which leads to them taking mushrooms and seeing a Cirque du Soleil show?", 'answer': 'Knocked Up', 'category': 'Rom-Coms'}, {'question': 'Day of the Soldado is the subtitle of the sequel to what 2015 action thriller?', 'answer': 'Sicario', 'category': 'Action/Adventure'}, {'question': 'What 1984 comedy revolves around a college fraternity called Lambda Lambda Lambda?', 'answer': 'Revenge of the Nerds', 'category': '1980s'}, {'question': 'Who stars as Doctor Bennet Omalu in the 2015 drama Concussion?', 'answer': 'Will Smith', 'category': 'Dramas'}, {'question': 'Which actor played the comic book characters Bruce Wayne and Adrian Toomes?', 'answer': "Michael Keaton (in 1989's Batman, Batman Returns; Spider-Man: Homecoming)", 'category': 'Famous Actors & Actresses'}, {'question': "Who directed 2015's Tomorrowland?", 'answer': 'Brad Bird', 'category': 'Fantasy/Sci-Fi'}, {'question': 'James Franco and Seth Rogen travel to what country to interview a dictator in the comedy The Interview?', 'answer': 'North Korea', 'category': 'Comedies'}, {'question': "What iconic actor played Imhotep in 1932's The Mummy?", 'answer': 'Boris Karloff', 'category': 'Horror/Thriller'}, {'question': 'Who composed the scores for all of the Toy Story films?', 'answer': 'Randy Newman', 'category': 'Animated'}, {'question': 'Zero Dark Thirty follows the real life mission to kill whom?', 'answer': 'Osama bin Laden', 'category': 'Kathryn Bigelow'}, {'question': "Which four-time Oscar-nominated actor stars as a member of a motorcycle gang in Kathryn Bigelow's 1984 directorial debut The Loveless?", 'answer': 'Willem Dafoe', 'category': 'Kathryn Bigelow'}, {'question': "What is the military rank of Jeremy Renner's character in The Hurt Locker?", 'answer': 'Sergeant First Class', 'category': 'Kathryn Bigelow'}, {'question': "After appearing in Aliens, which actor played Jesse Hooker, the leader of a clan of vampires, in 1987's Near Dark?", 'answer': 'Lance Henriksen', 'category': 'Kathryn Bigelow'}, {'question': 'Frank Darabont directed Tom Hanks in which 1999 drama?', 'answer': 'The Green Mile', 'category': '1990s'}, {'question': 'Who plays the lead and title character of the 1993 dramedy Dave?', 'answer': 'Kevin Kline', 'category': '1990s'}, {'question': 'Which 1995 film finds human civilization having been relegated to living on ramshackle floating communities known as atolls?', 'answer': 'Waterworld', 'category': '1990s'}, {'question': 'Jean-Claude Van Damme plays twin brothers in which 1991 film?', 'answer': 'Double Impact', 'category': '1990s'}, {'question': 'What Disney animated film follows a dangerous alien originally called Experiment 626, who forms a bond with a young girl on Earth?', 'answer': 'Lilo & Stitch', 'category': 'Animated'}, {'question': "Who plays Kevin Wendell Crumb in 2017's Split?", 'answer': 'James McAvoy', 'category': 'Thriller'}, {'question': 'Which actress famously danced with Fred Astaire in the classic movies Top Hat, Swing Time, and Shall We Dance?', 'answer': 'Ginger Rogers', 'category': 'Dance'}, {'question': 'Which 1995 film stars Antonio Banderas with Salma Hayek?', 'answer': 'Desperado', 'category': '1990s'}, {'question': 'In what animated Disney film from the 2000s will you find the line, "For the last time, we did not order a giant trampoline!"?', 'answer': "The Emperor's New Groove", 'category': 'Disney'}, {'question': 'In Men in Black, after chasing down a perceived criminal, Will Smith exclaims that NYPD stands for what?', 'answer': 'knock your punk-ass down', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who starred in the title role in Stanley Kubrick's Spartacus?", 'answer': 'Kirk Douglas', 'category': 'N/A'}, {'question': 'What 2009 film featured the film debut of Chris Hemsworth?', 'answer': 'Star Trek', 'category': 'N/A'}, {'question': "Who directed 1982's Tootsie?", 'answer': 'Sydney Pollack', 'category': 'N/A'}, {'question': 'What is the title of the third film in the Die Hard franchise?', 'answer': 'Die Hard with a Vengeance', 'category': 'Action/Adventure'}, {'question': 'Which comedic actor plays the main character Skeeter Bronson in the Disney film Bedtime Stories?', 'answer': 'Adam Sandler', 'category': 'Family'}, {'question': 'David Oyelowo portrayed Martin Luther King Jr. in what historical drama?', 'answer': 'Selma', 'category': 'Dramas'}, {'question': 'Denzel Washington won an Oscar for Training Day. Training Day was released in theaters in what year?', 'answer': '2001', 'category': 'Release Dates'}, {'question': 'Who plays the title character in the film The Chronicles of Riddick?', 'answer': 'Vin Diesel', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What film released in the first decade of the 2000s has the subtitle Cultural Learnings of America for Make Benefit Glorious Nation of Kazakhstan?', 'answer': 'Borat: Cultural Learnings of America for Make Benefit Glorious Nation of Kazakhstan', 'category': 'Comedies'}, {'question': 'Which actress plays the main lead in the 2016 thriller The Girl on the Train?', 'answer': 'Emily Blunt', 'category': 'Horror/Thriller'}, {'question': 'The song "I\'ll Make a Man Out of You" is performed while young men are trained to be soldiers for war in what Disney film?', 'answer': 'Mulan', 'category': 'Animated'}, {'question': 'Who directed the trilogy of films The Da Vinci Code, Angels & Demons, and Inferno?', 'answer': 'Ron Howard', 'category': 'N/A'}, {'question': "Who plays Maxwell Smart in 2008's Get Smart?", 'answer': 'Steve Carell', 'category': 'Spy'}, {'question': 'Owen Davian is the main villain of which film in the Mission: Impossible franchise?', 'answer': 'Mission: Impossible III', 'category': 'Spy'}, {'question': 'In Kingsman: The Secret Service, what is the mantra of the Kingsmen that Eggsy recites during his phone call to be released from the local authorities?', 'answer': 'Oxfords, not brogues.', 'category': 'Spy'}, {'question': "Chris Rock plays a superspy and a superspy's identical twin brother in which 2002 action comedy?", 'answer': 'Bad Company', 'category': 'Spy'}, {'question': 'Who directed the Jack Ryan reboot Jack Ryan: Shadow Recruit?', 'answer': 'Kenneth Branagh', 'category': 'Spy'}, {'question': 'In what comedic film does Sacha Baron Cohen play the underachieving brother of a British spy?', 'answer': 'The Brothers Grimsby', 'category': 'Spy'}, {'question': 'What John Carpenter film has the characters named Egg Shen, Wang Chi, and Eddie Lee?', 'answer': 'Big Trouble in Little China', 'category': 'John Carpenter'}, {'question': 'Bruce Campbell has a bit part as the Surgeon General of Beverly Hills in what John Carpenter film?', 'answer': 'Escape from L.A.', 'category': 'John Carpenter'}, {'question': 'What was the first film John Carpenter directed?', 'answer': 'Dark Star', 'category': 'John Carpenter'}, {'question': 'In The Thing, the main characters first see the alien parasite manifest itself in what area of the research compound?', 'answer': 'the dog kennel', 'category': 'John Carpenter'}, {'question': 'Which famous rock star plays a homeless man who becomes possessed in Prince of Darkness?', 'answer': 'Alice Cooper', 'category': 'John Carpenter'}, {'question': "Name the two lead actors in 1995's Village of the Damned.", 'answer': 'Christopher Reeve, Kirstie Alley', 'category': 'John Carpenter'}, {'question': 'Sylvester Stallone and Kurt Russell play partners on the police force in what film?', 'answer': 'Tango & Cash', 'category': '1980s'}, {'question': 'Which actor received Best Actor nominations for the classic films Harvey and Anatomy of a Murder?', 'answer': 'James Stewart', 'category': 'Oscars'}, {'question': "Who plays Nelson Fox, Tom Hanks's father in the film You've Got Mail?", 'answer': 'Dabney Coleman', 'category': 'Rom-Coms'}, {'question': "You'll find the character of Agent Jane Carter, played by Paula Patton, in which Mission: Impossible film?", 'answer': 'Mission: Impossible – Ghost Protocol', 'category': 'Action/Adventure'}, {'question': 'What comedian starred in the 1986 comedy Back to School?', 'answer': 'Rodney Dangerfield', 'category': '1980s'}, {'question': 'Who plays Capt. "Sully" Sullenberger in the 2016 Clint Eastwood film Sully?', 'answer': 'Tom Hanks', 'category': 'Dramas'}, {'question': 'Who won the Best Director Oscar in 2018 for The Shape of Water?', 'answer': 'Guillermo del Toro', 'category': 'Oscars'}, {'question': 'Bong Joon-ho directed Chris Evans, Ed Harris, and Tilda Swinton in what 2014 graphic novel adaptation?', 'answer': 'Snowpiercer', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays the lead character, Cady Heron, in 2004's Mean Girls?", 'answer': 'Lindsay Lohan', 'category': 'Comedies'}, {'question': 'Paul Rudd appears as Tommy Doyle in what Halloween franchise film?', 'answer': 'Halloween: The Curse of Michael Myers', 'category': 'Horror/Thriller'}, {'question': 'You\'ll find the song "You\'ll Be in My Heart" by Phil Collins in what 1999 Disney animated film?', 'answer': 'Tarzan', 'category': 'Animated'}, {'question': "Who directed Kevin Costner in 1999's For Love of the Game?", 'answer': 'Sam Raimi', 'category': 'N/A'}, {'question': 'Willow was released in what year?', 'answer': '1988', 'category': 'Release Dates'}, {'question': 'What year saw the release of Nightcrawler starring Jake Gyllenhaal?', 'answer': '2014', 'category': 'Release Dates'}, {'question': "In what year did Wes Craven return to the Nightmare franchise with Wes Craven's New Nightmare?", 'answer': '1994', 'category': 'Release Dates'}, {'question': 'Iron Man 3 exploded into theaters in what year?', 'answer': '2013', 'category': 'Release Dates'}, {'question': 'In Doctor Strange, when your spiritual form is pushed out of your physical form, you enter what dimension?', 'answer': 'the Astral Plane', 'category': 'Innergeekdom'}, {'question': 'Who directed Star Trek Generations?', 'answer': 'David Carson', 'category': 'Innergeekdom'}, {'question': 'In The Rise of Skywalker, Poe knows a black market droidsmith on what planet?', 'answer': 'Kijimi', 'category': 'Innergeekdom'}, {'question': "In the Hobbit trilogy, what is the name of Thorin's father?", 'answer': 'Thráin II', 'category': 'Innergeekdom'}, {'question': 'Which actor plays Jimmy Hoffa in The Irishman?', 'answer': 'Al Pacino', 'category': 'New Releases'}, {'question': 'Liam Neeson finds himself awoken from a car accident to find someone else using his identity in what 2011 film?', 'answer': 'Unknown', 'category': 'Thriller'}, {'question': 'Charlie Sheen plays Aramis in what 1993 Disney film?', 'answer': 'The Three Musketeers', 'category': 'Action/Adventure'}, {'question': "Who directed 1981's Time Bandits?", 'answer': 'Terry Gilliam', 'category': '1980s'}, {'question': 'Which actor plays Cameron and Tyler Winklevoss in The Social Network?', 'answer': 'Armie Hammer', 'category': 'Dramas'}, {'question': 'Who plays the villainous Doctor Eggman in the 2020 theatrical release Sonic the Hedgehog?', 'answer': 'Jim Carrey', 'category': 'New Releases'}, {'question': 'Sylvester Stallone, Rob Schneider, Diane Lane, and Max von Sydow appear in which 1995 sci-fi film?', 'answer': 'Judge Dredd', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays Jenko, a slow-witted yet handsome cop, in 2012's 21 Jump Street?", 'answer': 'Channing Tatum', 'category': 'Comedies'}, {'question': 'Which 2018 film is a spin-off of the Conjuring franchise and stars Demián Bichir and Taissa Farmiga?', 'answer': 'The Nun', 'category': 'Horror/Thriller'}, {'question': 'Christopher Lloyd voices the evil Rasputin in what 1997 animated film?', 'answer': 'Anastasia', 'category': 'Animated'}, {'question': 'Frances McDormand plays police chief Marge Gunderson in what film?', 'answer': 'Fargo', 'category': 'Frances McDormand'}, {'question': 'Frances McDormand played Miss Clavel, a nun who teaches at a school for girls, in which 90s family film?', 'answer': 'Madeline', 'category': 'Frances McDormand'}, {'question': "Which Batman actor plays Frances McDormand's son in the 2002 drama Laurel Canyon?", 'answer': 'Christian Bale', 'category': 'Frances McDormand'}, {'question': 'Frances McDormand plays Elaine Miller, who is the mother of teenager William Miller, in what 2000 drama film?', 'answer': 'Almost Famous', 'category': 'Frances McDormand'}, {'question': "Which actress plays Meg Ryan's best friend Marie in the Nora Ephron penned movie When Harry Met Sally...?", 'answer': 'Carrie Fisher', 'category': 'Nora Ephron'}, {'question': 'Which actor plays Uncle Arthur in Bewitched?', 'answer': 'Steve Carell', 'category': 'Nora Ephron'}, {'question': 'Nora Ephron directed which 1993 romantic film that ends with a scene on the Empire State Building?', 'answer': 'Sleepless in Seattle', 'category': 'Nora Ephron'}, {'question': "Who plays Walter, Annie's fiancé, in Sleepless in Seattle?", 'answer': 'Bill Pullman', 'category': 'Nora Ephron'}, {'question': 'Jake Gyllenhaal plays a championship boxer in this 2015 film.', 'answer': 'Southpaw', 'category': 'Sports'}, {'question': 'What future two-time Academy Award nominee plays linebacker Alan Bosley in Remember the Titans?', 'answer': 'Ryan Gosling', 'category': 'Denzel Washington'}, {'question': 'In what 1973 George Lucas film can you find the stars Ron Howard, Harrison Ford, and Richard Dreyfuss?', 'answer': 'American Graffiti', 'category': 'Coming of Age'}, {'question': "Who voices Sally, Jack's love interest, in The Nightmare Before Christmas?", 'answer': "Catherine O'Hara", 'category': 'Animated'}, {'question': 'Jennifer Lawrence won the Oscar for Best Actress for Silver Linings Playbook. Name two of the other films she has been nominated for (as of August 2020).', 'answer': "Winter's Bone, American Hustle, Joy", 'category': 'Oscars'}, {'question': "In 2009's The Princess and the Frog, what is the name of Tiana's restaurant at the end of the film?", 'answer': "Tiana's Palace", 'category': 'Disney'}, {'question': 'To date, how many Indiana Jones films have been released?', 'answer': '4 (Raiders of the Lost Ark, The Temple of Doom, The Last Crusade, The Kingdom of the Crystal Skull)', 'category': 'Action/Adventure'}, {'question': "Who won Best Actress for her role as Viola de Lesseps in 1998's Shakespeare in Love?", 'answer': 'Gwyneth Paltrow', 'category': 'Oscars'}, {'question': 'What 2015 biopic tells the story of the rise of the rap group NWA?', 'answer': 'Straight Outta Compton', 'category': 'Dramas'}, {'question': "Who plays the lead role of Nicholas Angel in Edgar Wright's 2007 film Hot Fuzz?", 'answer': 'Simon Pegg', 'category': '2000s'}, {'question': 'In what franchise will you find characters such as Will Turner, Jack the Monkey, Elizabeth Swann, and Captain Barbossa?', 'answer': 'Pirates of the Caribbean', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what 2012 comedy film will you hear the line, "You\'re one of the a cappella girls. I\'m one of those a cappella boys, and we\'re gonna have aca-children."?', 'answer': 'Pitch Perfect', 'category': 'Comedies'}, {'question': "Who directed 1999's Sleepy Hollow?", 'answer': 'Tim Burton', 'category': 'Horror/Thriller'}, {'question': "In 1994's The Lion King, what is the name of the rock formation that is home to the king of the land?", 'answer': 'Pride Rock', 'category': 'Animated'}, {'question': 'Which 2017 musical has the following songs on its soundtrack: "Never Enough" and "The Other Side"?', 'answer': 'The Greatest Showman', 'category': 'N/A'}, {'question': "Who plays the character of Ivy Walker, a blind woman living in a village named Covington, in 2004's The Village?", 'answer': 'Bryce Dallas Howard', 'category': '2000s'}, {'question': 'Who starred in the 2007 action-revenge film Death Sentence?', 'answer': 'Kevin Bacon', 'category': '2000s'}, {'question': "What is the nickname of Jimmy Rabbit's battle rap rival played by Anthony Mackie in 8 Mile?", 'answer': 'Papa Doc', 'category': '2000s'}, {'question': 'In The Santa Clause 2, what does Santa have to do in order to stop the de-Santafication process?', 'answer': 'get married', 'category': '2000s'}, {'question': 'Who directed Meryl Streep in the 1983 film Silkwood?', 'answer': 'Mike Nichols', 'category': 'Meryl Streep'}, {'question': 'What Best Picture winner did Meryl receive her first Oscar nomination for?', 'answer': 'The Deer Hunter', 'category': 'Meryl Streep'}, {'question': 'What 2002 film from director Spike Jonze stars Nicholas Cage and Meryl Streep as real life writers Charlie Kaufman and Susan Orlean?', 'answer': 'Adaptation', 'category': 'Meryl Streep'}, {'question': 'Meryl Streep starred as Lindy Chamberlain in what 1988 film?', 'answer': 'A Cry in the Dark', 'category': 'Meryl Streep'}, {'question': "Who plays C's hard-working and by-the-books father Lorenzo in A Bronx Tale?", 'answer': 'Robert De Niro', 'category': 'Crime'}, {'question': 'What national landmark is the setting of the climactic scene in Close Encounters of the Third Kind?', 'answer': 'Devils Tower', 'category': 'Steven Spielberg'}, {'question': "What is the name of the king who is Prince Philip's father in Sleeping Beauty?", 'answer': 'Hubert', 'category': 'Disney'}, {'question': 'What is the subtitle to the third John Wick film?', 'answer': 'Parabellum', 'category': 'New Releases'}, {'question': "What famous comedian plays the character of Danny Costanzo alongside Gregory Hines' character in Running Scared?", 'answer': 'Billy Crystal', 'category': 'Action/Adventure'}, {'question': 'In what 1993 thriller will you find the quote "well, think me up a cup of coffee and a chocolate donut with some of those little sprinkles on top while you\'re thinking"?', 'answer': 'The Fugitive', 'category': 'Quotes'}, {'question': "Who plays Agent Rupert Anderson in 1988's Mississippi Burning?", 'answer': 'Gene Hackman', 'category': 'Dramas'}, {'question': 'Taylor Hackford directed Keanu Reeves and Al Pacino in this 1997 thriller.', 'answer': "The Devil's Advocate", 'category': 'Directors'}, {'question': 'Teens see a comet crash outside their town only to discover a pack of murderous aliens that look very much like clowns in what 1988 film?', 'answer': 'Killer Klowns from Outer Space', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what 1990 comedy does Arnold Schwarzenegger exclaim "it\'s not a tumor"?', 'answer': 'Kindergarten Cop', 'category': 'Comedies'}, {'question': 'Frank Grillo first appears as Leo Barnes in the second film of the Purge series. Its title is what?', 'answer': 'The Purge: Anarchy', 'category': 'Horror/Thriller'}, {'question': 'Kevin, Stuart, and Bob are the lead characters of what 2015 Despicable Me spin-off and prequel?', 'answer': 'Minions', 'category': 'Animated'}, {'question': 'Todd Phillips directed Ben Stiller and Owen Wilson in which 2004 remake?', 'answer': 'Starsky & Hutch', 'category': 'N/A'}, {'question': 'Besides the Expendables series, what 2013 film also sees both Arnold and Sly in a movie together?', 'answer': 'Escape Plan', 'category': 'Sly & Arnie'}, {'question': "Arnold Schwarzenegger plays U.S. Marshal John Kruger assigned to protect Vanessa Williams' character in what 90s action thriller?", 'answer': 'Eraser', 'category': 'Sly & Arnie'}, {'question': 'What character actor plays Mitch, who is one of the abusive officers in First Blood?', 'answer': 'David Caruso', 'category': 'Sly & Arnie'}, {'question': 'Arnold Schwarzenegger co-stars with Jim Belushi in what 80s film?', 'answer': 'Red Heat', 'category': 'Sly & Arnie'}, {'question': "What is the name of Rocky's dog in the film Rocky?", 'answer': 'Butkus', 'category': 'Sly & Arnie'}, {'question': 'Arnold Schwarzenegger plays the sheriff of a small town called Summerton Junction in what 2010s action film?', 'answer': 'The Last Stand', 'category': 'Sly & Arnie'}, {'question': "In 2018's The Mule, who plays Mary, Clint Eastwood's character's ex-wife?", 'answer': 'Dianne Wiest', 'category': 'Clint Eastwood'}, {'question': 'Clint Eastwood has played The Man with No Name how many times?', 'answer': '3 (in A Fistful of Dollars; For a Few Dollars More; The Good, the Bad and the Ugly)', 'category': 'Clint Eastwood'}, {'question': 'Who plays Jazz legend Charlie Parker in the 1988 film Bird, which Clint Eastwood directed?', 'answer': 'Forest Whitaker', 'category': 'Clint Eastwood'}, {'question': 'In what western does Robert Duvall play a landowner who hires a bounty hunter played by Clint Eastwood to hunt down a Mexican revolutionary?', 'answer': 'Joe Kidd', 'category': 'Clint Eastwood'}, {'question': 'The Clint Eastwood directed Mystic River takes place in what United States city?', 'answer': 'Boston', 'category': 'Clint Eastwood'}, {'question': 'Walt Kowalski is a veteran of what war in Gran Torino?', 'answer': 'the Korean War', 'category': 'Clint Eastwood'}, {'question': 'What is the most recent film in which Drew Barrymore and Adam Sandler co-starred together?', 'answer': 'Blended', 'category': 'Drew Barrymore'}, {'question': "Who plays Honey Daniels in 2003's Honey?", 'answer': 'Jessica Alba', 'category': 'Dance'}, {'question': 'Who voices the giant treasure-hoarding crab Tamatoa in the film Moana?', 'answer': 'Jemaine Clement', 'category': 'Disney'}, {'question': 'Who plays Nino, a tough guy who works alongside Bernie Rose, in Drive?', 'answer': 'Ron Perlman', 'category': 'Thriller'}, {'question': 'What 1993 crime drama features characters nicknamed Caine and O-Dog?', 'answer': 'Menace II Society', 'category': '1990s'}, {'question': "You'll find Dwayne Johnson and Mark Wahlberg in what 2013 action film?", 'answer': 'Pain & Gain', 'category': 'Action/Adventure'}, {'question': 'Eddie Murphy goes to a theme park known as Wonder World in an attempt to stop a gang of counterfeiters responsible for the death of his boss in what film?', 'answer': 'Beverly Hills Cop III', 'category': '1990s'}, {'question': "Which actor plays Tom Hardy's brother in the mixed martial arts drama Warrior?", 'answer': 'Joel Edgerton', 'category': 'Dramas'}, {'question': "You'll find the character of Michael Sullivan, an enforcer for Irish mob boss John Rooney, in what 2002 gangster film?", 'answer': 'Road to Perdition', 'category': 'Crime'}, {'question': "Who stars as a pilot named Raleigh Becket in 2013's Pacific Rim?", 'answer': 'Charlie Hunnam', 'category': 'Fantasy/Sci-Fi'}, {'question': 'David Spade and Chris Farley co-star together in what 1996 comedy?', 'answer': 'Black Sheep', 'category': 'Comedies'}, {'question': 'Who directed the 1935 thriller The 39 Steps?', 'answer': 'Alfred Hitchcock', 'category': 'Horror/Thriller'}, {'question': 'Kodi Smit-McPhee, Leslie Mann, Casey Affleck, and Anna Kendrick lent their voices to what 2012 Laika stop-motion film?', 'answer': 'ParaNorman', 'category': 'Animated'}, {'question': "Who stars as an architect named Flipper Purify in 1991's Jungle Fever?", 'answer': 'Wesley Snipes', 'category': 'Spike Lee'}, {'question': 'What Spike Lee film follows a group of African-American men as they travel to the Million Man March in Washington, D.C.?', 'answer': 'Get on the Bus', 'category': 'Spike Lee'}, {'question': "What film served as Spike Lee's feature film debut?", 'answer': "She's Gotta Have It", 'category': 'Spike Lee'}, {'question': 'In Clockers, Mekhi Phifer plays a young drug dealer who suffers what physical health ailment caused by all the stress of life on the streets?', 'answer': 'ulcers', 'category': 'Spike Lee'}, {'question': 'Which actor stars as the character known as Priest in the film Priest?', 'answer': 'Paul Bettany', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what 1997 film will you find the alien race Mondoshawans?', 'answer': 'The Fifth Element', 'category': 'Fantasy/Sci-Fi'}, {'question': 'You can find the quote "They literally call themselves Decepticons. That doesn\'t set off any red flags?" in what film in the Transformers franchise?', 'answer': 'Bumblebee', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who directed 2018's A Wrinkle in Time?", 'answer': 'Ava DuVernay', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Top Gun was released in what year?', 'answer': '1986', 'category': 'Release Dates'}, {'question': "Clint Eastwood's Invictus revolves around what sport?", 'answer': 'rugby', 'category': 'N/A'}, {'question': 'What 2007 thriller stars Robert Downey Jr., Mark Ruffalo, and Jake Gyllenhaal?', 'answer': 'Zodiac', 'category': 'N/A'}, {'question': 'Who played Bud Fox in Wall Street?', 'answer': 'Charlie Sheen', 'category': 'N/A'}, {'question': "Who voices Carl Fredricksen in Pixar's Up?", 'answer': 'Ed Asner', 'category': 'N/A'}, {'question': 'George Clooney takes on a horde of vampires in what 1996 film?', 'answer': 'From Dusk till Dawn', 'category': 'N/A'}, {'question': "Who played the character of Jenny in 1994's Forrest Gump?", 'answer': 'Robin Wright', 'category': 'N/A'}, {'question': 'What actor stars in the following films: Blow, Sahara, and Vanilla Sky?', 'answer': 'Penélope Cruz', 'category': 'N/A'}, {'question': "What indie darling was Kevin Smith's directorial debut?", 'answer': 'Clerks', 'category': 'N/A'}, {'question': 'In what year did They Live come out?', 'answer': '1988', 'category': 'N/A'}, {'question': 'How many times has Sylvester Stallone played John Rambo in theatrical films?', 'answer': '5 (First Blood, Rambo: First Blood Part II, Rambo III, Rambo, Rambo: Last Blood)', 'category': 'N/A'}, {'question': 'What was the first film that Tom Hanks appeared in as Robert Langdon?', 'answer': 'The Da Vinci Code', 'category': 'Tom Hanks'}, {'question': 'In what year did Terminator 2: Judgment Day release?', 'answer': '1991', 'category': 'Release Dates'}, {'question': 'Who plays Senator Rumson, the Republican presidential hopeful who is attacking Sydney in the press, in The American President?', 'answer': 'Richard Dreyfuss', 'category': '1990s'}, {'question': 'Which comedian starred opposite Jessica Simpson as the character Zack in the 2006 rom-com Employee of the Month?', 'answer': 'Dane Cook', 'category': 'Rom-Coms'}, {'question': 'Only three directors have ever received two Best Director nominations in the same year. Name one of the directors.', 'answer': 'Clarence Brown (Anna Christie, Romance), Michael Curtiz (Four Daughters, Angels with Dirty Faces), Steven Soderbergh (Erin Brockovich, Traffic)', 'category': 'Oscars'}, {'question': "In A River Runs Through It, which actor plays the Presbyterian reverend and the father of Craig Sheffer and Brad Pitt's characters?", 'answer': 'Tom Skerritt', 'category': 'Brad Pitt'}, {'question': 'John Woo directed Nicolas Cage in what 2002 war film?', 'answer': 'Windtalkers', 'category': 'N/A'}, {'question': 'What former NFL quarterback lends his voice to Guapo, a bull in the animated film Ferdinand?', 'answer': 'Peyton Manning', 'category': 'N/A'}, {'question': 'Who directed the films The Hunger Games: Mockingjay – Part 2, Red Sparrow, and I Am Legend?', 'answer': 'Francis Lawrence', 'category': 'N/A'}, {'question': 'In the film Bloodsport, how long does the legendary martial arts tournament that is held in Hong Kong last?', 'answer': '3 days', 'category': 'N/A'}, {'question': "In 10 Things I Hate About You, Heath Ledger's character Patrick sings what song to Julia Stiles' character?", 'answer': "Can't Take My Eyes Off You", 'category': 'N/A'}, {'question': 'Alicia Vikander and Dominic West star in what 2018 video game adaptation?', 'answer': 'Tomb Raider', 'category': 'Action/Adventure'}, {'question': 'What 1993 crime drama starring Robert De Niro and Chazz Palminteri, is about a devoted father who battles the local crime boss for the life of his son?', 'answer': 'A Bronx Tale', 'category': 'Crime'}, {'question': "Who directed 2012's Magic Mike?", 'answer': 'Steven Soderbergh', 'category': 'Dramas'}, {'question': 'Who plays Gregorio Cortez, father to Carmen and Juni, in the first three Spy Kids films?', 'answer': 'Antonio Banderas', 'category': 'Family'}, {'question': 'Guillermo del Toro directed what 2006 film that includes characters such as Ofelia, the Faun, and Captain Vidal?', 'answer': "Pan's Labyrinth", 'category': 'Fantasy/Sci-Fi'}, {'question': "James Caan plays Walter Hobbs, the biological father to Will Ferrell's Buddy, in what film?", 'answer': 'Elf', 'category': 'Comedies'}, {'question': 'Happy Death Day was released in what year?', 'answer': '2017', 'category': 'Horror/Thriller'}, {'question': 'What comedic actor voices the Pixar character Mike Wazowski?', 'answer': 'Billy Crystal', 'category': 'Animated'}, {'question': 'Who directed the films Fast Food Nation, Bernie, and Last Flag Flying?', 'answer': 'Richard Linklater', 'category': 'Directors'}, {'question': 'Kathryn Bigelow directed this 2002 thriller starring Harrison Ford and Liam Neeson.', 'answer': 'K-19: The Widowmaker', 'category': 'Directors'}, {'question': 'Who directed and appears in the 1989 dark comedy The War of the Roses?', 'answer': 'Danny DeVito', 'category': 'Directors'}, {'question': 'What 1984 sci-fi film did David Lynch direct starring Kyle MacLachlan?', 'answer': 'Dune', 'category': 'Directors'}, {'question': 'Who plays Gus Polinsky, the Polka King of Chicago, in Home Alone?', 'answer': 'John Candy', 'category': '1990s'}, {'question': 'What 1990s film starring Robert De Niro has Sean Bean as the character Spence, an English firearms specialist dismissed from the team early in the film?', 'answer': 'Ronin', 'category': '1990s'}, {'question': 'What item does Forrest place inside a copy of Curious George in Forrest Gump?', 'answer': 'feather', 'category': '1990s'}, {'question': 'What 1999 drama stars Sarah Michelle Gellar, Ryan Phillippe, and Reese Witherspoon?', 'answer': 'Cruel Intentions', 'category': '1990s'}, {'question': "Which Die Hard sequel takes place in Russia and involves John's son Jack McClane?", 'answer': 'A Good Day to Die Hard', 'category': 'Action/Adventure'}, {'question': "Who plays Julianne Potter, a 27-year-old food critic who realizes she's in love with her best friend Michael in My Best Friend's Wedding?", 'answer': 'Julia Roberts', 'category': 'Rom-Coms'}, {'question': "You'll find supporting roles from Laurence Fishburne, Harrison Ford, Scott Glenn, and Dennis Hopper in what 1979 war film?", 'answer': 'Apocalypse Now', 'category': 'Dramas'}, {'question': "The Safdie Brothers directed what actor in Uncut Gems as the film's lead Howard Ratner?", 'answer': 'Adam Sandler', 'category': 'Crime'}, {'question': 'Daniel Craig and Harrison Ford co-star in what 2011 sci-fi movie?', 'answer': 'Cowboys & Aliens', 'category': 'Fantasy/Sci-Fi'}, {'question': "Which actor, known for playing a famous MCU hero, stars as the teen Jake in 2001's Not Another Teen Movie?", 'answer': 'Chris Evans', 'category': 'Comedies'}, {'question': "What 1984 horror film has a teenage protagonist named Nancy Thompson and gave us one of horror's most iconic slashers for the first time?", 'answer': 'A Nightmare on Elm Street', 'category': 'Horror/Thriller'}, {'question': "Who directed 2005's stop motion animated film Corpse Bride?", 'answer': 'Tim Burton', 'category': 'Animated'}, {'question': 'In Batman & Robin, before his wife became ill, Mr. Freeze gave her a necklace shaped like what?', 'answer': 'a snowflake', 'category': 'Comic Book'}, {'question': "What is the nickname that Tony uses for Thor in 2012's The Avengers, which Thor later uses as a password to activate a Quinjet in 2017's Thor: Ragnarok?", 'answer': 'Point Break', 'category': 'Comic Book'}, {'question': 'In The Lego Batman Movie, what is the name of the location that Batman sends the Joker to, where he assembles a super team of villains?', 'answer': 'the Phantom Zone', 'category': 'Comic Book'}, {'question': 'Who plays Wanda Maximoff in the MCU?', 'answer': 'Elizabeth Olsen (in Captain America: The Winter Soldier, Avengers: Age of Ultron, Captain America: Civil War, Avengers: Infinity War, Avengers: Endgame)', 'category': 'Comic Book'}, {'question': 'Which MCU actor has had small roles in the following three films: The Five-Year Engagement, Zero Dark Thirty, and Her?', 'answer': 'Chris Pratt', 'category': '2010s'}, {'question': 'Which 2010s film opens with a big musical number on a Los Angeles freeway?', 'answer': 'La La Land', 'category': '2010s'}, {'question': 'What actor portrays the character simply known as The Wise Man, who appears as a guiding force for the girls in their dream sequences, in the 2011 movie Sucker Punch?', 'answer': 'Scott Glenn', 'category': '2010s'}, {'question': 'What 2014 film follows the character Riggan Thomson as he tries to launch a Broadway adaptation of the short story What We Talk About When We Talk About Love?', 'answer': 'Birdman or (The Unexpected Virtue of Ignorance)', 'category': '2010s'}, {'question': 'What 2002 musical won Best Picture at the Academy Awards?', 'answer': 'Chicago', 'category': 'Musicals'}, {'question': 'In which 1998 film does Leonardo DiCaprio play two different roles?', 'answer': 'The Man in the Iron Mask', 'category': 'Leonardo DiCaprio'}, {'question': 'As of the end of 2019, for how many Pixar films has Michael Giacchino provided the score?', 'answer': '7 (The Incredibles, Ratatouille, Up, Cars 2, Inside Out, Coco, Incredibles 2)', 'category': 'Pixar'}, {'question': 'Who plays Selene, a vampire Death Dealer hunting Lycans, in the Underworld franchise?', 'answer': 'Kate Beckinsale', 'category': 'Action/Adventure'}, {'question': "Who plays Theodora, who becomes The Wicked Witch of the West in 2013's Oz the Great and Powerful?", 'answer': 'Mila Kunis', 'category': 'Family'}, {'question': 'Who stars as Sonny Weaver, general manager of the Cleveland Browns, in the 2014 sports drama Draft Day?', 'answer': 'Kevin Costner', 'category': 'Dramas'}, {'question': 'John Cusack plays Martin, a hitman who is depressed and disillusioned with his work, in what movie?', 'answer': 'Grosse Pointe Blank', 'category': '1990s'}, {'question': 'Who plays the lead role in the 2013 fantasy action film 47 Ronin?', 'answer': 'Keanu Reeves', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Elle Woods goes to Harvard University to become a lawyer in what 2001 film?', 'answer': 'Legally Blonde', 'category': 'Comedies'}, {'question': 'Mel Gibson plays Graham Hess, a farmer and former priest, in what 2002 film?', 'answer': 'Signs', 'category': 'Horror/Thriller'}, {'question': "Who voices Lance Sterling, a cocky secret agent of H.T.U.V. in 2019's Spies in Disguise?", 'answer': 'Will Smith', 'category': 'Animated'}, {'question': 'The Paul Rudd and Leslie Mann film This Is 40 is a spin-off to what Judd Apatow movie?', 'answer': 'Knocked Up', 'category': 'Judd Apatow'}, {'question': "This actress played Amy Schumer's boss Dianna in 2015's Trainwreck.", 'answer': 'Tilda Swinton', 'category': 'Judd Apatow'}, {'question': 'Who plays Ed Harken, the station director of Channel Four News in the Apatow-produced Anchorman?', 'answer': 'Fred Willard', 'category': 'Judd Apatow'}, {'question': "Who cameos as Ben Stone's father in Knocked Up?", 'answer': 'Harold Ramis', 'category': 'Judd Apatow'}, {'question': 'What 2012 coming-of-age film stars Logan Lerman, Ezra Miller, and Emma Watson?', 'answer': 'The Perks of Being a Wallflower', 'category': 'Young Adult Adaptations'}, {'question': 'What 1983 Francis Ford Coppola film revolves around Oklahoma greasers played by young stars such as C. Thomas Howell, Matt Dillon, Ralph Macchio, and Patrick Swayze?', 'answer': 'The Outsiders', 'category': 'Young Adult Adaptations'}, {'question': "In The Hunger Games, what is the name of Katniss' younger sister who is originally chosen as tribute for the games?", 'answer': 'Primrose Everdeen', 'category': 'Young Adult Adaptations'}, {'question': 'Blake Lively plays soccer player Bridget Vreeland in what 2005 YA adaptation?', 'answer': 'The Sisterhood of the Traveling Pants', 'category': 'Young Adult Adaptations'}, {'question': 'Meryl Streep plays real-life chef Julia Child in what 2009 film?', 'answer': 'Julie & Julia', 'category': 'Meryl Streep'}, {'question': 'In what American city does the 2007 film I Am Legend primarily take place?', 'answer': 'New York City', 'category': 'Disaster'}, {'question': 'Which action star plays U.S. Marine Ray Garrison in the film Bloodshot?', 'answer': 'Vin Diesel', 'category': 'New Releases'}, {'question': 'Jason Blum has been nominated for Best Picture three times as a producer. Name two of the films he was nominated for.', 'answer': 'Whiplash, Get Out, BlacKkKlansman', 'category': 'Oscars'}, {'question': 'Who plays the lead role in Prince of Persia: The Sands of Time?', 'answer': 'Jake Gyllenhaal', 'category': 'Action/Adventure'}, {'question': 'Which actor was the director of films Gone Baby Gone and Live by Night?', 'answer': 'Ben Affleck', 'category': 'Directors'}, {'question': 'What 2014 drama became known for the line "not my tempo"?', 'answer': 'Whiplash', 'category': 'Dramas'}, {'question': 'Tom Hanks and Meg Ryan star in what romantic comedy released in 1990?', 'answer': 'Joe Versus the Volcano', 'category': '1990s'}, {'question': "Who plays Jim Caviezel's father Frank Sullivan in the 2000 time travel thriller Frequency?", 'answer': 'Dennis Quaid', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played the main lead Mitch Robbins in 1991's City Slickers?", 'answer': 'Billy Crystal', 'category': 'Comedies'}, {'question': "Who plays the horror icon known as Candyman in 1992's Candyman?", 'answer': 'Tony Todd', 'category': 'Horror/Thriller'}, {'question': 'In what animated film will you see a gingerbread man being tortured by having his "gumdrop buttons" removed?', 'answer': 'Shrek', 'category': 'Animated'}, {'question': 'Meg Ryan plays a Captain in the U.S. Army in Courage Under Fire, which is set during which war?', 'answer': 'the Gulf War', 'category': 'Meg Ryan'}, {'question': "Meg Ryan plays Catherine Boyd, who turns out to be a relative of Albert Einstein in 1994's I.Q.. How is he related to her?", 'answer': 'her uncle', 'category': 'Meg Ryan'}, {'question': "Which actor plays an angel who falls in love with Meg Ryan's character in City of Angels?", 'answer': 'Nicolas Cage', 'category': 'Meg Ryan'}, {'question': 'Meg Ryan plays a promoter of what sport in the film Against the Ropes?', 'answer': 'boxing', 'category': 'Meg Ryan'}, {'question': 'The characters Jessie the cowgirl and Bullseye the horse are introduced in which film in the Toy Story franchise?', 'answer': 'Toy Story 2', 'category': 'Pixar'}, {'question': "Who voices Remy's father Django in Ratatouille?", 'answer': 'Brian Dennehy', 'category': 'Pixar'}, {'question': 'What type of animals are Fluke and Rudder, voiced by Idris Elba and Dominic West, in Finding Dory?', 'answer': 'sea lions', 'category': 'Pixar'}, {'question': 'Which character in The Incredibles tells Mr. Incredible, "My god, you\'ve gotten fat"?', 'answer': 'Edna Mode', 'category': 'Pixar'}, {'question': 'What 2017 movie reboot of a popular TV show co-stars Elizabeth Banks and Bryan Cranston?', 'answer': 'Power Rangers', 'category': 'Remakes & Reboots'}, {'question': 'Mindy Kaling, Anne Hathaway, and Helena Bonham Carter have roles in what 2010s film?', 'answer': "Ocean's 8", 'category': '2010s'}, {'question': "Who plays Robin Williams' ex-wife in Mrs. Doubtfire?", 'answer': 'Sally Field', 'category': 'Family'}, {'question': "In 2006's Casino Royale, who played Vesper Lynd?", 'answer': 'Eva Green', 'category': 'Spy'}, {'question': 'Who plays NSA official Thomas Bryan Reynolds, who is caught on camera having someone murdered, in Enemy of the State?', 'answer': 'Jon Voight', 'category': 'Will Smith'}, {'question': "In The Firm, what is the name of the law firm that Tom Cruise's character ultimately works at?", 'answer': 'BL&L (Bendini, Lambert & Locke)', 'category': 'Tom Cruise'}, {'question': 'What is the subtitle of the fourth film of the Mad Max franchise?', 'answer': 'Fury Road', 'category': 'Action/Adventure'}, {'question': 'Daniel Day-Lewis won his second Best Actor Oscar for what 2007 film?', 'answer': 'There Will Be Blood', 'category': 'Oscars'}, {'question': "You'll find the town of Bedford Falls in what classic film?", 'answer': "It's a Wonderful Life", 'category': 'Dramas'}, {'question': 'James Wan has directed three sequels. Name one of them.', 'answer': 'Insidious: Chapter 2, Furious 7, The Conjuring 2', 'category': 'Directors'}, {'question': 'Who plays Evan Treborn, who can time travel into his past by reading his old journals, in The Butterfly Effect?', 'answer': 'Ashton Kutcher', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays the main lead Annie Walker in Bridesmaids?', 'answer': 'Kristen Wiig', 'category': 'Comedies'}, {'question': 'What 2008 horror thriller stars Liv Tyler and Scott Speedman as a couple whose home is invaded?', 'answer': 'The Strangers', 'category': 'Horror/Thriller'}, {'question': 'What 2019 animated film features the Oscar-nominated song "Into the Unknown"?', 'answer': 'Frozen II', 'category': 'Animated'}, {'question': 'Who directed the 2013 western adventure The Lone Ranger?', 'answer': 'Gore Verbinski', 'category': 'N/A'}, {'question': "Which Oscar-winning actor co-stars in 1987's Jaws: The Revenge?", 'answer': 'Michael Caine', 'category': '1980s'}, {'question': "In 1982's Tootsie, what is the name of the popular daytime soap opera that Michael Dorsey joins?", 'answer': 'Southwest General', 'category': '1980s'}, {'question': 'Danny Noonan is a young man who hopes to earn a college scholarship by working at the Bushwood Country Club in what 80s comedy?', 'answer': 'Caddyshack', 'category': '1980s'}, {'question': "Who directed 1984's Gremlins?", 'answer': 'Joe Dante', 'category': '1980s'}, {'question': 'What romantic comedy starring Audrey Hepburn and Humphrey Bogart had a 90s remake that starred Harrison Ford?', 'answer': 'Sabrina', 'category': 'Audrey Hepburn'}, {'question': "Audrey Hepburn's final film appearance came in what Steven Spielberg film?", 'answer': 'Always', 'category': 'Audrey Hepburn'}, {'question': 'In 1961\'s The Children\'s Hour, a young girl accuses the women who run her school of being "what"?', 'answer': 'lesbians', 'category': 'Audrey Hepburn'}, {'question': "In How to Steal a Million, what type of object worth a million dollars is Audrey Hepburn's character attempting to steal?", 'answer': 'a statue', 'category': 'Audrey Hepburn'}, {'question': "Which action star plays knife expert Lee Christmas, the number two guy to Sylvester Stallone's character, in the Expendables films?", 'answer': 'Jason Statham', 'category': 'Action/Adventure'}, {'question': 'Stanley Tucci plays Frank Dixon, the temporary customs director of JFK, in what 2004 Spielberg-directed film?', 'answer': 'The Terminal', 'category': 'Steven Spielberg'}, {'question': 'For what film did Annette Bening receive her first Oscar nomination?', 'answer': 'The Grifters', 'category': 'Oscars'}, {'question': "The Bishop's Wife stars which Hollywood golden age actor as an angel sent from heaven?", 'answer': 'Cary Grant', 'category': 'Classics'}, {'question': 'In Sleepless in Seattle, what did Jonah accidentally leave behind on top of the Empire State Building that leads to the first official meeting between Tom Hanks and Meg Ryan?', 'answer': 'his backpack', 'category': 'Tom Hanks'}, {'question': 'What comedic actor provides the voice of the title character in Captain Underpants?', 'answer': 'Ed Helms', 'category': 'Animated'}, {'question': 'What 2013 film sees Tom Cruise playing a drone technician on a devastated version of Earth in the year 2077?', 'answer': 'Oblivion', 'category': 'Action/Adventure'}, {'question': "You'll find Joey Cramer, Paul Reubens, and Sarah Jessica Parker in what 1986 film directed by Randal Kleiser?", 'answer': 'Flight of the Navigator', 'category': 'Family'}, {'question': 'Who directed the 1991 film Boyz n the Hood?', 'answer': 'John Singleton', 'category': 'Dramas'}, {'question': 'What 2004 Marvel movie sequel won the Oscar for Best Visual Effects?', 'answer': 'Spider-Man 2', 'category': 'Oscars'}, {'question': "Which TV actress plays paramedic Anya Thorensen in 2018's Annihilation?", 'answer': 'Gina Rodriguez', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Jordan Peele and Keegan-Michael Key try to receive their kitten from a gang in what 2016 film?', 'answer': 'Keanu', 'category': 'Comedies'}, {'question': 'Who plays Renai Lambert, wife to Patrick Wilson and mother of possessed Dalton, in the Insidious franchise?', 'answer': 'Rose Byrne (in 1, 2)', 'category': 'Horror/Thriller'}, {'question': 'Sony Pictures Animation made their feature film debut with this 2006 comedy about a bear and a deer fighting off human hunters.', 'answer': 'Open Season', 'category': 'Animated'}, {'question': 'What famous musician was the male lead in the films King Creole, Clambake, and Charro!?', 'answer': 'Elvis Presley', 'category': 'Classics'}, {'question': 'What 1960s musical features the characters Henry Higgins and Eliza Doolittle and won the Oscar for Best Picture?', 'answer': 'My Fair Lady', 'category': 'Classics'}, {'question': 'Who won a Best Actress Oscar for the 1945 film Mildred Pierce?', 'answer': 'Joan Crawford', 'category': 'Classics'}, {'question': "What Oscar-winning actor played a tyrannical naval ship captain opposite Henry Fonda in 1955's Mister Roberts?", 'answer': 'James Cagney', 'category': 'Classics'}, {'question': 'Jack Lemmon and Walter Matthau appear together in what 1966 comedy?', 'answer': 'The Fortune Cookie', 'category': 'Classics'}, {'question': 'In To Kill a Mockingbird, which actor plays Arthur "Boo" Radley, whom the kids spy on for not leaving his house in many years?', 'answer': 'Robert Duvall', 'category': 'Classics'}, {'question': "Who plays Stevie's older brother Ian in Mid90s?", 'answer': 'Lucas Hedges', 'category': 'Comedies'}, {'question': "In The Birdcage, what is the name of Armand's drag club?", 'answer': 'The Birdcage', 'category': 'Comedies'}, {'question': "Which film features Vince Vaughn, Vincent D'Onofrio, and Cole Hauser as brothers that run a tourism business in Chicago?", 'answer': 'The Break-Up', 'category': 'Comedies'}, {'question': "In 2016's Why Him?, what band are Bryan Cranston and Megan Mullaly obsessed with that even make a small cameo at the end of the film?", 'answer': 'Kiss', 'category': 'Comedies'}, {'question': 'Who plays Dusty Bottoms in Three Amigos?', 'answer': 'Chevy Chase', 'category': 'Comedies'}, {'question': 'What Will Ferrell film features the animated realm of Pleasure Town?', 'answer': 'Anchorman: The Legend of Ron Burgundy', 'category': 'Comedies'}, {'question': 'Who plays the lead Doug Carlin alongside Paula Patton and Jim Caviezel in the sci-fi action film Déjà Vu?', 'answer': 'Denzel Washington', 'category': 'Action/Adventure'}, {'question': 'Spike Lee directed John Leguizamo, Adrien Brody, and Mira Sorvino in what 1999 crime film about the 1977 David Berkowitz serial murders?', 'answer': 'Summer of Sam', 'category': 'Crime'}, {'question': "Amandla Stenberg plays Starr Carter, who witnesses her friend Khalil's murder when she is pulled over, in what 2018 film?", 'answer': 'The Hate U Give', 'category': 'Dramas'}, {'question': 'Clint Eastwood plays Frank Morris, a prisoner with an exceptional IQ, in what 1979 biographical film?', 'answer': 'Escape from Alcatraz', 'category': '1970s'}, {'question': "Who plays the lead role of Percy Jackson in 2010's Percy Jackson & the Olympians: The Lightning Thief?", 'answer': 'Logan Lerman', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Adam Sandler stars as an Israeli counter-terrorist who dreams of becoming a hairstylist in what comedy?', 'answer': "You Don't Mess with the Zohan", 'category': 'Comedies'}, {'question': 'A group of sorority sisters at Hawthorne College are preyed upon by an unknown stalker in this 2019 horror remake.', 'answer': 'Black Christmas', 'category': 'Horror/Thriller'}, {'question': 'Jim Parsons voices Oh, an alien fugitive that teams up with Tip Tucci, voiced by Rihanna, in what 2015 film?', 'answer': 'Home', 'category': 'Animated'}, {'question': 'Andrew Stanton directed which 2008 Pixar film?', 'answer': 'WALL-E', 'category': 'N/A'}, {'question': "Who plays Dr. Moonlight Graham in 1989's Field of Dreams?", 'answer': 'Burt Lancaster', 'category': '1980s'}, {'question': "Who plays Carole Bradshaw, who is Goose's wife, in the film Top Gun?", 'answer': 'Meg Ryan', 'category': '1980s'}, {'question': 'In the film Bloodsport, what is the name of the martial arts competition that the competitors fight in?', 'answer': 'Kumite', 'category': '1980s'}, {'question': 'Who plays an aging shoeshiner who is mistaken for a mafia don in the 1988 David Mamet film Things Change?', 'answer': 'Don Ameche', 'category': '1980s'}, {'question': "Who plays Dr. Bill Raymond who is Norman's doctor that advises him not to go back and live at Bates Motel in 1983's Psycho II?", 'answer': 'Robert Loggia', 'category': '1980s'}, {'question': 'In the film Coming to America, what is the name of the fictional African country that Akeem is the crown prince of?', 'answer': 'Zamunda', 'category': '1980s'}, {'question': 'Angela Bassett plays the mother of what movie superhero?', 'answer': 'Black Panther', 'category': 'Angela Bassett'}, {'question': "Who directed Eddie Murphy and Angela Bassett in 1995's Vampire in Brooklyn?", 'answer': 'Wes Craven', 'category': 'Angela Bassett'}, {'question': 'Angela Bassett is the voice of the Decepticon Shatter, who is trying to track down an Autobot, in what film in the Transformers franchise?', 'answer': 'Bumblebee', 'category': 'Angela Bassett'}, {'question': 'Which music legend wrote and starred in the film Masked and Anonymous alongside such actors as John Goodman, Jeff Bridges, and Angela Bassett?', 'answer': 'Bob Dylan', 'category': 'Angela Bassett'}, {'question': 'Which comedian stars as an aging baseball star opposite Angela Bassett in the comedy Mr. 3000?', 'answer': 'Bernie Mac', 'category': 'Angela Bassett'}, {'question': "What former NBA player portrays the love interest Harry to Angela Bassett's character Brenda in 2008's Meet the Browns?", 'answer': 'Rick Fox', 'category': 'Angela Bassett'}, {'question': 'Who plays the character Vincent "Vinnie" Antonelli, who is a former mobster inducted into the Witness Protection Program, in My Blue Heaven?', 'answer': 'Steve Martin', 'category': 'Nora Ephron'}, {'question': "Who directed 1984's The Terminator?", 'answer': 'James Cameron', 'category': 'N/A'}, {'question': 'Who plays detective JImmy Monroe in Cop Out?', 'answer': 'Bruce Willis', 'category': 'N/A'}, {'question': 'Joaquin Phoenix plays Johnny Cash in what film?', 'answer': 'Walk the Line', 'category': 'N/A'}, {'question': 'Who plays Tinker Bell in Hook?', 'answer': 'Julia Roberts', 'category': 'N/A'}, {'question': "J. J. Abrams's Super 8 came out in what year?", 'answer': '2011', 'category': 'N/A'}, {'question': "Who directed 2003's Old School?", 'answer': 'Todd Phillips', 'category': 'N/A'}, {'question': "Who plays the lead character Ray Ferrier in 2005's War of the Worlds?", 'answer': 'Tom Cruise', 'category': 'N/A'}, {'question': 'Kurt Russell plays R.J. MacReady in what 1982 film?', 'answer': 'The Thing', 'category': 'N/A'}, {'question': 'Who plays the lead role of Becky Fuller in Morning Glory?', 'answer': 'Rachel McAdams', 'category': 'N/A'}, {'question': 'What year did Zombieland come out?', 'answer': '2009', 'category': 'N/A'}, {'question': 'Emilia Clarke stars in the romantic comedy Last Christmas. Who was her male co-star?', 'answer': 'Henry Golding', 'category': 'Rom-Coms'}, {'question': 'In the film Once Upon a Time in Hollywood, James Stacy asks Rick Dalton if he almost had the lead role in which classic war film?', 'answer': 'The Great Escape', 'category': 'Quentin Tarantino'}, {'question': 'Sidney Poitier says the line “They call me Mr. Tibbs!" in what Best Picture winner?', 'answer': 'In the Heat of the Night', 'category': 'Quotes'}, {'question': 'What 1956 epic was the final film of actor James Dean?', 'answer': 'Giant', 'category': 'Dramas'}, {'question': 'You will find a computer data entry worker and a sculptor making paperweights in what Scorsese film?', 'answer': 'After Hours', 'category': 'Martin Scorsese'}, {'question': 'Which writer behind films like Annabelle, Annabelle: Creation, and The Nun, also directed the film Annabelle Comes Home?', 'answer': 'Gary Dauberman', 'category': 'Horror'}, {'question': 'Who directed the 2010 film The Expendables?', 'answer': 'Sylvester Stallone', 'category': 'Action/Adventure'}, {'question': "What two actors played the titular duo in 1967's Bonnie and Clyde?", 'answer': 'Faye Dunaway, Warren Beatty', 'category': 'Crime'}, {'question': "What famous actor was the director of 1994's Quiz Show?", 'answer': 'Robert Redford', 'category': 'Dramas'}, {'question': "Who played the title character in 1997's George of the Jungle?", 'answer': 'Brendan Fraser', 'category': '1990s'}, {'question': 'Which MCU actor plays James Conrad, leader of an expedition, in Kong: Skull Island?', 'answer': 'Tom Hiddleston', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2000 spoof movie stars Anna Faris and Marlon Wayans?', 'answer': 'Scary Movie', 'category': 'Comedies'}, {'question': 'Anthony LaPaglia plays a dollmaker named Samuel Mullins, whose daughter, nicknamed "Bee", dies when she accidentally steps in front of a car, in what 2017 film?', 'answer': 'Annabelle: Creation', 'category': 'Horror/Thriller'}, {'question': "Who provides the voice of Gomez Addams in 2019's The Addams Family?", 'answer': 'Oscar Isaac', 'category': 'Animated'}, {'question': 'Who plays Roger Dearly in the 1996 live-action adaptation of One Hundred and One Dalmatians?', 'answer': 'Jeff Daniels', 'category': 'N/A'}, {'question': 'In the film Popeye, Popeye and Olive Oyl have to take care of a young infant that they call what?', 'answer': "Swee'Pea", 'category': '1980s'}, {'question': 'Throughout the film Empire of the Sun, Jim manages to hold onto two objects through his perils: his toy plane and what else?', 'answer': 'a coin', 'category': '1980s'}, {'question': "Who plays Sodapop Curtis, one of Ponyboy's brothers, in 1983's The Outsiders?", 'answer': 'Rob Lowe', 'category': '1980s'}, {'question': "In 1984's The Karate Kid, what is the name of the sensei at Cobra Kai? First and last.", 'answer': 'John Kreese', 'category': '1980s'}, {'question': 'How many times has Ron Perlman been directed by Guillermo del Toro?', 'answer': '5 (Cronos, Blade II, Hellboy, Hellboy II: The Golden Army, Pacific Rim)', 'category': 'Directors'}, {'question': 'Which Harry Potter director also helmed the film The Legend of Tarzan?', 'answer': 'David Yates', 'category': 'Directors'}, {'question': 'Who directed Twin Peaks: Fire Walk with Me?', 'answer': 'David Lynch', 'category': 'Directors'}, {'question': 'What 1981 romantic thriller was the debut feature of director Lawrence Kasdan?', 'answer': 'Body Heat', 'category': 'Directors'}, {'question': 'This 2001 film, about a ballerina who moves to an urban Chicago neighborhood, stars Julia Stiles and Sean Patrick Thomas.', 'answer': 'Save the Last Dance', 'category': 'Dance'}, {'question': 'What 1996 film starring Brad Pitt and Kevin Bacon follows a group of friends who were in a boys center and, thirteen years after being let out, are put on trial for killing the head guard in a pub?', 'answer': 'Sleepers', 'category': 'Crime'}, {'question': 'Who plays the youngest Ludlow child Samuel in Legends of the Fall?', 'answer': 'Henry Thomas', 'category': 'Brad Pitt'}, {'question': "Who plays Drew Barrymore's co-lead in Fever Pitch?", 'answer': 'Jimmy Fallon', 'category': 'Drew Barrymore'}, {'question': 'What is the title of the 2005 sequel to The Mask of Zorro?', 'answer': 'The Legend of Zorro', 'category': 'Action/Adventure'}, {'question': "What Oscar-winning actor stars as a slow-witted hitman in 1985's Prizzi's Honor?", 'answer': 'Jack Nicholson', 'category': 'Crime'}, {'question': "Who plays frontiersman Hugh Glass in Alejandro González Iñárritu's The Revenant?", 'answer': 'Leonardo DiCaprio', 'category': 'Dramas'}, {'question': 'What classic monster movie originated the line "It\'s alive! It\'s alive!"?', 'answer': 'Frankenstein', 'category': 'Quotes'}, {'question': 'Which film in the Transformers franchise was released in 2018?', 'answer': 'Bumblebee', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who stars as lounge singer Deloris Van Cartier in 1992's Sister Act?", 'answer': 'Whoopi Goldberg', 'category': 'Comedies'}, {'question': 'What famous werewolf film was directed by John Landis?', 'answer': 'An American Werewolf in London', 'category': 'Horror/Thriller'}, {'question': 'What legendary comedian is the voice of Mr. Potato Head in Toy Story?', 'answer': 'Don Rickles', 'category': 'Animated'}, {'question': 'Julia Roberts co-stars with Sally Field, Shirley MacLaine, and Dolly Parton in what film?', 'answer': 'Steel Magnolias', 'category': 'Julia Roberts'}, {'question': 'Julia Roberts co-stars with Dustin Hoffman and Bob Hoskins in what film?', 'answer': 'Hook', 'category': 'Julia Roberts'}, {'question': "Which actor from TV's Seinfeld has a supporting role as Richard Gere's lawyer in Pretty Woman?", 'answer': 'Jason Alexander', 'category': 'Julia Roberts'}, {'question': "In what 1995 film does Julia Roberts' character discover that her husband, played by Dennis Quaid, is cheating on her?", 'answer': 'Something to Talk About', 'category': 'Julia Roberts'}, {'question': "In 1969's On Her Majesty's Secret Service, Bond takes what false identity in order to infiltrate Blofeld's mountain estate?", 'answer': 'Sir Hilary Bray', 'category': 'James Bond'}, {'question': "In which Roger Moore Bond film does a fake Fabergé egg, and a fellow agent's death, lead 007 to uncover an international jewel-smuggling operation?", 'answer': 'Octopussy', 'category': 'James Bond'}, {'question': 'Who performed the theme song for Live and Let Die?', 'answer': 'Wings', 'category': 'James Bond'}, {'question': "What singer has a role in 1989's Licence to Kill as a corrupt televangelist named Joe Butcher?", 'answer': 'Wayne Newton', 'category': 'James Bond'}, {'question': "Who plays Juliet to Leonardo DiCaprio's Romeo in Romeo + Juliet?", 'answer': 'Claire Danes', 'category': 'Rom-Coms'}, {'question': 'Who was the only person to win an Academy Award for acting in the 2014 film Boyhood?', 'answer': 'Patricia Arquette', 'category': 'Oscars'}, {'question': 'In what 2008 drama do Meryl Streep and Amy Adams play nuns?', 'answer': 'Doubt', 'category': 'Dramas'}, {'question': 'What film saw Tom Hanks receive his first nomination for Best Actor?', 'answer': 'Big', 'category': 'Tom Hanks'}, {'question': 'Which actor plays investigator Frank Levin that assists Mickey Haller in The Lincoln Lawyer?', 'answer': 'William H. Macy', 'category': '2010s'}, {'question': 'Harrison Ford played the Tom Clancy character of Jack Ryan for the second time in what 1994 film?', 'answer': 'Clear and Present Danger', 'category': 'Action/Adventure'}, {'question': 'Domhnall Gleeson and Rachel McAdams star in the time travel romantic dramedy titled what?', 'answer': 'About Time', 'category': 'Romance'}, {'question': "What sport does Kevin Costner's character play in the 1999 film For Love of the Game?", 'answer': 'baseball', 'category': 'Dramas'}, {'question': 'What 1984 movie, directed by Joe Dante, features the tagline "Cute. Clever. Mischievous. Intelligent. Dangerous."?', 'answer': 'Gremlins', 'category': 'Taglines'}, {'question': "What MCU actor plays physicist Ian Donnelly in 2016's Arrival?", 'answer': 'Jeremy Renner', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Rock Ridge is a frontier town about to be destroyed to make way for a railroad in which classic 1970s movie?', 'answer': 'Blazing Saddles', 'category': 'Comedies'}, {'question': "You'll find doppelgangers of the film's leads, known as the Tethered, in what 2019 film?", 'answer': 'Us', 'category': 'Horror/Thriller'}, {'question': "Which SNL alum provides the voice of Kuzco in The Emperor's New Groove?", 'answer': 'David Spade', 'category': 'Animated'}, {'question': "Which actor plays Lieutenant Colonel James Doolittle, who, after completing air raids across Japan, ends up trapped in China in 2019's Midway?", 'answer': 'Aaron Eckhart', 'category': 'New Releases'}, {'question': 'Which actor plays Conall, the leader of a group of powerful fairies, in Maleficent: Mistress of Evil?', 'answer': 'Chiwetel Ejiofor', 'category': 'New Releases'}, {'question': 'Who directed the 2019 remake of Black Christmas?', 'answer': 'Sophia Takal', 'category': 'New Releases'}, {'question': 'Who plays the adoptive mother of a young boy with otherworldly powers in Brightburn?', 'answer': 'Elizabeth Banks', 'category': 'New Releases'}, {'question': "Which MCU actress plays the wife of Aaron Taylor-Johnson's character in 2014's Godzilla?", 'answer': 'Elizabeth Olsen', 'category': 'Monster'}, {'question': "Who was the original wolf man in 1941's The Wolf Man?", 'answer': 'Lon Chaney Jr.', 'category': 'Monster'}, {'question': 'In the Underworld franchise, what name is given to the vampires tasked with killing Lycans?', 'answer': 'Death Dealers', 'category': 'Monster'}, {'question': 'In what 2010s film does Idris Elba say, "Today we are cancelling the apocalypse!"?', 'answer': 'Pacific Rim', 'category': 'Monster'}, {'question': "Steven Spielberg's Schindler's List came out in December of what year to qualify for the Oscars?", 'answer': '1993', 'category': 'Release Dates'}, {'question': 'Who co-stars alongside Katherine Heigl as an unexpecting dad-to-be in Knocked Up?', 'answer': 'Seth Rogen', 'category': 'Judd Apatow'}, {'question': 'In Home Alone 2: Lost in New York, what is the new name that Marv and Harry go by after breaking out of prison?', 'answer': 'the Sticky Bandits', 'category': '1990s'}, {'question': 'In Ralph Breaks the Internet, what MCU character is seen taking questions from a line of fans?', 'answer': 'Groot', 'category': 'Disney'}, {'question': 'The Post was not the first time Meryl Streep was directed by Steven Spielberg. What film was, where she played the Blue Mecha?', 'answer': 'A.I. Artificial Intelligence', 'category': 'Meryl Streep'}, {'question': 'Adrianne Palicki plays the character of Ms. Perkins in what 2014 action film?', 'answer': 'John Wick', 'category': 'Action/Adventure'}, {'question': 'David S. Goyer directed which film in the Blade franchise?', 'answer': 'Blade: Trinity', 'category': 'Comic Book'}, {'question': 'What 2018 film takes place in Colorado Springs, and follows a cop named Ron Stallworth?', 'answer': 'BlacKkKlansman', 'category': 'Dramas'}, {'question': 'Who plays the character Sara Thomas, opposite John Cusack, in Serendipity?', 'answer': 'Kate Beckinsale', 'category': 'Rom-Coms'}, {'question': "Who plays the mermaid Madison in 1984's Splash?", 'answer': 'Daryl Hannah', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2017 film follows a group of four friends, led by Regina Hall, on a trip to the Essence Music Festival?', 'answer': 'Girls Trip', 'category': 'Comedies'}, {'question': 'Samara Weaving plays a woman named Grace, who marries into a family with a dark secret, in what 2019 film?', 'answer': 'Ready or Not', 'category': 'Horror/Thriller'}, {'question': 'Who voices Jack Frost in the film Rise of the Guardians?', 'answer': 'Chris Pine', 'category': 'Animated'}, {'question': 'In what rom-com does Drew Barrymore play a newspaper reporter who enrolls in high school as part of research for a story?', 'answer': 'Never Been Kissed', 'category': 'N/A'}, {'question': 'The villainous Praetor Shinzon, played by Tom Hardy, appears in what Star Trek film?', 'answer': 'Star Trek: Nemesis', 'category': 'Innergeekdom'}, {'question': 'Who plays Ben Daimio, a military member of the B.P.R.D. who, due to a supernatural encounter, can turn into a terrifying jaguar-like creature, in Hellboy (2019)?', 'answer': 'Daniel Dae Kim', 'category': 'Innergeekdom'}, {'question': "In Harry Potter and the Sorcerer's Stone, what specific type of troll attacked Harry, Ron, and Hermione according to McGonagall?", 'answer': 'a mountain troll', 'category': 'Innergeekdom'}, {'question': 'In The Mask, what is the first balloon figure Stanley Ipkiss makes for the group of thugs?', 'answer': 'a giraffe', 'category': 'Innergeekdom'}, {'question': 'What 1995 drama, directed by Tim Robbins, starred Susan Sarandon and Sean Penn?', 'answer': 'Dead Man Walking', 'category': 'Dramas'}, {'question': 'In the film Arrival, what is the first word Louise writes when trying to communicate with the aliens?', 'answer': 'human', 'category': 'Dramas'}, {'question': "In All the President's Men, where did Bob Woodward have all of his secret meetings with Deep Throat?", 'answer': 'a parking garage', 'category': 'Dramas'}, {'question': "Who directed Keira Knightley and James McAvoy in 2007's Atonement?", 'answer': 'Joe Wright', 'category': 'Dramas'}, {'question': "Who stars as Hanna Heller in 2011's thriller Hanna?", 'answer': 'Saoirse Ronan', 'category': 'Thriller'}, {'question': 'In what spoof film will you find a character named Yogurt who teaches about the metaphysical power of "The Schwartz"?', 'answer': 'Spaceballs', 'category': 'Comedies'}, {'question': 'What film marks the only occasion when Tom Cruise collaborated with Francis Ford Coppola?', 'answer': 'The Outsiders', 'category': 'Tom Cruise'}, {'question': 'What 2017 animated movie depicts a group of teen warriors and features the voice talents of Jackie Chan and Dave Franco?', 'answer': 'The Lego Ninjago Movie', 'category': 'Animated'}, {'question': "Who voices Dr. Calico, the evil mastermind on Bolt and Penny's TV show, in 2008's Bolt?", 'answer': 'Malcolm McDowell', 'category': 'Disney'}, {'question': 'What classic 1950s musical contains the songs "Some Enchanted Evening", "Younger than Springtime", and "I\'m Gonna Wash That Man Right Outta My Hair"?', 'answer': 'South Pacific', 'category': 'Musicals'}, {'question': "Which actor stars as Balian of Ibelin, the lead of Ridley Scott's Kingdom of Heaven?", 'answer': 'Orlando Bloom', 'category': 'N/A'}, {'question': 'Shelley Duvall and Christopher Lloyd play a married couple in which 90s Hulk Hogan film?', 'answer': 'Suburban Commando', 'category': 'N/A'}, {'question': 'Michael Douglas and Kathleen Turner reprised their roles of Jack Colton and Joan Wilder in what 1985 film?', 'answer': 'The Jewel of the Nile', 'category': 'Action/Adventure'}, {'question': 'Who plays the role of Lester "Worm" Murphy in 1998\'s Rounders?', 'answer': 'Edward Norton', 'category': '1990s'}, {'question': 'Nicolas Cage won Best Actor for his role in what 1995 drama directed by Mike Figgis?', 'answer': 'Leaving Las Vegas', 'category': 'Dramas'}, {'question': "Who stars as Det. John Book in 1985's Witness?", 'answer': 'Harrison Ford', 'category': 'Crime'}, {'question': "Who plays Harold Crick, an IRS worker who begins hearing a disembodied voice narrating his life, in 2006's Stranger than Fiction?", 'answer': 'Will Ferrell', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Ricky Gervais plays Bertram Pincus, a disillusioned dentist who gains the ability to communicate with ghosts, in what 2008 film?', 'answer': 'Ghost Town', 'category': 'Comedies'}, {'question': "Who plays Max Cady, a former client whom Sam failed to defend properly, in 1991's Cape Fear?", 'answer': 'Robert De Niro', 'category': 'Horror/Thriller'}, {'question': 'The Rugrats go to what famous French city, the home of EuroReptarland, in their 2000 sequel?', 'answer': 'Paris', 'category': 'Animated'}, {'question': 'What is the name of the 1984 rock musical that stars Prince?', 'answer': 'Purple Rain', 'category': 'N/A'}, {'question': "What actress played stepmother Delia Deetz in Tim Burton's Beetlejuice?", 'answer': "Catherine O'Hara", 'category': 'Tim Burton'}, {'question': "What actor played the character of Edward Bloom as a young man in Tim Burton's Big Fish?", 'answer': 'Ewan McGregor', 'category': 'Tim Burton'}, {'question': 'Who plays an art critic named Ruben in Big Eyes?', 'answer': 'Jason Schwartzman', 'category': 'Tim Burton'}, {'question': "Which Tim Burton film features the voice talents of Winona Ryder, Catherine O'Hara, Martin Short, and Martin Landau?", 'answer': 'Frankenweenie', 'category': 'Tim Burton'}, {'question': 'What actor co-stars alongside Harrison Ford as Francis "Frankie" McGuire in 1997\'s The Devil\'s Own?', 'answer': 'Brad Pitt', 'category': 'Harrison Ford'}, {'question': "Who directed Harrison Ford in Ender's Game?", 'answer': 'Gavin Hood', 'category': 'Harrison Ford'}, {'question': 'Who co-stars alongside Harrison Ford as Robin Monroe in Six Days, Seven Nights?', 'answer': 'Anne Heche', 'category': 'Harrison Ford'}, {'question': 'Harrison Ford lent his voice to what 2019 family film as the character of a Welsh Sheepdog named Rooster?', 'answer': 'The Secret Life of Pets 2', 'category': 'Harrison Ford'}, {'question': 'Who plays psychopathic career criminal Simon Phoenix alongside Sylvester Stallone in Demolition Man?', 'answer': 'Wesley Snipes', 'category': 'Action/Adventure'}, {'question': 'Michael Keaton plays a man in New York City who works for a local crime boss named Jocko Dundee in what 1984 comedy?', 'answer': 'Johnny Dangerously', 'category': '1980s'}, {'question': 'Robin Williams plays John Keating, a new English teacher with unorthodox teaching methods, in what 1989 film?', 'answer': 'Dead Poets Society', 'category': 'Dramas'}, {'question': 'Billy Campbell and Timothy Dalton appear in what 1991 superhero film about a stunt pilot who finds a jetpack and becomes a superhero in 1938 Los Angeles?', 'answer': 'The Rocketeer', 'category': 'Comic Book'}, {'question': "Who plays Willow Ufgood, a Nelwyn dwarf and aspiring sorcerer, in 1988's Willow?", 'answer': 'Warwick Davis', 'category': 'Fantasy/Sci-Fi'}, {'question': 'You\'ll find the line "Do you understand the words that are coming out of my mouth?" in what 1998 action comedy?', 'answer': 'Rush Hour', 'category': 'Comedies'}, {'question': "Who plays Frank Bannister, a former architect turned ghost hunter, in Peter Jackson's 1996 horror comedy The Frighteners?", 'answer': 'Michael J. Fox', 'category': 'Horror/Thriller'}, {'question': 'Stan Bush\'s song "The Touch" was prominently featured in what 1986 animated film that featured the voice talents of Orson Welles, Judd Nelson, and Scatman Crothers?', 'answer': 'The Transformers: The Movie', 'category': 'Animated'}, {'question': 'Meg Ryan stars in what musical biopic opposite Val Kilmer?', 'answer': 'The Doors', 'category': 'Meg Ryan'}, {'question': 'What romantic comedy starring Meg Ryan revolves around a call-in radio show?', 'answer': 'Sleepless in Seattle', 'category': 'Meg Ryan'}, {'question': 'Who co-stars with Meg Ryan as a kidnapping negotiator in the 2000 film Proof of Life?', 'answer': 'Russell Crowe', 'category': 'Meg Ryan'}, {'question': 'Which acclaimed director was behind the lens for the Meg Ryan film Kate & Leopold?', 'answer': 'James Mangold', 'category': 'Meg Ryan'}, {'question': 'Jennifer Lopez appears in which film from director Kevin Smith?', 'answer': 'Jersey Girl', 'category': 'Kevin Smith'}, {'question': 'Kevin Smith has a cameo in which film in the Die Hard franchise?', 'answer': 'Live Free or Die Hard', 'category': 'Kevin Smith'}, {'question': 'In Jay and Silent Bob Strike Back, which actor has a cameo as himself and says the line "It always comes back to that f-ing pie!"?', 'answer': 'Jason Biggs', 'category': 'Kevin Smith'}, {'question': 'Travis, Jarod, and Billy Ray are kidnapped by a crazed cult after responding to an online ad in which Kevin Smith film?', 'answer': 'Red State', 'category': 'Kevin Smith'}, {'question': 'Who directed both Traffic and Erin Brockovich?', 'answer': 'Steven Soderbergh', 'category': 'Directors'}, {'question': 'Betty Gilpin and Hilary Swank have roles in this 2020 controversial horror/thriller film.', 'answer': 'The Hunt', 'category': 'New Releases'}, {'question': "What is Cliff Booth's profession in Once Upon a Time in Hollywood?", 'answer': 'a stuntman', 'category': 'Brad Pitt'}, {'question': 'What 1990s drama co-stars Tom Hanks and Denzel Washington?', 'answer': 'Philadelphia', 'category': '1990s'}, {'question': 'Who plays Forrest Jr. in Forrest Gump?', 'answer': 'Haley Joel Osment', 'category': 'Tom Hanks'}, {'question': 'Who plays U.S. Army General William Devereaux in The Siege?', 'answer': 'Bruce Willis', 'category': 'Denzel Washington'}, {'question': "Who plays Hansel, Zoolander's male model enemy, in 2001's Zoolander?", 'answer': 'Owen Wilson', 'category': 'N/A'}, {'question': 'Harrison Ford plays the character of Max Drummer in what 2014 Sylvester Stallone film?', 'answer': 'The Expendables 3', 'category': 'N/A'}, {'question': 'What John Carpenter film follows the adventures of Jack Burton going against the evil Emperor Lo Pan?', 'answer': 'Big Trouble in Little China', 'category': 'N/A'}, {'question': 'Which villain runs for Mayor of Gotham City in Batman Returns?', 'answer': 'the Penguin', 'category': 'N/A'}, {'question': "Who starred as the titular hero in 2014's Hercules, which was directed by Brett Ratner?", 'answer': 'Dwayne Johnson', 'category': 'Action/Adventure'}, {'question': 'Cher famously says "Snap out of it" in what 1987 rom-com that was nominated for Best Picture?', 'answer': 'Moonstruck', 'category': 'Rom-Coms'}, {'question': 'Ed Zwick directed Tom Cruise in what 2003 film?', 'answer': 'The Last Samurai', 'category': 'Dramas'}, {'question': 'Lily James plays a Disney princess in what 2015 remake?', 'answer': 'Cinderella', 'category': 'Family'}, {'question': 'Who plays the lead character Roy in Midnight Special?', 'answer': 'Michael Shannon', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what comedy does Eddie Murphy play Saul the elderly Jewish man, Clarence the barber, and soul singer Randy Watson?', 'answer': 'Coming to America', 'category': 'Comedies'}, {'question': 'Jason famously was sent to space in the tenth entry in the Friday the 13th franchise, called what?', 'answer': 'Jason X', 'category': 'Horror/Thriller'}, {'question': 'What animated franchise features installments that include Continental Drift and Collision Course?', 'answer': 'Ice Age', 'category': 'Animated'}, {'question': "Who plays Roland Deschain in 2017's The Dark Tower?", 'answer': 'Idris Elba', 'category': '2010s'}, {'question': 'What 2014 film follows two teenage cancer patients named Hazel and Gus, as they fall in love?', 'answer': 'The Fault in Our Stars', 'category': '2010s'}, {'question': 'In Killer Joe, who plays "Killer Joe" Cooper, an assassin for hire?', 'answer': 'Matthew McConaughey', 'category': '2010s'}, {'question': 'Which actor plays the vampire Vladislav in What We Do in the Shadows?', 'answer': 'Jemaine Clement', 'category': '2010s'}, {'question': 'In what 1980 SNL-based movie do the main characters say, "We\'re on a mission from god."?', 'answer': 'The Blues Brothers', 'category': 'SNL'}, {'question': 'Who plays the title character in the film MacGruber?', 'answer': 'Will Forte', 'category': 'SNL'}, {'question': 'Characters sing along to the song "Bohemian Rhapsody" in what SNL film?', 'answer': "Wayne's World", 'category': 'SNL'}, {'question': 'In Coneheads, which SNL star plays Ronnie, a mechanic who begins dating the daughter of the Conehead family?', 'answer': 'Chris Farley', 'category': 'SNL'}, {'question': "Mark Wahlberg's character plays what sport in 2006's Invincible?", 'answer': 'American football', 'category': 'Sports'}, {'question': "Who plays lyricist Bernie Taupin, and best friend to Elton John, in 2019's Rocketman?", 'answer': 'Jamie Bell', 'category': 'New Releases'}, {'question': "Who directed 2005's The Island?", 'answer': 'Michael Bay', 'category': 'Action/Adventure'}, {'question': "Who co-stars as Leopold, alongside Meg Ryan, in 2001's Kate & Leopold?", 'answer': 'Hugh Jackman', 'category': 'Rom-Coms'}, {'question': 'Nicholas Hoult plays a famous fantasy author, who was a soldier during World War I, in what 2019 biopic?', 'answer': 'Tolkien', 'category': 'Dramas'}, {'question': 'What crime film has the line, "The greatest trick the devil ever pulled was convincing the world he did not exist."?', 'answer': 'The Usual Suspects', 'category': 'Quotes'}, {'question': 'Who plays Walter Padick, the evil Man in Black, in the 2017 film The Dark Tower?', 'answer': 'Matthew McConaughey', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1980s comedy stars John Cleese, Jamie Lee Curtis, Michael Palin, and Kevin Kline?', 'answer': 'A Fish Called Wanda', 'category': 'Comedies'}, {'question': "What Oscar-winning actress plays multiple roles in 2018's Suspiria?", 'answer': 'Tilda Swinton', 'category': 'Horror/Thriller'}, {'question': 'Kevin Kline and Kenneth Branagh lent their voices to what DreamWorks Animation film in 2000?', 'answer': 'The Road to El Dorado', 'category': 'Animated'}, {'question': "Who plays Jim Hudson, the man who wins the bid to live in Chris' body, in Get Out?", 'answer': 'Stephen Root', 'category': 'Thriller'}, {'question': "William Hurt plays Kevin Costner's alter ego in what psychological thriller?", 'answer': 'Mr. Brooks', 'category': 'Thriller'}, {'question': "Who plays Clyde Alexander Shleton, a man on a mission to avenge his wife and daughter, in 2009's Law Abiding Citizen?", 'answer': 'Gerard Butler', 'category': 'Thriller'}, {'question': 'David Lynch directed Naomi Watts and Justin Theroux in this 2001 neo-noir thriller.', 'answer': 'Mulholland Drive', 'category': 'Thriller'}, {'question': 'Who plays the upper-class executive Louis Winthorpe III in Trading Places?', 'answer': 'Dan Aykroyd', 'category': 'Eddie Murphy'}, {'question': 'Eddie Murphy and Martin Lawrence share the screen as a loudmouth Harlem grifter Ray and the no-nonsense Claude in what 1999 film?', 'answer': 'Life', 'category': 'Eddie Murphy'}, {'question': "Who plays Jerry Harris, a film producer looking to cast Beyoncé's Deena, in Dreamgirls?", 'answer': 'John Lithgow', 'category': 'Eddie Murphy'}, {'question': 'Eddie Murphy and Robert De Niro play two cops who are paired for a reality police show and run into real trouble with a crime lord in what 2002 film?', 'answer': 'Showtime', 'category': 'Eddie Murphy'}, {'question': 'In Venom, what former Cheers actor has a cameo as the murderous Cletus Kasady?', 'answer': 'Woody Harrelson', 'category': 'Comic Book'}, {'question': 'Who directed the 1997 sci-fi horror film Mimic?', 'answer': 'Guillermo del Toro', 'category': 'Horror'}, {'question': "Who plays Chief Inspector Dreyfus in 2006's The Pink Panther?", 'answer': 'Kevin Kline', 'category': 'Remakes & Reboots'}, {'question': 'Kathryn Bigelow directed Jeremy Renner and Anthony Mackie in what 2009 war film?', 'answer': 'The Hurt Locker', 'category': '2000s'}, {'question': 'Arnold Schwarzenegger and which other performer reprised their roles from the original Terminator in Terminator: Dark Fate?', 'answer': 'Linda Hamilton', 'category': 'Action/Adventure'}, {'question': "Who stars as Steven Kovacs, who Jim Carrey's character fixates on, in The Cable Guy?", 'answer': 'Matthew Broderick', 'category': '1990s'}, {'question': 'Which comedic actress earned an Oscar nomination for her performance in the 2018 drama Can You Ever Forgive Me??', 'answer': 'Melissa McCarthy', 'category': 'Dramas'}, {'question': "Who directed Sylvester Stallone, Ray Liotta, and Robert De Niro in 1997's Cop Land?", 'answer': 'James Mangold', 'category': 'Crime'}, {'question': "Who plays the lead role of John Carter in 2012's John Carter?", 'answer': 'Taylor Kitsch', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Dax Shepard and Michael Peña play motorcycle cops in this 2017 comedic update of what TV show?', 'answer': 'CHiPs', 'category': 'Comedies'}, {'question': 'Army of Darkness is the third entry in what horror franchise?', 'answer': 'Evil Dead', 'category': 'Horror/Thriller'}, {'question': 'Who directed The Adventures of Tintin?', 'answer': 'Steven Spielberg', 'category': 'Animated'}, {'question': 'Timothy Hutton was 20 years old when he won an Oscar for Best Supporting Actor, making him the youngest winner ever in that category. What film did he win for?', 'answer': 'Ordinary People', 'category': 'Oscars'}, {'question': 'Scarlett Johansson was recently nominated for two acting nominations in the same year. Which actress achieved this feat previously in 2007?', 'answer': "Cate Blanchett (for Elizabeth: The Golden Age, I'm Not There)", 'category': 'Oscars'}, {'question': 'What 1997 film earned Robin Williams his only Oscar win?', 'answer': 'Good Will Hunting', 'category': 'Oscars'}, {'question': "Steven Spielberg's Empire of the Sun was nominated for a total of 6 Oscars, but lost every one to what Best Picture winner?", 'answer': 'The Last Emperor', 'category': 'Oscars'}, {'question': 'Rowan Atkinson plays the title character in what spy spoof franchise?', 'answer': 'Johnny English', 'category': 'Spy'}, {'question': 'Who stars alongside Jennifer Lawrence as CIA operative Nate Nash in Red Sparrow?', 'answer': 'Joel Edgerton', 'category': 'Spy'}, {'question': "Who played Napoleon Solo, a professional thief-turned-CIA-agent, in 2015's The Man from U.N.C.L.E.?", 'answer': 'Henry Cavill', 'category': 'Spy'}, {'question': 'Mads Mikkelsen plays Le Chiffre in Casino Royale, but who played him in the 1967 comedy version?', 'answer': 'Orson Welles', 'category': 'Spy'}, {'question': 'What 2019 horror film stars James McAcoy, Jessica Chastain, Bill Hader, and Bill Skarsgård?', 'answer': 'It Chapter Two', 'category': 'New Releases'}, {'question': "Which actor plays Murdock in 2010's The A-Team?", 'answer': 'Sharlto Copley', 'category': 'Action/Adventure'}, {'question': "In what 1960s film will you find Shirley MacLaine's character Fran as an elevator operator at an office building?", 'answer': 'The Apartment', 'category': 'Rom-Coms'}, {'question': 'Who received a Best Supporting Actor nomination for his role in The Departed?', 'answer': 'Mark Wahlberg', 'category': 'Martin Scorsese'}, {'question': 'Name two Tarantino films in which Tim Roth has appeared.', 'answer': 'Reservoir Dogs, Pulp Fiction, Four Rooms, The Hateful Eight', 'category': 'Quentin Tarantino'}, {'question': 'Who plays Leo Getz in the Lethal Weapon franchise?', 'answer': 'Joe Pesci', 'category': 'Action/Adventure'}, {'question': "Who directed 1997's The Lost World: Jurassic Park?", 'answer': 'Steven Spielberg', 'category': '1990s'}, {'question': "Which MCU actor stars as a Los Angeles columnist in 2009's The Soloist?", 'answer': 'Robert Downey Jr.', 'category': 'Dramas'}, {'question': 'Who stars as a Chinese-American woman who learns that her grandmother has cancer in The Farewell?', 'answer': 'Awkwafina', 'category': 'New Releases'}, {'question': 'Arnold Schwarzenegger stars as Adam Gibson, a family man who is illegally cloned by accident as part of a vast conspiracy, in what 2000 film?', 'answer': 'The 6th Day', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who stars as lifeguard Matt Brody, opposite Dwayne Johnson, in 2017's Baywatch?", 'answer': 'Zac Efron', 'category': 'Comedies'}, {'question': 'Who plays Rose, who invites her boyfriend to visit her family for the weekend in Get Out?', 'answer': 'Allison Williams', 'category': 'Horror/Thriller'}, {'question': 'In the small town of Blithe Hollow, Massachusetts, an 11-year old boy speaks with the dead, including his late grandmother, in what 2012 film?', 'answer': 'ParaNorman', 'category': 'Animated'}, {'question': "1989's Glory takes place during which war?", 'answer': 'the Civil War', 'category': 'Denzel Washington'}, {'question': "In 2016's The Magnificent Seven, who plays the villain Bartholomew Bogue, who the Seven must defeat?", 'answer': 'Peter Sarsgaard', 'category': 'Denzel Washington'}, {'question': "Who plays Pita, the young girl who Denzel Washington's character is hired to protect, in Man of Fire?", 'answer': 'Dakota Fanning', 'category': 'Denzel Washington'}, {'question': 'Denzel Washington received his first Best Lead Actor Oscar nomination for what film?', 'answer': 'Malcolm X', 'category': 'Denzel Washington'}, {'question': 'Who plays Robin Hood in Robin Hood: Men in Tights?', 'answer': 'Cary Elwes', 'category': 'Mel Brooks'}, {'question': "Who plays the role of Victoria Brisbane in 1977's High Anxiety?", 'answer': 'Madeline Kahn', 'category': 'Mel Brooks'}, {'question': 'Mel Brooks appears as Mr. Welling in what 1994 family feature?', 'answer': 'The Little Rascals', 'category': 'Mel Brooks'}, {'question': "Who plays the role of S.S. Captain Schultz in 1983's To Be or Not to Be?", 'answer': 'Christopher Lloyd', 'category': 'Mel Brooks'}, {'question': 'Puss in Boots is first introduced in which film in the Shrek franchise?', 'answer': 'Shrek 2', 'category': 'Animated'}, {'question': "Which James Bond actor stars alongside Angelina Jolie as Alex West in 2001's Lara Croft: Tomb Raider?", 'answer': 'Daniel Craig', 'category': 'Angelina Jolie'}, {'question': 'Secret Service agent Mike Banning is framed for an attempted attack on the President in what 2019 film?', 'answer': 'Angel Has Fallen', 'category': 'New Releases'}, {'question': 'In which Tarantino film will you find a character planning a trip to Madrid at the end of the film?', 'answer': 'Jackie Brown', 'category': 'Quentin Tarantino'}, {'question': 'Patrick Swayze plays a tough-as-nails character known as Dalton in what 80s film?', 'answer': 'Road House', 'category': 'Action/Adventure'}, {'question': 'Who plays highly unprofessional FBI agent Richie DiMaso in American Hustle?', 'answer': 'Bradley Cooper', 'category': 'Crime'}, {'question': "In what 1991 drama does New Orleans DA Jim Garrison discover there's more to the Kennedy assassination than the official story?", 'answer': 'JFK', 'category': 'Dramas'}, {'question': 'Who plays driver Ken Miles in Ford v Ferrari?', 'answer': 'Christian Bale', 'category': 'New Releases'}, {'question': "Which actress plays the fairy godmother in 2015's Cinderella?", 'answer': 'Helena Bonham Carter', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actress stars with a cast of puppets in the R-rated comedy The Happytime Murders?', 'answer': 'Melissa McCarthy', 'category': 'Comedies'}, {'question': 'What horror franchise involves a ghostly girl named Samara Morgan, who is seen in a cursed tape?', 'answer': 'The Ring', 'category': 'Horror/Thriller'}, {'question': 'Name the 2013 animated film in which a caveman family must trek through an unfamiliar fantastical world with the help of an inventive boy.', 'answer': 'The Croods', 'category': 'Animated'}, {'question': 'What family comedy has the tagline: "She makes dinner. She does windows. She reads bedtime stories. She\'s a blessing... in disguise."?', 'answer': 'Mrs. Doubtfire', 'category': 'N/A'}, {'question': 'Which 1998 film portrays the irreverent adventures of Raoul Duke, based off the writings of Hunter S. Thompson?', 'answer': 'Fear and Loathing in Las Vegas', 'category': '1990s'}, {'question': "In 1996's The Preacher's Wife, which Academy Award winning actor played the witty and debonair angel Dudley?", 'answer': 'Denzel Washington', 'category': '1990s'}, {'question': 'Which actress plays Theresa Osborne, a former reporter and researcher for the Chicago Tribune in Message in a Bottle?', 'answer': 'Robin Wright', 'category': '1990s'}, {'question': "In 1995's Seven, Detective Mills commits the last of the seven deadly sins at the end of the film. What is that sin?", 'answer': 'wrath', 'category': '1990s'}, {'question': 'Who plays the exotic dancer Cory in The Last Boy Scout?', 'answer': 'Halle Berry', 'category': 'Action/Adventure'}, {'question': 'In the 1996 film The Rock, Stanley Goodspeed is a mega fan of what band, which he purchased a vinyl of, at the beginning of the film?', 'answer': 'The Beatles', 'category': 'Action/Adventure'}, {'question': 'In what 90s sci-fi action film will you find two warring factions: the Gorgonites and the Commando Elite?', 'answer': 'Small Soldiers', 'category': 'Action/Adventure'}, {'question': 'What is the title of the fourth film in the Resident Evil franchise?', 'answer': 'Resident Evil: Afterlife', 'category': 'Action/Adventure'}, {'question': 'Saving Private Ryan and Shakespeare in Love battled for Best Picture and were both released in what year to qualify for the Oscars?', 'answer': '1998', 'category': 'Release Dates'}, {'question': 'Denis Villeneuve has been nominated for Best Director once, for what film?', 'answer': 'Arrival', 'category': 'Oscars'}, {'question': "What is the name of Matthew McConaughey's character in the film Mud?", 'answer': 'Mud', 'category': '2010s'}, {'question': "In what 1995 film does Angelina Jolie's character use the online alias Acid Burn?", 'answer': 'Hackers', 'category': 'Angelina Jolie'}, {'question': 'In Tarzan, what animal do the elephants originally think Tarzan is?', 'answer': 'a piranha', 'category': 'Disney'}, {'question': 'Name either the male or female lead of the 2015 action comedy American Ultra.', 'answer': 'Jesse Eisenberg, Kristen Stewart', 'category': 'Action/Adventure'}, {'question': "Who directed Jack Black in 2003's School of Rock?", 'answer': 'Richard Linklater', 'category': 'Directors'}, {'question': 'Name this Best Picture winning film: A Civil War soldier develops a relationship with a band of Lakota Indians and adopts their lifestyle.', 'answer': 'Dances with Wolves', 'category': 'Dramas'}, {'question': 'Anthony Hopkins reprised his role as Hannibal Lecter in what 2002 film?', 'answer': 'Red Dragon', 'category': 'Crime'}, {'question': "Who plays the lead role as a mercenary named Royce in 2010's Predators?", 'answer': 'Adrien Brody', 'category': 'Fantasy/Sci-Fi'}, {'question': "Which Oscar-winning actress plays a talk show host opposite Mindy Kaling in 2019's Late Night?", 'answer': 'Emma Thompson', 'category': 'Comedies'}, {'question': 'John Cusack plays Mike Enslin, an author stuck in a haunted hotel room, in what 2007 horror film?', 'answer': '1408', 'category': 'Horror/Thriller'}, {'question': "Bryan Cranston voices the character of Li Shan alongside Jack Black's Po in what 2016 film?", 'answer': 'Kung Fu Panda 3', 'category': 'Animated'}, {'question': 'Stuart Gordon directed Jeffrey Combs in what 1985 horror film based on an H. P. Lovecraft story?', 'answer': 'Re-Animator', 'category': 'N/A'}, {'question': 'When Harry Met Sally... predominantly takes place in what city?', 'answer': 'New York City', 'category': 'Nora Ephron'}, {'question': "Who plays Frank Navasky, a newspaper writer for the New York Observer, in You've Got Mail?", 'answer': 'Greg Kinnear', 'category': 'Nora Ephron'}, {'question': 'Adam Sandler plays the character of Louie Capshaw in which Nora Ephron film?', 'answer': 'Mixed Nuts', 'category': 'Nora Ephron'}, {'question': "Which actress from TV's Friends co-stars with John Travolta in the comedy Lucky Numbers?", 'answer': 'Lisa Kudrow', 'category': 'Nora Ephron'}, {'question': "In Full Metal Jacket, Gunnery Sergeant Hartman finds what type of contraband food in Gomer Pyle's locker that causes Hartman to punish the platoon for all future mistakes?", 'answer': 'a jelly donut', 'category': 'Stanley Kubrick'}, {'question': 'Who plays the title character in Barry Lyndon?', 'answer': "Ryan O'Neal", 'category': 'Stanley Kubrick'}, {'question': "In The Shining, the photograph in the hotel hallway at the film's end shows Jack now standing amid a crowd of party revelers. What year does the picture say it is?", 'answer': '1921', 'category': 'Stanley Kubrick'}, {'question': 'How many roles does Peter Sellers play in Dr. Strangelove?', 'answer': '3 (Dr. Strangelove, Lionel Mandrake, Merkin Muffley)', 'category': 'Stanley Kubrick'}, {'question': 'Who plays the main lead Roy McBride in the sci-fi film Ad Astra?', 'answer': 'Brad Pitt', 'category': 'New Releases'}, {'question': 'Adam Sandler plays a plastic surgeon that goes on a trip to Hawaii in what 2010s film?', 'answer': 'Just Go with It', 'category': '2010s'}, {'question': 'Adrian Lyne directed Jennifer Beals in what 1983 film?', 'answer': 'Flashdance', 'category': 'Dance'}, {'question': "In 2012's Dredd, what is the name of the addictive new drug which alters users' perception of time?", 'answer': 'Slo-Mo', 'category': 'Action/Adventure'}, {'question': 'Who plays James Bond in Tomorrow Never Dies?', 'answer': 'Pierce Brosnan', 'category': 'Action/Adventure'}, {'question': 'What is the title of the 2016 Bridget Jones sequel in which Bridget discovers that she is pregnant?', 'answer': "Bridget Jones's Baby", 'category': 'Rom-Coms'}, {'question': "Who won a Best Actress Oscar for 2017's Three Billboards Outside Ebbing, Missouri?", 'answer': 'Frances McDormand', 'category': 'Dramas'}, {'question': 'Kim Basinger won an Oscar for Best Supporting Actress for her role in what 1997 film?', 'answer': 'L.A. Confidential', 'category': 'Crime'}, {'question': "Which DCEU actor plays The Brother, a mute space alien that crash-lands his ship on Ellis Island, in 1984's The Brother from Another Planet?", 'answer': 'Joe Morton', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2001 comedy features an array of characters racing to win a two-million-dollar prize, starring the likes of Whoopi Goldberg, Breckin Meyer, and John Cleese?', 'answer': 'Rat Race', 'category': 'Comedies'}, {'question': 'Who directed Eddie Murphy in the 1995 horror comedy Vampire in Brooklyn?', 'answer': 'Wes Craven', 'category': 'Horror/Thriller'}, {'question': 'Which Disney animated film has a prince named Eric?', 'answer': 'The Little Mermaid', 'category': 'Animated'}, {'question': 'Sigourney Weaver plays the character Ellen Ripley in how many films in the Alien franchise?', 'answer': '4 (Alien, Aliens, Alien 3, Alien Resurrection)', 'category': 'Sigourney Weaver'}, {'question': 'In what film does Sigourney Weaver play real life activist Diane Fossey?', 'answer': 'Gorillas in the Mist', 'category': 'Sigourney Weaver'}, {'question': 'In the 2001 comedy Heartbreakers, Sigourney Weaver plays a woman who pulls cons with her daughter. Who plays her daughter?', 'answer': 'Jennifer Love Hewitt', 'category': 'Sigourney Weaver'}, {'question': 'What is the name of the starship that the title TV show revolves around in Galaxy Quest?', 'answer': 'the NSEA Protector', 'category': 'Sigourney Weaver'}, {'question': "Who plays Bodhi in 1991's Point Break?", 'answer': 'Patrick Swayze', 'category': 'Kathryn Bigelow'}, {'question': 'Which Oscar nominee stars in the Bigelow film Strange Days as Lenny Nero?', 'answer': 'Ralph Fiennes', 'category': 'Kathryn Bigelow'}, {'question': 'In the Kathryn Bigelow film The Weight of Water, which Oscar winner stars as award-winning poet Thomas Janes?', 'answer': 'Sean Penn', 'category': 'Kathryn Bigelow'}, {'question': 'Which DCEU actor has the role of George, a senior CIA supervisor, in Zero Dark Thirty?', 'answer': 'Mark Strong', 'category': 'Kathryn Bigelow'}, {'question': "Who plays DiCaprio's loyal house slave Stephen in Django Unchained?", 'answer': 'Samuel L. Jackson', 'category': 'Quentin Tarantino'}, {'question': 'Chris Buck and Jennifer Lee directed this 2010s Disney film.', 'answer': 'Frozen, Frozen II', 'category': '2010s'}, {'question': 'What 2019 action film stars Kristen Stewart, Naomi Scott, and Ella Balinska?', 'answer': "Charlie's Angels", 'category': 'Action/Adventure'}, {'question': 'Which actor starred in the 90s films Cadillac Man, Toys, and Jakob the Liar?', 'answer': 'Robin Williams', 'category': '1990s'}, {'question': 'Who stars as Baker Dill, a fishing boat captain whose life is not as it seems, in the 2019 film Serenity?', 'answer': 'Matthew McConaughey', 'category': 'Dramas'}, {'question': 'Name one of the three films for which Ingrid Bergman won an Oscar.', 'answer': 'Gaslight, Anastasia, Murder on the Orient Express', 'category': 'Oscars'}, {'question': 'Yul Brynner stars as a robotic cowboy at a futuristic theme park in what 1973 film written and directed by Michael Crichton?', 'answer': 'Westworld', 'category': 'Fantasy/Sci-Fi'}, {'question': "Which actor from TV's Friends co-stars with Bruce Willis in the comedy The Whole Nine Yards?", 'answer': 'Matthew Perry', 'category': 'Comedies'}, {'question': 'What classic 1960 thriller is known for the line "We all go a little mad sometimes."?', 'answer': 'Psycho', 'category': 'Horror/Thriller'}, {'question': 'What classic Disney animated film is known for the line, "Second star to the right, and straight on \'til morning."?', 'answer': 'Peter Pan', 'category': 'Animated'}, {'question': 'Which Adam Sandler comedy involves a toy called Scuba Steve?', 'answer': 'Big Daddy', 'category': 'N/A'}, {'question': 'Who directed Anne Hathaway and Robert De Niro in the 2015 film The Intern?', 'answer': 'Nancy Meyers', 'category': 'Anne Hathaway'}, {'question': 'Anne Hathaway received her first Oscar nomination for playing a woman recently released from rehab in what 2000s drama?', 'answer': 'Rachel Getting Married', 'category': 'Anne Hathaway'}, {'question': 'Anne Hathaway appears as a character named Elizabeth Curran who moonlights as a phone sex operator in what Garry Marshall film?', 'answer': "Valentine's Day", 'category': 'Anne Hathaway'}, {'question': "In Love & Other Drugs, Anne Hathaway's character is afflicted with what disease?", 'answer': "Parkinson's disease", 'category': 'Anne Hathaway'}, {'question': "Who plays Christian Bale's son William Evans in 2007's 3:10 to Yuma?", 'answer': 'Logan Lerman', 'category': 'Westerns'}, {'question': 'What rock star provides the soundtrack for Young Guns II?', 'answer': 'Jon Bon Jovi', 'category': 'Westerns'}, {'question': "In 1993's Tombstone, who plays a member of the traveling theater troupe named Mr. Fabian?", 'answer': 'Billy Zane', 'category': 'Westerns'}, {'question': 'In what classic western does the main villain use a pocket watch to provoke his opponent to kill him before the music finishes?', 'answer': 'For a Few Dollars More', 'category': 'Westerns'}, {'question': 'What is the most recent film to earn Mel Gibson a Best Director nomination?', 'answer': 'Hacksaw Ridge', 'category': 'Oscars'}, {'question': 'Ethan Embry plays Officer Molina, a man who guns down a black civillian, in what 2018 film?', 'answer': 'Blindspotting', 'category': 'Crime'}, {'question': 'What Tom Cruise film features supporting performances by Tim Blake Nelson, Jessica Harper, and Peter Stormare?', 'answer': 'Minority Report', 'category': 'Tom Cruise'}, {'question': 'Who stars as a father who goes undercover for the DEA in order to free his son from prison in the 2013 film Snitch?', 'answer': 'Dwayne Johnson', 'category': 'Action/Adventure'}, {'question': "Who stars as Julie Pierce, Mr. Miyagi's new pupil, in 1994's The Next Karate Kid?", 'answer': 'Hilary Swank', 'category': '1990s'}, {'question': 'Jay Roach directed Charlize Theron, Nicole Kidman, and Margot Robbie in what 2019 biographical drama about scandals at Fox News?', 'answer': 'Bombshell', 'category': 'Dramas'}, {'question': 'What comic-based film follows a man named Eric Draven, who rises from the grave to avenge the murder of both him and his fiancée?', 'answer': 'The Crow', 'category': 'Comic Book'}, {'question': 'Vincent Price plays a scientist who tragically dies before he can finish his creation in what 1990 film from director Tim Burton?', 'answer': 'Edward Scissorhands', 'category': 'Fantasy/Sci-Fi'}, {'question': "Which Oscar-winning actress played Jules, the love interest of Jonah Hill's character, in the film Superbad?", 'answer': 'Emma Stone', 'category': 'Comedies'}, {'question': 'Jessica Biel stars as the victim of a deranged family in what 2003 remake of a horror classic?', 'answer': 'The Texas Chainsaw Massacre', 'category': 'Horror/Thriller'}, {'question': 'Who voiced Princess Fiona in the Shrek franchise?', 'answer': 'Cameron Diaz', 'category': 'Animated'}, {'question': 'Spike Lee won a Best Adapted Screenplay Oscar for what 2018 film?', 'answer': 'BlacKkKlansman', 'category': 'Spike Lee'}, {'question': 'In 25th Hour, which actor plays Jacob Elinsky, an introverted high school teacher?', 'answer': 'Philip Seymour Hoffman', 'category': 'Spike Lee'}, {'question': 'Who stars as Detective Keith Frazier in Inside Man?', 'answer': 'Denzel Washington', 'category': 'Spike Lee'}, {'question': 'Spike Lee directed what 2013 thriller starring Josh Brolin?', 'answer': 'Oldboy', 'category': 'Spike Lee'}, {'question': 'What actor stars alongside Audrey Hepburn in the 1957 romantic musical Funny Face?', 'answer': 'Fred Astaire', 'category': 'Audrey Hepburn'}, {'question': "Which James Bond actor plays Robin Hood opposite Audrey Hepburn's Maid Marian in 1976's Robin and Marian?", 'answer': 'Sean Connery', 'category': 'Audrey Hepburn'}, {'question': 'Audrey Hepburn is given the religious name of Sister Luke in this 1959 Fred Zinnemann film.', 'answer': "The Nun's Story", 'category': 'Audrey Hepburn'}, {'question': 'Who directed Audrey Hepburn in the films Sabrina and Love in the Afternoon?', 'answer': 'Billy Wilder', 'category': 'Audrey Hepburn'}, {'question': "Who plays a farmer named Dan Evans in 2007's 3:10 to Yuma?", 'answer': 'Christian Bale', 'category': 'Westerns'}, {'question': "Who directed 2011's The Descendants?", 'answer': 'Alexander Payne', 'category': 'Directors'}, {'question': 'Who stars as an NYPD detective named Andre Davis in the 2019 action film 21 Bridges?', 'answer': 'Chadwick Boseman', 'category': 'Action/Adventure'}, {'question': 'What 1990s thriller is known for the line "I\'m having an old friend for dinner."?', 'answer': 'The Silence of the Lambs', 'category': 'Quotes'}, {'question': 'Which comedic actor stars as Larry "Doc" Shepherd, a military veteran whose son died in the Iraq War in the 2017 film Last Flag Flying?', 'answer': 'Steve Carell', 'category': 'Dramas'}, {'question': 'Leonard Nimoy directed what 1987 comedy starring Ted Danson and Tom Selleck?', 'answer': 'Three Men and a Baby', 'category': 'Directors'}, {'question': "Which actress plays scientist Dr. Emma Russell, mother of Millie Bobby Brown's character, in Godzilla: King of the Monsters?", 'answer': 'Vera Farmiga', 'category': 'Fantasy/Sci-Fi'}, {'question': "What 2008 comedy opens with fake trailers for movies called Scorcher VI: Global Meltdown, The Fatties: Fart 2, and Satan's Alley?", 'answer': 'Tropic Thunder', 'category': 'Comedies'}, {'question': "Who directed the films Insidious: Chapter 3 and 2020's The Invisible Man?", 'answer': 'Leigh Whannell', 'category': 'Horror/Thriller'}, {'question': 'Lewis Black provides the voice of which emotion in the film Inside Out?', 'answer': 'Anger', 'category': 'Animated'}, {'question': 'Dr. No was the first Eon-produced film in the James Bond franchise. What was the second?', 'answer': 'From Russia with Love', 'category': 'James Bond'}, {'question': "Actor Charles Gray plays Bond's archnemesis Blofeld in which Sean Connery Bond film?", 'answer': 'Diamonds Are Forever', 'category': 'James Bond'}, {'question': "In 1977's The Spy Who Loved Me, Bond and Amasova visit Stromberg's base and discover that he has launched a new supertanker. What is its name?", 'answer': 'the Liparus', 'category': 'James Bond'}, {'question': 'Who famously composed the scores for eleven James Bond films including Goldfinger and Diamonds are Forever?', 'answer': 'John Barry', 'category': 'James Bond'}, {'question': 'Who plays the lead role of Rupert Cadell in the 1948 film Rope?', 'answer': 'James Stewart', 'category': 'Alfred Hitchcock'}, {'question': 'Who plays Mitch Brenner in The Birds?', 'answer': 'Rod Taylor', 'category': 'Alfred Hitchcock'}, {'question': 'What was the only acting performance in an Alfred Hitchcock film to win an Oscar?', 'answer': 'Joan Fontaine in Suspicion', 'category': 'Alfred Hitchcock'}, {'question': 'Which male actor appeared in more Hitchcock films than any other?', 'answer': 'Leo G. Carroll (in Rebecca, Suspicion, Spellbound, The Paradine Case, Strangers on a Train, North by Northwest)', 'category': 'Alfred Hitchcock'}, {'question': 'What seaside town does Melanie travel from San Francisco to in The Birds?', 'answer': 'Bodega Bay', 'category': 'Alfred Hitchcock'}, {'question': 'Which actor stars as Barry Seal in American Made?', 'answer': 'Tom Cruise', 'category': 'N/A'}, {'question': 'Which actress won an Oscar for her performance in The Reader?', 'answer': 'Kate Winslet', 'category': 'N/A'}, {'question': 'In which animated film does a criminal mastermind plan to steal the moon?', 'answer': 'Despicable Me', 'category': 'N/A'}, {'question': 'Who directed the films Bugsy and Good Morning, Vietnam?', 'answer': 'Barry Levinson', 'category': 'N/A'}, {'question': "James Cameron's Aliens came out in what year?", 'answer': '1986', 'category': 'N/A'}, {'question': 'Which actor stars as Charlie Kenton in Real Steel?', 'answer': 'Hugh Jackman', 'category': 'N/A'}, {'question': 'How many times did Andy Serkis portray the role of Caesar in the Planet of the Apes films?', 'answer': '3 (in Rise of the Planet of the Apes, Dawn of the Planet of the Apes, War for the Planet of the Apes)', 'category': 'N/A'}, {'question': 'Who directed Jurassic World?', 'answer': 'Colin Trevorrow', 'category': 'N/A'}, {'question': 'Which actress stars in the following films: Chef, We Bought a Zoo, and Rough Night?', 'answer': 'Scarlett Johansson', 'category': 'N/A'}, {'question': 'How many installments are there in the Terminator franchise?', 'answer': '6 (The Terminator, Judgment Day, Rise of the Machines, Salvation, Genisys, Dark Fate)', 'category': 'N/A'}, {'question': 'Harvey Keitel, Salma Hayek, and George Clooney star in what film featuring Tarantino as an actor?', 'answer': 'From Dusk till Dawn', 'category': 'Quentin Tarantino'}, {'question': 'Craig Schwartz is an unemployed puppeteer living in New York City with his animal-loving wife Lotte in this 1999 film?', 'answer': 'Being John Malkovich', 'category': 'Comedies'}, {'question': 'In what 2019 film will you find the Le Domas gaming empire, who is hiding a dark secret?', 'answer': 'Ready or Not', 'category': 'New Releases'}, {'question': 'Which actor plays the lead in The Fast and the Furious: Tokyo Drift and also reprised his role in Furious 7?', 'answer': 'Lucas Black', 'category': 'Action/Adventure'}, {'question': 'Benjamin Barker is the real name of the lead in this 2007 gory musical.', 'answer': 'Sweeney Todd: The Demon Barber of Fleet Street', 'category': 'Musicals'}, {'question': 'A man named Mike Enslin stays at the Dolphin, a hotel on Lexington Ave. in New York City with a dark past, in what film?', 'answer': '1408', 'category': 'Horror'}, {'question': "Jamie Foxx plays James Sawyer, the President of the United States, alongside Channing Tatum's John Cale, in what film?", 'answer': 'White House Down', 'category': 'Action/Adventure'}, {'question': "You'll find the character of Billy Ray Valentine, a street beggar and con man, in what 1983 comedy?", 'answer': 'Trading Places', 'category': '1980s'}, {'question': 'Which actress played legendary screen star Marilyn Monroe in the biopic My Week with Marilyn?', 'answer': 'Michelle Williams', 'category': 'Dramas'}, {'question': "Who plays the role of Cotton Weary, who was framed for the murder of Sidney's mother Maureen, in the Scream franchise?", 'answer': 'Liev Schreiber (in 1, 2, 3)', 'category': 'Famous Actors & Actresses'}, {'question': 'In which 2019 film does Brad Pitt play an astronaut who voyages across the solar system to uncover the truth about his missing father?', 'answer': 'Ad Astra', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What classic comic actor starred in the original 1963 version of The Nutty Professor?', 'answer': 'Jerry Lewis', 'category': 'Comedies'}, {'question': 'The characters of Kevin Wendell Crumb and David Dunn are brought together in a mental institution in what 2019 film?', 'answer': 'Glass', 'category': 'Horror/Thriller'}, {'question': 'What 2014 Laika film follows the story of Eggs, a human boy raised by trash-collecting trolls?', 'answer': 'The Boxtrolls', 'category': 'Animated'}, {'question': 'Anya Taylor-Joy plays the title character in what 2020 period piece based on a famous Jane Austen novel?', 'answer': 'Emma.', 'category': 'N/A'}, {'question': 'In what year was Best Picture winner No Country for Old Men released?', 'answer': '2007', 'category': 'Release Dates'}, {'question': 'Gareth Edwards directed the monster film Godzilla that came out in what year?', 'answer': '2014', 'category': 'Release Dates'}, {'question': 'What year saw the release of La La Land?', 'answer': '2016', 'category': 'Release Dates'}, {'question': 'Weird Science was released in what year?', 'answer': '1985', 'category': 'Release Dates'}, {'question': "In what film does Julia Roberts play a maid on Dr. Jekyll's estate?", 'answer': 'Mary Reilly', 'category': 'Julia Roberts'}, {'question': "Which of Julia Roberts' films also co-stars Ryan Reynolds, Willem Dafoe, and Emily Watson?", 'answer': 'Fireflies in the Garden', 'category': 'Julia Roberts'}, {'question': 'What was the second film that Julia Roberts and Richard Gere starred in together?', 'answer': 'Runaway Bride', 'category': 'Julia Roberts'}, {'question': 'In which film has Julia Roberts been directed by Woody Allen?', 'answer': 'Everyone Says I Love You', 'category': 'Julia Roberts'}, {'question': 'What is the name of the crime family that is central to the film The Godfather?', 'answer': 'the Corleone family', 'category': '1970s'}, {'question': 'Which actor played Juggernaut in X-Men: The Last Stand?', 'answer': 'Vinnie Jones', 'category': 'Comic Book'}, {'question': 'In which 2001 rom-com film does Matthew McConaughey play a pediatrician by the name of Steve Edison?', 'answer': 'The Wedding Planner', 'category': 'Rom-Coms'}, {'question': 'Mockingjay Parts 1 and 2 are entries in what franchise?', 'answer': 'The Hunger Games', 'category': 'Action/Adventure'}, {'question': 'How many times has Christopher Reeve played Superman?', 'answer': '4 (Superman, II, III, IV)', 'category': 'Comic Book'}, {'question': 'Alfonso Cuarón directed this 2018 film about a maid living in Mexico City during the 1970s.', 'answer': 'Roma', 'category': 'Dramas'}, {'question': 'Who directed the 2005 film Sin City?', 'answer': 'Frank Miller, Quentin Tarantino, Robert Rodriguez', 'category': 'Directors'}, {'question': 'Who plays Trinity in the Matrix series?', 'answer': 'Carrie-Anne Moss', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which comedian starred in the 2010s comedies Think Like a Man, About Last Night, and Get Hard?', 'answer': 'Kevin Hart', 'category': 'Comedies'}, {'question': 'Which actor stars in a dual role in the psychological thriller Enemy?', 'answer': 'Jake Gyllenhaal', 'category': 'Horror/Thriller'}, {'question': 'What 2007 animated film involves a boy named Lewis, a brilliant inventor who ends up time traveling to the future?', 'answer': 'Meet the Robinsons', 'category': 'Animated'}, {'question': 'Who plays the lead role of Frank Drebin in The Naked Gun: From the Files of Police Squad!?', 'answer': 'Leslie Nielsen', 'category': 'N/A'}, {'question': "Who co-stars with Eddie Murphy as Robert K. Bowfinger in 1999's Bowfinger?", 'answer': 'Steve Martin', 'category': 'Eddie Murphy'}, {'question': 'Who directed Eddie Murphy in the Rudy Ray Moore biopic Dolemite Is My Name?', 'answer': 'Craig Brewer', 'category': 'Eddie Murphy'}, {'question': 'Eddie Murphy plays Chandler Jarrell, who is informed that he is "The Chosen One", in what 1986 film?', 'answer': 'The Golden Child', 'category': 'Eddie Murphy'}, {'question': "Who voices King Harold, Fiona's father, in Shrek 2?", 'answer': 'John Cleese', 'category': 'Eddie Murphy'}, {'question': 'Who directed the 1984 film Starman?', 'answer': 'John Carpenter', 'category': '1980s'}, {'question': 'In The Terminator, from what year did the Terminator travel back in time to kill Sarah Connor?', 'answer': '2029', 'category': '1980s'}, {'question': 'In The Princess Bride, who plays Inigo Montoya?', 'answer': 'Mandy Patinkin', 'category': '1980s'}, {'question': "What is the profession of Mel Gibson's character in the 1983 war drama The Year of Living Dangerously?", 'answer': 'a reporter', 'category': '1980s'}, {'question': 'Robert Zemeckis directed Steve Carell in this 2018 drama.', 'answer': 'Welcome to Marwen', 'category': 'Directors'}, {'question': 'Which Will Smith film features Lara Flynn Boyle and Johnny Knoxville as main villains?', 'answer': 'Men in Black II', 'category': 'Will Smith'}, {'question': "What is the name of the night club that Cameron Diaz performs at in 1994's The Mask?", 'answer': 'the Coco Bongo', 'category': 'Comedies'}, {'question': "Who plays the hot-headed gangster Nicky Santoro in Martin Scorsese's Casino?", 'answer': 'Joe Pesci', 'category': 'Crime'}, {'question': "Who played Michael Douglas' wife in Fatal Attraction?", 'answer': 'Anne Archer', 'category': 'Thriller'}, {'question': 'Which 1989 action sequel features the tagline "The magic is back!"?', 'answer': 'Lethal Weapon 2', 'category': 'Action/Adventure'}, {'question': "You'll find John Cusack, Jennifer Tilly, and Chazz Palminteri in what 1994 Woody Allen film?", 'answer': 'Bullets over Broadway', 'category': 'Famous Actors & Actresses'}, {'question': 'Tom Cruise plays Lt. Daniel Kaffee in what 1992 film?', 'answer': 'A Few Good Men', 'category': 'Dramas'}, {'question': 'Who directed Josh Brolin in the 2008 biopic W.?', 'answer': 'Oliver Stone', 'category': 'Directors'}, {'question': 'What is the subtitle of the 2019 Godzilla movie directed by Michael Dougherty?', 'answer': 'King of the Monsters', 'category': 'Fantasy/Sci-Fi'}, {'question': "The Griswold clan goes to what famous city to renew Clark and Ellen's wedding vows in the fourth film in the Vacation franchise?", 'answer': 'Las Vegas (in Vegas Vacation)', 'category': 'Comedies'}, {'question': "Who plays Arthur Kipps, a recently widowed lawyer who discovers that his late client's house is haunted, in 2012's The Woman in Black?", 'answer': 'Daniel Radcliffe', 'category': 'Horror/Thriller'}, {'question': 'Summer Vacation is the subtitle of the 2018 third entry in what animated franchise?', 'answer': 'Hotel Transylvania', 'category': 'Animated'}, {'question': 'The Disney-produced Queen of Katwe deals with the life of Phiona Mutesi and how she came to be among the world champions of what?', 'answer': 'chess', 'category': 'Festival Darlings'}, {'question': "Taika Waititi's directorial debut came in this 2007 Sundance favorite.", 'answer': 'Eagle vs Shark', 'category': 'Festival Darlings'}, {'question': 'Bill Hader and Kristen Wiig star in this 2014 drama.', 'answer': 'The Skeleton Twins', 'category': 'Festival Darlings'}, {'question': 'In The Runaways, Dakota Fanning stars as Cherie Currie, and Kristen Stewart stars as who?', 'answer': 'Joan Jett', 'category': 'Festival Darlings'}, {'question': "Todd Haynes directed Mark Ruffalo in what film about Robert Bilott's case against the chemical manufacturing corporation DuPont?", 'answer': 'Dark Waters', 'category': 'Dramas'}, {'question': 'Which 2012 crime drama has the tagline, "A totally twisted deep-fried Texas redneck trailer park murder story."?', 'answer': 'Killer Joe', 'category': 'Dramas'}, {'question': 'Who directed the 2012 police drama End of Watch?', 'answer': 'David Ayer', 'category': 'Dramas'}, {'question': 'What film, directed by Clint Eastwood, involves the murder of a young Boston woman and its effects on her father and his two childhood friends?', 'answer': 'Mystic River', 'category': 'Dramas'}, {'question': "Who co-stars alongside Tom Cruise in Michael Mann's Collateral?", 'answer': 'Jamie Foxx', 'category': 'Tom Cruise'}, {'question': 'Roger Deakins won his first ever Oscar for Best Cinematography for what sci-fi film?', 'answer': 'Blade Runner 2049', 'category': 'Oscars'}, {'question': "Who plays the character of LeFou in 2017's Beauty and the Beast?", 'answer': 'Josh Gad', 'category': 'Remakes & Reboots'}, {'question': 'Which actress co-stars with Ethan Hawke and Jude Law in the 1997 sci-fi film Gattaca?', 'answer': 'Uma Thurman', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Based off of a British comic book, Lori Petty would become known as Tank Girl, which came out in what year?', 'answer': '1995', 'category': 'Release Dates'}, {'question': "You'll find alien species such as the Thern and Tharks in what 2012 sci-fi film?", 'answer': 'John Carter', 'category': '2010s'}, {'question': 'Sam Jackson starred in this 2000s sequel, which was also a continuation of a Richard Roundtree film series.', 'answer': 'Shaft', 'category': 'Action/Adventure'}, {'question': "In which Quentin Tarantino film does a character explain why he doesn't tip waitresses at diners?", 'answer': 'Reservoir Dogs', 'category': 'Crime'}, {'question': 'This 1992 film starring Jack Lemmon and Al Pacino follows a group of salesmen at a real estate office over one night.', 'answer': 'Glengarry Glen Ross', 'category': 'Dramas'}, {'question': 'Who plays Mr. Roarke, the owner and operator of the luxurious Fantasy Island, in Fantasy Island?', 'answer': 'Michael Peña', 'category': 'New Releases'}, {'question': 'Casper Van Dien, Denise Richards, and Neil Patrick Harris star in what 1997 sci-fi movie?', 'answer': 'Starship Troopers', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actress stars as a working-class woman named Kate Sullivan in the 2018 remake of Overboard?', 'answer': 'Anna Faris', 'category': 'Comedies'}, {'question': 'Which actress starred as Angela Bennett in the 90s tech thriller The Net?', 'answer': 'Sandra Bullock', 'category': 'Horror/Thriller'}, {'question': 'In what Pixar film will you find the characters Flik, Hopper, and Heimlich?', 'answer': "A Bug's Life", 'category': 'Animated'}, {'question': 'Dwayne Johnson plays the character Roadblock in what movie franchise?', 'answer': 'G.I. Joe (in Retaliation)', 'category': 'Dwayne Johnson'}, {'question': "In 2014's Hercules, who plays Lord Cotys, who turns to Hercules to help restore peace to his kingdom?", 'answer': 'John Hurt', 'category': 'Dwayne Johnson'}, {'question': "Dwayne Johnson's character has what profession, which propels him into an adventure, in the Disney film Race to Witch Mountain?", 'answer': 'a cab driver', 'category': 'Dwayne Johnson'}, {'question': 'Who directed Dwayne Johnson in the films San Andreas and Rampage?', 'answer': 'Brad Peyton', 'category': 'Dwayne Johnson'}, {'question': 'Which actor stars as the jockey Red Pollard in Seabiscuit?', 'answer': 'Tobey Maguire', 'category': 'Sports'}, {'question': 'In The Longest Yard, Terry Crews plays a character known simply as "Cheeseburger Eddy", who sneaks food from what fast food chain into the prison?', 'answer': "McDonald's", 'category': 'Sports'}, {'question': 'What is the name of the 2008 film about elite running back Ernie Davis, who played football for Syracuse University?', 'answer': 'The Express: The Ernie Davis Story', 'category': 'Sports'}, {'question': "You'll find the fictional football team of the Washington Sentinels in what 2000 film?", 'answer': 'The Replacements', 'category': 'Sports'}, {'question': 'What 1997 thriller stars Michael Douglas and Sean Penn?', 'answer': 'The Game', 'category': 'Thriller'}, {'question': 'Which actor-turned-director was behind the lens for the film Letters from Iwo Jima?', 'answer': 'Clint Eastwood', 'category': 'Directors'}, {'question': "In 2004's Mean Girls, what is the name of the book that the Plastics have made that is filled with secrets and rumors?", 'answer': 'the Burn Book', 'category': 'Comedies'}, {'question': 'Which DreamWorks animated film features the voice talents of Andy Serkis, Kate Winslet, and Ian McKellen?', 'answer': 'Flushed Away', 'category': 'Animated'}, {'question': 'In Beauty and the Beast, according to the song "Gaston", what does he use "in all of [his] decorating"?', 'answer': 'antlers', 'category': 'Disney'}, {'question': "You'll find a drilling machine used to simulate an earthquake in what 2000s Brad Pitt film?", 'answer': "Ocean's Thirteen", 'category': 'Brad Pitt'}, {'question': 'Robin Shou plays Liu Kang and Bridgette Wilson plays Sonya Blade in what 90s film?', 'answer': 'Mortal Kombat', 'category': 'Action/Adventure'}, {'question': "Who stars as Fern, a young girl who adopts a pig named Wilbur, in 2006's Charlotte's Web?", 'answer': 'Dakota Fanning', 'category': 'Family'}, {'question': 'Who stars as Italian-American Tony "Lip" Vallelonga in 2018\'s Green Book?', 'answer': 'Viggo Mortensen', 'category': 'Dramas'}, {'question': 'In what 1980s film is a character instructed to "sand the floor" and "paint the fence" as part of a training regimen?', 'answer': 'The Karate Kid', 'category': '1980s'}, {'question': 'Colin Farrell and Kate Beckinsale star in what 2012 remake of a Philip K. Dick story?', 'answer': 'Total Recall', 'category': 'Fantasy/Sci-Fi'}, {'question': "Will Ferrell and Amy Poehler's characters open up a casino in their home in what 2017 comedy?", 'answer': 'The House', 'category': 'Comedies'}, {'question': "Who directed 2014's Tusk starring Justin Long?", 'answer': 'Kevin Smith', 'category': 'Horror/Thriller'}, {'question': 'Who voices the title character in Wreck-It Ralph?', 'answer': 'John C. Reilly', 'category': 'Animated'}, {'question': 'Jay Roach directed Bryan Cranston in what 2015 biopic?', 'answer': 'Trumbo', 'category': 'N/A'}, {'question': 'What 1986 film features a dangerous alien race known as Krites, who hijack their prison ship and crash-land it in Kansas?', 'answer': 'Critters', 'category': 'Monster'}, {'question': 'Who plays Julie, the girl who was rescued by a zombie, in Warm Bodies?', 'answer': 'Teresa Palmer', 'category': 'Monster'}, {'question': 'Who plays billionaire Jack Morris, who funds the underwater research facility called Mana One, in The Meg?', 'answer': 'Rainn Wilson', 'category': 'Monster'}, {'question': 'What 1974 film from director Larry Cohen involves a mutant newborn baby who goes on a killing rampage?', 'answer': "It's Alive", 'category': 'Monster'}, {'question': 'Who plays Ostap Bender, a homeless con artist, in The Twelve Chairs?', 'answer': 'Frank Langella', 'category': 'Mel Brooks'}, {'question': 'Mel Brooks makes a cameo as Professor Max Krassman in which Muppet film?', 'answer': 'The Muppet Movie', 'category': 'Mel Brooks'}, {'question': 'Mel Brooks voices the character of Bigweld in what 2005 animated film?', 'answer': 'Robots', 'category': 'Mel Brooks'}, {'question': "Who plays Dracula in 1995's Dracula: Dead and Loving It?", 'answer': 'Leslie Nielsen', 'category': 'Mel Brooks'}, {'question': 'Which Best Picture winner stars Shirley MacLaine, Jack Lemmon, and Fred MacMurray?', 'answer': 'The Apartment', 'category': 'Classics'}, {'question': 'What is the name of the TV show that Rick Dalton was the lead in, before being canceled, in Once Upon a Time in Hollywood?', 'answer': 'Bounty Law', 'category': 'Quentin Tarantino'}, {'question': 'What is the name of the supervillain in The Incredibles?', 'answer': 'Syndrome', 'category': 'Pixar'}, {'question': 'Martin Scorsese directed six films in the 1990s, all of which were Oscar-nominated except for one. What was that film?', 'answer': 'Bringing Out the Dead (Goodfellas, Cape Fear, The Age of Innocence, Casino, Kundun were all nominated)', 'category': 'Oscars'}, {'question': "Which Star Wars actor stars as a young car lover in 1978's Corvette Summer?", 'answer': 'Mark Hamill', 'category': '1970s'}, {'question': 'Who directed Jodie Foster and Scott Baio in the 1976 gangster film Bugsy Malone?', 'answer': 'Alan Parker', 'category': 'Jodie Foster'}, {'question': 'Jason Statham first appeared as Frank Martin, a highly skilled driver/mercenary in what 2002 action film?', 'answer': 'The Transporter', 'category': 'Action/Adventure'}, {'question': "Danny DeVito, Billy Crystal, and Anne Ramsey appear in what 1987 dark comedy that was inspired by Alfred Hitchcock's Strangers on a Train?", 'answer': 'Throw Momma from the Train', 'category': '1980s'}, {'question': "Who plays the character of Tom Mullen, whose son is kidnapped at a science fair in Central Park, in 1996's Ransom?", 'answer': 'Mel Gibson', 'category': 'Dramas'}, {'question': 'Who plays Sharon Tate in Once Upon a Time in Hollywood?', 'answer': 'Margot Robbie', 'category': 'New Releases'}, {'question': "Who plays the female lead Quorra in 2010's Tron: Legacy?", 'answer': 'Olivia Wilde', 'category': 'Fantasy/Sci-Fi'}, {'question': '"Weird Al" Yankovic plays George Newman, a daydreamer with a hyperactive imagination that is put in charge of his uncle\'s TV station, in what 1989 comedy?', 'answer': 'UHF', 'category': 'Comedies'}, {'question': 'What was the subtitle for the 2018 sequel to The Strangers?', 'answer': 'Prey at Night', 'category': 'Horror/Thriller'}, {'question': 'Will Smith, Jack Black, and Robert De Niro lent their voices to what 2004 DreamWorks film?', 'answer': 'Shark Tale', 'category': 'Animated'}, {'question': 'Jack Lemmon plays Felix Ungar, and Walter Matthau plays Oscar Madison, in what 1968 comedy?', 'answer': 'The Odd Couple', 'category': 'N/A'}, {'question': 'In what 2015 family film can you find Nicole Kidman playing the villainous taxidermist named Millicent Clyde?', 'answer': 'Paddington', 'category': 'Nicole Kidman'}, {'question': "Who directed Nicole Kidman and Tom Cruise in 1992's Far and Away?", 'answer': 'Ron Howard', 'category': 'Nicole Kidman'}, {'question': 'What Oscar-winning actor co-stars with Nicole Kidman in the films Before I Go to Sleep, The Railway Man, and Genius?', 'answer': 'Colin Firth', 'category': 'Nicole Kidman'}, {'question': 'In what 1990s film does Kidman play Suzanne Stone, a local newswoman who conspires to have her husband killed?', 'answer': 'To Die For', 'category': 'Nicole Kidman'}, {'question': 'What actor plays Hamilton Bartholomew, a CIA administrator, in Charade?', 'answer': 'Walter Matthau', 'category': 'Audrey Hepburn'}, {'question': 'What 1960s film got Audrey Hepburn her last Oscar nomination?', 'answer': 'Wait Until Dark', 'category': 'Audrey Hepburn'}, {'question': "Audrey Hepburn's character suffers from what disability in the thriller Wait Until Dark?", 'answer': 'blindness', 'category': 'Audrey Hepburn'}, {'question': "Which film in Audrey Hepburn's filmography was the only one to win Best Picture?", 'answer': 'My Fair Lady', 'category': 'Audrey Hepburn'}, {'question': 'Arnold Schwarzenegger plays Harry Tasker, a family man who is secretly a spy, in what action film?', 'answer': 'True Lies', 'category': 'Action/Adventure'}, {'question': 'Name one of the two major war films released in 1998 that competed against each other at the Oscars for Best Picture.', 'answer': 'Saving Private Ryan, The Thin Red Line', 'category': 'War'}, {'question': 'Edward Zwick directed Leonardo DiCaprio and Jennifer Connelly in what film?', 'answer': 'Blood Diamond', 'category': 'Leonardo DiCaprio'}, {'question': "Who stars as Victoria Grant in 1982's Victor/Victoria?", 'answer': 'Julie Andrews', 'category': 'Musicals'}, {'question': 'In The Brave One, who plays detective Sean Mercer, who is investigating the vigilante crimes?', 'answer': 'Terrence Howard', 'category': 'Jodie Foster'}, {'question': 'Name both of the main gangs depicted in the Scorsese film Gangs of New York.', 'answer': 'the Dead Rabbits, the Natives', 'category': 'Martin Scorsese'}, {'question': 'Who stars in the 80s action movies Cobra and Lock Up?', 'answer': 'Sylvester Stallone', 'category': 'Action/Adventure'}, {'question': 'Martha Coolidge directed Nicolas Cage and Deborah Foreman in what 1983 teen rom-com?', 'answer': 'Valley Girl', 'category': 'Rom-Coms'}, {'question': "Which Oscar-winning actor stars as a man who works serving U.S. Presidents at the White House for decades in Lee Daniels' The Butler?", 'answer': 'Forest Whitaker', 'category': 'Dramas'}, {'question': 'What famous film was the first collaboration between actor Harrison Ford and director Steven Spielberg?', 'answer': 'Raiders of the Lost Ark', 'category': 'Famous Actors & Actresses'}, {'question': 'Who composed the scores for the first three Harry Potter films?', 'answer': 'John Williams', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1999 film stars Reese Witherspoon as an overly ambitious high school student who runs for class president named Tracy Flick?', 'answer': 'Election', 'category': 'Comedies'}, {'question': 'What horror franchise is known for coining the line "Do you like scary movies?"?', 'answer': 'Scream', 'category': 'Horror/Thriller'}, {'question': 'In which film in the Toy Story franchise are Woody and Jessie nearly shipped to a toy museum in Japan?', 'answer': 'Toy Story 2', 'category': 'Animated'}, {'question': 'Which Tim Burton film has characters such as Judge Turpin, Mrs. Lovett, and Beadle Bamford?', 'answer': 'Sweeney Todd: The Demon Barber of Fleet Street', 'category': 'Tim Burton'}, {'question': "What song does Pee-wee dance along to at a biker bar in Pee-wee's Big Adventure?", 'answer': 'Tequila', 'category': 'Tim Burton'}, {'question': "Which actress played Mrs. Bucket, Charlie's mother, in Charlie and the Chocolate Factory?", 'answer': 'Helena Bonham Carter', 'category': 'Tim Burton'}, {'question': 'How many feature films have Tim Burton and Johnny Depp collaborated on?', 'answer': '8 (Edward Scissorhands, Ed Wood, Ed Wood, Charlie and the Chocolate Factory, Corpse Bride, Sweeney Todd: The Demon Barber of Fleet Street, Alice in Wonderland, Dark Shadows)', 'category': 'Tim Burton'}, {'question': "2018's Suspiria takes place during what decade?", 'answer': 'the 1970s', 'category': 'Horror'}, {'question': 'What is the title of the fifth film in the action/horror Resident Evil franchise?', 'answer': 'Resident Evil: Retribution', 'category': 'Horror'}, {'question': 'Keanu Reeves and Charlize Theron play husband and wife in this supernatural horror film.', 'answer': "The Devil's Advocate", 'category': 'Horror'}, {'question': "In 1979's The Amityville Horror, the family's young daughter has a supposed imaginary friend named Jody, which appears as what type of animal?", 'answer': 'a pig', 'category': 'Horror'}, {'question': 'Which actor stars as a U.S. Army officer who goes rogue as he hunts for weapons of mass destruction in the 2010 film Green Zone?', 'answer': 'Matt Damon', 'category': 'Action/Adventure'}, {'question': "You'll find five golden tickets hidden in candy bars in what 2005 film?", 'answer': 'Charlie and the Chocolate Factory', 'category': 'Family'}, {'question': 'Which actor stars in the 2019 film Honey Boy and also wrote the screenplay?', 'answer': 'Shia LaBeouf', 'category': 'Dramas'}, {'question': 'Who directed four films in the Fast & Furious franchise, including Tokyo Drift and Fast Five (as of September 2020)?', 'answer': 'Justin Lin (3, 4, 5, 6)', 'category': 'Directors'}, {'question': "Who plays the Kurgan, Conor's nemesis, in 1986's Highlander?", 'answer': 'Clancy Brown', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Tim Story directed Ice Cube and Cedric the Entertainer in what 2002 film?', 'answer': 'Barbershop', 'category': 'Comedies'}, {'question': 'Which actor starred in the horror films Sinister and The Purge?', 'answer': 'Ethan Hawke', 'category': 'Horror/Thriller'}, {'question': 'James McAvoy voices Gnomeo. Which actress voices Juliet in the film Gnomeo & Juliet?', 'answer': 'Emily Blunt', 'category': 'Animated'}, {'question': 'What is the first film in the Star Wars franchise that Billy Dee Williams appears in?', 'answer': 'The Empire Strikes Back', 'category': 'Innergeekdom'}, {'question': 'What character continually refers to Thor as the Lord of Thunder in Thor: Ragnarok?', 'answer': 'the Grandmaster', 'category': 'Innergeekdom'}, {'question': 'Vivica A. Fox appears as Ms. B. Haven in what Batman film?', 'answer': 'Batman & Robin', 'category': 'Innergeekdom'}, {'question': 'Who plays Theron, a corrupt Spartan politician, in 300?', 'answer': 'Dominic West', 'category': 'Innergeekdom'}, {'question': "In John Carpenter's They Live, Roddy Piper plays a drifter that discovers an item that reveals to him that aliens are among us. What is the item?", 'answer': 'sunglasses', 'category': 'Action/Adventure'}, {'question': 'In The Rundown, which actor stars as Travis Walker, who has a bounty placed on him by his father?', 'answer': 'Seann William Scott', 'category': 'Action/Adventure'}, {'question': 'Which action/adventure film begins in Richmond, Virginia during the Civil War as the ironclad CSS Texas attempts to escape Union soldiers?', 'answer': 'Sahara', 'category': 'Action/Adventure'}, {'question': 'Which Mission: Impossible film has Tom Cruise trying to stop a German virus known as Chimera from going global?', 'answer': 'Mission: Impossible 2', 'category': 'Action/Adventure'}, {'question': 'Which actor plays Sheriff Tom Wachowski of Green Hills opposite Sonic in Sonic the Hedgehog?', 'answer': 'James Marsden', 'category': 'New Releases'}, {'question': 'Who plays hockey coach Gordon Bombay in The Mighty Ducks?', 'answer': 'Emilio Estevez', 'category': 'Disney'}, {'question': 'Who starred as the villainous Bernie Rose in the 2011 crime thriller Drive?', 'answer': 'Albert Brooks', 'category': 'Thriller'}, {'question': 'The villainous Lord Business steals a super weapon called the Kragle in what 2014 animated film?', 'answer': 'The Lego Movie', 'category': 'Animated'}, {'question': "Who plays Cynthia Baum, Mark's wife, in The Big Short?", 'answer': 'Marisa Tomei', 'category': 'Brad Pitt'}, {'question': 'Who directed the vampire film 30 Days of Night, which was based on a comic?', 'answer': 'David Slade', 'category': 'Comic Book'}, {'question': "Who plays the title hero in 2018's Robin Hood?", 'answer': 'Taron Egerton', 'category': 'Action/Adventure'}, {'question': "Who won an Oscar for playing the bigoted Deputy Dixon in 2018's Three Billboards Outside Ebbing, Missouri?", 'answer': 'Sam Rockwell', 'category': 'Famous Actors & Actresses'}, {'question': 'In what 90s film will you find the characters Marge Gunderson and Jerry Lundegaard?', 'answer': 'Fargo', 'category': 'Dramas'}, {'question': 'Gerard Butler, Lena Headey, and Michael Fassbender star in what 2007 graphic novel adaptation?', 'answer': '300', 'category': 'Comic Book'}, {'question': 'What 1984 fantasy film takes place in the land of Fantasia and features such characters as Bastian and Atreyu?', 'answer': 'The NeverEnding Story', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays the title character in the comedy The Incredible Burt Wonderstone?', 'answer': 'Steve Carell', 'category': 'Comedies'}, {'question': 'In what 2009 film do a couple named Katie and Micah record their life on a video camera, which begins showing strange occurrences during the night?', 'answer': 'Paranormal Activity', 'category': 'Horror/Thriller'}, {'question': 'What animated franchise features the characters Monkey, Mantis, Viper, and Crane?', 'answer': 'Kung Fu Panda', 'category': 'Animated'}, {'question': "Who plays aging Atlanta Braves baseball scout Gus Lobel in 2012's Trouble with the Curve?", 'answer': 'Clint Eastwood', 'category': 'N/A'}, {'question': "What team did Billy Beane manage in 2011's Moneyball?", 'answer': 'Oakland Athletics', 'category': 'Sports'}, {'question': 'In what football drama do actors Lucas Black, Garrett Hedlund, and Derek Luke have supporting roles?', 'answer': 'Friday Night Lights', 'category': 'Sports'}, {'question': 'In Nacho Libre, what is the name of the wrestler Nacho looks up to above all others?', 'answer': 'Ramses', 'category': 'Sports'}, {'question': "You'll find a character that goes by the nickname All the Way Mae in what film?", 'answer': 'A League of Their Own', 'category': 'Sports'}, {'question': 'In the film Resident Evil, what is the name of the state-of-the-art artificial intelligence that controls the Hive?', 'answer': 'the Red Queen', 'category': 'Horror'}, {'question': 'In Underworld: Awakening, what is the name of the company employed by world governments to contain and experiment on vampires and Lycans, that captures Selene?', 'answer': 'Antigen', 'category': 'Horror'}, {'question': 'What 90s slasher film has the tagline, "If you\'re going to bury the truth, make sure it stays buried."?', 'answer': 'I Know What You Did Last Summer', 'category': 'Horror'}, {'question': 'In the 2017 horror film It, Pennywise awakens once every how many years?', 'answer': '27 years', 'category': 'Horror'}, {'question': "In what film does Tom Cruise act opposite Kelly Preston, Jerry O'Connell, Beau Bridges, and Bonnie Hunt?", 'answer': 'Jerry Maguire', 'category': 'Tom Cruise'}, {'question': "What comedic actor voices the titular villain turned hero in 2010's Megamind?", 'answer': 'Will Ferrell', 'category': 'Animated'}, {'question': "Who plays the role of Peter Vincent in 2011's Fright Night?", 'answer': 'David Tennant', 'category': 'Remakes & Reboots'}, {'question': 'What 1944 madcap comedy stars Cary Grant as a newlywed who discovers his elderly aunts have been killing old men and burying them in their cellar?', 'answer': 'Arsenic and Old Lace', 'category': 'Comedies'}, {'question': '2007 saw the release of a Harry Potter film and a Pirates of the Carribean film; name both.', 'answer': "Harry Potter and the Order of the Phoenix, Pirates of the Caribbean: At World's End", 'category': 'Release Dates'}, {'question': "Who plays Sally Lamonsoff, the wife of Kevin James' character in Grown Ups?", 'answer': 'Maria Bello', 'category': '2010s'}, {'question': 'Which Fast and Furious actor starred in the films Into the Blue and Brick Mansions?', 'answer': 'Paul Walker', 'category': 'Action/Adventure'}, {'question': 'Which MCU actor played a tabloid reporter named Wayne Gale in the 1994 film Natural Born Killers?', 'answer': 'Robert Downey Jr.', 'category': '1990s'}, {'question': 'Which actress plays Bianca, the female co-lead in the films Creed and Creed II?', 'answer': 'Tessa Thompson', 'category': 'Dramas'}, {'question': 'Miami cops Marcus and Mike go toe-to-toe with the widow of a cartel kingpin in what 2020 action film?', 'answer': 'Bad Boys for Life', 'category': 'New Releases'}, {'question': 'Who plays the character Caine Wise, a hero who has both human and canine DNA, in the film Jupiter Ascending?', 'answer': 'Channing Tatum', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who stars as stuntman Rod Kimble in 2007's Hot Rod?", 'answer': 'Andy Samberg', 'category': 'Comedies'}, {'question': 'Who directed the thrillers Wild at Heart and Mulholland Drive?', 'answer': 'David Lynch', 'category': 'Horror/Thriller'}, {'question': 'In what 90s Disney animated film is the main character referred to as a "street rat"?', 'answer': 'Aladdin', 'category': 'Animated'}, {'question': 'Who directed Birds of Prey (and the Fantabulous Emancipation of One Harley Quinn)?', 'answer': 'Cathy Yan', 'category': 'N/A'}, {'question': "Which actress plays Dr. Amelia Brand, the daughter of Michael Caine's character, in Interstellar?", 'answer': 'Anne Hathaway', 'category': 'Christopher Nolan'}, {'question': 'In The Dark Knight Rises, what is the name of the computer program that Selina Kyle is after, where you can erase your name from all databases?', 'answer': 'the Clean Slate', 'category': 'Christopher Nolan'}, {'question': 'Which Christopher Nolan film features the actors Jeremy Theobald, Alex Haw, and Lucy Russell?', 'answer': 'Following', 'category': 'Christopher Nolan'}, {'question': "Who plays tough guy Eames in Nolan's Inception?", 'answer': 'Tom Hardy', 'category': 'Christopher Nolan'}, {'question': 'Which actor stars in the science fiction drama Mr. Nobody?', 'answer': 'Jared Leto', 'category': 'Festival Darlings'}, {'question': 'Ryan Gosling and Michelle Williams star in Blue Valentine, which was directed by whom?', 'answer': 'Derek Cianfrance', 'category': 'Festival Darlings'}, {'question': 'In Silver Linings Playbook, what is the football team that the Solitano family are diehard fans of?', 'answer': 'the Philadelphia Eagles', 'category': 'Festival Darlings'}, {'question': "What is the first name of Kip's girlfriend from Detroit in Napoleon Dynamite?", 'answer': 'LaFawnduh Lucas', 'category': 'Festival Darlings'}, {'question': 'Name two of the four films Robert De Niro and Al Pacino appeared in together.', 'answer': 'The Godfather Part II, Heat, Righteous Kill, The Irishman', 'category': 'Crime'}, {'question': 'Who plays Iris\' manipulative pimp named "Sport" in Taxi Driver?', 'answer': 'Harvey Keitel', 'category': 'Martin Scorsese'}, {'question': 'Academy Award winning director Miloš Forman made his American acting debut in what 1986 Meryl Streep film?', 'answer': 'Heartburn', 'category': 'Meryl Streep'}, {'question': 'Who starred in the 1990s action films Striking Distance, Mercury Rising, and The Jackal?', 'answer': 'Bruce Willis', 'category': 'Action/Adventure'}, {'question': 'Tobey Maguire and Reese Witherspoon star as two teenage siblings who find themselves in a 1950s sitcom in what 1998 film?', 'answer': 'Pleasantville', 'category': '1990s'}, {'question': 'Janelle Monae plays Teresa, the mother figure to a boy named Chiron, in what Barry Jenkins film?', 'answer': 'Moonlight', 'category': 'Dramas'}, {'question': 'Which Fast and Furious actor stars in the 2006 Disney film Eight Below?', 'answer': 'Paul Walker', 'category': 'Family'}, {'question': 'Which sci-fi adventure film from director Steven Spielberg has the following tagline: "An adventure too big for the real world."?', 'answer': 'Ready Player One', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays Jamal, an employee at an amusement park who suffers a blow to the head and wakes up in 14th century England, in 2001's Black Knight?", 'answer': 'Martin Lawrence', 'category': 'Comedies'}, {'question': 'What is the name of the 2019 movie in which Kaya Scodelario must fend off alligators?', 'answer': 'Crawl', 'category': 'Horror/Thriller'}, {'question': 'Which actor, who portrayed Batman, provided the voice of Moses in the 1998 animated film The Prince of Egypt?', 'answer': 'Val Kilmer', 'category': 'Animated'}, {'question': "Who plays Marion Crane in Alfred Hitchcock's Psycho?", 'answer': 'Janet Leigh', 'category': 'N/A'}, {'question': 'In what 2009 biographical film does Bassett play Voletta Wallace?', 'answer': 'Notorious', 'category': 'Angela Bassett'}, {'question': "What famous singer stars as the character Savannah Jackson opposite Angela Bassett in 1995's Waiting to Exhale?", 'answer': 'Whitney Houston', 'category': 'Angela Bassett'}, {'question': "Angela Bassett plays Cuba Gooding Jr.'s mother in this 1991 crime drama.", 'answer': 'Boyz n the Hood', 'category': 'Angela Bassett'}, {'question': "Bassett's character Lynne Jacobs is the director of which organization in Olympus Has Fallen?", 'answer': 'the Secret Service', 'category': 'Angela Bassett'}, {'question': 'You will find the first female ice skater to complete two triple Axel jumps in competition in which film?', 'answer': 'I, Tonya', 'category': 'Sports'}, {'question': "Who plays Assistant General Manager and Assistant Coach Craig Patrick in 2004's Miracle?", 'answer': 'Noah Emmerich', 'category': 'Sports'}, {'question': 'Which actress plays supermodel Suzy Miller, who ends up marrying and divorcing James Hunt, in the film Rush?', 'answer': 'Olivia Wilde', 'category': 'Sports'}, {'question': 'In the film Fighting with My Family, Zak and Saraya Knight meet what famous wrestler before a SmackDown event that gives them helpful advice?', 'answer': 'Dwayne Johnson', 'category': 'Sports'}, {'question': 'Who plays the sexy agent Vanessa Kensington in Austin Powers: International Man of Mystery?', 'answer': 'Elizabeth Hurley', 'category': 'Spy'}, {'question': 'What Tom Cruise film also stars Kenneth Branagh, Bill Nighy, Tom Wilkinson, and Terence Stamp?', 'answer': 'Valkyrie', 'category': 'Tom Cruise'}, {'question': "What is the name of the photojournalist that Bruce Wayne falls for in 1989's Batman?", 'answer': 'Vicki Vale', 'category': 'Comic Book'}, {'question': 'Robert De Niro plays 70-year-old widower Ben Whittaker, who is sick of retirement and gets a job working at an online fashion site, in what film?', 'answer': 'The Intern', 'category': 'Comedies'}, {'question': "Who plays Emile Mondavarious, the owner of Spooky Island, in 2002's Scooby-Doo?", 'answer': 'Rowan Atkinson', 'category': '2000s'}, {'question': 'What 2000s Stephen King adaptation is about a writer who is being stalked by a man accusing him of plagiarism?', 'answer': 'Secret Window', 'category': 'Thriller'}, {'question': "Which superhero actor plays Justin Long's boyfriend in Zack and Miri Make a Porno?", 'answer': 'Brandon Routh', 'category': 'N/A'}, {'question': 'James DeMonaco directed the first three installments in what horror/thriller franchise?', 'answer': 'The Purge', 'category': 'N/A'}, {'question': 'What is the subtitle of the second National Treasure film?', 'answer': 'Book of Secrets', 'category': 'N/A'}, {'question': 'In Born on the Fourth of July, which actor plays the paraplegic Charlie, who travels with Ron to a village after being kicked out of a bar?', 'answer': 'Willem Dafoe', 'category': 'N/A'}, {'question': 'What 1987 action comedy was the first sequel that Eddie Murphy starred in?', 'answer': 'Beverly Hills Cop II', 'category': 'Action/Adventure'}, {'question': "Who directed Hugh Jackman and Patrick Stewart in 2017's Logan?", 'answer': 'James Mangold', 'category': 'Comic Book'}, {'question': "What Oscar-winning epic features such characters as Scarlett O'Hara and Rhett Butler?", 'answer': 'Gone with the Wind', 'category': 'Dramas'}, {'question': 'Which Oscar-winning actor had an early starring role in the 1986 comedy The Money Pit?', 'answer': 'Tom Hanks', 'category': '1980s'}, {'question': 'Marty and Doc travel to what year in the future, featuring flying cars and no lawyers, in Back to the Future Part II?', 'answer': '2015', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who plays Watson to Will Ferrell's Sherlock Holmes in 2018's Holmes & Watson?", 'answer': 'John C. Reilly', 'category': 'Comedies'}, {'question': 'Who directed the 1993 film Army of Darkness?', 'answer': 'Sam Raimi', 'category': 'Horror/Thriller'}, {'question': 'Danny DeVito voices a grumpy yet charming creature who tries to protect his forest from being destroyed in what 2012 Dr. Seuss adaptation?', 'answer': 'The Lorax', 'category': 'Animated'}, {'question': "What filmmaker received Oscar nominations for writing and producing 2019's Marriage Story?", 'answer': 'Noah Baumbach', 'category': 'N/A'}, {'question': 'Cate Blanchett stars alongside Anne Hathaway and Helena Bonham Carter in what heist film?', 'answer': "Ocean's 8", 'category': 'Cate Blanchett'}, {'question': "Cate Blanchett plays what famous Hollywood starlet in Martin Scorsese's The Aviator?", 'answer': 'Katharine Hepburn', 'category': 'Cate Blanchett'}, {'question': 'In Blue Jasmine, Cate Blanchett plays a formerly wealthy woman who is forced to go live with her sister in what western U.S. city?', 'answer': 'San Francisco', 'category': 'Cate Blanchett'}, {'question': 'Cate Blanchett made an uncredited cameo as Janine in which Edgar Wright film?', 'answer': 'Hot Fuzz', 'category': 'Cate Blanchett'}, {'question': "Which famous comedic actor played Doctor Ross in Woody Allen's cult hit Everything You Always Wanted to Know About Sex?", 'answer': 'Gene Wilder', 'category': '1970s'}, {'question': "Who directed 1971's Dirty Harry?", 'answer': 'Don Siegel', 'category': '1970s'}, {'question': 'In Monty Python and the Holy Grail, what does the French taunter say "your father smells" like?', 'answer': 'elderberries', 'category': '1970s'}, {'question': 'Jack Nicholson played a therapist in what 1975 musical based on music by The Who?', 'answer': 'Tommy', 'category': '1970s'}, {'question': 'Who directed The Goonies?', 'answer': 'Richard Donner', 'category': '1980s'}, {'question': "What new wave rock star played Amber's mother Velma Von Tussle in 1988's Hairspray?", 'answer': 'Debbie Harry', 'category': 'Musicals'}, {'question': 'Who made their directorial debut with the film Strictly Ballroom?', 'answer': 'Baz Luhrmann', 'category': 'Dance'}, {'question': 'Office Space and Idiocracy were both directed by which comedic individual?', 'answer': 'Mike Judge', 'category': 'Directors'}, {'question': 'What Tarantino regular plays Sonny Black, a gangster who was promoted to Captain, in Donnie Brasco?', 'answer': 'Michael Madsen', 'category': 'Crime'}, {'question': "Who plays Frank Horrigan, a Secret Service agent who is taunted by calls from a would-be killer, in 1993's In the Line of Fire?", 'answer': 'Clint Eastwood', 'category': 'Action/Adventure'}, {'question': 'Who plays detective Benoit Blanc in the 2019 whodunit Knives Out?', 'answer': 'Daniel Craig', 'category': 'Crime'}, {'question': "Who received a Best Actor nomination for his role as chauffeur Hoke Colburn in 1989's Driving Miss Daisy?", 'answer': 'Morgan Freeman', 'category': 'Dramas'}, {'question': 'What 2011 family film was directed by Martin Scorsese?', 'answer': 'Hugo', 'category': 'Family'}, {'question': 'Who directed the 2006 film Children of Men?', 'answer': 'Alfonso Cuarón', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Dan Aykroyd and John Candy star in what 1988 comedy about two families on vacation at a lake resort in Wisconsin?', 'answer': 'The Great Outdoors', 'category': 'Comedies'}, {'question': 'Who directed the horror film The Lords of Salem?', 'answer': 'Rob Zombie', 'category': 'Horror/Thriller'}, {'question': "Seth Rogen voices Frank, a sausage who sets out to discover and expose the truth of his and his fellow groceries' existence, in what 2016 film?", 'answer': 'Sausage Party', 'category': 'Animated'}, {'question': 'Which actor has played the real-life individuals Dicky Eklund, Michael Burry, and Dick Cheney?', 'answer': 'Christian Bale (in The Fighter, The Big Short, Vice)', 'category': 'N/A'}, {'question': 'In Click, the Newman family dogs always seem to have an obsession with what type of stuffed animal?', 'answer': 'a duck', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Years after a plague kills most of humanity and transforms the rest into monsters, the sole survivor in New York City struggles to find a cure in what 2000s film?', 'answer': 'I Am Legend', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 80s family-fantasy film features the songs "Underground" and "Magic Dance"?', 'answer': 'Labyrinth', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the 2009 family-fantasy film Shorts?', 'answer': 'Robert Rodriguez', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Seymour Krelborn finds a strange and interesting plant that could be the key to his success in what 1986 film?', 'answer': 'Little Shop of Horrors', 'category': '1980s'}, {'question': 'In Weird Science, what classic film do they say that inspires Gary to create a virtual girl on the computer?', 'answer': 'Frankenstein (1931)', 'category': '1980s'}, {'question': 'Who starred in, and directed, the 1987 comedy Hollywood Shuffle, which follows an African-American actor who struggles against stereotypical roles in the film industry?', 'answer': 'Robert Townsend', 'category': '1980s'}, {'question': 'Which actor stars as deep-sea oil driller Bud Brigman in the 1989 James Cameron film The Abyss?', 'answer': 'Ed Harris', 'category': '1980s'}, {'question': 'Hugh Jackman stars opposite which actress, who plays Lady Sarah Ashley, in the adventure film Australia?', 'answer': 'Nicole Kidman', 'category': 'Action/Adventure'}, {'question': 'Which Oscar winner provides the voice of Morticia Addams in the 2019 animated version of The Addams Family?', 'answer': 'Charlize Theron', 'category': 'New Releases'}, {'question': "Who plays Wink Wilkinson, the DJ for WSKID, in 1986's Little Shop of Horrors?", 'answer': 'John Candy', 'category': 'Musicals'}, {'question': "In Game Night, Jason Bateman and Rachel McAdams' characters first meet at what kind of event?", 'answer': 'pub trivia', 'category': 'Comedies'}, {'question': 'In Forrest Gump, Forrest compared himself and Jenny to what two foods?', 'answer': 'peas and carrots', 'category': 'Tom Hanks'}, {'question': 'In what 2010s film does a character named Ig Perrish have powers in which the people around him tell him their darkest secrets and desires?', 'answer': 'Horns', 'category': 'Horror'}, {'question': 'Which Oscar-winning actor stars as Detective Ricardo Tubbs in the 2006 film Miami Vice?', 'answer': 'Jamie Foxx', 'category': 'Action/Adventure'}, {'question': 'Ridley Scott has received three Best Director nominations. Name one of the films he was nominated for.', 'answer': 'Thelma & Louise, Gladiator, Black Hawk Down', 'category': 'Oscars'}, {'question': 'What 2017 drama takes place in the city of Sacramento and stars Saoirse Ronan and Laurie Metcalf?', 'answer': 'Lady Bird', 'category': 'Dramas'}, {'question': 'Jack Lemmon, Tony Curtis, and Marilyn Monroe star in what famous 1959 rom-com?', 'answer': 'Some Like It Hot', 'category': 'Rom-Coms'}, {'question': 'Who directed the 2019 Will Smith sci-fi action film Gemini Man?', 'answer': 'Ang Lee', 'category': 'Fantasy/Sci-Fi'}, {'question': "Angourie Rice plays Ryan Gosling's daughter in what 2016 action comedy?", 'answer': 'The Nice Guys', 'category': 'Comedies'}, {'question': 'Anton Yelchin and Imogen Poots star in what 2016 thriller about a punk rock band who are attacked by neo-Nazis?', 'answer': 'Green Room', 'category': 'Horror/Thriller'}, {'question': 'What Walt Disney animated picture was released in 1998 and featured the voice talents of Pat Morita and Harvey Fierstein?', 'answer': 'Mulan', 'category': 'Animated'}, {'question': 'What 2010 action movie, based on a TV show, features the famous line "I love it when a plan comes together."?', 'answer': 'The A-Team', 'category': 'N/A'}, {'question': 'Which actress starred opposite Sylvester Stallone in the role of Jake Farris in Rhinestone?', 'answer': 'Dolly Parton', 'category': 'Sly & Arnie'}, {'question': "What is the first name of Sylvester Stallone's character in the Expendables movies?", 'answer': 'Barney', 'category': 'Sly & Arnie'}, {'question': 'In The Terminator, what kind of pet did Sarah Connor have?', 'answer': 'an iguana', 'category': 'Sly & Arnie'}, {'question': 'In how many installments of the Expendables franchise has Arnold Schwarzenegger appeared in as "Trench" Mauser?', 'answer': '3 (1, 2, 3)', 'category': 'Sly & Arnie'}, {'question': "What remake stars Denzel Washington, Chris Pratt, Ethan Hawke, and Vincent D'Onofrio?", 'answer': 'The Magnificent Seven', 'category': 'Remakes & Reboots'}, {'question': "Who plays Rita, the former Green Ranger who went rogue and killed her old team, in 2017's Power Rangers?", 'answer': 'Elizabeth Banks', 'category': 'Remakes & Reboots'}, {'question': "Who plays Lindsay Lohan's mother Tess Coleman in 2003's Freaky Friday?", 'answer': 'Jamie Lee Curtis', 'category': 'Remakes & Reboots'}, {'question': "Who directed 2013's Evil Dead?", 'answer': 'Fede Álvarez', 'category': 'Remakes & Reboots'}, {'question': "Who stars alongside John Wayne as the character Ransom Stoddard in 1962's The Man Who Shot Liberty Valance?", 'answer': 'James Stewart', 'category': 'Westerns'}, {'question': 'Who plays the protagonist Jake Sully in Avatar?', 'answer': 'Sam Worthington', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Name two of the five women who have ever been nominated for a Best Director Oscar (as of October 2020).', 'answer': 'Lina Wertmuller (for Seven Beauties), Jane Campion (for The Piano), Sofia Coppola (for Lost in Translation), Kathryn Bigelow (for The Hurt Locker), Greta Gerwig (for Lady Bird)', 'category': 'Oscars'}, {'question': 'Name a year that saw the release of a DCEU, MCU, and Star Wars film.', 'answer': '2016 (with Batman v Superman, Suicide Squad; Captain America: Civil War, Doctor Strange; Rogue One), 2017 (with Wonder Woman, Justice League; Guardians of the Galaxy Vol. 2, Spider-Man: Homecoming, Thor: Ragnarok; The Last Jedi), 2018 (with Aquaman; Black Panther, Avengers: Infinity War, Ant-Man and the Wasp; Solo), 2019 (with Shazam!; Captain Marvel, Avengers: Endgame, Spider-Man: Far From Home; The Rise of Skywalker)', 'category': 'Release Dates'}, {'question': 'In Thor: Ragnarok, Thor tells a childhood story about Loki transforming into what animal so that he could stab Thor?', 'answer': 'a snake', 'category': 'Comic Book'}, {'question': 'In what 2000s film does Angelina Jolie play an assassin named Fox, who works for a secret organization called the Fraternity?', 'answer': 'Wanted', 'category': 'Action/Adventure'}, {'question': "You'll find Tony Montana, played by Al Pacino, in what 1983 film?", 'answer': 'Scarface', 'category': 'Crime'}, {'question': 'Ethan Hawke and Julie Delpy play two characters who fall in love in Vienna after meeting on a train in what 1995 drama?', 'answer': 'Before Sunrise', 'category': 'Dramas'}, {'question': 'In what 90s comedy will you hear a character say, "Oh, and this one time, at band camp"?', 'answer': 'American Pie', 'category': '1990s'}, {'question': 'Which Oscar-winning actress plays Meredith Vickers, director of a mission into space, in the 2012 film Prometheus?', 'answer': 'Charlize Theron', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the 2003 film Head of State, what comedian plays Mays Gilliam, a Washington DC alderman and reluctant Presidential candidate?', 'answer': 'Chris Rock', 'category': 'Comedies'}, {'question': 'Devon Sawa stars as a teenager who has a vision of him and his friends dying in a plane crash in what 2000 horror film?', 'answer': 'Final Destination', 'category': 'Horror/Thriller'}, {'question': 'What famous rock band starred in the classic animated film Yellow Submarine?', 'answer': 'The Beatles', 'category': 'Animated'}, {'question': 'What future Oscar winner plays the main villain of Norman Stansfield in the film Léon: The Professional?', 'answer': 'Gary Oldman', 'category': '1990s'}, {'question': 'In the film Tommy Boy, which comedic actor plays auto parts king Ray Zalinsky?', 'answer': 'Dan Aykroyd', 'category': '1990s'}, {'question': "You'll find the gold Book of Amun-Ra and the black Book of the Dead in this 1999 action-horror film.", 'answer': 'The Mummy', 'category': '1990s'}, {'question': 'You will find the voice talents of Woody Allen, Sylvester Stallone, and Sharon Stone in what 90s animated film?', 'answer': 'Antz', 'category': '1990s'}, {'question': 'What 1995 Jane Austen adaptation stars Emma Thompson and Kate Winslet?', 'answer': 'Sense and Sensibility', 'category': 'Period Pieces & Costume Dramas'}, {'question': 'Who plays Theodore "Laurie" Laurence, the main love interest in 1994\'s Little Women?', 'answer': 'Christian Bale', 'category': 'Period Pieces & Costume Dramas'}, {'question': 'Which superhero actor starred in the Merchant Ivory film The Bostonians, about an unusual love triangle in 19th century Boston?', 'answer': 'Christopher Reeve', 'category': 'Period Pieces & Costume Dramas'}, {'question': 'The film Mary Shelley depicts the writing and publication of what famous novel?', 'answer': 'Frankenstein; or, The Modern Prometheus', 'category': 'Period Pieces & Costume Dramas'}, {'question': 'What Steven Spielberg film features supporting performances from Tom Sizemore, Edward Burns, Giovanni Ribisi, and Vin Diesel?', 'answer': 'Saving Private Ryan', 'category': 'Steven Spielberg'}, {'question': 'Who directed the films Twilight and Miss Bala?', 'answer': 'Catherine Hardwicke', 'category': 'Directors'}, {'question': "Which Oscar-winning composer did the music for 1978's Superman: The Movie?", 'answer': 'John Williams', 'category': 'Scores & Soundtracks'}, {'question': 'In Shaun of the Dead, what is the name of the tavern pub that the characters spend most of their time at?', 'answer': 'the Winchester', 'category': 'Comedies'}, {'question': 'In the 2011 film 50/50, Joseph Gordon-Levitt is diagnosed with cancer. Who plays his artist girlfriend Rachael in the film?', 'answer': 'Bryce Dallas Howard', 'category': 'Dramas'}, {'question': 'David Dobkin directed Jackie Chan and Owen Wilson in what 2003 martial arts action comedy?', 'answer': 'Shanghai Knights', 'category': 'Action/Adventure'}, {'question': 'What Disney live-action film follows three witches who return to Salem, Massachusetts after 300 years to wreak havoc?', 'answer': 'Hocus Pocus', 'category': 'Family'}, {'question': 'In what film do Rachel McAdams and Mark Ruffalo play investigative journalists working for the Boston Globe newspaper?', 'answer': 'Spotlight', 'category': 'Dramas'}, {'question': 'What is the subtitle of the fifth film in the Rambo series, released in 2019?', 'answer': 'Last Blood', 'category': 'New Releases'}, {'question': 'Which actress plays Gwen DeMarco in Galaxy Quest?', 'answer': 'Sigourney Weaver', 'category': 'Fantasy/Sci-Fi'}, {'question': "What actor plays the lead role of Quick in 1989's crime comedy Harlem Nights?", 'answer': 'Eddie Murphy', 'category': 'Comedies'}, {'question': "Who plays the character of Will Randall, a publisher that becomes a werewolf in 1994's Wolf?", 'answer': 'Jack Nicholson', 'category': 'Horror/Thriller'}, {'question': 'What animated film has the tagline "Meet the little voices inside your head."?', 'answer': 'Inside Out', 'category': 'Animated'}, {'question': 'Which actor starred in the 2010s action films Homefront and Wild Card?', 'answer': 'Jason Statham', 'category': 'N/A'}, {'question': "Which actor stars as Sean Porter, a counselor at a juvenile detention center in 2006's Gridiron Gang?", 'answer': 'Dwayne Johnson', 'category': 'Dramas'}, {'question': 'In the film Uncut Gems, as collateral for keeping the precious gem for a day, Kevin Garnett gives Howard what?', 'answer': 'his 2008 NBA Championship ring', 'category': 'Dramas'}, {'question': "Who played the character of Jim Johnson, the man who eventually marries Taraji P. Henson's Katherine, in Hidden Figures?", 'answer': 'Mahershala Ali', 'category': 'Dramas'}, {'question': 'Which Oscar nominee stars in the Kevin Macdonald film Black Sea as the captain of a submarine?', 'answer': 'Jude Law', 'category': 'Dramas'}, {'question': 'Who directed Michael Douglas and Annette Bening in The American President?', 'answer': 'Rob Reiner', 'category': 'Dramas'}, {'question': 'Who directed the Oscar-winning film Life is Beautiful, which was released in 1998?', 'answer': 'Roberto Benigni', 'category': 'Dramas'}, {'question': "In 2014's If I Stay, Chloë Grace Moretz's character is taking lessons to become a professional player of what instrument?", 'answer': 'the cello', 'category': 'Young Adult Adaptations'}, {'question': 'Giancarlo Esposito plays Jorge, one of the leaders of a dangerous band of survivors, in what young adult dystopian franchise of the 2010s?', 'answer': 'The Maze Runner', 'category': 'Young Adult Adaptations'}, {'question': "In The Twilight Saga: Breaking Dawn – Part 2, what is the name of Edward and Bella's daughter?", 'answer': 'Renesmee Cullen', 'category': 'Young Adult Adaptations'}, {'question': 'Mark Wahlberg and which actress play husband and wife in the 2009 film The Lovely Bones?', 'answer': 'Rachel Weisz', 'category': 'Young Adult Adaptations'}, {'question': 'Who appears as Natalie Prior, mother to Tris, in the 2014 film Divergent?', 'answer': 'Ashley Judd', 'category': 'Young Adult Adaptations'}, {'question': 'What 2008 movie stars Saoirse Ronan and Harry Treadaway as two teenagers who try to save their home, which is the source of artificial light from imminent darkness?', 'answer': 'City of Ember', 'category': 'Young Adult Adaptations'}, {'question': 'Which actor plays the villain Prince Nizam of Persia in Prince of Persia: The Sands of Time?', 'answer': 'Ben Kingsley', 'category': 'Video Game'}, {'question': 'Which romance film sees Julia Roberts going to Italy, India, and Indonesia?', 'answer': 'Eat Pray Love', 'category': 'N/A'}, {'question': "Which actor plays Naomi Watts' husband in The Impossible?", 'answer': 'Ewan McGregor', 'category': 'N/A'}, {'question': 'Frank Oz and Jim Henson co-directed what 1982 adventure fantasy?', 'answer': 'The Dark Crystal', 'category': 'N/A'}, {'question': 'Who directed Tom Cruise in Days of Thunder?', 'answer': 'Tony Scott', 'category': 'N/A'}, {'question': "Stephen Sommers's The Mummy Returns was released in what year?", 'answer': '2001', 'category': 'N/A'}, {'question': 'In which Ron Howard film does Matthew McConaughey play Ed Pekurny?', 'answer': 'EDtv', 'category': 'N/A'}, {'question': "Who plays the lead role of Cecilia Kass in 2020's The Invisible Man?", 'answer': 'Elisabeth Moss', 'category': 'N/A'}, {'question': 'Richard Donner directed Mel Gibson and James Garner in what 1994 film?', 'answer': 'Maverick', 'category': 'N/A'}, {'question': "Who directed 1987's Wall Street?", 'answer': 'Oliver Stone', 'category': 'N/A'}, {'question': "In what year did Michael J. Fox's Teen Wolf release?", 'answer': '1985', 'category': 'N/A'}, {'question': 'In which 2014 musical does Meryl play a character simply known as the Witch, opposite characters like Cinderella and the Baker?', 'answer': 'Into the Woods', 'category': 'Meryl Streep'}, {'question': 'Johnny Depp and Angelina Jolie star together in what 2010 mystery thriller?', 'answer': 'The Tourist', 'category': 'Remakes & Reboots'}, {'question': 'What Marvel comic book film features supporting performances by Rebecca Romijn, Ben Foster, and Roy Scheider?', 'answer': 'The Punisher', 'category': 'Comic Book'}, {'question': 'Demián Bichir stars as Detective Goodman in this 2020 horror film.', 'answer': 'The Grudge', 'category': 'New Releases'}, {'question': 'Which actor stars as Gordon Cozier, the leader of the gang of criminals in the 2010s film Takers?', 'answer': 'Idris Elba', 'category': 'Thriller'}, {'question': 'Who stars as Marine sniper Bob Lee Swagger, who is framed for murder, in the 2007 film Shooter?', 'answer': 'Mark Wahlberg', 'category': 'Action/Adventure'}, {'question': 'What 1997 Disney film involves a Golden Retriever dog who plays basketball?', 'answer': 'Air Bud', 'category': 'Family'}, {'question': "What actress stars alongside George Clooney as Karen Sisco in 1998's Out of Sight?", 'answer': 'Jennifer Lopez', 'category': 'Dramas'}, {'question': "You'll find Donald Pleasence, Victor Wong, and Jameson Parker in what 1987 John Carpenter film?", 'answer': 'Prince of Darkness', 'category': '1980s'}, {'question': 'Which Marvel actor plays Mr. Tumnus, the fawn in The Chronicles of Narnia: The Lion, the Witch and the Wardrobe?', 'answer': 'James McAvoy', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what 90s movie does Jim Carrey say, "Why you going to the airport? Flying somewhere?"?', 'answer': 'Dumb and Dumber', 'category': 'Comedies'}, {'question': 'Elisha Cuthbert, Chad Michael Murray, and Paris Hilton star in the 2005 remake of what 1953 horror film of the same name?', 'answer': 'House of Wax', 'category': 'Horror/Thriller'}, {'question': 'The Lost Empire is the subtitle to what 2001 Walt Disney animated film that featured the vocal talents of Michael J. Fox and James Garner?', 'answer': 'Atlantis: The Lost Empire', 'category': 'Animated'}, {'question': 'What 90s film has the line, "hope is a good thing, maybe the best of things, and no good thing ever dies."?', 'answer': 'The Shawshank Redemption', 'category': 'N/A'}, {'question': 'What room does Dick Hallorann tell Danny to stay away from in The Shining?', 'answer': 'Room 237', 'category': 'Stanley Kubrick'}, {'question': 'In The Killing, Johnny Clay is a career criminal that plans to steal from the money-counting room of a racetrack during a featured race. How much money does he estimate will be stolen?', 'answer': '2 million dollars', 'category': 'Stanley Kubrick'}, {'question': "In Paths of Glory, what is the rank of Kirk Douglas' Dax?", 'answer': 'Colonel', 'category': 'Stanley Kubrick'}, {'question': 'What was the last film to give Stanley Kubrick a Best Director Oscar nomination?', 'answer': 'Barry Lyndon', 'category': 'Stanley Kubrick'}, {'question': 'Tyler Perry appears in what thriller from director David Fincher?', 'answer': 'Gone Girl', 'category': 'Tyler Perry'}, {'question': 'Which actress stars as the adult version of Melinda Gayle in the 2018 Tyler Perry film Acrimony, a thriller about a wronged wife?', 'answer': 'Taraji P. Henson', 'category': 'Tyler Perry'}, {'question': 'Tyler Perry directed what 2013 Christmas movie that stars his signature character?', 'answer': 'A Madea Christmas', 'category': 'Tyler Perry'}, {'question': 'Tyler Perry appears as Admiral Richard Barnett in what sci-fi franchise?', 'answer': 'Star Trek (in Star Trek)', 'category': 'Tyler Perry'}, {'question': 'How many installments are there in the Twilight franchise?', 'answer': '5 (Twilight, New Moon, Eclipse, Breaking Dawn – Part 1, Breaking Dawn – Part 2)', 'category': 'Young Adult Adaptations'}, {'question': 'Who directed the film Exodus: Gods and Kings?', 'answer': 'Ridley Scott', 'category': 'N/A'}, {'question': "Which actress plays Eddie Redmayne's wife in The Danish Girl?", 'answer': 'Alicia Vikander', 'category': 'N/A'}, {'question': 'In what year did Mystic River come out?', 'answer': '2003', 'category': 'N/A'}, {'question': 'Who won an Oscar for their performance in The Last King of Scotland?', 'answer': 'Forest Whitaker', 'category': 'N/A'}, {'question': 'Who stars as Rafe McCawley in Pearl Harbor?', 'answer': 'Ben Affleck', 'category': 'N/A'}, {'question': 'Denzel Washington and Viola Davis play husband and wife in what film?', 'answer': 'Fences', 'category': 'N/A'}, {'question': 'Which actor has roles in the films Bugsy, The Love Guru, and Sexy Beast?', 'answer': 'Ben Kingsley', 'category': 'N/A'}, {'question': 'An aspiring stand-up comic falls in love with Emily Gardner in what 2017 rom-com?', 'answer': 'The Big Sick', 'category': 'N/A'}, {'question': 'Who directed the 2012 comedy This Is 40?', 'answer': 'Judd Apatow', 'category': 'N/A'}, {'question': 'How many installments are there in the Lethal Weapon franchise?', 'answer': '4', 'category': 'N/A'}, {'question': "Which actress plays Darcy, Mel Gibson's main love interest in What Women Want?", 'answer': 'Helen Hunt', 'category': 'N/A'}, {'question': 'What is the title of the third film in the Jason Bourne franchise?', 'answer': 'The Bourne Ultimatum', 'category': 'Action/Adventure'}, {'question': 'Who directed the 1980 adventure musical Popeye?', 'answer': 'Robert Altman', 'category': 'Musicals'}, {'question': "Who directed Tom Hanks in 1988's Big?", 'answer': 'Penny Marshall', 'category': 'Tom Hanks'}, {'question': "Jennifer Aniston played Carol Vanstone, interim CEO of Zenotek's Chicago branch, opposite Jason Bateman in this 2016 comedy.", 'answer': 'Office Christmas Party', 'category': 'Comedies'}, {'question': 'Beyond Thunderdome was the third film in the "what" franchise?', 'answer': 'Mad Max', 'category': 'Action/Adventure'}, {'question': 'Which James Bond actor plays King Arthur in the 1995 film First Knight?', 'answer': 'Sean Connery', 'category': '1990s'}, {'question': 'What 1992 film stars Tom Cruise and Nicole Kidman as an Irish couple who immigrate to the U.S. during the 1890s and try to acquire land?', 'answer': 'Far and Away', 'category': 'Dramas'}, {'question': 'Andrew Lincoln holds up cards with love messages on them for what actress to read in Love Actually?', 'answer': 'Keira Knightley', 'category': 'Rom-Coms'}, {'question': 'Frank Marshall directed what 1995 sci-fi adventure film based on a novel by Michael Crichton and starring Laura Linney, Ernie Hudson, and Bruce Campbell?', 'answer': 'Congo', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2019 comedy stars actresses Kaitlyn Dever and Beanie Feldstein as high school students on the eve of their graduation?', 'answer': 'Booksmart', 'category': 'Comedies'}, {'question': 'Tobe Hooper directed this 1982 Steven Spielberg produced horror film starring Craig T. Nelson, Zelda Rubenstein, and JoBeth Williams.', 'answer': 'Poltergeist', 'category': 'Horror/Thriller'}, {'question': 'Ray Romano, Denis Leary, and John Leguizamo voice prehistoric creatures in what 2002 animated film?', 'answer': 'Ice Age', 'category': 'Animated'}, {'question': "In what film will you find Bill Paxton and Sam Elliott playing Kurt Russell's brothers?", 'answer': 'Tombstone', 'category': 'Kurt Russell'}, {'question': 'Kurt Russell plays a character named Ego in what film?', 'answer': 'Guardians of the Galaxy Vol. 2', 'category': 'Kurt Russell'}, {'question': 'In what 80s film did Kurt Russell co-star with Meryl Streep?', 'answer': 'Silkwood', 'category': 'Kurt Russell'}, {'question': 'Who directed Kurt Russell in the 1991 thriller Backdraft?', 'answer': 'Ron Howard', 'category': 'Kurt Russell'}, {'question': 'Kurt Russell plays a reporter in what 1985 film directed by Phillip Borsos?', 'answer': 'The Mean Season', 'category': 'Kurt Russell'}, {'question': 'What famous comedic actor stars opposite Kurt Russell as a character named Jack Dundee in the 1986 football comedy The Best of Times?', 'answer': 'Robin Williams', 'category': 'Kurt Russell'}, {'question': 'Who directed the 2003 sports biopic Seabiscuit?', 'answer': 'Gary Ross', 'category': 'Directors'}, {'question': 'Who directed the family classic Willy Wonka & the Chocolate Factory?', 'answer': 'Mel Stuart', 'category': 'Directors'}, {'question': 'Who directed the 2014 biopic Unbroken?', 'answer': 'Angelina Jolie', 'category': 'Directors'}, {'question': "Who directed 2001's The Fast and the Furious?", 'answer': 'Rob Cohen', 'category': 'Directors'}, {'question': 'Who directed the 2014 Disney adaptation Maleficent?', 'answer': 'Robert Stromberg', 'category': 'Directors'}, {'question': 'Who directed the 1990 classic Home Alone?', 'answer': 'Chris Columbus', 'category': 'Directors'}, {'question': 'Who plays Harry Dunne in Dumb and Dumber?', 'answer': 'Jeff Daniels', 'category': 'Comedies'}, {'question': "In Titanic, who plays Rose's wealthy fiancé Cal Hockley?", 'answer': 'Billy Zane', 'category': 'Leonardo DiCaprio'}, {'question': 'What singer makes a cameo appearance on the plane scene in The Wedding Singer?', 'answer': 'Billy Idol', 'category': '1990s'}, {'question': "Who plays Naomi, the second wife of Leonardo DiCaprio's character in The Wolf of Wall Street?", 'answer': 'Margot Robbie', 'category': 'Martin Scorsese'}, {'question': 'Which 2020 film stars Issa Rae and Lakeith Stanfield?', 'answer': 'The Photograph', 'category': 'New Releases'}, {'question': "Pablo Schreiber, O'Shea Jackson Jr., 50 Cent, and Cooper Andrews have roles in what recent crime film?", 'answer': 'Den of Thieves', 'category': 'Crime'}, {'question': 'Who plays Marko Ramius, the Commanding Officer of Red October, in The Hunt for Red October?', 'answer': 'Sean Connery', 'category': 'Action/Adventure'}, {'question': 'Charlize Theron, Mark Wahlberg, and Edward Norton co-star in what 2003 heist movie?', 'answer': 'The Italian Job', 'category': 'Crime'}, {'question': "What 1989 Edward Zwick film is about the 54th Massachusetts Infantry Regiment, the Union Army's first African-American regiment in the American Civil War?", 'answer': 'Glory', 'category': 'Dramas'}, {'question': "Who stars as a nomad simply known as the Postman in 1997's The Postman?", 'answer': 'Kevin Costner', 'category': '1990s'}, {'question': 'James Bobin directed what 2016 Disney fantasy sequel starring Johnny Depp and Sacha Baron Cohen?', 'answer': 'Alice Through the Looking Glass', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2005 comedy co-stars Jim Carrey and Téa Leoni as a rich couple who turn to crime after they lose all their money?', 'answer': 'Fun with Dick and Jane', 'category': 'Comedies'}, {'question': 'Who plays the lead role of Lieutenant Mike Harrigan, who is attempting to solve a strange string of murders that are mounting in Los Angeles, in Predator 2?', 'answer': 'Danny Glover', 'category': 'Horror/Thriller'}, {'question': 'Chris Rock voices an overzealous white blood cell with little respect for authority in what 2001 animated/live-action hybrid film from the Farrelly brothers?', 'answer': 'Osmosis Jones', 'category': 'Animated'}, {'question': 'What 2008 film stars Seth Rogen and James Franco, who are on the run after witnessing a murder?', 'answer': 'Pineapple Express', 'category': 'N/A'}, {'question': "Who voices Jackson Storm, McQueen's new racing rival, in Cars 3?", 'answer': 'Armie Hammer', 'category': 'Pixar'}, {'question': "In The Incredibles, Bob Parr's boss mentions that a company is like an enormous what?", 'answer': 'a clock', 'category': 'Pixar'}, {'question': 'Which Pixar film involves a young boy named Russell, who is a wilderness scout trying to earn an "Assisting the Elderly" badge?', 'answer': 'Up', 'category': 'Pixar'}, {'question': 'In The Good Dinosaur, what does Arlo name the human boy that he finds?', 'answer': 'Spot', 'category': 'Pixar'}, {'question': 'Willem Dafoe voices the character of Gill in what 2003 Pixar film?', 'answer': 'Finding Nemo', 'category': 'Pixar'}, {'question': 'Randy Newman performs the song "The Time of Your Life" in what 90s Pixar film?', 'answer': "A Bug's Life", 'category': 'Pixar'}, {'question': 'You can find Tevye, a poor Jewish milkman living in the village of Anatevka, in what 1971 musical?', 'answer': 'Fiddler on the Roof', 'category': 'Musicals'}, {'question': "Who directed Hugh Jackman as P. T. Barnum in 2017's The Greatest Showman?", 'answer': 'Michael Gracey', 'category': 'Musicals'}, {'question': 'In The Rocky Horror Picture Show, who played the "hero" Brad Majors?', 'answer': 'Barry Bostwick', 'category': 'Musicals'}, {'question': 'Who played Willy Wonka in the original Willy Wonka & the Chocolate Factory?', 'answer': 'Gene Wilder', 'category': 'Musicals'}, {'question': "What was the name of Robert Preston's character in the 1962 film The Music Man?", 'answer': 'Harold Hill', 'category': 'Musicals'}, {'question': 'You can find the characters of Rizzo, Frenchy, Kenickie, and Sandy in what 1978 film?', 'answer': 'Grease', 'category': 'Musicals'}, {'question': 'Who composed the scores for The Lion King and Interstellar?', 'answer': 'Hans Zimmer', 'category': 'Scores & Soundtracks'}, {'question': 'Julianne Hough and Diego Boneta star in this 2012 musical.', 'answer': 'Rock of Ages', 'category': 'Musicals'}, {'question': 'Martin Scorsese has directed two remakes. Name both.', 'answer': 'Cape Fear, The Departed', 'category': 'Martin Scorsese'}, {'question': 'In which of the Daniel Craig James Bond films does 007 first face off against the famous villain Blofeld?', 'answer': 'Spectre', 'category': 'Action/Adventure'}, {'question': 'Which actress appeared in the following films: Selma, A Wrinkle In Time, and The Color Purple?', 'answer': 'Oprah Winfrey', 'category': 'Famous Actors & Actresses'}, {'question': 'Which MCU actor stars as real-life defense attorney Bryan Stevenson in the 2019 drama Just Mercy?', 'answer': 'Michael B. Jordan', 'category': 'Dramas'}, {'question': "What is the name of the 1984 crime epic starring Robert De Niro that was also Sergio Leone's final film as director?", 'answer': 'Once Upon a Time in America', 'category': 'Crime'}, {'question': "You'll find the Mariner, a lone drifter in a world where every continent on Earth is now underwater, in what 1995 post-apocalyptic adventure film?", 'answer': 'Waterworld', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who wrote, starred in, and directed 1981's History of the World, Part I?", 'answer': 'Mel Brooks', 'category': 'Comedies'}, {'question': "D. J. Caruso directed Shia LaBeouf and Michelle Monaghan in what 2008 espionage action-thriller about a rogue supercomputer trying to take out America's executive branch?", 'answer': 'Eagle Eye', 'category': 'Horror/Thriller'}, {'question': 'What 2011 animated film reunites Pirates of the Caribbean director Gore Verbinski with Johnny Depp?', 'answer': 'Rango', 'category': 'Animated'}, {'question': "Who plays the FBI agent trying to bring down Jordan Belfort in 2013's The Wolf of Wall Street?", 'answer': 'Kyle Chandler', 'category': 'N/A'}, {'question': "In Sister Act, Deloris goes into witness protection at Saint Katherine's Parish, which is located in what west coast city?", 'answer': 'San Francisco', 'category': 'Comedies'}, {'question': 'Who starred opposite Anne Hathaway as Penny Rust in the 2019 comedy The Hustle, about two con women?', 'answer': 'Rebel Wilson', 'category': 'Comedies'}, {'question': 'In Undercover Brother, due to affirmative action, the secret organization B.R.O.T.H.E.R.H.O.O.D. brought in a white man named Lance as an intern. Who played Lance?', 'answer': 'Neil Patrick Harris', 'category': 'Comedies'}, {'question': 'Which actor stars as Popeye in the 1980 film Popeye?', 'answer': 'Robin Williams', 'category': 'Comedies'}, {'question': 'In Being John Malkovich, which famous actor is good friends with John Malkovich and is seen throughout the film?', 'answer': 'Charlie Sheen', 'category': 'Comedies'}, {'question': 'What 90s teen comedy is known for the line "As if."?', 'answer': 'Clueless', 'category': 'Comedies'}, {'question': 'Which singer has the role of Nurse McFadden that is kind to Precious throughout the film Precious?', 'answer': 'Lenny Kravitz', 'category': 'Festival Darlings'}, {'question': 'Which actress plays Stephanie Ramzinski, the estranged daughter of Randy "The Ram" Robinson, in The Wrestler?', 'answer': 'Evan Rachel Wood', 'category': 'Festival Darlings'}, {'question': 'Which 1993 awards favorite film tells the story of 22 principal characters, and included actors such as Andie MacDowell, Robert Downey Jr., and Huey Lewis, within 9 short stories?', 'answer': 'Short Cuts', 'category': 'Festival Darlings'}, {'question': 'Who stars as Oscar Grant III in Fruitvale Station?', 'answer': 'Michael B. Jordan', 'category': 'Festival Darlings'}, {'question': 'Who directed Javier Bardem and Johnny Depp in the film Before Night Falls?', 'answer': 'Julian Schnabel', 'category': 'Festival Darlings'}, {'question': "Who plays the female version of the extraterrestrial who preys on men in Scotland in 2014's Under the Skin?", 'answer': 'Scarlett Johansson', 'category': 'Festival Darlings'}, {'question': 'Which actor has roles in the following 90s films: The Insider, The Quick and the Dead, and L.A. Confidential?', 'answer': 'Russell Crowe', 'category': '1990s'}, {'question': 'Who directed the classic films Mr. Deeds Goes to Town and Mr. Smith Goes to Washington?', 'answer': 'Frank Capra', 'category': 'Directors'}, {'question': "Who plays Warden Drumgoole in 1989's Lock Up?", 'answer': 'Donald Sutherland', 'category': 'Dramas'}, {'question': "What action franchise features the characters Letty Ortiz, Roman Pearce, Han Lue, and Brian O'Conner?", 'answer': 'Fast & Furious', 'category': 'Action/Adventure'}, {'question': 'Who won a Best Director Oscar for the 2012 film Life of Pi?', 'answer': 'Ang Lee', 'category': 'Directors'}, {'question': "Which actress stars as a woman dealing with her son's drug addiction in the 2018 film Ben Is Back?", 'answer': 'Julia Roberts', 'category': 'Dramas'}, {'question': 'What 2005 film based on a graphic novel has such characters as John Hartigan, Marv, and the Yellow Bastard?', 'answer': 'Sin City', 'category': 'Comic Book'}, {'question': 'James Marsden plays a prince named Edward, and Susan Sarandon plays an evil queen named Narissa, in what 2007 Disney fantasy film?', 'answer': 'Enchanted', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor starred in the comedies Drillbit Taylor and Hall Pass?', 'answer': 'Owen Wilson', 'category': 'Comedies'}, {'question': 'Which actress plays hacker Lisbeth Salander in the 2011 film The Girl with the Dragon Tattoo?', 'answer': 'Rooney Mara', 'category': 'Horror/Thriller'}, {'question': 'Jason Bateman, Idris Elba, and Shakira lent their voices to what 2016 Disney animated film?', 'answer': 'Zootopia', 'category': 'Animated'}, {'question': 'Stephen Gaghan directed what 2020 film in which a physician treks to find a legendary island with a young apprentice and a crew of strange pets?', 'answer': 'Dolittle', 'category': 'N/A'}, {'question': 'David Denman plays Kyle Breyer, the adoptive father of an alien child, in what 2019 film?', 'answer': 'Brightburn', 'category': 'Horror'}, {'question': "You'll find the character known as Evil Ed in what 80s horror film?", 'answer': 'Fright Night', 'category': 'Horror'}, {'question': 'Who directed the 1963 horror classic The Haunting?', 'answer': 'Robert Wise', 'category': 'Horror'}, {'question': 'What 1973 horror film received 10 Oscar nominations including Best Picture?', 'answer': 'The Exorcist', 'category': 'Horror'}, {'question': 'Who played "Mighty" Mack McTeer alongside Dan Aykroyd\'s Elwood Blues in Blues Brothers 2000?', 'answer': 'John Goodman', 'category': 'SNL'}, {'question': "What actress plays Honey Hornée in Wayne's World 2?", 'answer': 'Kim Basinger', 'category': 'SNL'}, {'question': 'In what SNL film does Julia Sweeney play a character whose gender cannot be determined by others?', 'answer': "It's Pat", 'category': 'SNL'}, {'question': 'Which SNL-based film primarily takes place at St. Monica’s Catholic High School?', 'answer': 'Superstar', 'category': 'SNL'}, {'question': 'Which 2007 dance musical has performances by Zac Efron, Christopher Walken, Amanda Bynes, and John Travolta?', 'answer': 'Hairspray', 'category': 'Dance'}, {'question': 'You will find the elite tech-driven team known as AMMO in what 2020 action film?', 'answer': 'Bad Boys for Life', 'category': 'New Releases'}, {'question': 'Who directed X-Men: Dark Phoenix?', 'answer': 'Simon Kinberg', 'category': 'Comic Book'}, {'question': "Who plays matron Mama Morton, the corrupt but nurturing matron of the Cook County Jail, in 2002's Chicago?", 'answer': 'Queen Latifah', 'category': 'Musicals'}, {'question': 'What 2014 action thriller starring Keanu Reeves has the tagline "Don\'t set him off"?', 'answer': 'John Wick', 'category': 'Action/Adventure'}, {'question': "Who plays Ryan Gosling's love interest Hannah in Crazy, Stupid, Love.?", 'answer': 'Emma Stone', 'category': 'Rom-Coms'}, {'question': "Who stars as Tonya Harding in 2018's I, Tonya?", 'answer': 'Margot Robbie', 'category': 'Dramas'}, {'question': 'Who plays the main love interest Theodore "Laurie" Laurence in the 2019 film Little Women?', 'answer': 'Timothée Chalamet', 'category': 'New Releases'}, {'question': 'Who stars as a robotic boy named David in the Spielberg film A.I. Artificial Intelligence?', 'answer': 'Haley Joel Osment', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1990s teen comedy has supporting performances by Brittany Murphy, Stacey Dash, and Breckin Meyer?', 'answer': 'Clueless', 'category': 'Comedies'}, {'question': 'What 2014 thriller was directed by Dan Gilroy about an ambitious sociopath named Lou Bloom?', 'answer': 'Nightcrawler', 'category': 'Horror/Thriller'}, {'question': 'Which classic Disney film has the song "I\'ve Got No Strings"?', 'answer': 'Pinocchio', 'category': 'Animated'}, {'question': 'Jerry Zucker directed what 1990 romance film that featured supporting turns from Whoopi Goldberg and Tony Goldwyn?', 'answer': 'Ghost', 'category': '1990s'}, {'question': "Who stars as Lester's materialistic wife Carolyn in the film American Beauty?", 'answer': 'Annette Bening', 'category': '1990s'}, {'question': 'Drew Barrymore stars as a Renaissance-era Cinderella in what 1998 film?', 'answer': 'Ever After', 'category': '1990s'}, {'question': 'Bill Paxton plays a sleazy car salesman named Simon in what 90s film from director James Cameron?', 'answer': 'True Lies', 'category': '1990s'}, {'question': 'Which actor plays Sheriff Eben Oleson, who is trapped in an Alaskan town, in the film 30 Days of Night?', 'answer': 'Josh Hartnett', 'category': 'Innergeekdom'}, {'question': "What was the first film in the MCU to feature Jeremy Renner's Clint Barton?", 'answer': 'Thor', 'category': 'Innergeekdom'}, {'question': 'Which graphic novel adaptation stars Mickey Rourke, Jessica Alba, Josh Brolin, and Eva Green?', 'answer': 'Sin City: A Dame to Kill For', 'category': 'Innergeekdom'}, {'question': 'Who plays the role of Amanda Waller in Suicide Squad?', 'answer': 'Viola Davis', 'category': 'Innergeekdom'}, {'question': 'Which actor plays basketball coach Jack Cunningham in the film The Way Back?', 'answer': 'Ben Affleck', 'category': 'New Releases'}, {'question': 'Who played the villain in the 1998 box office flop The Avengers?', 'answer': 'Sean Connery', 'category': 'Spy'}, {'question': 'In the film Jerry Maguire, what is the one thing that Jerry takes from the office after being fired from the agency over his mission statement?', 'answer': 'a goldfish', 'category': 'Tom Cruise'}, {'question': "Who plays Lorraine Broughton, a top-level MI6 field agent, in 2017's Atomic Blonde?", 'answer': 'Charlize Theron', 'category': 'Action/Adventure'}, {'question': 'Who directed Talladega Nights: The Ballad of Ricky Bobby?', 'answer': 'Adam McKay', 'category': 'Directors'}, {'question': 'What Oscar-winning biopic focuses on real-life mathematician John Nash and his battle with mental illness?', 'answer': 'A Beautiful Mind', 'category': 'Dramas'}, {'question': 'Which Quentin Tarantino film has the line, "Anybody accidentally kills anybody in a fight, they go to jail. It\'s called manslaughter."?', 'answer': 'Once Upon a Time in Hollywood', 'category': 'Quotes'}, {'question': "Who plays Detective Del Spooner, who doesn't trust robots, in the sci-fi action film I, Robot?", 'answer': 'Will Smith', 'category': 'Fantasy/Sci-Fi'}, {'question': "Amy Schumer hits her head and believes she's drop dead gorgeous in what 2018 film?", 'answer': 'I Feel Pretty', 'category': 'Comedies'}, {'question': "Who plays Abraham Van Helsing in Bram Stoker's Dracula?", 'answer': 'Anthony Hopkins', 'category': 'Horror/Thriller'}, {'question': 'What 1986 animated film follows the Mousekewitz family, a Russian-Jewish family of mice, as they immigrate to America?', 'answer': 'An American Tail', 'category': 'Animated'}, {'question': 'Charlize Theron plays serial killer Aileen Wuornos in what film?', 'answer': 'Monster', 'category': 'N/A'}, {'question': 'In Firewall, which actor stars as Bill Cox, a businessman that holds Jack and his family hostage?', 'answer': 'Paul Bettany', 'category': 'Harrison Ford'}, {'question': 'Harrison Ford plays Colonel Hyrum Graff in this science-fiction action film in which he prepares his soldiers for an alien invasion.', 'answer': "Ender's Game", 'category': 'Harrison Ford'}, {'question': 'Who directed Blade Runner 2049?', 'answer': 'Denis Villeneuve', 'category': 'Harrison Ford'}, {'question': 'What instrument did Claire Spencer play before she retired in What Lies Beneath?', 'answer': 'the cello', 'category': 'Harrison Ford'}, {'question': 'Harrison Ford appears as a character named Mack Tannen in what 2013 Will Ferrell film?', 'answer': 'Anchorman 2: The Legend Continues', 'category': 'Harrison Ford'}, {'question': 'Who directed Harrison Ford in the films Sabrina and Random Hearts?', 'answer': 'Sydney Pollack', 'category': 'Harrison Ford'}, {'question': "Which actor stars as the lead in 1954's Dial M for Murder as Tony Wendice?", 'answer': 'Ray Milland', 'category': 'Alfred Hitchcock'}, {'question': 'Cary Grant is mistaken for a spy in which Alfred Hitchcock classic?', 'answer': 'North by Northwest', 'category': 'Alfred Hitchcock'}, {'question': "Who plays Madeleine, the woman that James Stewart's character becomes obsessed with, in the Hitchcock classic Vertigo?", 'answer': 'Kim Novak', 'category': 'Alfred Hitchcock'}, {'question': "Which famous actor starred as physician Ben McKenna in 1956's The Man Who Knew Too Much?", 'answer': 'James Stewart', 'category': 'Alfred Hitchcock'}, {'question': 'Which 1940 Hitchcock film won Best Picture?', 'answer': 'Rebecca', 'category': 'Alfred Hitchcock'}, {'question': 'In the 1938 film The Lady Vanishes, an elderly woman disappears while traveling on what mode of transportation?', 'answer': 'a train', 'category': 'Alfred Hitchcock'}, {'question': "What actress plays Sarah Ashburn alongside Melissa McCarthy's Shannon Mullins in the 2013 action comedy The Heat?", 'answer': 'Sandra Bullock', 'category': 'Action/Adventure'}, {'question': 'What 1985 movie has the line, "Last night, Darth Vader came down from planet Vulcan, and told me that if I didn\'t take Lorraine out, that he\'d melt my brain."?', 'answer': 'Back to the Future', 'category': '1980s'}, {'question': 'Which actor plays Henry Hill in Goodfellas?', 'answer': 'Ray Liotta', 'category': 'Dramas'}, {'question': "What actress plays the role of scientist Maya Hansen, who Tony has a fling with on New Year's Eve 1999, in Iron Man 3?", 'answer': 'Rebecca Hall', 'category': 'Comic Book'}, {'question': 'What 1999 sci-fi comedy stars Will Smith, Kevin Kline, and Salma Hayek?', 'answer': 'Wild Wild West', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor starred in the 80s comedies All of Me, Roxanne, and Dirty Rotten Scoundrels?', 'answer': 'Steve Martin', 'category': 'Comedies'}, {'question': "Who directed 2017's Alien: Covenant?", 'answer': 'Ridley Scott', 'category': 'Horror/Thriller'}, {'question': 'Which 2010s Disney animated film features songs that were written by Lin-Manuel Miranda?', 'answer': 'Moana', 'category': 'Animated'}, {'question': "Who directed the 1989 rom-com Look Who's Talking?", 'answer': 'Amy Heckerling', 'category': '1980s'}, {'question': "Which actress from TV's Cheers stars in the 80s comedies Night Shift and Troop Beverly Hills?", 'answer': 'Shelley Long', 'category': '1980s'}, {'question': 'Which actor learns to take care of his children after he loses his job in Mr. Mom?', 'answer': 'Michael Keaton', 'category': '1980s'}, {'question': 'Name the 80s comedy by the synopsis: A test pilot is miniaturized in a secret experiment and accidentally injected into a hapless store clerk.', 'answer': 'Innerspace', 'category': '1980s'}, {'question': 'This actress won an Academy Award for her portrayal of widow Edna Spalding in Places in the Heart.', 'answer': 'Sally Field', 'category': '1980s'}, {'question': 'What 1985 whodunnit comedy stars Tim Curry, Christopher Lloyd, Madeline Kahn, and Michael McKean?', 'answer': 'Clue', 'category': '1980s'}, {'question': 'In X-Men: Days of Future Past, who plays Bolivar Trask, a military scientist whom Mystique assassinated in the original 1973?', 'answer': 'Peter Dinklage', 'category': 'Innergeekdom'}, {'question': "In Harry Potter and the Chamber of Secrets, what is the name of Argus Filch's cat?", 'answer': 'Mrs. Norris', 'category': 'Innergeekdom'}, {'question': 'In Thor, what is the name of the enchanted Asgardian automaton sent to kill Thor?', 'answer': 'the Destroyer', 'category': 'Innergeekdom'}, {'question': 'Billy Dee Williams has portrayed Harvey Dent / Two-Face how many times in both live-action and animation?', 'answer': "2 (in 1989's Batman, The Lego Batman Movie)", 'category': 'Innergeekdom'}, {'question': 'Jurnee Smollett-Bell plays which character in Birds of Prey?', 'answer': 'Dinah Lance / Black Canary', 'category': 'Innergeekdom'}, {'question': 'In Dredd, Judge Dredd and his recruit respond to a call from a slum tower block where the majority of the film takes place. What is the name of the building?', 'answer': 'Peach Trees', 'category': 'Innergeekdom'}, {'question': 'How many films in the Planet of the Apes franchise did Matt Reeves direct?', 'answer': '2 (Dawn of the Planet of the Apes, War for the Planet of the Apes)', 'category': 'Directors'}, {'question': "Who plays mysterious government official Matt Graver in 2015's Sicario?", 'answer': 'Josh Brolin', 'category': 'Thriller'}, {'question': "What late actor co-starred as Matt Damon's younger brother in 2005's The Brothers Grimm?", 'answer': 'Heath Ledger', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In Borat, what famous celebrity is the title character in love with and even tries to kidnap?', 'answer': 'Pamela Anderson', 'category': 'Comedies'}, {'question': "In what 2019 film will you find a character known as Medusa, a legendary con artist, who scams the film's leads?", 'answer': 'The Hustle', 'category': 'New Releases'}, {'question': 'Which actress plays a woman who gets mixed up with a disgraced spy in the 2010 film Knight and Day?', 'answer': 'Cameron Diaz', 'category': 'Action/Adventure'}, {'question': 'Who stars as the lead character Hawkeye in the 1992 historical drama The Last of the Mohicans?', 'answer': 'Daniel Day-Lewis', 'category': '1990s'}, {'question': 'Which actor stars as a lawyer who suffers a brain injury in the 1991 film Regarding Henry?', 'answer': 'Harrison Ford', 'category': 'Dramas'}, {'question': 'Who directed the film The Darjeeling Limited?', 'answer': 'Wes Anderson', 'category': 'Directors'}, {'question': 'In what fantasy film does a corporate lawyer named Peter Banning learn that he is actually the famous character Peter Pan?', 'answer': 'Hook', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which 80s spoof comedy is known for the line, "Looks like I picked the wrong week to quit sniffing glue."?', 'answer': 'Airplane!', 'category': 'Comedies'}, {'question': 'Eli Roth directed this 2006 film in which three backpackers head to an Eastern European city to party, with no idea of the hell that awaits them.', 'answer': 'Hostel', 'category': 'Horror/Thriller'}, {'question': 'Name the 2009 American stop-motion animated dark fantasy film directed by Henry Selick, based on the 2002 novella of the same name by Neil Gaiman, and featuring the voice talents of Dakota Fanning, Teri Hatcher, and Ian McShane.', 'answer': 'Coraline', 'category': 'Animated'}, {'question': 'Who plays Jacob Black in the Twilight series?', 'answer': 'Taylor Lautner', 'category': 'N/A'}, {'question': 'Spike Lee received his first Oscar nomination in which category?', 'answer': 'Best Original Screenplay (for Do the Right Thing)', 'category': 'Spike Lee'}, {'question': 'Which Spike Lee film stars Damon Wayans, Savion Glover, and Jada Pinkett Smith?', 'answer': 'Bamboozled', 'category': 'Spike Lee'}, {'question': 'In the Spike Lee film Chi-Raq, the film revolves around two warring gangs: the Spartans and the what?', 'answer': 'the Trojans', 'category': 'Spike Lee'}, {'question': "In He Got Game, Denzel Washington's character is serving time in prison for what crime?", 'answer': 'the murder of his wife', 'category': 'Spike Lee'}, {'question': 'What state is the primary setting for the 2018 film BlacKkKlansman?', 'answer': 'Colorado', 'category': 'Spike Lee'}, {'question': "Who plays Sal, owner of Sal's Famous Pizzeria, in the film Do the Right Thing?", 'answer': 'Danny Aiello', 'category': 'Spike Lee'}, {'question': 'In what animated film from director Wes Anderson do Meryl Streep and George Clooney portray a married couple?', 'answer': 'Fantastic Mr. Fox', 'category': 'Meryl Streep'}, {'question': 'Who directed Meryl Streep in the 2008 film Doubt?', 'answer': 'John Patrick Shanley', 'category': 'Meryl Streep'}, {'question': 'What is the only film in which Meryl Streep has returned to reprise her role for a sequel?', 'answer': 'Mamma Mia! Here We Go Again', 'category': 'Meryl Streep'}, {'question': 'For which Spielberg film did Meryl get her most recent nomination for Best Actress?', 'answer': 'The Post', 'category': 'Meryl Streep'}, {'question': 'Meryl Streep plays a shady U.S. senator by the name of Eleanor Shaw in what 2000s film?', 'answer': 'The Manchurian Candidate', 'category': 'Meryl Streep'}, {'question': 'Meryl Streep and Alec Baldwin play an ex-wife and ex-husband in this 2009 rom-com.', 'answer': "It's Complicated", 'category': 'Meryl Streep'}, {'question': 'Who plays Edward "Brill" Lyle, a former communications expert who helps Will\'s Robert Dean untangle a government cover-up in Enemy of the State?', 'answer': 'Gene Hackman', 'category': 'Will Smith'}, {'question': 'What classic Disney film is a series of animated scenes set to famous classical music pieces such as The Nutcracker Suite?', 'answer': 'Fantasia', 'category': 'Disney'}, {'question': "Who co-stars with Leonardo DiCaprio and Russell Crowe as Jordanian security official Hani Salaam in 2008's Body of Lies?", 'answer': 'Mark Strong', 'category': 'Spy'}, {'question': 'What film, based on a 1963 book, chronicles the bribery scandal of the 1919 Chicago White Sox?', 'answer': 'Eight Men Out', 'category': 'Sports'}, {'question': "Who plays Nora Christie in 1992's Far and Away?", 'answer': 'Barbara Babcock', 'category': 'Tom Cruise'}, {'question': 'Who plays Mikaela Banes in the Transformers franchise?', 'answer': 'Megan Fox (in Transformers, Revenge of the Fallen)', 'category': 'Action/Adventure'}, {'question': 'Adam Sandler and Emily Watson play romantic interests in what 2002 romantic dramedy?', 'answer': 'Punch-Drunk Love', 'category': 'Rom-Coms'}, {'question': "Which actor co-stars with Robert Redford, as reporter Carl Bernstein, in the 1976 film All the President's Men?", 'answer': 'Dustin Hoffman', 'category': 'Dramas'}, {'question': 'What 90s spoof comedy had a sequel with the subtitle Part Deux?', 'answer': 'Hot Shots!', 'category': '1990s'}, {'question': 'Chris Columbus directed Adam Sandler in what 2015 film?', 'answer': 'Pixels', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays jewel thief Miles Logan, who hides a diamond in a building that would become a police station, in the 1999 film Blue Streak?', 'answer': 'Martin Lawrence', 'category': 'Comedies'}, {'question': 'Frank Marshall directed Jeff Daniels and John Goodman in what 1990 dark comedic horror film?', 'answer': 'Arachnophobia', 'category': 'Horror/Thriller'}, {'question': 'Who voices Gru in the Despicable Me franchise?', 'answer': 'Steve Carell', 'category': 'Animated'}, {'question': 'What 1980s horror film has the tagline "If Nancy doesn\'t wake up screaming, she won\'t wake up at all."?', 'answer': 'A Nightmare on Elm Street', 'category': 'N/A'}, {'question': 'What classic comedy was the feature film debut of Eddie Murphy?', 'answer': '48 Hrs.', 'category': 'Eddie Murphy'}, {'question': 'Who directed Eddie Murphy and Richard Pryor in the film Harlem Nights?', 'answer': 'Eddie Murphy', 'category': 'Eddie Murphy'}, {'question': "Martin Brest directed Eddie Murphy in what 1984 comedy where he is investigating his friend's murder in California?", 'answer': 'Beverly Hills Cop', 'category': 'Eddie Murphy'}, {'question': "Which actress stars as Special Agent Rachel Wright, who gets placed under arrest by Eddie Murphy and Owen Wilson's characters, in I Spy?", 'answer': 'Famke Janssen', 'category': 'Eddie Murphy'}, {'question': 'Eddie Murphy has received one Oscar nomination, for which film?', 'answer': 'Dreamgirls', 'category': 'Eddie Murphy'}, {'question': 'Which actor plays Phil Ryerson, one of three men who run a daycare known as Daddy Day Care, in the film Daddy Day Care?', 'answer': 'Jeff Garlin', 'category': 'Eddie Murphy'}, {'question': 'What actor stars as Pierre Bezukhov opposite Audrey in War and Peace?', 'answer': 'Henry Fonda', 'category': 'Audrey Hepburn'}, {'question': 'Which 1980s film tells the story of three private detectives investigating two beautiful women for infidelity?', 'answer': 'They All Laughed', 'category': 'Audrey Hepburn'}, {'question': 'In which Audrey Hepburn film does her character attend Le Cordon Bleu in Paris?', 'answer': 'Sabrina', 'category': 'Audrey Hepburn'}, {'question': 'Including her win, Audrey Hepburn received how many total Oscar nominations, all in the category of Best Actress?', 'answer': "5 (for Roman Holiday, Sabrina, The Nun's Story, Breakfast at Tiffany's, Wait Until Dark)", 'category': 'Audrey Hepburn'}, {'question': "In Funny Face, Audrey Hepburn's character works at what type of establishment, before a fashion photographer discovers her?", 'answer': 'a book store', 'category': 'Audrey Hepburn'}, {'question': 'Composer John Williams, credited under the name Johnny Williams, did the music for what 1966 Audrey Hepburn film?', 'answer': 'How to Steal a Million', 'category': 'Audrey Hepburn'}, {'question': 'Who plays Albert Brennaman, who is smitten with a client of his investment firm, in Hitch?', 'answer': 'Kevin James', 'category': 'Will Smith'}, {'question': 'Who plays Derek Reynolds, who decides to help Sarah develop her dancing skills, in Save the Last Dance?', 'answer': 'Sean Patrick Thomas', 'category': 'Dance'}, {'question': 'In Young Guns, who plays benevolent ranch owner John Tunstall, who hires young gunmen from the road in order to civilize them?', 'answer': 'Terence Stamp', 'category': '1980s'}, {'question': "Who plays Steven Freeling, a man whose family is being haunted by malicious spirits, in 1982's Poltergeist?", 'answer': 'Craig T. Nelson', 'category': 'Horror'}, {'question': 'Holly Hunter was nominated for two Oscars for films released in 1993. One was The Piano. What was the other?', 'answer': 'The Firm', 'category': 'Oscars'}, {'question': 'Mary Elizabeth Mastrantonio plays Maid Marian, and Christian Slater plays Will Scarlett, in which film based on the Robin Hood legend?', 'answer': 'Robin Hood: Prince of Thieves', 'category': 'Action/Adventure'}, {'question': "What color of slipper does Dorothy get gifted by Glinda the Good Witch of the North in 1939's The Wizard of Oz?", 'answer': 'ruby', 'category': 'Family'}, {'question': 'What recent film stars Willem Dafoe and Robert Pattinson as two men who try to maintain their sanity while living on a remote island during the 1890s?', 'answer': 'The Lighthouse', 'category': 'Dramas'}, {'question': 'What 2019 movie was directed by Roland Emmerich, stars Ed Skrein, and depicts a famous World War II battle?', 'answer': 'Midway', 'category': 'New Releases'}, {'question': 'Which 2005 sci-fi comedy, based on a novel by Douglas Adams, stars Martin Freeman, Sam Rockwell, and Zooey Deschanel?', 'answer': "The Hitchhiker's Guide to the Galaxy", 'category': 'Fantasy/Sci-Fi'}, {'question': "The hip hop duo Kid 'n Play star in what 1990 comedy that also features Martin Lawrence?", 'answer': 'House Party', 'category': 'Comedies'}, {'question': 'Who directed the first installment of the Saw franchise?', 'answer': 'James Wan', 'category': 'Horror/Thriller'}, {'question': 'A group of penguins named Skipper, Kowalski, Rico, and Private are the leads in a 2014 spin-off of what animated franchise?', 'answer': 'Madagascar', 'category': 'Animated'}, {'question': 'Which action franchise features such actors as Angela Bassett, Jeremy Renner, and Ving Rhames?', 'answer': 'Mission: Impossible', 'category': 'N/A'}, {'question': "What is Nicole Barber's profession in the awards favorite Marriage Story?", 'answer': 'an actress', 'category': 'Festival Darlings'}, {'question': "Who stars as unlucky casino cooler Bernie Lootz in 2003's The Cooler?", 'answer': 'William H. Macy', 'category': 'Festival Darlings'}, {'question': "In 2016's Lion, little Saroo gets separated from his brother and family through what mode of transportation?", 'answer': 'a train', 'category': 'Festival Darlings'}, {'question': 'Which actor plays a cult leader named Patrick in the 2011 drama Martha Marcy May Marlene?', 'answer': 'John Hawkes', 'category': 'Festival Darlings'}, {'question': 'Who directed the festival and Oscar favorite Shine, starring Geoffrey Rush?', 'answer': 'Scott Hicks', 'category': 'Festival Darlings'}, {'question': 'In The Miseducation of Cameron Post, who plays the title character, a teenage girl who is forced into gay conversion therapy?', 'answer': 'Chloë Grace Moretz', 'category': 'Festival Darlings'}, {'question': 'Viola Davis plays the character Amanda Waller in which comic book movie?', 'answer': 'Suicide Squad', 'category': 'Viola Davis'}, {'question': 'Viola Davis won an acting Oscar for what 2010s drama?', 'answer': 'Fences', 'category': 'Viola Davis'}, {'question': 'What MCU actor co-stars with Viola Davis in the thriller Blackhat as the character Nicholas Hathaway?', 'answer': 'Chris Hemsworth', 'category': 'Viola Davis'}, {'question': "2018's Widows takes place in what U.S. city?", 'answer': 'Chicago', 'category': 'Viola Davis'}, {'question': "Who plays Viola Davis' husband in Prisoners?", 'answer': 'Terrence Howard', 'category': 'Viola Davis'}, {'question': 'Viola Davis plays CIA Director Isabel George in what 2010 film co-starring Tom Cruise?', 'answer': 'Knight and Day', 'category': 'Viola Davis'}, {'question': "What do the characters call the ship computer in 1979's Alien?", 'answer': 'Mother', 'category': 'Ridley Scott'}, {'question': 'Which actor plays musician Bad Blake in Crazy Heart?', 'answer': 'Jeff Bridges', 'category': 'N/A'}, {'question': "Who stars as Kathryn Merteuil in 1999's Cruel Intentions?", 'answer': 'Sarah Michelle Gellar', 'category': 'N/A'}, {'question': 'Who directed The Road Warrior?', 'answer': 'George Miller', 'category': 'N/A'}, {'question': 'What year saw the release of Unforgiven?', 'answer': '1992', 'category': 'N/A'}, {'question': 'In what film does Nicolas Cage have to steal the Declaration of Independence?', 'answer': 'National Treasure', 'category': 'N/A'}, {'question': 'Who plays the lead role of Larry Donner in Throw Momma from the Train?', 'answer': 'Billy Crystal', 'category': 'N/A'}, {'question': 'What actress plays Maria von Trapp in The Sound of Music?', 'answer': 'Julie Andrews', 'category': 'N/A'}, {'question': "What year saw the release of Martin Campbell's Casino Royale?", 'answer': '2006', 'category': 'N/A'}, {'question': 'Who directed Sean Connery in The Untouchables?', 'answer': 'Brian De Palma', 'category': 'N/A'}, {'question': 'Paul Newman and Robert Redford play two grifters in what 1973 film?', 'answer': 'The Sting', 'category': 'N/A'}, {'question': 'Which composer wrote the music for all three The Lord of the Rings films?', 'answer': 'Howard Shore', 'category': 'Scores & Soundtracks'}, {'question': 'Which Oscar winner stars as Max Klein in the 1993 Peter Weir film Fearless?', 'answer': 'Jeff Bridges', 'category': '1990s'}, {'question': 'What was the first film directed by Quentin Tarantino that also starred Brad Pitt?', 'answer': 'Inglourious Basterds', 'category': 'Brad Pitt'}, {'question': 'Which actor plays Victor Von Doom in the 2015 film Fantastic Four?', 'answer': 'Toby Kebbell', 'category': 'Comic Book'}, {'question': 'What TV sitcom actor co-stars with Jeff Daniels in the 1997 legal comedy Trial and Error?', 'answer': 'Michael Richards', 'category': 'Comedies'}, {'question': "What musician plays Heather Gummer in 1990's Tremors?", 'answer': 'Reba McEntire', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor plays the title character in the 1980 film Mad Max?', 'answer': 'Mel Gibson', 'category': 'Action/Adventure'}, {'question': 'What 80s family film features such characters as Chunk, Mouth, Data, and Sloth?', 'answer': 'The Goonies', 'category': '1980s'}, {'question': 'Kurt Russell plays the character John Ruth, also known as the Hangman, in what 2015 Quentin Tarantino film?', 'answer': 'The Hateful Eight', 'category': 'Dramas'}, {'question': "Which actor plays Pat Solitano Sr., father of Bradley Cooper's character, in Silver Linings Playbook?", 'answer': 'Robert De Niro', 'category': 'Rom-Coms'}, {'question': 'What 1980s sci-fi film involves synthetic beings called "replicants"?', 'answer': 'Blade Runner', 'category': 'Fantasy/Sci-Fi'}, {'question': "What comedian plays wealthy party animal Al Czervik in 1980's Caddyshack?", 'answer': 'Rodney Dangerfield', 'category': 'Comedies'}, {'question': 'Which thriller from director Martin Scorsese follows a U.S. Marshal whose investigation leads him to hospital for the criminally insane?', 'answer': 'Shutter Island', 'category': 'Horror/Thriller'}, {'question': 'Which classic Disney film was based on a novel by Felix Salten, which follows the life of a young deer growing up in the forest?', 'answer': 'Bambi', 'category': 'Animated'}, {'question': 'Who stars as explorer Percy Fawcett in the biographical drama film The Lost City of Z?', 'answer': 'Charlie Hunnam', 'category': 'Dramas'}, {'question': "Al Pacino plays Lt. Colonel Frank Slade, who has what disability, in 1992's Scent of a Woman?", 'answer': 'blindness', 'category': 'Dramas'}, {'question': "Who stars as painter Margaret Keane in Tim Burton's Big Eyes?", 'answer': 'Amy Adams', 'category': 'Dramas'}, {'question': 'What 1991 film stars Kathy Bates and Jessica Tandy and tells parallel stories about Alabama women during two different time periods?', 'answer': 'Fried Green Tomatoes', 'category': 'Dramas'}, {'question': "Who plays real-life composer Richard Sherman in 2013's Saving Mr. Banks?", 'answer': 'Jason Schwartzman', 'category': 'Disney'}, {'question': 'In Tangled, after being denied permission to leave her tower, what does Rapunzel ask her mother to get her for her 18th birthday?', 'answer': 'paints', 'category': 'Disney'}, {'question': "Who plays the lead role of Christopher Robin in 2018's Christopher Robin?", 'answer': 'Ewan McGregor', 'category': 'Disney'}, {'question': "In 1955's Lady and the Tramp, what is the name of the restaurant where they eat the spaghetti?", 'answer': "Tony's", 'category': 'Disney'}, {'question': 'Jeff Goldblum plays scientist Seth Brundle in what horror remake?', 'answer': 'The Fly', 'category': 'Remakes & Reboots'}, {'question': "Who stars as Debbie Ocean in Ocean's 8?", 'answer': 'Sandra Bullock', 'category': 'Crime'}, {'question': 'Who plays horror film fanatic Randy Meeks in the Scream franchise?', 'answer': 'Jamie Kennedy', 'category': 'Horror'}, {'question': 'What holiday classic features the line "Worse? How could things get worse? Take a look around here, Ellen. We\'re at the threshold of hell!"?', 'answer': "National Lampoon's Christmas Vacation", 'category': 'Quotes'}, {'question': 'Which early 2000s disaster film features such actors as Aaron Eckhart, Delroy Lindo, Bruce Greenwood, and Richard Jenkins?', 'answer': 'The Core', 'category': 'Disaster'}, {'question': 'Who stars as police hostage negotiator Scott Roper in the 1997 action comedy Metro?', 'answer': 'Eddie Murphy', 'category': 'Action/Adventure'}, {'question': 'What 2019 rom-com fantasy was directed by Danny Boyle and starred Himesh Patel and Lily James?', 'answer': 'Yesterday', 'category': 'Rom-Coms'}, {'question': 'Eric Bana and Daniel Craig star as Israeli agents in what 2005 historical drama from director Steven Spielberg?', 'answer': 'Munich', 'category': 'Dramas'}, {'question': 'What 90s crime film has the tagline, "Three Decades of Life in the Mafia."?', 'answer': 'Goodfellas', 'category': 'Crime'}, {'question': 'In what film does Hugh Jackman play Charlie Kenton, a former boxer that now fights remote-controlled robots?', 'answer': 'Real Steel', 'category': 'Fantasy/Sci-Fi'}, {'question': "Who played Lillian Donovan, Annie's best friend and the bride-to-be, in Bridesmaids?", 'answer': 'Maya Rudolph', 'category': 'Comedies'}, {'question': 'What 2004 film from director Paul W. S. Anderson takes place in Antarctica and has a showdown between creatures from two popular movie franchises?', 'answer': 'Alien vs. Predator', 'category': 'Horror/Thriller'}, {'question': 'What 2004 film, based on a TV cartoon, follows the lead character as they leave their home, Bikini Bottom, to seek a famous object?', 'answer': 'The SpongeBob SquarePants Movie', 'category': 'Animated'}, {'question': 'Amy Adams co-stars with Meryl Streep in Doubt and which other film?', 'answer': 'Julie & Julia', 'category': 'N/A'}, {'question': "Who played British television broadcaster David Frost in Ron Howard's Frost/Nixon?", 'answer': 'Michael Sheen', 'category': 'Ron Howard'}, {'question': "In 1989's Parenthood, which future star plays Garry Buckman-Lampkin, who has just entered puberty and is quiet and withdrawn?", 'answer': 'Joaquin Phoenix', 'category': 'Ron Howard'}, {'question': 'What was the first film in which Michael Keaton worked with Ron Howard?', 'answer': 'Night Shift', 'category': 'Ron Howard'}, {'question': 'Ron Howard directed Tom Hanks and Audrey Tautou in this 2006 thriller.', 'answer': 'The Da Vinci Code', 'category': 'Ron Howard'}, {'question': 'Ron Howard starred with Robert Preston and Shirley Jones in what 1962 classic musical?', 'answer': 'The Music Man', 'category': 'Ron Howard'}, {'question': 'Who plays astronaut Ken Mattingly in Apollo 13?', 'answer': 'Gary Sinise', 'category': 'Ron Howard'}, {'question': 'Which Muppet plays the narrator Charlie Dickens in The Muppet Christmas Carol?', 'answer': 'Gonzo', 'category': 'Jim Henson'}, {'question': 'Dolphins begin to leave the Earth in this 2005 Henson Studios adventure comedy.', 'answer': "The Hitchhiker's Guide to the Galaxy", 'category': 'Jim Henson'}, {'question': 'In The Muppet Christmas Carol, Fozziwig, an early employer of Scrooge, owned what kind of factory?', 'answer': 'a rubber chicken factory', 'category': 'Jim Henson'}, {'question': 'Ken Kwapis directed what 1985 American musical road comedy film involving one of the Sesame Street characters running away from home?', 'answer': 'Sesame Street Presents: Follow That Bird', 'category': 'Jim Henson'}, {'question': 'Who played Long John Silver in Muppet Treasure Island?', 'answer': 'Tim Curry', 'category': 'Jim Henson'}, {'question': 'What actor falls madly in love with Miss Piggy in The Great Muppet Caper?', 'answer': 'Charles Grodin', 'category': 'Jim Henson'}, {'question': "You'll find a race of beings called Gelflings in what Jim Henson film?", 'answer': 'The Dark Crystal', 'category': 'Jim Henson'}, {'question': 'Which male actor was Oscar-nominated for the film Les Misérables?', 'answer': 'Hugh Jackman', 'category': 'N/A'}, {'question': 'Which actress plays the elf Tauriel in the Hobbit films?', 'answer': 'Evangeline Lilly', 'category': 'N/A'}, {'question': 'Who directed Night at the Museum?', 'answer': 'Shawn Levy', 'category': 'N/A'}, {'question': 'What year saw the release of The Imitation Game and Neighbors?', 'answer': '2014', 'category': 'N/A'}, {'question': 'Which 2015 film covers the financial housing crisis of 2007 and 2008?', 'answer': 'The Big Short', 'category': 'N/A'}, {'question': "Which actor is in the films The Counselor, Song to Song, and Assassin's Creed?", 'answer': 'Michael Fassbender', 'category': 'N/A'}, {'question': 'Which actress voices Tigress in the Kung Fu Panda franchise?', 'answer': 'Angelina Jolie', 'category': 'N/A'}, {'question': 'Who directed the films Hunger and Shame?', 'answer': 'Steve McQueen', 'category': 'N/A'}, {'question': "In what year was Denis Villeneuve's Prisoners released?", 'answer': '2013', 'category': 'N/A'}, {'question': 'Which biopic tells the story of Brian Wilson in the 1960s and 1980s?', 'answer': 'Love & Mercy', 'category': 'N/A'}, {'question': 'In what Steven Spielberg sci-fi film does Robin Williams have a cameo as the voice of a character named Dr. Know?', 'answer': 'A.I. Artificial Intelligence', 'category': 'N/A'}, {'question': 'Natalie Portman plays a ballet dancer in what 2010 film?', 'answer': 'Black Swan', 'category': 'Dance'}, {'question': "Who plays the lead Chris Taylor in Oliver Stone's Platoon?", 'answer': 'Charlie Sheen', 'category': '1980s'}, {'question': "Jude Law plays Asa Butterfield's father in this 2011 family film.", 'answer': 'Hugo', 'category': 'Family'}, {'question': 'In what 2013 crime film does a character refer to a microwave as a "science oven"?', 'answer': 'American Hustle', 'category': 'Crime'}, {'question': 'Brad Pitt co-starred alongside Jessica Chastain and Sean Penn in what film?', 'answer': 'The Tree of Life', 'category': 'Brad Pitt'}, {'question': 'Name one of the two nicknames given to Sgt. Rita Vrataski after her victory over the mimics in Edge of Tomorrow.', 'answer': 'the Angel of Verdun, the Full Metal Bitch', 'category': 'Tom Cruise'}, {'question': 'What actor, who portrayed James Bond, starred in the action thrillers The Presidio and Entrapment?', 'answer': 'Sean Connery', 'category': 'Action/Adventure'}, {'question': 'In what 1990s film does Jeff Goldblum say the line, "What have they got in there, King Kong?"?', 'answer': 'Jurassic Park', 'category': '1990s'}, {'question': "In Martin Scorsese's The King of Comedy, who plays Rupert Pupkin, a mentally unstable man who aspires to be a famous comedian?", 'answer': 'Robert De Niro', 'category': 'Dramas'}, {'question': 'Who directed the films Richard Jewell, Jersey Boys, and Sully?', 'answer': 'Clint Eastwood', 'category': 'Directors'}, {'question': 'Who directed the 2018 fantasy sci-fi film Ready Player One?', 'answer': 'Steven Spielberg', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Eddie Murphy plays Sherman Klump alongside Jada Pinkett Smith in what 1996 film?', 'answer': 'The Nutty Professor', 'category': 'Comedies'}, {'question': 'Sean S. Cunningham directed what famous 1980 slasher film, which spawned a long-running franchise?', 'answer': 'Friday the 13th', 'category': 'Horror/Thriller'}, {'question': "You'll find the character of Gill the fish, voiced by Willem Dafoe, in what 2000s Pixar film?", 'answer': 'Finding Nemo', 'category': 'Animated'}, {'question': 'Who directed the comedy Planes, Trains and Automobiles?', 'answer': 'John Hughes', 'category': 'N/A'}, {'question': 'Which actor co-stars with Will Ferrell as Doug Butabi in A Night at the Roxbury?', 'answer': 'Chris Kattan', 'category': 'SNL'}, {'question': "Who directed 1980's The Blues Brothers?", 'answer': 'John Landis', 'category': 'SNL'}, {'question': 'What SNL film begins with a synchronized dancing routine?', 'answer': 'Superstar', 'category': 'SNL'}, {'question': "You'll find Val Kilmer as the villain in what SNL-based film?", 'answer': 'MacGruber', 'category': 'SNL'}, {'question': 'Dwayne Johnson plays the Scorpion King in how many theatrical films?', 'answer': '2 (The Mummy Returns, The Scorpion King)', 'category': 'Dwayne Johnson'}, {'question': 'Dwayne plays a quarterback for the Boston Rebels in what film?', 'answer': 'The Game Plan', 'category': 'Dwayne Johnson'}, {'question': "What is the last name of Dwayne Johnson's character in the Fast and Furious franchise?", 'answer': 'Hobbs', 'category': 'Dwayne Johnson'}, {'question': 'Dwayne Johnson co-stars with Mark Wahlberg in what Adam McKay film?', 'answer': 'The Other Guys', 'category': 'Dwayne Johnson'}, {'question': 'The sports classic Rocky came out in what year?', 'answer': '1976', 'category': 'Release Dates'}, {'question': 'Who starred in the 1970s action films Magnum Force, The Eiger Sanction, and The Gauntlet?', 'answer': 'Clint Eastwood', 'category': 'Action/Adventure'}, {'question': 'Bill Paxton and Helen Hunt star in what 1996 disaster film?', 'answer': 'Twister', 'category': '1990s'}, {'question': 'Which Oscar nominee plays Almásy in The English Patient?', 'answer': 'Ralph Fiennes', 'category': 'Dramas'}, {'question': 'Who directed the first two installments in the Harry Potter franchise?', 'answer': 'Chris Columbus', 'category': 'Directors'}, {'question': 'What actress co-stars alongside Johnny Depp as the character Angelica in Pirates of the Caribbean: On Stranger Tides?', 'answer': 'Penélope Cruz', 'category': 'Fantasy/Sci-Fi'}, {'question': 'The Wayans brothers play two FBI agents who go undercover as two white women in what 2004 comedy?', 'answer': 'White Chicks', 'category': 'Comedies'}, {'question': 'What actress led the 2000s remake of Ringu?', 'answer': 'Naomi Watts', 'category': 'Horror/Thriller'}, {'question': 'Who voiced the character of the Grinch in the 2018 animated remake The Grinch?', 'answer': 'Benedict Cumberbatch', 'category': 'Animated'}, {'question': 'What Oscar-winning actor co-stars with Alan Arkin and Michael Caine as Willie in the 2017 heist comedy Going In Style?', 'answer': 'Morgan Freeman', 'category': 'N/A'}, {'question': 'In J. Edgar, who plays Clyde Tolson, the longtime companion of J. Edgar Hoover?', 'answer': 'Armie Hammer', 'category': 'Clint Eastwood'}, {'question': 'In Richard Jewell, what is the name of the park where Richard notices a suspicious package that ends up detonating?', 'answer': 'Centennial Olympic Park', 'category': 'Clint Eastwood'}, {'question': "In 1997's Absolute Power, Clint Eastwood plays a thief who witnesses a terrible crime committed by the U.S. President. Which actor played the President?", 'answer': 'Gene Hackman', 'category': 'Clint Eastwood'}, {'question': 'In what film does Clint Eastwood play a radio disc jockey in the town Carmel-by-the-Sea?', 'answer': 'Play Misty for Me', 'category': 'Clint Eastwood'}, {'question': "Which actor plays Simon in 2018's Love, Simon?", 'answer': 'Nick Robinson', 'category': 'Young Adult Adaptations'}, {'question': "Zoey Deutch stars as Samantha Kingston, a young woman that keeps waking up on Cupid's Day, in which 2017 film?", 'answer': 'Before I Fall', 'category': 'Young Adult Adaptations'}, {'question': 'Who stars as Cameron Post in The Miseducation of Cameron Post?', 'answer': 'Chloë Grace Moretz', 'category': 'Young Adult Adaptations'}, {'question': "Nick O'Leary is a base player that spends his night looking for his favorite indie band Where's Fluffy? in this 2008 film.", 'answer': "Nick & Norah's Infinite Playlist", 'category': 'Young Adult Adaptations'}, {'question': 'Henry Selick directed this holiday animated film featuring the characters Jack and Sally.', 'answer': 'The Nightmare Before Christmas', 'category': 'Animated'}, {'question': 'Who plays FBI agent Neville Flynn in Snakes on a Plane?', 'answer': 'Samuel L. Jackson', 'category': 'N/A'}, {'question': 'Which actress appears in Charade, Roman Holiday, and My Fair Lady?', 'answer': 'Audrey Hepburn', 'category': 'N/A'}, {'question': 'What year saw the release of The Godfather Part III?', 'answer': '1990', 'category': 'N/A'}, {'question': 'Anthony Minghella directed Matt Damon in what 1999 film?', 'answer': 'The Talented Mr. Ripley', 'category': 'N/A'}, {'question': 'Who plays military advisor Nathan Algren in The Last Samurai?', 'answer': 'Tom Cruise', 'category': 'N/A'}, {'question': 'Who provided the score for Frankenweenie and Dark Shadows?', 'answer': 'Danny Elfman', 'category': 'N/A'}, {'question': "Who won Best Actor for The King's Speech?", 'answer': 'Colin Firth', 'category': 'N/A'}, {'question': 'Who directed Good Will Hunting?', 'answer': 'Gus Van Sant', 'category': 'N/A'}, {'question': 'Which actress appears in the films Contagion, The Royal Tenenbaums, and Shallow Hal?', 'answer': 'Gwyneth Paltrow', 'category': 'N/A'}, {'question': 'How many total installments of the Middle-earth films did Peter Jackson direct?', 'answer': '6 (The Fellowship of the Ring, The Two Towers, The Return of the King, An Unexpected Journey, The Desolation of Smaug, The Battle of the Five Armies)', 'category': 'N/A'}, {'question': 'Which actor stars as Sergeant Tommy Saunders in the film Patriots Day?', 'answer': 'Mark Wahlberg', 'category': 'Crime'}, {'question': 'What was the first film that Tom Holland portrayed the character of Peter Parker / Spider-Man?', 'answer': 'Captain America: Civil War', 'category': 'Comic Book'}, {'question': 'Who plays mobster Mickey Cohen in Gangster Squad?', 'answer': 'Sean Penn', 'category': '2010s'}, {'question': 'Name the two co-leads of the 2003 spy thriller The Recruit.', 'answer': 'Al Pacino, Colin Farrell', 'category': 'Spy'}, {'question': "Seth Green, Matthew Lillard, and Dax Shepard go on a camping trip to find D. B. Cooper's gold in what 2004 film?", 'answer': 'Without a Paddle', 'category': 'Comedies'}, {'question': 'Boaz Yakin directed Jason Statham and Chris Sarandon in what 2010s action film?', 'answer': 'Safe', 'category': 'Thriller'}, {'question': 'Who plays the villainous Captain Barbossa in the Pirates of the Caribbean franchise?', 'answer': 'Geoffrey Rush', 'category': 'N/A'}, {'question': 'Who played Jack Twist in Brokeback Mountain?', 'answer': 'Jake Gyllenhaal', 'category': 'N/A'}, {'question': "Who plays Laramie Seymour Sullivan, also known as Dwight Broadbeck, in 2018's Bad Times at the El Royale?", 'answer': 'Jon Hamm', 'category': 'N/A'}, {'question': 'Who voices Spider-Ham in Spider-Man: Into the Spider-Verse?', 'answer': 'John Mulaney', 'category': 'N/A'}, {'question': 'Which actor voices Yogi Bear in the 2010 film Yogi Bear?', 'answer': 'Dan Aykroyd', 'category': 'N/A'}, {'question': 'In the film Get Smart, which Godfather actor plays the President of the United States?', 'answer': 'James Caan', 'category': 'N/A'}, {'question': 'Who directed Jack Nicholson in the feel-good comedy The Bucket List?', 'answer': 'Rob Reiner', 'category': 'N/A'}, {'question': 'What is the title of the 2020 animated reboot of the Scooby-Doo franchise?', 'answer': 'Scoob!', 'category': 'New Releases'}, {'question': 'Which 2010s comic adaptation features such characters as Knives Chau, Wallace Wells, Envy Adams, and Gideon Graves?', 'answer': 'Scott Pilgrim vs. the World', 'category': 'Comic Book'}, {'question': 'What 1989 adaptation of a Stephen King novel has the following tagline: "Sometimes dead is better."?', 'answer': 'Pet Sematary', 'category': 'Horror/Thriller'}, {'question': 'Who directed Ben Affleck in The Accountant and The Way Back?', 'answer': "Gavin O'Connor", 'category': 'Directors'}, {'question': 'Marcus Raboy directed what 2002 sequel starring Ice Cube and Mike Epps, following the characters of Craig and Day-Day at Christmastime?', 'answer': 'Friday After Next', 'category': 'Black Cinema'}, {'question': 'A group of friends find themselves thrown back in time to 1986 in what 2010 film directed by Steve Pink, and starring John Cusack and Craig Robinson?', 'answer': 'Hot Tub Time Machine', 'category': 'Comedies'}, {'question': 'Which actor stars as a character known only as the Protagonist in the 2020 film Tenet?', 'answer': 'John David Washington', 'category': 'Action/Adventure'}, {'question': "Which actress plays the role of Lenina Huxley in 1993's Demolition Man?", 'answer': 'Sandra Bullock', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor plays Thorin Oakenshield in the Hobbit trilogy?', 'answer': 'Richard Armitage', 'category': 'Middle-earth'}, {'question': "In what film in the Middle-earth franchise does the Battle of Helm's Deep take place?", 'answer': 'The Lord of the Rings: The Two Towers', 'category': 'Middle-earth'}, {'question': 'Andy Serkis has played the role of Gollum in how many films?', 'answer': '4 (Fellowship of the Ring, Two Towers, Return of the King, An Unexpected Journey)', 'category': 'Middle-earth'}, {'question': 'Which character in the Middle-earth franchise said the line, "So do all who live to see such times. But that is not for them to decide. All we have to decide is what to do with the time that is given to us."?', 'answer': 'Gandalf', 'category': 'Middle-earth'}, {'question': "Who plays the recently widowed Jenny Hayden in 1984's Starman?", 'answer': 'Karen Allen', 'category': 'John Carpenter'}, {'question': 'Which John Carpenter film has supporting performances from Darwin Joston, Laurie Zimmer, and Martin West?', 'answer': 'Assault on Precinct 13', 'category': 'John Carpenter'}, {'question': 'Who plays the lead character John Trent in the film In the Mouth of Madness?', 'answer': 'Sam Neill', 'category': 'John Carpenter'}, {'question': 'How many times was Donald Pleasence directed by John Carpenter?', 'answer': '3 (Halloween, Escape from New York, Prince of Darkness)', 'category': 'John Carpenter'}, {'question': 'What 90s comic book film has the line "Let\'s kick some ice!"?', 'answer': 'Batman & Robin', 'category': 'Comic Book'}, {'question': 'Who plays the role of Jericho Jackson in the 1988 film Action Jackson?', 'answer': 'Carl Weathers', 'category': 'Black Cinema'}, {'question': 'Hugh Jackman and Jake Gyllenhaal star in the gritty 2013 thriller Prisoners. Who directed it?', 'answer': 'Denis Villeneuve', 'category': 'Thriller'}, {'question': 'You can find the character of Tree, played by Jessica Rothe, in what Blumhouse franchise?', 'answer': 'Happy Death Day', 'category': 'Horror'}, {'question': 'The Legend of Bagger Vance is mainly set in what southern U.S. state?', 'answer': 'Georgia', 'category': 'Will Smith'}, {'question': 'What spy thriller involves the real-life person Valerie Plame, whose status as a CIA operative is subsequently revealed in the media by the White House?', 'answer': 'Fair Game', 'category': 'Spy'}, {'question': 'Who was nominated for an Academy Award for her role as Amy March in the 2019 adaptation of Little Women?', 'answer': 'Florence Pugh', 'category': 'Oscars'}, {'question': 'Tobin Bell plays what iconic horror movie character?', 'answer': 'Jigsaw', 'category': 'Horror'}, {'question': 'Which actor stars as a young man named Homer Wells in the 1999 film The Cider House Rules?', 'answer': 'Tobey Maguire', 'category': 'Dramas'}, {'question': 'What year were the following sequels released: Die Hard 2, RoboCop 2, Predator 2, and Gremlins 2: The New Batch?', 'answer': '1990', 'category': 'Release Dates'}, {'question': 'What 2020 mystery film includes actors such as Helena Bonham Carter, Sam Claflin, and Henry Cavill?', 'answer': 'Enola Holmes', 'category': 'Mystery'}, {'question': 'What comedy starring Jim Carrey has the tagline, "He\'s the best there is! (Actually, he\'s the only one there is.)"?', 'answer': 'Ace Ventura: Pet Detective', 'category': 'Comedies'}, {'question': 'Which actor appears in the following films: Conan the Barbarian, The Hunt for Red October, and Field of Dreams?', 'answer': 'James Earl Jones', 'category': 'Famous Actors & Actresses'}, {'question': 'Who directed the films Dave, Evolution, and Draft Day?', 'answer': 'Ivan Reitman', 'category': 'Directors'}, {'question': "Which actress stars as the character Caroline Hubbard in 2017's Murder on the Orient Express?", 'answer': 'Michelle Pfeiffer', 'category': 'Mystery'}, {'question': 'Who played the character of Sam Spade in the 1941 film The Maltese Falcon?', 'answer': 'Humphrey Bogart', 'category': 'Mystery'}, {'question': 'What mystery movie franchise features the characters Nick and Nora Charles?', 'answer': 'Thin Man', 'category': 'Mystery'}, {'question': 'Who plays the titular teenage detective in the 2007 family film Nancy Drew?', 'answer': 'Emma Roberts', 'category': 'Mystery'}, {'question': 'John Cena appears in which film in the Transformers franchise?', 'answer': 'Bumblebee', 'category': 'Wrestlers in Film'}, {'question': "What is the name of the wrestler played by Randy Savage in 2002's Spider-Man?", 'answer': 'Bonesaw McGraw', 'category': 'Wrestlers in Film'}, {'question': 'In which 1991 film does Hulk Hogan play an interstellar hero from a distant world who visits Earth and tries to fit in with a normal family?', 'answer': 'Suburban Commando', 'category': 'Wrestlers in Film'}, {'question': 'Who stars as convict Jack Conrad in the 2007 action thriller The Condemned?', 'answer': 'Steve Austin', 'category': 'Wrestlers in Film'}, {'question': 'Aslan is what type of animal in the Chronicles of Narnia films?', 'answer': 'a lion', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the films Following and Insomnia?', 'answer': 'Christopher Nolan', 'category': 'Directors'}, {'question': "In Widows, who plays politician Jack Mulligan, who gets mixed up in the widows' plan?", 'answer': 'Colin Farrell', 'category': 'Crime'}, {'question': 'In what 1980s comedy does real-life baseball player Reggie Jackson become a victim of mind control that turns him into an assassin?', 'answer': 'The Naked Gun: From the Files of Police Squad!', 'category': 'Comedies'}, {'question': 'In what 1998 comedy film do Albert Brooks, Julie Kavner, and Ellen DeGeneres lend their voices to live-action animals?', 'answer': 'Dr. Dolittle', 'category': '1990s'}, {'question': "Will Smith's character gets stung to death by a jellyfish in a bathtub in what 2000s film?", 'answer': 'Seven Pounds', 'category': 'Will Smith'}, {'question': 'Which actor plays Dr. John Watson in the 2009 film Sherlock Holmes?', 'answer': 'Jude Law', 'category': 'Mystery'}, {'question': 'Which 1990s Disney animated film features the songs "Zero to Hero" and "Go the Distance"?', 'answer': 'Hercules', 'category': 'Animated'}, {'question': 'Which Oscar-winning actress stars as a witch who sets the story in motion in the fantasy musical film Into the Woods?', 'answer': 'Meryl Streep', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actress received Oscar nominations for her performances in the films The Fighter, The Master, and Vice?', 'answer': 'Amy Adams', 'category': 'Oscars'}, {'question': 'Who directed the 2004 remake of Dawn of the Dead?', 'answer': 'Zack Snyder', 'category': 'Horror/Thriller'}, {'question': 'Which 1990s comedy starring Adam Sandler has the tagline "He\'s gonna party like it\'s 1985."?', 'answer': 'The Wedding Singer', 'category': 'Comedies'}, {'question': "Who starred in the 1980s comedies Bachelor Party, Punchline, and The 'Burbs?", 'answer': 'Tom Hanks', 'category': '1980s'}, {'question': 'Terry Gilliam directed Robin Williams and Jeff Bridges in what 1991 drama?', 'answer': 'The Fisher King', 'category': 'Dramas'}, {'question': 'Which actor plays Mr. Dawson, a civilian sailor that tries to save lives in Dunkirk?', 'answer': 'Mark Rylance', 'category': 'Christopher Nolan'}, {'question': 'In which Nolan film will you hear the quote "You and your friends better batten down the hatches, because when it hits, you\'re all gonna wonder how you ever thought you could live so large and leave so little for the rest of us."?', 'answer': 'The Dark Knight Rises', 'category': 'Christopher Nolan'}, {'question': "In Inception, Ariadne's totem is a slightly hollowed-out chess piece. What chess piece is it?", 'answer': 'a bishop', 'category': 'Christopher Nolan'}, {'question': "In The Prestige, Michael Caine's character explains that every great magic trick has how many parts?", 'answer': '3 (the Pledge, the Turn, the Prestige)', 'category': 'Christopher Nolan'}, {'question': 'Who directed James Stewart in the films Rope and The Man Who Knew Too Much?', 'answer': 'Alfred Hitchcock', 'category': 'James Stewart'}, {'question': "In the film Harvey, James Stewart's character has an invisible best friend, the titular Harvey, who is what kind of animal?", 'answer': 'rabbit', 'category': 'James Stewart'}, {'question': 'Which legendary actor co-starred with James Stewart in the westerns The Man Who Shot Liberty Valance and The Shootist?', 'answer': 'John Wayne', 'category': 'James Stewart'}, {'question': 'James Stewart provides the voice of the character Sheriff Wylie Burp in what 1990s animated film?', 'answer': 'An American Tail: Fievel Goes West', 'category': 'James Stewart'}, {'question': 'Will appears as Detective Del Spooner in what 2000s science fiction film?', 'answer': 'I, Robot', 'category': 'Will Smith'}, {'question': 'What 80s action sequel is known for the line "diplomatic immunity"?', 'answer': 'Lethal Weapon 2', 'category': 'Action/Adventure'}, {'question': 'You can find the automotive company Callahan Auto, run by Brian Dennehy, in what 1995 comedy?', 'answer': 'Tommy Boy', 'category': 'Comedies'}, {'question': 'Who directed Tom Hanks in the 2000 film Cast Away?', 'answer': 'Robert Zemeckis', 'category': 'Directors'}, {'question': 'Who directed the horror film The Green Inferno?', 'answer': 'Eli Roth', 'category': 'Horror'}, {'question': "What famous actor played corrupt cop Hank Quinlan in 1958's Touch of Evil?", 'answer': 'Orson Welles', 'category': 'Crime'}, {'question': "What 2016 horror thriller follows a trio of thieves, who break into the house of a blind man who isn't as helpless as he seems?", 'answer': "Don't Breathe", 'category': 'Horror/Thriller'}, {'question': "Who directed Jack Black, Matthew McConaughey, and Shirley MacLaine in 2012's biographical crime comedy Bernie?", 'answer': 'Richard Linklater', 'category': 'Crime'}, {'question': 'Which actor stars as a scientist obsessed with bringing back his family members who died in a traffic incident in the 2019 film Replicas?', 'answer': 'Keanu Reeves', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor was the first to portray the popular character Jack Ryan, in the 1990 film The Hunt for Red October?', 'answer': 'Alec Baldwin', 'category': 'Famous Actors & Actresses'}, {'question': 'In what year did Tom Hanks star in the following films: The Terminal, The Ladykillers, and The Polar Express?', 'answer': '2004', 'category': 'Release Dates'}, {'question': "Which famous comedian stars as a man who goes on a spending spree in order to collect a big inheritance in the 1985 comedy Brewster's Millions?", 'answer': 'Richard Pryor', 'category': 'Comedies'}, {'question': 'Christopher Reeve and Jane Seymour star in what 1980 romantic fantasy film about a playwright who becomes obsessed with a photograph of a young woman at the Grand Hotel?', 'answer': 'Somewhere in Time', 'category': '1980s'}, {'question': 'Who directed Bill Murray and Scarlett Johansson in Lost in Translation?', 'answer': 'Sofia Coppola', 'category': 'Directors'}, {'question': "Who plays Charles Rodman, Will's Alzheimer's-afflicted father, in Rise of the Planet of the Apes?", 'answer': 'John Lithgow', 'category': 'Planet of the Apes'}, {'question': 'Who plays Malcolm, the leader of the small group that forms a strong bond with Caesar and the other apes, in Dawn of the Planet of the Apes?', 'answer': 'Jason Clarke', 'category': 'Planet of the Apes'}, {'question': 'Which Apes film features the line, "The young ones make great pets. Just make sure you get rid of them before they mature. Believe me, the last thing you want is a human teenager running around your house."?', 'answer': 'Planet of the Apes (2001)', 'category': 'Planet of the Apes'}, {'question': 'What is the title of the fifth film in the original Apes series?', 'answer': 'Battle for the Planet of the Apes', 'category': 'Planet of the Apes'}, {'question': 'What Best Picture winning film, directed by Rob Marshall, follows fame starved killers Roxie Hart and Velma Kelly, and a hotshot lawyer named Billy Flynn?', 'answer': 'Chicago', 'category': 'Oscars'}, {'question': 'Which filmmaker won the Oscar for Best Director in 2014 and 2019 (the films were released in 2013 and 2018 respectively)?', 'answer': 'Alfonso Cuarón (for Gravity, Roma)', 'category': 'Oscars'}, {'question': 'Few performers have ever been nominated for playing the same character twice. Who is the most recent actor to achieve this feat?', 'answer': 'Sylvester Stallone (for Rocky, Creed)', 'category': 'Oscars'}, {'question': 'The films Annie Hall, The Deer Hunter, and The Sting won Best Picture in what decade?', 'answer': 'the 1970s', 'category': 'Oscars'}, {'question': 'Who directed the 2018 film The Mule?', 'answer': 'Clint Eastwood', 'category': 'Crime'}, {'question': 'Paul Rudd and Leslie Mann star in what 2012 Judd Apatow comedy?', 'answer': 'This Is 40', 'category': 'Comedies'}, {'question': 'How many Rocky movies were released in the 80s?', 'answer': '2 (Rocky III, Rocky IV)', 'category': '1980s'}, {'question': 'In the film Austin Powers in Goldmember, who plays the role of Dixie Normous opposite Tom Cruise?', 'answer': 'Gwyneth Paltrow', 'category': 'Tom Cruise'}, {'question': 'Who wrote and directed both Midnight Special and Loving in 2016?', 'answer': 'Jeff Nichols', 'category': 'Directors'}, {'question': 'In Interview with the Vampire, who plays Armand, the supposedly oldest vampire in the world who asks Louis to join his coven the Théâtre des Vampires?', 'answer': 'Antonio Banderas', 'category': 'Brad Pitt'}, {'question': 'Which classic 1970s sci-fi film features characters named Dallas, Kane, Lambert, and Ash?', 'answer': 'Alien', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the Disney film The Many Adventures of Winnie the Pooh, which character says "I\'m so happy, I feel like bouncing!"?', 'answer': 'Tigger', 'category': 'Quotes'}, {'question': 'Tom Hanks plays an American lawyer who is recruited to defend a Soviet spy in which film from director Steven Spielberg?', 'answer': 'Bridge of Spies', 'category': 'Dramas'}, {'question': 'What year saw the release of the film Creed?', 'answer': '2015', 'category': 'Release Dates'}, {'question': 'Who plays famous gangster Al Capone in the 2020 film Capone?', 'answer': 'Tom Hardy', 'category': 'Crime'}, {'question': 'Peyton Reed directed what 2008 comedy which stars Jim Carrey, Zooey Deschanel, and Bradley Cooper?', 'answer': 'Yes Man', 'category': 'Comedies'}, {'question': 'Which actor received Oscar nominations for his performances in the films Cry Freedom and The Hurricane?', 'answer': 'Denzel Washington', 'category': 'Oscars'}, {'question': 'Which actress stars as an unnamed woman who lives with her husband in seclusion in the 2017 film Mother!?', 'answer': 'Jennifer Lawrence', 'category': 'Horror/Thriller'}, {'question': "Medical student Nancy Adams travels to a secluded beach in Mexico after her mother's death, only to fight for her survival against a shark, in what 2010s film?", 'answer': 'The Shallows', 'category': 'Thriller'}, {'question': 'Who wrote and directed the 90s thriller The Crying Game starring Stephen Rea?', 'answer': 'Neil Jordan', 'category': 'Thriller'}, {'question': 'David Dunn is a man who is the only survivor of a train accident in what 2000 thriller?', 'answer': 'Unbreakable', 'category': 'Thriller'}, {'question': 'What 2016 thriller follows a punk rock band called the "Ain\'t Rights", who become witnesses to a murder at a club run by neo-Nazis?', 'answer': 'Green Room', 'category': 'Thriller'}, {'question': 'Frances McDormand received a Best Supporting Actress nomination for what 2000 film from director Cameron Crowe?', 'answer': 'Almost Famous', 'category': 'Frances McDormand'}, {'question': 'Frances McDormand pays the mother of Suzy Bishop, a teen girl who goes on the run, in what film?', 'answer': 'Moonrise Kingdom', 'category': 'Frances McDormand'}, {'question': 'Frances McDormand won the Best Actress Oscar twice. One for Three Billboards Outside Ebbing, Missouri, and for which other film?', 'answer': 'Fargo', 'category': 'Frances McDormand'}, {'question': 'Frances McDormand has a supporting role as the character Zoe in what rom-com that stars Jack Nicholson and Diane Keaton?', 'answer': "Something's Gotta Give", 'category': 'Frances McDormand'}, {'question': 'Brad Pitt plays a tank commander nicknamed Wardaddy in what film?', 'answer': 'Fury', 'category': 'Brad Pitt'}, {'question': 'In what MCU sequel is the song "Brandy" played multiple times?', 'answer': 'Guardians of the Galaxy Vol. 2', 'category': 'Scores & Soundtracks'}, {'question': 'Steven Spielberg released two films in 2002. Name one of them.', 'answer': 'Minority Report, Catch Me If You Can', 'category': 'Steven Spielberg'}, {'question': 'Garry Marshall directed Julia Roberts in 4 films. What was their first collaboration?', 'answer': 'Pretty Woman', 'category': 'Directors'}, {'question': 'What classic 50s thriller features characters that are referred to as Miss Lonelyhearts, Miss Torso, and Miss Hearing Aid?', 'answer': 'Rear Window', 'category': 'Thriller'}, {'question': 'Craig Gillespie directed what 2011 horror remake featuring Imogen Poots and Toni Collette?', 'answer': 'Fright Night', 'category': 'Remakes & Reboots'}, {'question': 'Who provides the voice of the villainous Lord Farquaad in Shrek?', 'answer': 'John Lithgow', 'category': 'Animated'}, {'question': "What year saw the release of the following films: Volcano, Dante's Peak, Contact, and Men in Black?", 'answer': '1997', 'category': 'Release Dates'}, {'question': 'Who directed the 1994 coming-of-age period piece Crooklyn?', 'answer': 'Spike Lee', 'category': 'Black Cinema'}, {'question': 'Who won a Best Actress Oscar in 2015 for her role as Alice Howland in Still Alice?', 'answer': 'Julianne Moore', 'category': 'Oscars'}, {'question': "Which Oscar-winning actress plays Sandra Bullock's sister in the 1998 film Practical Magic?", 'answer': 'Nicole Kidman', 'category': '1990s'}, {'question': "Emma Stone plays high schooler Olive at the center of her high school's rumor mill in what 2010 film?", 'answer': 'Easy A', 'category': 'Comedies'}, {'question': 'Seth Rogen plays an orthodox Jewish factory worker who is preserved in pickle brine for a hundred years and wakes up in New York City before tracking down his great-grandson in which film?', 'answer': 'An American Pickle', 'category': 'New Releases'}, {'question': "Which Oscar-winning actress plays Ma Rainey in the 2020 film Ma Rainey's Black Bottom?", 'answer': 'Viola Davis', 'category': 'Dramas'}, {'question': 'Which sci-fi film features performances from Dina Meyer, Jake Busey, and Neil Patrick Harris?', 'answer': 'Starship Troopers', 'category': 'N/A'}, {'question': 'Robert De Niro was first nominated for a Best Leading Actor Oscar for which Martin Scorsese film?', 'answer': 'Taxi Driver', 'category': 'Robert De Niro'}, {'question': 'In which film does Robert De Niro play Harry Tuttle, a terrorist who is trying to take down an oppressive government system?', 'answer': 'Brazil', 'category': 'Robert De Niro'}, {'question': "Who directed Robert De Niro in the 1994 horror adaptation Mary Shelley's Frankenstein?", 'answer': 'Kenneth Branagh', 'category': 'Robert De Niro'}, {'question': 'In which film does Robert De Niro say the line "never rat on your friends and always keep your mouth shut."?', 'answer': 'Goodfellas', 'category': 'Robert De Niro'}, {'question': 'Which actress made her feature-length directorial debut with the 2020 film One Night in Miami...?', 'answer': 'Regina King', 'category': 'Black Cinema'}, {'question': 'Michael B. Jordan portrays real-life lawyer Brian Stevenson in what 2010s film?', 'answer': 'Just Mercy', 'category': 'Black Cinema'}, {'question': "Which rapper plays Jimmy Bones, who is betrayed and brutally murdered by those closest to him before coming back to life to seek revenge on those who wronged him in 2001's Bones?", 'answer': 'Snoop Dogg', 'category': 'Black Cinema'}, {'question': 'The Hughes Brothers directed Tyrin Turner, Jada Pinkett, and Samuel L. Jackson in what 1993 film?', 'answer': 'Menace II Society', 'category': 'Black Cinema'}, {'question': 'What is the subtitle of the second Austin Powers film?', 'answer': 'The Spy Who Shagged Me', 'category': 'Comedies'}, {'question': 'You will find the jazz group The Messengers performing songs like "Start a Fire" in what Best Picture nominee?', 'answer': 'La La Land', 'category': 'Musicals'}, {'question': "In what comedy does Steve Carell's character construct what he calls the Tower of Dreamers?", 'answer': 'Dinner for Schmucks', 'category': 'Remakes & Reboots'}, {'question': 'Who plays the protagonist Louis, who falls under the influence of the vampire Lestat in Interview with the Vampire?', 'answer': 'Brad Pitt', 'category': 'Horror'}, {'question': '"Go the Distance" was nominated for Best Original Song for what 1990s Disney film?', 'answer': 'Hercules', 'category': 'Disney'}, {'question': "You'll find a character known as Jimmy Jump, played by Laurence Fishburne, who is Frank's trigger-happy right-hand man in what 1990 crime thriller directed by Abel Ferrara?", 'answer': 'King of New York', 'category': '1990s'}, {'question': 'What 1984 comedy marked the first collaboration between actor Tom Hanks and director Ron Howard?', 'answer': 'Splash', 'category': 'Famous Actors & Actresses'}, {'question': "Which actress directed Kristen Stewart, Naomi Scott, and Ella Balinska in 2019's Charlie's Angels?", 'answer': 'Elizabeth Banks', 'category': 'Action/Adventure'}, {'question': 'Which horror franchise has entries with the subtitles H20 and Resurrection?', 'answer': 'Halloween', 'category': 'Horror/Thriller'}, {'question': 'Ben Schwartz provides the voice of the title character in what 2020 family film, which was based on a video game?', 'answer': 'Sonic the Hedgehog', 'category': 'Family'}, {'question': 'After "The Man" kills his brother and poisons the neighborhood with tainted liquor, a kung fu fighter wages a war that takes him all the way to Nixon\'s White House, in what 2009 film?', 'answer': 'Black Dynamite', 'category': 'Black Cinema'}, {'question': 'Which SNL actor starred in the comedies The Animal and The Hot Chick?', 'answer': 'Rob Schneider', 'category': 'Comedies'}, {'question': "Which 1992 film stars Al Pacino, Chris O'Donnell, Philip Seymour Hoffman, and Bradley Whitford?", 'answer': 'Scent of a Woman', 'category': '1990s'}, {'question': 'What 1997 blockbuster features supporting roles from Billy Zane, Kathy Bates, and Bill Paxton?', 'answer': 'Titanic', 'category': 'Dramas'}, {'question': 'Who directed both The Addams Family and Addams Family Values?', 'answer': 'Barry Sonnenfeld', 'category': '1990s'}, {'question': 'In the 1994 comedy The Flintstones, John Goodman plays Fred Flintstone. Who plays Barney Rubble?', 'answer': 'Rick Moranis', 'category': '1990s'}, {'question': "This comedic actor has roles in both Wayne's World and Wayne's World 2, as a well-informed security guard in the first film and a friend of Wayne and Garth in the second film.", 'answer': 'Chris Farley', 'category': '1990s'}, {'question': 'You will find comets nicknamed Beiderman and Wolf in which 90s sci-fi film?', 'answer': 'Deep Impact', 'category': '1990s'}, {'question': 'Who plays adult actress Amber Waves in Boogie Nights?', 'answer': 'Julianne Moore', 'category': 'Paul Thomas Anderson'}, {'question': 'You will find the characters of Reynolds and Cyril Woodcock in which PTA film?', 'answer': 'Phantom Thread', 'category': 'Paul Thomas Anderson'}, {'question': 'Freddie Quell is the main character in which PTA film?', 'answer': 'The Master', 'category': 'Paul Thomas Anderson'}, {'question': 'In Inherent Vice, Owen Wilson plays Coy Harlingen, a musician known for playing what instrument?', 'answer': 'saxophone', 'category': 'Paul Thomas Anderson'}, {'question': 'Which actor is in the following 90s films: Goodfellas, Jurassic Park, and Die Hard with a Vengeance?', 'answer': 'Samuel L. Jackson', 'category': '1990s'}, {'question': 'What pop music superstar played the Scarecrow in the 1978 musical The Wiz?', 'answer': 'Michael Jackson', 'category': 'Musicals'}, {'question': 'In Blade Runner 2049, who plays Wallace CEO Niander Wallace, who wants to discover the secret to replicant reproduction?', 'answer': 'Jared Leto', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor plays the character Professor Plum in the 1985 board game adaptation Clue?', 'answer': 'Christopher Lloyd', 'category': '1980s'}, {'question': 'Claude Rains, Ralph Bellamy, and Bela Lugosi have supporting roles in what 1941 Universal horror film?', 'answer': 'The Wolf Man', 'category': 'Horror'}, {'question': 'Which actor received Oscar nominations for his performances in the films Raging Bull, Goodfellas, and The Irishman?', 'answer': 'Joe Pesci', 'category': 'Oscars'}, {'question': 'What is the title of the 2020 entry in the Bill & Ted franchise?', 'answer': 'Bill & Ted Face the Music', 'category': 'New Releases'}, {'question': 'Who plays famous rock star Jim Morrison in the 1991 film The Doors?', 'answer': 'Val Kilmer', 'category': 'Dramas'}, {'question': 'What 1998 live-action Disney remake stars Lindsay Lohan, Dennis Quaid, and Natasha Richardson?', 'answer': 'The Parent Trap', 'category': 'Family'}, {'question': 'Which actress co-stars with Hugh Grant as the character of Lucy Kelson in the 2002 rom-com Two Weeks Notice?', 'answer': 'Sandra Bullock', 'category': 'Rom-Coms'}, {'question': 'What 2009 comedy has the following tagline: "Some guys just can\'t handle Vegas"?', 'answer': 'The Hangover', 'category': 'Comedies'}, {'question': 'What 2008 MCU film has a main villain named Emil Blonsky, who is also known as Abomination?', 'answer': 'The Incredible Hulk', 'category': 'Comic Book'}, {'question': 'Which actress starred in the films Blue Jasmine and Carol?', 'answer': 'Cate Blanchett', 'category': 'Famous Actors & Actresses'}, {'question': 'Which actor co-starred with Jennifer Lopez in the films Gigli and Jersey Girl?', 'answer': 'Ben Affleck', 'category': 'Jennifer Lopez'}, {'question': "Which actor plays Abraham Quintanilla, Selena's father in the 1997 biopic Selena?", 'answer': 'Edward James Olmos', 'category': 'Jennifer Lopez'}, {'question': "Which actor plays Jennifer Lopez's main love interest in The Wedding Planner?", 'answer': 'Matthew McConaughey', 'category': 'Jennifer Lopez'}, {'question': 'The film Hustlers follows a group of exotic dancers who first meet and become friends during what decade?', 'answer': 'the 2000s', 'category': 'Jennifer Lopez'}, {'question': 'What horror franchise has featured such actors as Patricia Arquette, Breckin Meyer, Jackie Earle Haley, and Johnny Depp?', 'answer': 'A Nightmare on Elm Street', 'category': 'Horror'}, {'question': 'Mary Elizabeth Winstead and Joel Edgerton star in what 2011 horror film set in the Antarctic?', 'answer': 'The Thing', 'category': 'Horror'}, {'question': 'Who directed the 2015 found footage horror film The Visit?', 'answer': 'M. Night Shyamalan', 'category': 'Horror'}, {'question': "In what 1978 horror classic does a killer escape from the Smith's Grove sanitarium and embark on a killing spree?", 'answer': 'Halloween', 'category': 'Horror'}, {'question': 'Who plays the character known as El Mariachi in Once Upon a Time in Mexico?', 'answer': 'Antonio Banderas', 'category': 'Action/Adventure'}, {'question': 'What 1970s classic drama has performances by Robert Duvall, Ned Beatty, Faye Dunaway, and William Holden?', 'answer': 'Network', 'category': 'Dramas'}, {'question': "Tom Hanks' character is a tech giant whose company oversees products such as SeeChange and Soul Search in which film featuring John Boyega?", 'answer': 'The Circle', 'category': 'Tom Hanks'}, {'question': 'The 2020 courtroom drama The Trial of the Chicago 7 was written and directed by whom?', 'answer': 'Aaron Sorkin', 'category': 'Directors'}, {'question': "Which actress starred in the rom-coms Raising Helen, My Best Friend's Girl, and Something Borrowed?", 'answer': 'Kate Hudson', 'category': 'Rom-Coms'}, {'question': 'Tom Holland and Chris Pratt portray brothers in what 2020 Pixar film?', 'answer': 'Onward', 'category': 'Animated'}, {'question': 'Carl Franklin directed Denzel Washington and Don Cheadle in what 1995 American neo-noir mystery thriller?', 'answer': 'Devil in a Blue Dress', 'category': 'Black Cinema'}, {'question': 'Tom Cruise plays a race car driver alongside Robert Duvall and Nicole Kidman in what 1990 film?', 'answer': 'Days of Thunder', 'category': '1990s'}, {'question': 'Which SNL actor stars as the character Scott in the 2020 comedy The King of Staten Island?', 'answer': 'Pete Davidson', 'category': 'Comedies'}, {'question': 'Who plays L. B. "Jeff" Jefferies, who is confined to a wheelchair, in the 1954 Hitchcock classic Rear Window?', 'answer': 'James Stewart', 'category': 'Mystery'}, {'question': 'Which actor starred in the comedies Long Shot and An American Pickle?', 'answer': 'Seth Rogen', 'category': 'Famous Actors & Actresses'}, {'question': 'Who play the characters of John and Jane in Mr. & Mrs. Smith?', 'answer': 'Brad Pitt, Angelina Jolie', 'category': 'N/A'}, {'question': 'Emily Blunt co-stars with Joseph Gordon-Levitt in what film from director Rian Johnson?', 'answer': 'Looper', 'category': 'Emily Blunt'}, {'question': 'Emily Blunt plays the female lead in what movie, which is a reboot of a Universal monster property?', 'answer': 'The Wolfman', 'category': 'Emily Blunt'}, {'question': "Emily Blunt has a cameo as Miss Piggy's assistant in which film that stars the Muppets?", 'answer': 'The Muppets', 'category': 'Emily Blunt'}, {'question': "Emily Blunt's character works for what government agency at the beginning of Sicario before being enlisted to a special ops task force?", 'answer': 'the FBI', 'category': 'Emily Blunt'}, {'question': "After serving as a naval officer, Robert Redford's Hubbell returns to what Hollywood profession, which allows him an affluent lifestyle, in The Way We Were?", 'answer': 'a screenwriter', 'category': '1970s'}, {'question': "Who plays Frederick Frankenstein in 1974's Young Frankenstein?", 'answer': 'Gene Wilder', 'category': '1970s'}, {'question': 'Rudy Ray Moore stars as a pimp who takes on his enemies in what 1975 blaxploitation movie?', 'answer': 'Dolemite', 'category': '1970s'}, {'question': 'What 1978 movie stars Richard Gere as a farm worker involved in a romantic triangle during the 1910s?', 'answer': 'Days of Heaven', 'category': '1970s'}, {'question': 'In what film does Tom Cruise star as Colonel Claus Schenk Graf von Stauffenberg, the German army Colonel who was instrumental in the conspiracy to assassinate Adolf Hitler?', 'answer': 'Valkyrie', 'category': 'Tom Cruise'}, {'question': "Mike Ditka plays himself helping Will Ferrell's character in what soccer film?", 'answer': 'Kicking & Screaming', 'category': 'Sports'}, {'question': 'Nick Nolte and Jessica Lange co-star in what thriller from director Martin Scorsese?', 'answer': 'Cape Fear', 'category': 'Thriller'}, {'question': 'For what film did Leonardo receive this first acting Oscar nomination?', 'answer': "What's Eating Gilbert Grape", 'category': 'Leonardo DiCaprio'}, {'question': 'What 1954 musical is set in the Pacific Northwest state of Oregon and stars Howard Keel and Jane Powell?', 'answer': 'Seven Brides for Seven Brothers', 'category': 'Musicals'}, {'question': "Which Star Wars actress plays famous Supreme Court justice Ruth Bader Ginsburg in 2018's On the Basis of Sex?", 'answer': 'Felicity Jones', 'category': 'Dramas'}, {'question': 'Who plays the title character in the 1999 thriller The Talented Mr. Ripley?', 'answer': 'Matt Damon', 'category': '1990s'}, {'question': 'Who voices the character Mushu the dragon in the 1998 film Mulan?', 'answer': 'Eddie Murphy', 'category': 'Animated'}, {'question': "Who directed the crime films Blood Simple, Miller's Crossing, and The Man Who Wasn't There?", 'answer': 'Joel Coen, Ethan Coen', 'category': 'Directors'}, {'question': 'Which actor starred in the lead roles of the classic 1950s epics The Ten Commandments and Ben-Hur?', 'answer': 'Charlton Heston', 'category': 'Famous Actors & Actresses'}, {'question': 'Which actor stars as a CIA operative who has to look after a 9-year-old girl in the 2020 comedy My Spy?', 'answer': 'Dave Bautista', 'category': 'Comedies'}, {'question': 'Which actor provides the voice of the kingly lion Aslan in the 2005 film The Chronicles of Narnia: The Lion, the Witch and the Wardrobe?', 'answer': 'Liam Neeson', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what 2016 movie does Michael Fassbender play Callum Lynch, a man who explores the memories of an ancestor to gain deadly skills?', 'answer': "Assassin's Creed", 'category': 'Action/Adventure'}, {'question': 'Who directed The Last Temptation of Christ?', 'answer': 'Martin Scorsese', 'category': 'N/A'}, {'question': 'Which real-life professional basketball player stars as street ball legend Uncle Drew in Uncle Drew?', 'answer': 'Kyrie Irving', 'category': 'Sports'}, {'question': 'The 2015 film McFarland, USA primarily revolves around which sport?', 'answer': 'cross country running', 'category': 'Sports'}, {'question': 'Jackie Moon is the owner, head coach, power forward, and pre-game announcer for the Flint Tropics in which comedy?', 'answer': 'Semi-Pro', 'category': 'Sports'}, {'question': 'Which actress plays Maureen Hope, the wife to Billy Hope that is tragically killed, in the film Southpaw?', 'answer': 'Rachel McAdams', 'category': 'Sports'}, {'question': 'Who voices Melman, hypochondriac reticulated giraffe who is afraid of germs in the Madagascar franchise?', 'answer': 'David Schwimmer', 'category': 'DreamWorks Animation'}, {'question': 'Steve Martin and Martin Short have supporting performances in what 1990s DreamWorks film?', 'answer': 'The Prince of Egypt', 'category': 'DreamWorks Animation'}, {'question': 'Which 2010s DreamWorks film has a main villain named Lord Shen, who uses gunpowder and weapons for nefarious purposes?', 'answer': 'Kung Fu Panda 2', 'category': 'DreamWorks Animation'}, {'question': 'Who voices Oscar, a comical streetwise bluestreak cleaner wrasse who works in the Whale Wash in Shark Tale?', 'answer': 'Will Smith', 'category': 'DreamWorks Animation'}, {'question': 'Which male popstar provides the voice of the character Branch in the film Trolls?', 'answer': 'Justin Timberlake', 'category': 'DreamWorks Animation'}, {'question': 'In what 80s film will you find the characters Goose, Iceman, and Merlin?', 'answer': 'Top Gun', 'category': '1980s'}, {'question': "In 1979's Breaking Away, four working-class teens face off against snobby university students in which sport?", 'answer': 'cycling', 'category': 'Coming of Age'}, {'question': "You'll find Christopher Plummer as Henri le Pigeon, a pigeon of French descent who oversees construction of the Statue of Liberty, in what 1986 animated film?", 'answer': 'An American Tail', 'category': 'Animated'}, {'question': 'Which actress co-starred in the rom-coms Forgetting Sarah Marshall and Friends with Benefits?', 'answer': 'Mila Kunis', 'category': 'Rom-Coms'}, {'question': 'Which actor plays the villainous Maxwell Lord in Wonder Woman 1984?', 'answer': 'Pedro Pascal', 'category': 'Comic Book'}, {'question': 'Who received Oscar nominations for his performances in the films Bonnie and Clyde, Mississippi Burning, and Unforgiven, the latter of which he won for?', 'answer': 'Gene Hackman', 'category': 'Oscars'}, {'question': 'Who directed Pete Davidson in the 2020 comedy The King of Staten Island?', 'answer': 'Judd Apatow', 'category': 'New Releases'}, {'question': 'Which actor starred in the 1990s action films Passenger 57, Drop Zone, and Murder at 1600?', 'answer': 'Wesley Snipes', 'category': 'Action/Adventure'}, {'question': 'What 2007 comedy has the following tagline: "They\'re bad boys. They\'re die hards. They\'re lethal weapons."?', 'answer': 'Hot Fuzz', 'category': 'Comedies'}, {'question': 'Ryan Gosling plays a private detective Holland March in what 2016 film from director Shane Black?', 'answer': 'The Nice Guys', 'category': 'Mystery'}, {'question': "Who starred as Todd Howard, a teenager who discovers that he is a werewolf, in 1987's Teen Wolf Too?", 'answer': 'Jason Bateman', 'category': '1980s'}, {'question': 'To date, how many times has Henry Cavill played Superman?', 'answer': '3 (Man of Steel, Batman v Superman, Justice League)', 'category': 'Superman'}, {'question': 'In Superman II, there is a hostage situation involving terrorists taking over which landmark?', 'answer': 'the Eiffel Tower', 'category': 'Superman'}, {'question': "What is the name of Lex Luthor's company in Batman v Superman?", 'answer': 'LexCorp', 'category': 'Superman'}, {'question': "Who is credited as Superman's father Jor-El in Superman Returns?", 'answer': 'Marlon Brando', 'category': 'Superman'}, {'question': 'Tyler Perry appears as politician, diplomat, and general Colin Powell in what film?', 'answer': 'Vice', 'category': 'Tyler Perry'}, {'question': 'Which Tyler Perry film has the taglines "Trick or treat, fools."?', 'answer': 'Boo! A Madea Halloween', 'category': 'Tyler Perry'}, {'question': 'Many of the films directed by Tyler Perry, including Meet the Browns, take place in what southern United State?', 'answer': 'Georgia', 'category': 'Tyler Perry'}, {'question': 'Who plays a sadistic killer Picasso, who the title character is trying to apprehend, in Alex Cross?', 'answer': 'Matthew Fox', 'category': 'Tyler Perry'}, {'question': 'Who plays Truman Capote in the Bennett Miller directed film Capote?', 'answer': 'Philip Seymour Hoffman', 'category': 'Biopics'}, {'question': "In Sweet Home Alabama, who plays Reese Witherspoon's socialite fiancé Andrew?", 'answer': 'Patrick Dempsey', 'category': 'Rom-Coms'}, {'question': 'Who directed the 1998 reimagining of Godzilla?', 'answer': 'Roland Emmerich', 'category': 'Disaster'}, {'question': 'In which 2018 Disney film will you find the Hundred Acre Wood and hear about creatures known as Heffalumps and Woozles?', 'answer': 'Christopher Robin', 'category': 'Disney'}, {'question': 'What 2014 remake of a 1980s romance movie stars Gabriella Wilde, Alex Pettyfer, and Bruce Greenwood?', 'answer': 'Endless Love', 'category': 'Remakes & Reboots'}, {'question': 'What famous comedic actor directed the films Reality Bites, The Cable Guy, and The Secret Life of Walter Mitty?', 'answer': 'Ben Stiller', 'category': 'Directors'}, {'question': 'Which rapper stars as Captain Antoine Mack in the 2004 film Soul Plane?', 'answer': 'Snoop Dogg', 'category': 'Black Cinema'}, {'question': 'Jake Gyllenhaal, Rebecca Ferguson, and Ryan Reynolds play scientists on the International Space Station in what 2017 sci-fi horror film? ', 'answer': 'Life', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What classic film coined the line "There\'s no place like home."?', 'answer': 'The Wizard of Oz', 'category': 'Quotes'}, {'question': 'Kumail Nanjiani and Issa Rae star as a couple who gets caught up in a murder mystery in what 2020 comedy?', 'answer': 'The Lovebirds', 'category': 'New Releases'}, {'question': 'Which actress starred in and wrote the screenplay for the 2019 comedy Late Night?', 'answer': 'Mindy Kaling', 'category': 'Comedies'}, {'question': "Which 2018 film follows the relationship of musicians Jackson and Ally Maine, whose love is threatened by Jackson's alcoholism?", 'answer': 'A Star Is Born', 'category': 'Dramas'}, {'question': 'Which Oscar-winning actor plays the marble-mouthed criminal Fred Fenster in the film The Usual Suspects?', 'answer': 'Benicio del Toro', 'category': 'Mystery'}, {'question': 'Who directed the 2019 film Knives Out?', 'answer': 'Rian Johnson', 'category': 'Mystery'}, {'question': 'Who received a Best Actress Oscar nomination for her performance as Amy Dunne in the 2014 film Gone Girl?', 'answer': 'Rosamund Pike', 'category': 'Mystery'}, {'question': 'What 1985 film from director Barry Levinson tells how the famous characters Sherlock Holmes and Dr. Watson first met?', 'answer': 'Young Sherlock Holmes', 'category': 'Mystery'}, {'question': 'Which actress plays Emily, a wealthy young mother who mysteriously disappears in the 2018 film A Simple Favor?', 'answer': 'Blake Lively', 'category': 'Mystery'}, {'question': 'Oprah Winfrey appeared in which film from director Steven Spielberg?', 'answer': 'The Color Purple', 'category': 'Oprah Winfrey'}, {'question': 'Who directed the films Selma and A Wrinkle In Time, in which Oprah appeared?', 'answer': 'Ava DuVernay', 'category': 'Oprah Winfrey'}, {'question': 'Oprah Winfrey appears in what 1986 film from director Jerrod Freedman, which also co-stars Matt Dillon, Victor Love, and Elizabeth McGovern?', 'answer': 'Native Son', 'category': 'Oprah Winfrey'}, {'question': 'Which comedic actress plays the character Mrs. Who in the film A Wrinkle in Time?', 'answer': 'Mindy Kaling', 'category': 'Oprah Winfrey'}, {'question': "Who plays Grace, the daughter of Bruce Willis' character in Armageddon?", 'answer': 'Liv Tyler', 'category': 'Disaster'}, {'question': 'Who plays the main lead Walter Sparrow in The Number 23?', 'answer': 'Jim Carrey', 'category': 'Thriller'}, {'question': "Who plays Scrooge in 1992's The Muppet Christmas Carol?", 'answer': 'Michael Caine', 'category': 'Disney'}, {'question': 'Nicole Kidman and Hugh Jackman co-star in what 2008 war drama?', 'answer': 'Australia', 'category': 'War'}, {'question': 'Which Marvel actor stars as the character Tommy, opposite Carey Mulligan and Keira Knightley, in the 2010 drama Never Let Me Go?', 'answer': 'Andrew Garfield', 'category': '2010s'}, {'question': 'What 2009 comedy has the line "You guys might not know this, but I consider myself a bit of a loner. I tend to think of myself as a one-man wolf pack."?', 'answer': 'The Hangover', 'category': 'Quotes'}, {'question': 'Which Oscar-winning actor stars as U.S. Navy Commander Ernest Krause in the 2020 war film Greyhound?', 'answer': 'Tom Hanks', 'category': 'New Releases'}, {'question': "What 2000s action film follows a master car thief named Memphis, who must steal fifty cars with his crew in one night, to save his brother's life?", 'answer': 'Gone in 60 Seconds', 'category': 'Action/Adventure'}, {'question': 'Which actress co-starred with Justin Timberlake in the rom-com Friends with Benefits, playing the character of Jamie?', 'answer': 'Mila Kunis', 'category': 'Rom-Coms'}, {'question': 'What year saw the release of the sequels Patriot Games, Lethal Weapon 3, Alien 3, and Pet Sematary Two?', 'answer': '1992', 'category': 'Release Dates'}, {'question': 'Paul Weitz directed the third film in the Meet the Parents franchise. What was the title of the film?', 'answer': 'Little Fockers', 'category': 'Comedies'}, {'question': 'Robin Williams has been nominated for an Academy Award for Best Actor for three films. What was the second film to garner him this at the 1990 Oscars?', 'answer': 'Dead Poets Society', 'category': 'Oscars'}, {'question': "Which actress appears in the following films: Mars Attacks!, The Natural, and 2004's The Stepford Wives?", 'answer': 'Glenn Close', 'category': 'Famous Actors & Actresses'}, {'question': 'Rawson M. Thurber directed Jason Sudeikis and Jennifer Aniston in what 2013 comedy?', 'answer': "We're the Millers", 'category': 'N/A'}, {'question': 'In Super Mario Bros. what is the name of the girl whom Mario and Luigi travel to an alternate dimension to save?', 'answer': 'Daisy', 'category': 'Video Game'}, {'question': 'What franchise had an installment with the subtitle The Legend of Chun-Li?', 'answer': 'Street Fighter', 'category': 'Video Game'}, {'question': 'Which actor plays the lead Sergeant John "Reaper" Grimm in the 2005 video game adaptation Doom?', 'answer': 'Karl Urban', 'category': 'Video Game'}, {'question': 'In the Angry Birds Movie franchise, what is the name of the island that the birds live on?', 'answer': 'Bird Island', 'category': 'Video Game'}, {'question': "What is the name of the secret government facility that a virus escapes from in 2002's Resident Evil?", 'answer': 'the Hive', 'category': 'Video Game'}, {'question': 'What 1999 sci-fi adventure movie, based on a video game, stars Freddie Prinze Jr. and Matthew Lillard?', 'answer': 'Wing Commander', 'category': 'Video Game'}, {'question': 'Sirens are heard every time before a nightmarish dimension appears in what 2006 horror film?', 'answer': 'Silent Hill', 'category': 'Horror'}, {'question': 'What horror franchise features such actors as David Arquette, Matthew Lillard, and Emma Roberts?', 'answer': 'Scream', 'category': 'Horror'}, {'question': 'What Stephen King adaptation had a 90s sequel with the subtitle The Rage?', 'answer': 'Carrie', 'category': 'Horror'}, {'question': "Who directed 2003's The Texas Chainsaw Massacre and 2009's Friday the 13th?", 'answer': 'Marcus Nispel', 'category': 'Horror'}, {'question': 'Which actress stars as Anna Tate-Garcia in the film The Curse of La Llorona?', 'answer': 'Linda Cardellini', 'category': 'Horror'}, {'question': 'In how many films did Bela Lugosi play Dracula?', 'answer': '2 (Dracula, Abbott and Costello Meet Frankenstein)', 'category': 'Horror'}, {'question': "Who co-starred alongside Denzel Washington as Det. Richie Roberts, the man bent on bringing down Denzel's Frank Lucas, in 2007's American Gangster?", 'answer': 'Russell Crowe', 'category': 'Denzel Washington'}, {'question': "Liam Neeson, Ed Harris, Joel Kinnaman, and Vincent D'Onofrio star in this 2015 action thriller.", 'answer': 'Run All Night', 'category': 'Action/Adventure'}, {'question': 'Which movie franchise has featured performances from Samuel L. Jackson, Julianne Moore, William H. Macy, and Bryce Dallas Howard?', 'answer': 'Jurassic Park', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What year saw the release of the animated films Tangled, Despicable Me, and Toy Story 3?', 'answer': '2010', 'category': 'Release Dates'}, {'question': 'Reese Witherspoon, Carl Weathers, Harvey Keitel, and Rhys Ifans appear in what Adam Sandler film?', 'answer': 'Little Nicky', 'category': '2000s'}, {'question': "Which actress appears in the films The Perks of Being a Wallflower, This Is the End, and 2019's Little Women?", 'answer': 'Emma Watson', 'category': 'Famous Actors & Actresses'}, {'question': 'Who directed the epic 2020 drama Da 5 Bloods?', 'answer': 'Spike Lee', 'category': 'Dramas'}, {'question': "Who co-starred as Arnold Schwarzenegger's unlikely brother in the 1988 comedy Twins?", 'answer': 'Danny DeVito', 'category': 'Comedies'}, {'question': 'Which Oscar-winning actress turned director for the following films: Home for the Holidays, The Beaver, and Money Monster?', 'answer': 'Jodie Foster', 'category': 'Directors'}, {'question': 'Which David Fincher film follows a wealthy banker who becomes involved with a mysterious company called Consumer Recreation Services, or CRS?', 'answer': 'The Game', 'category': 'Mystery'}, {'question': 'Sigourney Weaver plays Louise Walker, a warden at the juvenile detention center Camp Green Lake, in what 2003 film?', 'answer': 'Holes', 'category': 'Sigourney Weaver'}, {'question': 'Sigourney Weaver starred in Aliens and what other film from director James Cameron?', 'answer': 'Avatar', 'category': 'Sigourney Weaver'}, {'question': 'Who co-stars with Sigourney Weaver as the title character in 1993 comedy Dave?', 'answer': 'Kevin Kline', 'category': 'Sigourney Weaver'}, {'question': 'What 1981 political thriller stars William Hurt, Sigourney Weaver, and Christopher Plummer?', 'answer': 'Eyewitness', 'category': 'Sigourney Weaver'}, {'question': 'What famous singer won an Oscar for his performance in From Here to Eternity?', 'answer': 'Frank Sinatra', 'category': 'Classics'}, {'question': "Who won a Best Actress Oscar for 1968's The Lion in Winter?", 'answer': 'Katherine Hepburn', 'category': 'Classics'}, {'question': 'You\'ll hear the line, "If you can\'t say something nice, don\'t say nothing at all." in what 1940s Disney film?', 'answer': 'Bambi', 'category': 'Classics'}, {'question': 'Who directed the films The Magnificent Ambersons, Journey into Fear, and The Stranger?', 'answer': 'Orson Welles', 'category': 'Classics'}, {'question': 'Which Steven Spielberg film co-stars Lorraine Gary, Murray Hamilton, and Roy Scheider?', 'answer': 'Jaws', 'category': 'Steven Spielberg'}, {'question': 'Who voices the character of Doc Ock in Spider-Man: Into the Spider-Verse?', 'answer': 'Kathryn Hahn', 'category': 'Animated'}, {'question': "Which famous musical artist plays a drug addict named Spoon in the 1997 comedy crime film Gridlock'd?", 'answer': 'Tupac Shakur', 'category': 'Thriller'}, {'question': 'In what 1996 comedy will you find the following line: "Why don\'t you just go home? That\'s your home! Are you too good for your home? Answer me!"?', 'answer': 'Happy Gilmore', 'category': 'Quotes'}, {'question': "Who plays the lead role of United States Marine Corps Staff Sergeant Michael Nantz in 2011's Battle: Los Angeles?", 'answer': 'Aaron Eckhart', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Dr. Richard Kimble is framed for the murder of his wife in what 1993 film from director Andrew Davis?', 'answer': 'The Fugitive', 'category': 'Action/Adventure'}, {'question': 'Andy Samberg, Jennifer Aniston, and Kelsey Grammer lent their voices to what 2016 animated film from directors Nicholas Stoller and Doug Streetland?', 'answer': 'Storks', 'category': 'Animated'}, {'question': 'Joe Wright directed Keira Knightley, Rosamund Pike, and Matthew Macfayden in what film based on a Jane Austen novel?', 'answer': 'Pride & Prejudice', 'category': 'Romance'}, {'question': 'Who plays the lead role of Josh Kovaks alongside Eddie Murphy and Matthew Broderick in Tower Heist?', 'answer': 'Ben Stiller', 'category': 'Comedies'}, {'question': 'Michael Crichton directed what 1984 sci-fi action film starring Tom Selleck that is set in the near future?', 'answer': 'Runaway', 'category': '1980s'}, {'question': "Who plays Daniels, the chief of terraforming for the Covenant mission and the wife/widow of the ship's captain, Jacob Branson, in Alien: Covenant?", 'answer': 'Katherine Waterston', 'category': 'Horror/Thriller'}, {'question': "Who plays Starr Carter's mother, Lisa Carter, in 2018's The Hate U Give?", 'answer': 'Regina Hall', 'category': 'Black Cinema'}, {'question': 'Kasi Lemmons directed Don Cheadle in what 2007 film, about Washington, D.C. radio personality Ralph "Petey" Greene, an ex-con who became a popular talk show host?', 'answer': 'Talk to Me', 'category': 'Black Cinema'}, {'question': 'Which actor appeared in the following films: Dolemite Is My Name, The Art of War, and New Jack City?', 'answer': 'Wesley Snipes', 'category': 'Black Cinema'}, {'question': 'Who plays the titular Undercover Brother, also known as Anton Jackson, in the 2002 comedy Undercover Brother?', 'answer': 'Eddie Griffin', 'category': 'Black Cinema'}, {'question': 'Who plays BP manager Donald Vidrine, who orders the well to be flowed, in Deepwater Horizon?', 'answer': 'John Malkovich', 'category': 'Disaster'}, {'question': "In 2012's The Impossible, the Bennett family go on a Christmas holiday to what country?", 'answer': 'Thailand', 'category': 'Disaster'}, {'question': "Who co-stars alongside Bill Paxton as Dr. Jo Harding in 1996's Twister?", 'answer': 'Helen Hunt', 'category': 'Disaster'}, {'question': "Who directed Dwayne Johnson in 2018's Skyscraper?", 'answer': 'Rawson Marshall Thurber', 'category': 'Disaster'}, {'question': "Which actor plays the highly advanced robotic boy David in Spielberg's A.I. Artificial Intelligence?", 'answer': 'Haley Joel Osment', 'category': 'Steven Spielberg'}, {'question': 'Steven Spielberg directed two films that were released in 2011. Name one.', 'answer': 'The Adventures of Tintin, War Horse', 'category': 'Directors'}, {'question': 'Two movies share the record for the most Oscar nominations without a single win, at 11 nominations each. Name one of them.', 'answer': 'The Turning Point, The Color Purple', 'category': 'Oscars'}, {'question': 'What famous rap artist plays the character Doughboy in Boyz n the Hood?', 'answer': 'Ice Cube', 'category': 'Crime'}, {'question': "Who directed Brad Pitt in 2011's Moneyball?", 'answer': 'Bennett Miller', 'category': 'Brad Pitt'}, {'question': "What 2000 film from director Troy Duffy follows two Irish Catholic brothers who become vigilantes and wipe out Boston's criminal underworld?", 'answer': 'The Boondock Saints', 'category': 'Crime'}, {'question': "Who directed the 1980s films She's Having a Baby and Uncle Buck?", 'answer': 'John Hughes', 'category': '1980s'}, {'question': 'What was the first collaboration between director Steven Spielberg and actor Richard Dreyfuss?', 'answer': 'Jaws', 'category': 'Horror/Thriller'}, {'question': 'Which legendary actor is the voice of Mufasa in both the animated and live-action versions of The Lion King?', 'answer': 'James Earl Jones', 'category': 'Family'}, {'question': 'Which director is behind the films Lady Bird and Little Women?', 'answer': 'Greta Gerwig', 'category': 'Directors'}, {'question': 'What 1980s spoof comedy has the line "I am your father\'s brother\'s nephew\'s cousin\'s former roommate."?', 'answer': 'Spaceballs', 'category': 'Comedies'}, {'question': 'Which Star Wars actor plays the protagonist David Rice in the 2008 film Jumper?', 'answer': 'Hayden Christensen', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays a Civil War veteran who agrees to deliver a girl, taken by the Kiowa people years ago, to find her aunt and uncle in the 2020 film News of the World?', 'answer': 'Tom Hanks', 'category': 'New Releases'}, {'question': 'Sean Penn, Josh Brolin, and James Franco star in what 2008 biographical drama?', 'answer': 'Milk', 'category': 'N/A'}, {'question': 'Who plays Manhattan food writer Rachel Samstat in the Nora Ephron penned film Heartburn?', 'answer': 'Meryl Streep', 'category': 'Nora Ephron'}, {'question': 'Nora Ephron made her directorial debut with what 1992 film?', 'answer': 'This Is My Life', 'category': 'Nora Ephron'}, {'question': "Steve Martin's character runs what type of nonprofit service in the comedy Mixed Nuts?", 'answer': 'a crisis hotline', 'category': 'Nora Ephron'}, {'question': 'Which actress appeared in both of these Nora Ephron penned films: When Harry Met Sally... and Hanging Up?', 'answer': 'Meg Ryan', 'category': 'Nora Ephron'}, {'question': 'Whoopi Goldberg won an Oscar for portraying the character Ode Mae Brown in which 1990 film?', 'answer': 'Ghost', 'category': 'Whoopi Goldberg'}, {'question': 'Whoopi Goldberg had her first comedic leading role in what 1986 Penny Marshall film?', 'answer': "Jumpin' Jack Flash", 'category': 'Whoopi Goldberg'}, {'question': 'In the 1996 comedy Eddie, Whoopi Goldberg plays a fan who becomes a coach of what professional sport?', 'answer': 'basketball', 'category': 'Whoopi Goldberg'}, {'question': 'Who stars with Whoopi Goldberg in the 1996 courtroom drama Ghosts of Mississippi as the real-life DA Bobby DeLaughter?', 'answer': 'Alec Baldwin', 'category': 'Whoopi Goldberg'}, {'question': 'In Inglourious Basterds, what does Lieutenant Aldo Raine order each of his men to collect from 100 Nazis?', 'answer': 'scalps', 'category': 'Quentin Tarantino'}, {'question': 'Paul Dano and John Cusack co-star as famed musician Brian Wilson at different points of his life in what 2015 film?', 'answer': 'Love & Mercy', 'category': 'Biopics'}, {'question': 'Which Oscar-winning actor voices the Warden, the no-nonsense head of Metro City Prison, in Megamind?', 'answer': 'J. K. Simmons', 'category': 'Animated'}, {'question': 'Which actor appeared in the films Natural Born Killers, Back to School, and Home for the Holidays?', 'answer': 'Robert Downey Jr.', 'category': 'Famous Actors & Actresses'}, {'question': 'What 1990s Eddie Murphy film featuring Martin Lawrence has the tagline "A Player Who\'s About To Be Played."?', 'answer': 'Boomerang', 'category': 'Rom-Coms'}, {'question': 'In what 2000s comedy will you hear J. K. Simmons say "I want you boys to know. You\'re both my best friends... and Hank Mardukas"?', 'answer': 'I Love You, Man', 'category': 'Quotes'}, {'question': "Which actor stars as an ordinary man who is given superintelligence and telekinesis after seeing a bright light in the sky in 1996's Phenomenon?", 'answer': 'John Travolta', 'category': '1990s'}, {'question': 'What is the name of the 2003 western, directed by and starring Kevin Costner, about a former gunslinger who is forced to take up arms again when he is threatened by a corrupt lawman?', 'answer': 'Open Range', 'category': 'Westerns'}, {'question': "You'll find Jessica Simpson, James Roday Rodriguez, Willie Nelson, and Burt Reynolds in what 2005 film?", 'answer': 'The Dukes of Hazzard', 'category': 'Comedies'}, {'question': 'Which actress has been nominated for three Best Supporting Actress Oscars, the first of which was for the film Mississippi Burning?', 'answer': 'Frances McDormand', 'category': 'Oscars'}, {'question': 'In what action film does Sylvester Stallone say the line "In town you\'re the law, out here it\'s me. Don\'t push it! Don\'t push it or I\'ll give you a war you won\'t believe."?', 'answer': 'First Blood', 'category': 'Action/Adventure'}, {'question': 'Which actor voices the character of Turbo, a garden snail, in the film Turbo?', 'answer': 'Ryan Reynolds', 'category': 'DreamWorks Animation'}, {'question': 'In what 2010s DreamWorks Animation film will you find WABAC, the Wayback Machine?', 'answer': 'Mr. Peabody & Sherman', 'category': 'DreamWorks Animation'}, {'question': "Which actor voices Adam Flayman, who is Barry B. Benson's best friend, in Bee Movie?", 'answer': 'Matthew Broderick', 'category': 'DreamWorks Animation'}, {'question': 'Which DreamWorks film has such characters as B.O.B., Dr. Cockroach, Link, and Insectosaurus?', 'answer': 'Monsters vs. Aliens', 'category': 'DreamWorks Animation'}, {'question': 'Which Oscar-winning actor co-stars with Ryan Gosling in the 2007 legal thriller Fracture?', 'answer': 'Anthony Hopkins', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'Jeremy Irons won a Best Actor Oscar for playing a real-life murder defendant Claus von Bülow in what film?', 'answer': 'Reversal of Fortune', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': "Who directed Tom Cruise in 1993's The Firm?", 'answer': 'Sydney Pollack', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'In what classic film does Henry Fonda play Abraham Lincoln when he was a trial lawyer, prior to taking up politics?', 'answer': 'Young Mr. Lincoln', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'Do the Right Thing and Major League were both released in what year?', 'answer': '1989', 'category': 'Release Dates'}, {'question': 'Who won their only Academy Award for Best Supporting Actor in Million Dollar Baby?', 'answer': 'Morgan Freeman', 'category': 'N/A'}, {'question': "Who played Norman Bates in 1998's Psycho?", 'answer': 'Vince Vaughn', 'category': 'N/A'}, {'question': 'Who directed the films Quiz Show and The Horse Whisperer?', 'answer': 'Robert Redford', 'category': 'N/A'}, {'question': 'Which actress was nominated for her role as Charlene Fleming in The Fighter?', 'answer': 'Amy Adams', 'category': 'N/A'}, {'question': 'What Mel Brooks film features ludicrous speed and the Schwartz?', 'answer': 'Spaceballs', 'category': 'N/A'}, {'question': "Who provided the musical score for 1979's Alien?", 'answer': 'Jerry Goldsmith', 'category': 'N/A'}, {'question': 'Who played Ash Williams in Army of Darkness?', 'answer': 'Bruce Campbell', 'category': 'N/A'}, {'question': 'Who plays law student Ellen Roark in A Time to Kill?', 'answer': 'Sandra Bullock', 'category': 'N/A'}, {'question': "Who voices Mr. Fox in 2009's Fantastic Mr. Fox?", 'answer': 'George Clooney', 'category': 'N/A'}, {'question': 'In what year were the films The Shawshank Redemption and The Mask released?', 'answer': '1994', 'category': 'N/A'}, {'question': 'Name the 1999 horror movie that cost just $35,000 to make and grossed over $140 million in the United States.', 'answer': 'The Blair Witch Project', 'category': 'Horror'}, {'question': 'Who composed the scores for the 2019 films Dumbo and Men in Black: International?', 'answer': 'Danny Elfman', 'category': 'Scores & Soundtracks'}, {'question': 'Which Marvel Cinematic Universe actress stars as a nanny for a rich New York family in The Nanny Diaries?', 'answer': 'Scarlett Johansson', 'category': 'Family'}, {'question': "Freddy Helflin, a town sheriff, idolizes the NYPD and once hoped to become an officer, but couldn't because he's death in one ear, in what 1997 film?", 'answer': 'Cop Land', 'category': 'Crime'}, {'question': 'Malcolm D. Lee made his directorial debut with what 1999 romantic comedy featuring Monica Calhoun and Terrence Howard?', 'answer': 'The Best Man', 'category': 'Black Cinema'}, {'question': 'What 1990s thriller from director Andrew Davis was a remake of the Alfred Hitchcock film Dial M for Murder?', 'answer': 'A Perfect Murder', 'category': 'Thriller'}, {'question': 'Which 2010 DreamWorks film opens with the narration "This is Berk. It\'s twelve days north of Hopeless and a few degrees south of Freezing to Death."?', 'answer': 'How to Train Your Dragon', 'category': 'Animated'}, {'question': 'Which actor stars as James Cole, a convict who is sent back in time in the 1990s film 12 Monkeys?', 'answer': 'Bruce Willis', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who directed the films Big Fish and Big Eyes?', 'answer': 'Tim Burton', 'category': 'Directors'}, {'question': 'Which 2010 film stars Jay Baruchel and Alice Eve, and is about an average Joe who struggles with self confidence when he starts dating the perfect woman?', 'answer': "She's Out of My League", 'category': 'Rom-Coms'}, {'question': 'Which Oscar-winning actor plays the titular grandfather in the 2020 family film The War With Grandpa?', 'answer': 'Robert De Niro', 'category': 'New Releases'}, {'question': 'What 1983 comedy has characters named Clark, Rusty, Aunt Edna, and Cousin Eddie?', 'answer': "National Lampoon's Vacation", 'category': 'Comedies'}, {'question': 'What 2009 film, directed by Spike Jonze, is about a boy named Max who travels to an island of talking creatures who make him their king?', 'answer': 'Where the Wild Things Are', 'category': 'Family'}, {'question': 'Which action franchise features characters named Barney Ross, Lee Christmas, Yin Yang, and Gunnar Jensen?', 'answer': 'The Expendables', 'category': 'Action/Adventure'}, {'question': 'Who directed The Bourne Ultimatum?', 'answer': 'Paul Greengrass', 'category': 'Matt & Ben'}, {'question': 'In Stuck on You, conjoined twins Bob and Walt run what type of establishment?', 'answer': 'a burger restaurant', 'category': 'Matt & Ben'}, {'question': "Which actress plays Ben Affleck's love interest in the drama Bounce?", 'answer': 'Gwyneth Paltrow', 'category': 'Matt & Ben'}, {'question': 'Which actor plays mathematics professor Gerald Lambeau in Good Will Hunting?', 'answer': 'Stellan Skarsgård', 'category': 'Matt & Ben'}, {'question': 'Who directed Robin Williams and Jeff Bridges in The Fisher King?', 'answer': 'Terry Gilliam', 'category': 'Festival Darlings'}, {'question': 'Which actor plays drifter Graham Dalton, who has a collection of women on videotape, in the film Sex, Lies, and Videotape?', 'answer': 'James Spader', 'category': 'Festival Darlings'}, {'question': 'Which Oscar nominee plays Juliette Paxton, a soccer player for the Hounslow Harriers in the film Bend It Like Beckham?', 'answer': 'Keira Knightley', 'category': 'Festival Darlings'}, {'question': "Who directed 2014's Whiplash?", 'answer': 'Damien Chazelle', 'category': 'Festival Darlings'}, {'question': 'Who stars alongside Tom Hanks as gifted inmate John Coffey in The Green Mile?', 'answer': 'Michael Clarke Duncan', 'category': 'Tom Hanks'}, {'question': 'In what 2004 comedy featuring Chris Parnell and Fred Willard will you hear the line "It\'s so damn hot... milk was a bad choice."?', 'answer': 'Anchorman: The Legend of Ron Burgundy', 'category': 'Comedies'}, {'question': 'For what film did Anna Paquin win her Oscar?', 'answer': 'The Piano', 'category': 'Oscars'}, {'question': 'Which Oscar-winning actor plays Harlan Thrombey, patriarch of a dysfunctional upper class family in Knives Out?', 'answer': 'Christopher Plummer', 'category': 'Mystery'}, {'question': 'Which actress plays the protagonist Cecilia Kass in the 2020 film The Invisible Man?', 'answer': 'Elisabeth Moss', 'category': 'New Releases'}, {'question': "Who won an Academy Award for playing Sophie Zawistowski in 1982's Sophie's Choice?", 'answer': 'Meryl Streep', 'category': '1980s'}, {'question': 'Isaac Hayes performed the title song to what 1971 film about a famous "black private dick"?', 'answer': 'Shaft', 'category': 'Black Cinema'}, {'question': 'What 1933 classic adventure film coined the line "it wasn\'t the airplanes. It was beauty killed the beast."?', 'answer': 'King Kong', 'category': 'Quotes'}, {'question': 'Dave Matthews, Jennifer Aniston, and Nicole Kidman appear in what 2010s Adam Sandler film?', 'answer': 'Just Go with It', 'category': 'Comedies'}, {'question': 'Wally Pfister directed Paul Bettany, Rebecca Hall, and Johnny Depp in what 2014 film about a man doing controversial experiments to create a sentient machine?', 'answer': 'Transcendence', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor played detective Alex Cross in the thrillers Kiss the Girls and Along Came a Spider?', 'answer': 'Morgan Freeman', 'category': 'Horror/Thriller'}, {'question': 'Bradley Cooper takes a drug known as NZT-48, that gives its user perfect recall, in what 2011 film?', 'answer': 'Limitless', 'category': 'N/A'}, {'question': 'Who plays the lead female character of Ronnie Miller in the Nicholas Sparks film The Last Song?', 'answer': 'Miley Cyrus', 'category': 'Romance'}, {'question': "Who stars alongside Gene Kelly and Donald O'Connor in Singin' in the Rain?", 'answer': 'Debbie Reynolds', 'category': 'Romance'}, {'question': 'Shailene Woodley and Sam Claflin star in this romantic drama.', 'answer': 'Adrift', 'category': 'Romance'}, {'question': "Who stars as Ben Affleck's love interest in 2004's Surviving Christmas?", 'answer': 'Christina Applegate', 'category': 'Romance'}, {'question': 'In what film does Scarlett Johansson play a character named Silken Floss?', 'answer': 'The Spirit', 'category': 'Scarlett Johansson'}, {'question': 'Scarlett Johansson voiced the character of Princess Mindy in this 2004 live-action/animation hybrid film by Nickelodeon.', 'answer': 'The SpongeBob SquarePants Movie', 'category': 'Scarlett Johansson'}, {'question': 'Who directed Scarlett Johansson in the 2006 crime thriller The Black Dahlia?', 'answer': 'Brian De Palma', 'category': 'Scarlett Johansson'}, {'question': 'What is the name of the computer operating system that Scarlett Johansson voiced in Her?', 'answer': 'Samantha', 'category': 'Scarlett Johansson'}, {'question': 'Who plays the character of Albert Johnson, also known as Mister, in The Color Purple?', 'answer': 'Danny Glover', 'category': 'Steven Spielberg'}, {'question': "1943's Casablanca was directed by whom?", 'answer': 'Michael Curtiz', 'category': 'Classics'}, {'question': 'Brad Pitt received his first Oscar nomination for what Terry Gilliam sci-fi film?', 'answer': '12 Monkeys', 'category': 'Brad Pitt'}, {'question': "Joey King plays Brooklyn Harding, Michael Caine's granddaughter, in what 2010s film also featuring Morgan Freeman?", 'answer': 'Going in Style', 'category': 'Remakes & Reboots'}, {'question': 'Who stars as a dog owner named John Thornton in the 2020 adventure film The Call of the Wild?', 'answer': 'Harrison Ford', 'category': 'New Releases'}, {'question': 'Which actor appears in the sci-fi films Aliens, Predator 2, The Terminator, and Edge of Tomorrow?', 'answer': 'Bill Paxton', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what 90s film does Tom Cruise say the line "Help me... help you."?', 'answer': 'Jerry Maguire', 'category': 'Quotes'}, {'question': 'Which Games of Thrones actress stars as a young woman who falls for a paralyzed man in the 2016 film Me Before You?', 'answer': 'Emilia Clarke', 'category': 'Romance'}, {'question': 'William Zabka plays Johnny Lawrence in what 1984 film?', 'answer': 'The Karate Kid', 'category': '1980s'}, {'question': 'What wrestler plays the sports-minded dad Mitchell Mannes in the 2018 comedy Blockers?', 'answer': 'John Cena', 'category': 'Comedies'}, {'question': 'Which actress stars as an art gallery owner named Susan Morrow in the 2016 thriller Nocturnal Animals?', 'answer': 'Amy Adams', 'category': 'Horror/Thriller'}, {'question': 'Who stars in the 1990s action thriller Cliffhanger about a former mountain rescuer who is pitted against a group of criminals who have lost their $100 million?', 'answer': 'Sylvester Stallone', 'category': '1990s'}, {'question': 'Which year saw the release of Kill Bill: Volume 2?', 'answer': '2004', 'category': 'Release Dates'}, {'question': 'The Adam Sandler comedy Big Daddy came out in which year of the 1990s?', 'answer': '1999', 'category': 'Release Dates'}, {'question': 'The horror classic The Exorcist came out on December 26 of what year?', 'answer': '1973', 'category': 'Release Dates'}, {'question': 'In what year was Shutter Island released?', 'answer': '2010', 'category': 'Release Dates'}, {'question': 'What classic war film won seven Oscars including but not limited to Best Actor, Best Original Screenplay, and Best Director?', 'answer': 'Patton', 'category': 'War'}, {'question': 'The 2006 movie Flyboys follows the escapades of volunteer American aviators during which war?', 'answer': 'World War I', 'category': 'War'}, {'question': 'Who directed Black Hawk Down?', 'answer': 'Ridley Scott', 'category': 'War'}, {'question': "Who played First Lieutenant Rafe McCawley in 2001's Pearl Harbor?", 'answer': 'Ben Affleck', 'category': 'War'}, {'question': 'Snoop Dogg and Dr. Dre appeared alongside Denzel Washington in what 2000s crime drama?', 'answer': 'Training Day', 'category': 'Crime'}, {'question': "Who stars as an underachieving gambler, who ends up coaching a Little League team, in 2001's Hardball?", 'answer': 'Keanu Reeves', 'category': 'Sports'}, {'question': 'What famous actor directed the political drama Lions for Lambs, and also co-starred with Tom Cruise in the movie?', 'answer': 'Robert Redford', 'category': 'Tom Cruise'}, {'question': "Who plays J. Edgar Hoover in 2011's J. Edgar?", 'answer': 'Leonardo DiCaprio', 'category': 'Biopics'}, {'question': "Who plays Susan Parrish, a resident in internal medicine and Pitt's love interest, in Meet Joe Black?", 'answer': 'Claire Forlani', 'category': 'Brad Pitt'}, {'question': 'This 1998 DreamWorks film won the Best Original Song Oscar for the song "When You Believe"?', 'answer': 'The Prince of Egypt', 'category': 'Animated'}, {'question': 'Who stars as a snowplow driver who seeks out revenge against the drug dealers who killed his son in the 2019 film Cold Pursuit?', 'answer': 'Liam Neeson', 'category': 'Action/Adventure'}, {'question': 'Rick Famuyiwa directed Shameik Moore and Tony Revolori in what 2015 film about a geeky teen navigating life in a tough neighborhood?', 'answer': 'Dope', 'category': 'Black Cinema'}, {'question': 'Who plays Hannibal Lecktor in the 1986 Michael Mann directed Manhunter?', 'answer': 'Brian Cox', 'category': 'Horror/Thriller'}, {'question': 'What 90s animated Disney film features the songs \'You\'ll Be in My Heart", "Son of Man", and "Trashin\' the Camp"?', 'answer': 'Tarzan', 'category': 'Animated'}, {'question': 'Who won a Best Original Screenplay Oscar for the classic 1960s film The Producers?', 'answer': 'Mel Brooks', 'category': 'Oscars'}, {'question': 'Which former SNL actor stars as a man reliving the same day over and over again in the 2020 comedy Palm Springs?', 'answer': 'Andy Samberg', 'category': 'Comedies'}, {'question': 'Greg Berlanti directed Nick Robinson in what 2018 teen romance film about a teenage boy who begins communicating with someone named Blue?', 'answer': 'Love, Simon', 'category': 'Romance'}, {'question': "Who stars as master magician Balthazar Blake in the 2010 fantasy film The Sorcerer's Apprentice?", 'answer': 'Nicolas Cage', 'category': 'Family'}, {'question': 'Which actor starred in the films Layer Cake, Defiance, and The Invasion?', 'answer': 'Daniel Craig', 'category': 'N/A'}, {'question': 'Anna Paquin and Holly Hunter both won Oscars for this 1993 film.', 'answer': 'The Piano', 'category': 'Oscars'}, {'question': "In Steven Spielberg's 1997 film Amistad, who was the only performer to be nominated for an acting Oscar?", 'answer': 'Anthony Hopkins', 'category': 'Oscars'}, {'question': 'Several films have had the distinct honor of being nominated for all four acting awards. Name the most recent film to accomplish this feat.', 'answer': 'American Hustle', 'category': 'Oscars'}, {'question': 'Which song from The Lion King won the Oscar for Best Original Song at the 1995 Oscars?', 'answer': 'Can You Feel the Love Tonight', 'category': 'Oscars'}, {'question': 'Will Ferrell provides the voice of the title character in what 2010s DreamWorks film?', 'answer': 'Megamind', 'category': 'DreamWorks Animation'}, {'question': 'Which 1998 computer-animated film was the first DreamWorks animated feature?', 'answer': 'Antz', 'category': 'DreamWorks Animation'}, {'question': "Which Oscar-winning actress provides the voice of Valka, Hiccup's mother, in the How to Train Your Dragon franchise?", 'answer': 'Cate Blanchett', 'category': 'DreamWorks Animation'}, {'question': 'In the film Captain Underpants, what is the profession of Mr. Krupp, a man who is hypnotized into becoming the title hero?', 'answer': 'an elementary school principal', 'category': 'DreamWorks Animation'}, {'question': 'Tom Cruise performs the Journey song "Don\'t Stop Believin\'" in the finale of what film?', 'answer': 'Rock of Ages', 'category': 'Tom Cruise'}, {'question': "Who stars as lawman Eliot Ness in 1987's The Untouchables?", 'answer': 'Kevin Costner', 'category': 'Crime'}, {'question': 'Who plays Ernie Capadino, the AAGPBL scout, in A League of Their Own?', 'answer': 'Jon Lovitz', 'category': 'Tom Hanks'}, {'question': 'In what Tarantino film will you find minor characters named Big John Brittle and Billy Crash?', 'answer': 'Django Unchained', 'category': 'Quentin Tarantino'}, {'question': 'What Disney animated film follows the characters Quasimodo, Esmeralda, and Judge Claude Frollo?', 'answer': 'The Hunchback of Notre Dame', 'category': 'Animated'}, {'question': 'Who plays James Bond in the 1983 film Never Say Never Again?', 'answer': 'Sean Connery', 'category': '1980s'}, {'question': 'Who plays the real-life screenwriter Herman J. Mankiewicz in the 2020 film Mank?', 'answer': 'Gary Oldman', 'category': 'Dramas'}, {'question': 'Which 1990s action film starring Arnold Schwarzenegger has the tagline "When he said I do, he never said what he did."?', 'answer': 'True Lies', 'category': 'Action/Adventure'}, {'question': "Michael B. Jordan plays the real-life individual Oscar Grant III, whose life takes a tragic turn on New Year's Eve 2008, in what 2013 film?", 'answer': 'Fruitvale Station', 'category': 'Black Cinema'}, {'question': 'Garry Marshall directed Anne Hathaway, Chris Pine, and Julie Andrews in what 2004 film?', 'answer': 'The Princess Diaries 2: Royal Engagement', 'category': 'Comedies'}, {'question': 'What year saw the release of the franchise reboots Casino Royale, Superman Returns, and The Pink Panther?', 'answer': '2006', 'category': 'Release Dates'}, {'question': 'What 1996 horror comedy featuring Jake Busey, Dee Wallace, Jeffrey Combs, and Chi McBride has the tagline "Death is no way to make a living!"?', 'answer': 'The Frighteners', 'category': 'Horror/Thriller'}, {'question': 'Who stars as FBI agent John Crawford, opposite Jet Li, in the 2007 film War?', 'answer': 'Jason Statham', 'category': 'Martial Arts'}, {'question': 'What 2000s martial arts epic involves a sword called the Green Destiny?', 'answer': 'Crouching Tiger, Hidden Dragon', 'category': 'Martial Arts'}, {'question': 'Who starred in and directed the 2005 martial arts comedy Kung Fu Hustle?', 'answer': 'Stephen Chow', 'category': 'Martial Arts'}, {'question': 'Who starred as himself in the 1993 martial arts family film Sidekicks?', 'answer': 'Chuck Norris', 'category': 'Martial Arts'}, {'question': "What enchanted instrument puts the terrifying three-headed dog to sleep in Harry Potter and the Sorcerer's Stone?", 'answer': 'a harp', 'category': 'Wizarding World'}, {'question': 'Who took on the post of Potions master at Hogwarts in The Half-Blood Prince?', 'answer': 'Horace Slughorn', 'category': 'Wizarding World'}, {'question': 'Who plays Professor Lupin in the Harry Potter series?', 'answer': 'David Thewlis', 'category': 'Wizarding World'}, {'question': 'Who directed Harry Potter and the Goblet of Fire?', 'answer': 'Mike Newell', 'category': 'Wizarding World'}, {'question': 'Which Oscar nominee lends his voice to the eccentric, but intelligent and heroic, chameleon Rango in Rango?', 'answer': 'Johnny Depp', 'category': 'Animated'}, {'question': 'While passing away before he could complete it, Kubrick was working on this film that was taken over by Steven Spielberg and released in 2001. What was the movie?', 'answer': 'A.I. Artificial Intelligence', 'category': 'Steven Spielberg'}, {'question': 'In Inside Out, Anger says "Congratulations San Francisco, you\'ve ruined" what type of food?', 'answer': 'pizza', 'category': 'Pixar'}, {'question': 'Gabriel Yulaw, once an agent of the MultiVerse Authority that polices interdimensional travel, seeks to hunt down all variations of himself in alternate universes in what Jet Li film?', 'answer': 'The One', 'category': 'Martial Arts'}, {'question': 'Which actor appeared in the films Black Belt Jones, Black Samurai, and Enter the Dragon?', 'answer': 'Jim Kelly', 'category': 'Black Cinema'}, {'question': 'What 2018 spy film features supporting performances from Charlotte Rampling, Mary-Louise Parker, Ciarán Hinds, and Jeremy Irons?', 'answer': 'Red Sparrow', 'category': 'Spy'}, {'question': 'Who directed the rom-coms Say Anything..., Elizabethtown, and Aloha?', 'answer': 'Cameron Crowe', 'category': 'Rom-Coms'}, {'question': 'What kids sports film involves a neighborhood dog nicknamed "the Beast"?', 'answer': 'The Sandlot', 'category': 'Family'}, {'question': 'What 1996 martial arts film stars Jackie Chan as a young man visiting and helping his uncle in America, only to find himself forced to fight a street gang and the mob with his martial arts skills?', 'answer': 'Rumble in the Bronx', 'category': 'Martial Arts'}, {'question': 'Miloš Forman directed what 1970s Best Picture winning film that also won Jack Nicholson his first Oscar?', 'answer': "One Flew Over the Cuckoo's Nest", 'category': 'Dramas'}, {'question': 'Sam Worthington, Liam Neeson, Rosamund Pike, and Ralph Fiennes star in what 2012 film from director Jonathan Liebesman?', 'answer': 'Wrath of the Titans', 'category': 'Action/Adventure'}, {'question': 'Which comedian co-starred with Chris Farley in the films Tommy Boy and Black Sheep?', 'answer': 'David Spade', 'category': 'Comedies'}, {'question': 'Who took over the role of Clarice Starling from Jodie Foster in the 2001 film Hannibal?', 'answer': 'Julianne Moore', 'category': 'Horror/Thriller'}, {'question': "Which actor has received a Best Actor Oscar nomination for his role as the trumpet player Levee in Ma Rainey's Black Bottom?", 'answer': 'Chadwick Boseman', 'category': 'New Releases'}, {'question': 'Which actor plays Zach Mitchell in Jurassic World?', 'answer': 'Nick Robinson', 'category': 'Jurassic Park'}, {'question': 'Which character gives the speech that ends The Lost World: Jurassic Park?', 'answer': 'John Hammond', 'category': 'Jurassic Park'}, {'question': "What is the name of Bryce Dallas Howard's character in Jurassic World?", 'answer': 'Claire Dearing', 'category': 'Jurassic Park'}, {'question': 'Who plays Benjamin Lockwood in Fallen Kingdom?', 'answer': 'James Cromwell', 'category': 'Jurassic Park'}, {'question': 'Which Jurassic film features performances from Alessandro Nivola, Michael Jeter, and Trevor Morgan?', 'answer': 'Jurassic Park III', 'category': 'Jurassic Park'}, {'question': 'In Jurassic World: Fallen Kingdom, the Lockwood Estate is in what U.S. state?', 'answer': 'California', 'category': 'Jurassic Park'}, {'question': "Who played the part of Don Lockwood in 1952's Singin' in the Rain?", 'answer': 'Gene Kelly', 'category': 'Dance'}, {'question': 'What type of dance is depicted in the 1977 film The Turning Point?', 'answer': 'ballet', 'category': 'Dance'}, {'question': 'This actor played the stripper Ken in Magic Mike and Magic Mike XXL.', 'answer': 'Matt Bomer', 'category': 'Dance'}, {'question': 'This actor took over the role of Reverend Shaw Moore in the 2011 remake of Footloose.', 'answer': 'Dennis Quaid', 'category': 'Dance'}, {'question': 'What actor plays the character of Tyler Gage in Step Up and Step Up 2: The Streets?', 'answer': 'Channing Tatum', 'category': 'Dance'}, {'question': 'What is the name of the mascot of the rival school that is led by Gabrielle Union in Bring It On?', 'answer': 'the Clovers', 'category': 'Dance'}, {'question': 'What is the title of the sixth film in the Rocky franchise, released in 2006?', 'answer': 'Rocky Balboa', 'category': 'Sports'}, {'question': 'This 2020 film features performances by Henry Golding, Colin Farrell, and Hugh Grant.', 'answer': 'The Gentlemen', 'category': 'New Releases'}, {'question': 'Which actor wrote and directed the 2000s biopic Into the Wild, starring Emile Hirsch?', 'answer': 'Sean Penn', 'category': 'Biopics'}, {'question': 'Christoph Waltz plays Dr. Dyson Ido, a renowned cyborg scientist and part-time bounty hunter, in what 2010s sci-fi film?', 'answer': 'Alita: Battle Angel', 'category': 'Fantasy/Sci-Fi'}, {'question': "Sean Connery starred in 1983's Never Say Never Again, which was a remake of what earlier James Bond film in which he also starred?", 'answer': 'Thunderball', 'category': 'Spy'}, {'question': 'In what Adam Sandler film will you find the character of Jim Friedman, who names one of his daughters after the ESPN channel?', 'answer': 'Blended', 'category': 'Rom-Coms'}, {'question': 'What 1990s historical epic film is known for the line "They may take our lives, but they\'ll never take... our freedom!"?', 'answer': 'Braveheart', 'category': 'Quotes'}, {'question': 'Who plays the lead role of Samantha Caine, who has no memory of her past or who she is, in the 1996 film The Long Kiss Goodnight?', 'answer': 'Geena Davis', 'category': 'Action/Adventure'}, {'question': 'What 1998 film from director Terry Gilliam features performances from Tobey Maguire, Ellen Barkin, Gary Busey, and Benicio del Toro?', 'answer': 'Fear and Loathing in Las Vegas', 'category': '1990s'}, {'question': 'Which actor stars as a detective named Loki, who is investigating child abductions in the film Prisoners?', 'answer': 'Jake Gyllenhaal', 'category': 'Mystery'}, {'question': 'Who directed the films Death Becomes Her, Romancing the Stone, and Who Framed Roger Rabbit?', 'answer': 'Robert Zemeckis', 'category': 'Directors'}, {'question': 'Elliot Page plays an unexpectedly pregnant teenager in what 2007 Jason Reitman film, alongside Michael Cera and J. K. Simmons?', 'answer': 'Juno', 'category': 'Comedies'}, {'question': 'Leonardo DiCaprio received his first Best Lead Actor nomination for what 2004 film?', 'answer': 'The Aviator', 'category': 'Oscars'}, {'question': "Who plays LAPD Lieutenant Vincent Hanna in 1995's Heat?", 'answer': 'Al Pacino', 'category': 'Crime'}, {'question': 'What heist film was directed by Edgar Wright and starred the actors Lily James and Jamie Foxx?', 'answer': 'Baby Driver', 'category': 'N/A'}, {'question': 'Who directed Mission: Impossible – Ghost Protocol?', 'answer': 'Brad Bird', 'category': 'Action/Adventure'}, {'question': 'Which James Cameron film has the line "There\'s no such thing as an ex-Marine. You may be out, but you never lose the attitude."?', 'answer': 'Avatar', 'category': 'Action/Adventure'}, {'question': 'Who plays the villainous Russell Van Pelt in Jumanji: Welcome to the Jungle?', 'answer': 'Bobby Cannavale', 'category': 'Action/Adventure'}, {'question': 'John Rambo travels back to Vietnam for a mission in which number installment in the Rambo franchise?', 'answer': '2', 'category': 'Action/Adventure'}, {'question': 'You\'ll find the characters of Annie Porter, Lieutenant Herb "Mac" McMahon, and Howard Payne in what 1994 action film?', 'answer': 'Speed', 'category': 'Action/Adventure'}, {'question': "1989's Black Rain stars Michael Douglas and Andy García as two New York cops who become involved with a gang war in what foreign country?", 'answer': 'Japan', 'category': 'Action/Adventure'}, {'question': 'Bruce Willis, Morgan Freeman, and Helen Mirren play former CIA operatives in this 2010 film.', 'answer': 'Red', 'category': 'Comic Book'}, {'question': "Who plays Chris D'Amico, also known as Red Mist, in 2010's Kick-Ass?", 'answer': 'Christopher Mintz-Plasse', 'category': 'Comic Book'}, {'question': 'Which actress plays Domino in Deadpool 2?', 'answer': 'Zazie Beetz', 'category': 'Comic Book'}, {'question': 'Who voices the first Peter Parker we meet in Spider-Man: Into the Spider-Verse?', 'answer': 'Chris Pine', 'category': 'Comic Book'}, {'question': 'Who plays the villain Valentine in Kingsman: The Secret Service?', 'answer': 'Samuel L. Jackson', 'category': 'Comic Book'}, {'question': 'In what entry of the Men in Black franchise will you find a fast-running alien known as a Cephalapoid?', 'answer': 'Men in Black', 'category': 'Comic Book'}, {'question': 'Who played the role of Evelyn in The Mummy and The Mummy Returns?', 'answer': 'Rachel Weisz', 'category': 'Action/Adventure'}, {'question': "In Mary Poppins Returns, which iconic actor plays the role of Mr. Dawes Jr, Mr. Wilkins' uncle?", 'answer': 'Dick Van Dyke', 'category': 'Musicals'}, {'question': 'What 1950s Disney film features the supporting characters Jock, Trusty, and Peg?', 'answer': 'Lady and the Tramp', 'category': 'Animated'}, {'question': 'Director Roland Emmerich famously reimagined what Japanese monster for the big screen in 1998 alongside actors Matthew Broderick and Maria Pitillo?', 'answer': 'Godzilla', 'category': '1990s'}, {'question': 'In what 1993 western starring Kurt Russell does he say "You tell \'em I\'m coming... and hell\'s coming with me, you hear?... Hell\'s coming with me!"?', 'answer': 'Tombstone', 'category': 'Westerns'}, {'question': 'Who directed the films Fast Times at Ridgemont High, Clueless, and Johnny Dangerously?', 'answer': 'Amy Heckerling', 'category': 'Directors'}, {'question': 'This horror franchise has installments that have been directed by filmmakers such as Steve Miner, Rob Zombie, and David Gordon Green.', 'answer': 'Halloween', 'category': 'Horror/Thriller'}, {'question': "Who stars as Dr. Paul Kersey, who becomes obsessed with delivering vigilante justice after his family is attacked during a home invasion, in 2018's Death Wish?", 'answer': 'Bruce Willis', 'category': 'Remakes & Reboots'}, {'question': 'This 1991 comedy starring Steve Martin, Diane Keaton, and Martin Short features the tagline "Love is wonderful. Until it happens to your only daughter."?', 'answer': 'Father of the Bride', 'category': 'Comedies'}, {'question': 'Which animated Disney film features the characters of the Cheshire Cat and the Queen of Hearts?', 'answer': 'Alice in Wonderland', 'category': 'Animated'}, {'question': "This actress appeared in the following films: 2014's Teenage Mutant Ninja Turtles, Eddie, and Rat Race.", 'answer': 'Whoopi Goldberg', 'category': 'Famous Actors & Actresses'}, {'question': 'Which 1994 comedy features the line "We got no food, we got no jobs... our pets\' heads are falling off!"?', 'answer': 'Dumb and Dumber', 'category': 'N/A'}, {'question': "Which comedian plays a version of herself in the 1994 film It's Pat?", 'answer': 'Kathy Griffin', 'category': 'SNL'}, {'question': 'In Coneheads, which actress plays Prymaat Conehead, who is married to Beldar?', 'answer': 'Jane Curtin', 'category': 'SNL'}, {'question': "In Wayne's World, Wayne and Garth host a public access show that is on what number TV channel?", 'answer': '10', 'category': 'SNL'}, {'question': 'In Stuart Saves his Family, Stuart Smalley had been hit by a car as a child while his family was trying to take a photo in front of which famous U.S. landmark?', 'answer': 'the Hollywood sign', 'category': 'SNL'}, {'question': 'Which music icon co-stars with Kevin Hart in the 2014 film Ride Along?', 'answer': 'Ice Cube', 'category': 'Kevin Hart'}, {'question': "Which actress plays Kevin Hart's love interest Joan in the 2014 rom-com About Last Night?", 'answer': 'Regina Hall', 'category': 'Kevin Hart'}, {'question': 'Kevin Hart has a cameo as an air marshal in which film in the Fast & Furious franchise?', 'answer': 'Fast & Furious Presents: Hobbs & Shaw', 'category': 'Kevin Hart'}, {'question': 'Who directed the 2019 film The Upside?', 'answer': 'Neil Burger', 'category': 'Kevin Hart'}, {'question': 'Phil Lord and Chris Miller directed what 2012 comedy based on a TV show?', 'answer': '21 Jump Street', 'category': 'Comedies'}, {'question': "Who plays Sergeant Mike Horvath, who answers directly to Tom Hanks' character on their mission to find Ryan, in the film Saving Private Ryan?", 'answer': 'Tom Sizemore', 'category': 'Modern Classics'}, {'question': 'Who plays the older version of Noah in The Notebook?', 'answer': 'James Garner', 'category': 'Romance'}, {'question': 'Frank Oz directed what 1990s comedy starring Bill Murray and Richard Dreyfuss?', 'answer': 'What About Bob?', 'category': '1990s'}, {'question': 'Which actor stars as Bernard Webber, a Coast Guard crewman, in the film The Finest Hours?', 'answer': 'Chris Pine', 'category': 'Disaster'}, {'question': 'Which famous actor starred in, and directed, the post-apocalyptic 2020 film The Midnight Sky?', 'answer': 'George Clooney', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Riz Ahmed stars as a heavy metal drummer whose life is thrown into freefall when he begins to lose his hearing in what 2020 film?', 'answer': 'Sound of Metal', 'category': 'New Releases'}, {'question': 'Who received Best Director nominations for the films The Elephant Man, Blue Velvet, and Mulholland Drive?', 'answer': 'David Lynch', 'category': 'Oscars'}, {'question': 'Which actor appears in the films Family Business, Highlander, and The Presidio?', 'answer': 'Sean Connery', 'category': '1980s'}, {'question': 'Who directed the 2018 western anthology film The Ballad of Buster Scruggs, which included actors such as Liam Neeson, Tim Blake Nelson, and Stephen Root?', 'answer': 'Joel Coen, Ethan Coen', 'category': 'Westerns'}, {'question': 'What 2000 SNL comedy stars Tim Meadows as Leon Phelps, a suave black man and broadcast host who would give dubious romantic advice and lovemaking tips?', 'answer': 'The Ladies Man', 'category': 'Comedies'}, {'question': 'Constance Wu, Lili Reinhart, and Keke Palmer co-star as New York City strippers in what 2019 film?', 'answer': 'Hustlers', 'category': 'Dramas'}, {'question': "Carl Reiner directed what comedian in the 1982 neo-noir comedy mystery film Dead Men Don't Wear Plaid in the lead role of private investigator Rigby Reardon?", 'answer': 'Steve Martin', 'category': 'Mystery'}, {'question': 'Evan Peters makes his first appearance as Peter Maximoff / Quicksilver in what film?', 'answer': 'X-Men: Days of Future Past', 'category': 'N/A'}, {'question': 'Who directed Stand by Me?', 'answer': 'Rob Reiner', 'category': 'Stephen King'}, {'question': 'Which Stephen King adaptation features supporting performances from the actors Danny Lloyd, Barry Nelson, and Tony Burton?', 'answer': 'The Shining', 'category': 'Stephen King'}, {'question': "Who stars as a young girl with pyrokinetic powers in 1984's Firestarter?", 'answer': 'Drew Barrymore', 'category': 'Stephen King'}, {'question': 'What famous horror director helmed the 1993 Stephen King adaptation The Dark Half?', 'answer': 'George A. Romero', 'category': 'Stephen King'}, {'question': "Who plays Jud Crandall, neighbor of the Creed family, in 1989's Pet Sematary?", 'answer': 'Fred Gwynne', 'category': 'Stephen King'}, {'question': 'Which Stephen King adaptation has a scene in which a boy is mocked for listening to New Kids on the Block on his Walkman?', 'answer': 'It', 'category': 'Stephen King'}, {'question': "In 2004's The Phantom of the Opera, who starred as Christine Daaé?", 'answer': 'Emmy Rossum', 'category': 'Musicals'}, {'question': "In his first musical role, Christian Bale played Jack Kelly in what 1992 Disney film about the New York City Newsboys' Strike of 1899?", 'answer': 'Newsies', 'category': 'Musicals'}, {'question': 'Who directed the 1979 movie adaptation of the Broadway hit Hair?', 'answer': 'Miloš Forman', 'category': 'Musicals'}, {'question': "Who starred as Bob Wallace's partner, Phil Davis, in White Christmas?", 'answer': 'Danny Kaye', 'category': 'Musicals'}, {'question': 'Which 2000s musical has songs on its soundtrack like "Come Together", "Girl", and "Helter Skelter"?', 'answer': 'Across the Universe', 'category': 'Musicals'}, {'question': "Who plays Anita, Bernardo's girlfriend and Maria's closest confidante, in 1961's West Side Story?", 'answer': 'Rita Moreno', 'category': 'Musicals'}, {'question': 'Who stars as scientist Jake Lawson in the film Geostorm?', 'answer': 'Gerard Butler', 'category': 'Disaster'}, {'question': 'Steven Spielberg has won how many Best Director Oscars?', 'answer': "2 (for Schindler's List, Saving Private Ryan)", 'category': 'Steven Spielberg'}, {'question': 'Who plays Christopher Anton "Cavi" Vichon, a cabby and secret rapper, who later befriends Dre in the 2002 film Brown Sugar?', 'answer': 'Mos Def', 'category': 'Black Cinema'}, {'question': 'What classic Disney musical features the songs "Step in Time" and "Let\'s Go Fly a Kite"?', 'answer': 'Mary Poppins', 'category': 'Musicals'}, {'question': 'Which actor stars in the 2020 film The Way Back as Jack Cunningham, a high school basketball coach searching for redemption?', 'answer': 'Ben Affleck', 'category': 'New Releases'}, {'question': 'Sam Raimi directed what 1995 western starring Sharon Stone, Gene Hackman, Leonardo DiCaprio, and Russell Crowe?', 'answer': 'The Quick and the Dead', 'category': 'Westerns'}, {'question': 'Back in Business and The Next Cut are installments in what comedy franchise?', 'answer': 'Barbershop', 'category': 'Black Cinema'}, {'question': 'What 1999 comedy film features performances from Kel Mitchell, Janeane Garofalo, Paul Reubens, and Greg Kinnear?', 'answer': 'Mystery Men', 'category': '1990s'}, {'question': 'Who plays the character of Buttercup in The Princess Bride?', 'answer': 'Robin Wright', 'category': 'Fantasy/Sci-Fi'}, {'question': "In what 2004 comedy will you find the characters Patches O'Houlihan, White Goodman, and Steve the Pirate?", 'answer': 'Dodgeball: A True Underdog Story', 'category': 'Comedies'}, {'question': 'Aileen Quinn, Albert Finney, and Carol Burnett star in what 1982 musical family film from director John Huston?', 'answer': 'Annie', 'category': 'Musicals'}, {'question': "Which actor appeared in the films Almost Famous, Before the Devil Knows You're Dead, and Along Came Polly?", 'answer': 'Philip Seymour Hoffman', 'category': 'Famous Actors & Actresses'}, {'question': 'What 1990s rom-com features supporting performances from Matt Dillon, Chris Elliott, and Brett Favre?', 'answer': "There's Something About Mary", 'category': 'N/A'}, {'question': "Which actress plays Margie, the mother of Pete Davidson's character in The King of Staten Island?", 'answer': 'Marisa Tomei', 'category': 'New Releases'}, {'question': 'Which 2020 animated film features the voice talents of Justin Timberlake, Anna Kendrick, and Rachel Bloom?', 'answer': 'Trolls World Tour', 'category': 'New Releases'}, {'question': "Who plays Roy Schlieffen, another person who is trapped within the time loop and blames Andy Samberg's Nyles for it, in Palm Springs?", 'answer': 'J. K. Simmons', 'category': 'New Releases'}, {'question': 'Which film from director George Nolfi follows two African-American businessmen who hire a working-class white man to pretend to be the head of their business?', 'answer': 'The Banker', 'category': 'New Releases'}, {'question': 'Which comedian turned talk show host directed the comedy Irresistible, which stars Steve Carell?', 'answer': 'Jon Stewart', 'category': 'New Releases'}, {'question': "What is the military rank of Tom Hanks' character in the war film Greyhound?", 'answer': 'Commander', 'category': 'New Releases'}, {'question': 'The films Young Guns, They Live, Die Hard, and Beetlejuice were released in what year?', 'answer': '1988', 'category': 'Release Dates'}, {'question': 'The Verdict, Missing, and Tootsie all came out in what year?', 'answer': '1982', 'category': 'Release Dates'}, {'question': "Guillermo del Toro's first U.S. production, Mimic, was released in what year?", 'answer': '1997', 'category': 'Release Dates'}, {'question': 'What year saw the release of Best Picture nominee Dallas Buyers Club?', 'answer': '2013', 'category': 'Release Dates'}, {'question': '12 Angry Men and The Bridge on the River Kwai both competed for Best Picture and were released in what year?', 'answer': '1957', 'category': 'Release Dates'}, {'question': 'Before Sunrise was released in 1995. Which year saw the last installment of the Before trilogy, Before Midnight released?', 'answer': '2013', 'category': 'Release Dates'}, {'question': 'Walter Matthau plays Mr. Wilson in what 1993 film based on a classic comic strip character?', 'answer': 'Dennis the Menace', 'category': 'Family'}, {'question': 'Tony Shalhoub plays the lead role of Arthur Kriticos in what 2001 horror remake with Matthew Lillard?', 'answer': 'Thirteen Ghosts', 'category': 'Horror'}, {'question': 'What 2000 crime film starred Sylvester Stallone and was a remake of a 1971 Michael Caine film?', 'answer': 'Get Carter', 'category': 'Remakes & Reboots'}, {'question': 'In what 80s film is a veteran Green Beret forced by a cruel sheriff and his deputies to flee into the mountains and wage a one-man war against his pursuers?', 'answer': 'First Blood', 'category': 'Action/Adventure'}, {'question': 'Which 1980s film famously features the song "Oh Yeah" performed by the band Yello?', 'answer': "Ferris Bueller's Day Off", 'category': 'Scores & Soundtracks'}, {'question': 'In what 2007 comedy featuring Seth Rogen will you hear the line "Life doesn\'t care about your vision. You just gotta roll with it."?', 'answer': 'Knocked Up', 'category': 'Quotes'}, {'question': 'Jack Black, Emily Blunt, Jason Segel, and Amanda Peet all appear in this 2010 comedic family film from director Rob Letterman based on a novel by Jonathan Swift.', 'answer': "Gulliver's Travels", 'category': 'Family'}, {'question': 'Michael B. Jordan and Sylvester Stallone star in which 2018 boxing film from director Steven Caple Jr.?', 'answer': 'Creed II', 'category': 'Sports'}, {'question': 'Sean Connery starred in The Presidio in 1988 which took place in San Francisco. He returned to the Golden Gate City in 1996 for what action film directed by Michael Bay?', 'answer': 'The Rock', 'category': 'Action/Adventure'}, {'question': 'Which actor played the role of Peter Parker in The Amazing Spider-Man?', 'answer': 'Andrew Garfield', 'category': 'Comic Book'}, {'question': 'Which actress plays the role of Veronica Corningstone in Anchorman: The Legend of Ron Burgundy?', 'answer': 'Christina Applegate', 'category': 'Comedies'}, {'question': 'Mandy Moore and Zachary Levi lent their voices to this 2010 Walt Disney animated film.', 'answer': 'Tangled', 'category': 'Animated'}, {'question': 'Who plays the role of William H. Bonney, also known as Billy the Kid, in both Young Guns and Young Guns II?', 'answer': 'Emilio Estevez', 'category': 'Westerns'}, {'question': "Who played Ben Healy, who is the adoptive father of Junior, in 1990's Problem Child?", 'answer': 'John Ritter', 'category': 'Comedies'}, {'question': 'In Spaceballs, what is the name of the ruler of Planet Spaceball played by Mel Brooks?', 'answer': 'President Skroob', 'category': 'Comedies'}, {'question': "In Kicking & Screaming, which actor plays Will Ferrell's father Buck Weston?", 'answer': 'Robert Duvall', 'category': 'Comedies'}, {'question': "Marisa Tomei plays Kate Tafferty, an English teacher who Steve Carell's character has a fling with, in which movie?", 'answer': 'Crazy, Stupid, Love.', 'category': 'Comedies'}, {'question': 'Which actor plays the role of Jigsaw / John Kramer in the Saw franchise?', 'answer': 'Tobin Bell', 'category': 'Horror'}, {'question': 'In the film 28 Days Later, the highly contagious and rage-inducing virus is unleashed upon Great Britain after a group of animal activists free what animal?', 'answer': 'chimpanzees', 'category': 'Horror'}, {'question': 'In which 2017 horror movie do the characters try to ward off a mysterious figure by repeating "Don\'t think it. Don\'t say it."?', 'answer': 'The Bye Bye Man', 'category': 'Horror'}, {'question': 'What film based on a Stephen King novel features performances by Nancy Allen, Piper Laurie, and John Travolta?', 'answer': 'Carrie', 'category': 'Horror'}, {'question': 'In what film does a mute woman fall in love with an amphibious creature that is being held in captivity?', 'answer': 'The Shape of Water', 'category': 'Romance'}, {'question': 'What Academy Award winning actor plays the lead role of Joe in the psychological thriller You Were Never Really Here, written and directed by Lynne Ramsay?', 'answer': 'Joaquin Phoenix', 'category': '2010s'}, {'question': 'In the film The Assassination of Jesse James by the Coward Robert Ford, which Oscar winner plays Robert Ford?', 'answer': 'Casey Affleck', 'category': 'Westerns'}, {'question': "Who plays Denzel's partner, Detective Jonesy, in the 1998 supernatural horror crime thriller Fallen?", 'answer': 'John Goodman', 'category': 'Denzel Washington'}, {'question': "You'll find the voice talents of Steve Zahn and Anna Paquin in what Pixar film?", 'answer': 'The Good Dinosaur', 'category': 'Pixar'}, {'question': 'What film from director Oliver Stone has the following line: "Life all comes down to a few moments. This is one of them."?', 'answer': 'Wall Street', 'category': 'Quotes'}, {'question': 'Halle Berry plays the comic book movie character Ororo Monroe, who is better known as what?', 'answer': 'Storm', 'category': 'N/A'}, {'question': "What 1984 teen comedy marked John Hughes' directorial debut?", 'answer': 'Sixteen Candles', 'category': 'N/A'}, {'question': 'In what film does Jim Carrey play the character of Joel Barish, a man dealing with a painful breakup?', 'answer': 'Eternal Sunshine of the Spotless Mind', 'category': 'N/A'}, {'question': 'Who plays Father Fyodor, a Russian Orthodox priest in The Twelve Chairs?', 'answer': 'Dom DeLuise', 'category': 'N/A'}, {'question': 'In which live-action Disney film will you find a planet known as Barsoom and the character of Princess Dejah Thoris?', 'answer': 'John Carter', 'category': 'N/A'}, {'question': 'Which famous filmmaker made his feature directorial debut with the 1974 drama The Sugarland Express?', 'answer': 'Steven Spielberg', 'category': 'Directors'}, {'question': 'Which actress appeared in the films Just Go with It, Rumor Has It, and Bruce Almighty?', 'answer': 'Jennifer Aniston', 'category': 'Famous Actors & Actresses'}, {'question': 'Robert Duvall received a Best Supporting Actor nomination for what 2014 courtroom drama that starred Robert Downey Jr.?', 'answer': 'The Judge', 'category': 'Oscars'}, {'question': 'Which action franchise features Bruce Willis, Sienna Miller, Channing Tatum, and Joseph Gordon-Levitt?', 'answer': 'G.I. Joe', 'category': 'Action/Adventure'}, {'question': 'Taylor Sheridan wrote and directed what 2017 film starring Jeremy Renner and Elizabeth Olsen, who are trying to solve a murder on a Native American reservation?', 'answer': 'Wind River', 'category': 'Mystery'}, {'question': 'Who stars as a rock and roll singer named Nick Rivers in the 1984 spoof comedy Top Secret!?', 'answer': 'Val Kilmer', 'category': 'Comedies'}, {'question': 'Paul Hogan and Elijah Wood star in what 1996 family adventure film about a boy who has to spend the summer with his uncle in Florida, only to make an unusual friend?', 'answer': 'Flipper', 'category': 'Family'}, {'question': 'Dennis Quaid, Meg Ryan, and Martin Short appear in what 1987 sci-fi comedy from director Joe Dante?', 'answer': 'Innerspace', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which music star plays the protagonist Will Salas in the 2011 sci-fi film In Time?', 'answer': 'Justin Timberlake', 'category': 'N/A'}, {'question': 'You\'ll find the supporting characters of Ned Schneebly, Rosalie "Roz" Mullins, and Summer Hathaway in what 2003 comedy?', 'answer': 'School of Rock', 'category': '2000s'}, {'question': 'Who plays the lead guitarist for Stillwater, Russell Hammond, in Almost Famous?', 'answer': 'Billy Crudup', 'category': '2000s'}, {'question': "Who plays Teri Polo's wealthy ex-fiancé Kevin in Meet the Parents?", 'answer': 'Owen Wilson', 'category': '2000s'}, {'question': "Which Academy Award winning actor stars as Goldthwaite Higginson Dorr, Ph.D., the leader of the heist in 2004's The Ladykillers?", 'answer': 'Tom Hanks', 'category': '2000s'}, {'question': 'Which 2007 film starring Joseph Gordon-Levitt, Jeff Daniels, and Isla Fisher follows a group of bank robbers who try to trick a janitor into being an accomplice on a heist?', 'answer': 'The Lookout', 'category': '2000s'}, {'question': "In Million Dollar Baby, which MCU actor plays Shawrelle Berry, an overzealous boxer and frequent tenant of Dunn's gym?", 'answer': 'Anthony Mackie', 'category': '2000s'}, {'question': "Who directed 1954's White Christmas, starring Bing Crosby?", 'answer': 'Michael Curtiz', 'category': 'Classics'}, {'question': 'What 1937 film starring Janet Gaynor had multiple remakes, which starred Judy Garland, Barbra Streisand, and Lady Gaga?', 'answer': 'A Star Is Born', 'category': 'Classics'}, {'question': "Who plays aging outlaw Pike Bishop in 1969's The Wild Bunch?", 'answer': 'Willliam Holden', 'category': 'Classics'}, {'question': 'What 1957 live-action Disney film has a title character who is called "the best doggone dog in the West" in the film?', 'answer': 'Old Yeller', 'category': 'Classics'}, {'question': 'What was the title of the first feature film that starred the Beatles?', 'answer': "A Hard Day's Night", 'category': 'Classics'}, {'question': "1962's The Longest Day depicts an epic day of combat during which war?", 'answer': 'World War II', 'category': 'Classics'}, {'question': 'What former wrestler plays the lead role in the film My Spy?', 'answer': 'Dave Bautista', 'category': 'New Releases'}, {'question': 'Saoirse Ronan, Jake Abel, and Max Irons star in this 2013 YA science-fiction film.', 'answer': 'The Host', 'category': 'Fantasy/Sci-Fi'}, {'question': 'How many Kevin Smith films has Ben Affleck appeared in?', 'answer': '7 (Mallrats, Chasing Amy, Dogma, Jay and Silent Bob Strike Back, Jersey Girl, Clerks II, Jay and Silent Bob Reboot)', 'category': 'Directors'}, {'question': 'Who directed the films Strange Days, Point Break, and Near Dark?', 'answer': 'Kathryn Bigelow', 'category': 'Directors'}, {'question': 'What famous crime film is known for the line "Leave the gun. Take the cannoli."?', 'answer': 'The Godfather', 'category': 'Crime'}, {'question': 'Which actress played Daphne Blake in the live-action films Scooby-Doo and Scooby-Doo 2: Monsters Unleashed?', 'answer': 'Sarah Michelle Gellar', 'category': 'Mystery'}, {'question': 'Andy Tennant directed Salma Hayek and which Friends actor as Alex Whitman in the 1997 rom-com Fools Rush In, about a one-night stand that changes their lives?', 'answer': 'Matthew Perry', 'category': 'Rom-Coms'}, {'question': 'What 2017 horror film from director Jordan Peele features the line "By the way, I would have voted for Obama for a third term, if I could. Best President in my lifetime, hands down."?', 'answer': 'Get Out', 'category': 'Quotes'}, {'question': "Which comedian starred in and co-directed 1990's Quick Change, about three thieves who successfully rob a New York City bank, only to find escaping the city is almost impossible?", 'answer': 'Bill Murray', 'category': 'Comedies'}, {'question': 'Which actress stars as the main character Cassandra "Cassie" Thomas in the film Promising Young Woman?', 'answer': 'Carey Mulligan', 'category': 'New Releases'}, {'question': 'Alice Braga, Topher Grace, and Adrien Brody find themselves in an unfamiliar jungle and hunted by unknown assailants in what 2010 film from director Nimród Antal?', 'answer': 'Predators', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Jason Lee provides the voice of a beagle dog with superpowers in what 2007 live-action family film based on a TV cartoon?', 'answer': 'Underdog', 'category': 'N/A'}, {'question': "The 1938 Best Picture winner You Can't Take It with You was James Stewart's first collaboration with what famous director?", 'answer': 'Frank Capra', 'category': 'James Stewart'}, {'question': 'In which thriller does James Stewart say the line "Why would a man leave his apartment three times on a rainy night with a suitcase and come back three times?"?', 'answer': 'Rear Window', 'category': 'James Stewart'}, {'question': 'Which actress known for a famous Alfred Hitchcock film starred with James Stewart in the 1958 rom-com Bell, Book and Candle?', 'answer': 'Kim Novak', 'category': 'James Stewart'}, {'question': 'In what 1950 western does James Stewart play Lin McAdam, a cowboy whose obsession with a stolen rifle leads to a bullet-ridden odyssey?', 'answer': "Winchester '73", 'category': 'James Stewart'}, {'question': "What is the profession of James Stewart's character Paul Biegler in the 1959 crime drama Anatomy of a Murder?", 'answer': 'a lawyer', 'category': 'James Stewart'}, {'question': "In the film It's a Wonderful Life, what wish does George Bailey make to the angel Clarence, which he grants to George's shock?", 'answer': 'that George had never been born', 'category': 'James Stewart'}, {'question': 'Bill and Ted went on their excellent adventure in the same year that Indiana Jones went on his last crusade, and the Enterprise crew went to the final frontier. What year was it?', 'answer': '1989', 'category': 'Release Dates'}, {'question': 'The British horror film 28 Days Later was unleashed on U.S. audiences in 2003. What year saw the release of its sequel 28 Weeks Later?', 'answer': '2007', 'category': 'Release Dates'}, {'question': 'What year saw the release of the first film in the Thin Man franchise, starring William Powell and Myrna Loy?', 'answer': '1934', 'category': 'Release Dates'}, {'question': 'Jim Carrey was in two films released in 2004. Eternal Sunshine of the Spotless Mind and what other film?', 'answer': "Lemony Snicket's A Series of Unfortunate Events", 'category': 'Release Dates'}, {'question': 'What year saw the release of the films Sing Street, Deadpool, Star Trek Beyond, and Lights Out?', 'answer': '2016', 'category': 'Release Dates'}, {'question': 'What year saw the release of the airplane-centric action thrillers Con Air and Air Force One?', 'answer': '1997', 'category': 'Release Dates'}, {'question': "Who stars as businessman Ray Kroc in the film The Founder, which portrays the story of the McDonald's fast food restaurant chain?", 'answer': 'Michael Keaton', 'category': 'Biopics'}, {'question': "Which actress plays Dr. Ellie Staple in 2019's Glass?", 'answer': 'Sarah Paulson', 'category': 'Thriller'}, {'question': "Who plays the Monster alongside Gene Wilder's Dr. Frederick Frankenstein in Young Frankenstein?", 'answer': 'Peter Boyle', 'category': 'Comedies'}, {'question': 'Oscar-winning director Barry Levinson directed Robin Williams in three films. Name two.', 'answer': 'Good Morning, Vietnam, Toys, Man of the Year', 'category': 'Directors'}, {'question': 'After retiring from the Men in Black, where does Agent K work at the beginning of Men in Black II?', 'answer': 'at a post office', 'category': 'Will Smith'}, {'question': 'What spy film features performances from Oscar Isaac, Scott Glenn, Stacy Keach, and Joan Allen?', 'answer': 'The Bourne Legacy', 'category': 'Spy'}, {'question': 'Who directed the 2018 mystery thriller Bad Times at the El Royale?', 'answer': 'Drew Goddard', 'category': 'Mystery'}, {'question': 'What film has the tagline "A 12 year old street kid. A 3 ton orca whale. A friendship you could never imagine. An adventure you\'ll never forget."?', 'answer': 'Free Willy', 'category': 'Family'}, {'question': 'Tyler Perry plays lawyer Tanner Bolt in what 2014 thriller?', 'answer': 'Gone Girl', 'category': 'Horror/Thriller'}, {'question': 'This actress starred in the 1990s rom-coms French Kiss, I.Q., and Addicted to Love.', 'answer': 'Meg Ryan', 'category': 'Rom-Coms'}, {'question': "Which filmmaker was behind the movies Poetic Justice, 2000's Shaft, and Baby Boy?", 'answer': 'John Singleton', 'category': 'Black Cinema'}, {'question': 'Seth Rogen and Bill Hader play cops in this 2007 comedy by Greg Mottola.', 'answer': 'Superbad', 'category': 'Comedies'}, {'question': 'Which 2000s film from director Steven Soderbergh had the tagline "No One Gets Away Clean"?', 'answer': 'Traffic', 'category': 'Dramas'}, {'question': 'Joseph Gordon-Levitt plays a younger version of which actor in Looper?', 'answer': 'Bruce Willis', 'category': 'Action/Adventure'}, {'question': "Country music star Tim McGraw plays Sandra Bullock's husband in what 2009 film?", 'answer': 'The Blind Side', 'category': 'N/A'}, {'question': '"The secret lies with Charlotte." is a clue leading to the fabled treasure taken from various empires throughout history in which 2000s film?', 'answer': 'National Treasure', 'category': 'Action/Adventure'}, {'question': 'Who plays aging police detective and family man Roger Murtaugh in the Lethal Weapon franchise?', 'answer': 'Danny Glover', 'category': 'Action/Adventure'}, {'question': 'Jason Statham stars as Chev Chelios, who is injected with a poison that will kill him if his heart rate drops, in what 2006 film?', 'answer': 'Crank', 'category': 'Action/Adventure'}, {'question': 'Who played airport police captain Carmine Lorenzo in Die Hard 2: Die Harder?', 'answer': 'Dennis Franz', 'category': 'Action/Adventure'}, {'question': 'John Travolta and Jonathan Rhys Meyers play mismatched spies in which 2010 action thriller?', 'answer': 'From Paris with Love', 'category': 'Action/Adventure'}, {'question': 'Name this 2010s film based on the synopsis: a man is implanted with a computer chip that allows him to control his body after a mugging leaves him paralyzed.', 'answer': 'Upgrade', 'category': 'Action/Adventure'}, {'question': 'Who plays the character Tang Lung in the 1972 film The Way of the Dragon?', 'answer': 'Bruce Lee', 'category': 'Martial Arts'}, {'question': 'Who plays the lead role of Ting in Ong-Bak: The Thai Warrior?', 'answer': 'Tony Jaa', 'category': 'Martial Arts'}, {'question': 'Which Academy Award winning actress plays the lead role of Julie Pierce in The Next Karate Kid?', 'answer': 'Hilary Swank', 'category': 'Martial Arts'}, {'question': "Who starred in and directed 2012's The Man with the Iron Fists?", 'answer': 'RZA', 'category': 'Martial Arts'}, {'question': 'What 1974 film starred Sonny Chiba as Terry, a mercenary karate master, and was the first film in a popular franchise?', 'answer': 'The Street Fighter', 'category': 'Martial Arts'}, {'question': 'Which 2000s movie franchise has a main character named Chon Wang?', 'answer': 'Shanghai Noon', 'category': 'Martial Arts'}, {'question': "Who stars as Simon in 2018's Love, Simon?", 'answer': 'Nick Robinson', 'category': 'Rom-Coms'}, {'question': 'What 1980s film has a star-studded cast of Tom Berenger, Glenn Close, Jeff Goldblum, William Hurt, and Kevin Kline?', 'answer': 'The Big Chill', 'category': '1980s'}, {'question': 'Who plays Mutt Williams in Indiana Jones and the Kingdom of the Crystal Skull?', 'answer': 'Shia LaBeouf', 'category': 'Steven Spielberg'}, {'question': 'Fred Schepisi directed Will Smith in what 1993 drama featuring Ian McKellen?', 'answer': 'Six Degrees of Separation', 'category': 'Will Smith'}, {'question': 'Which actor plays the lead role alongside Vera Farmiga and Patrick Wilson in the 2018 thriller The Commuter, about a man who unwittingly ends up in a murder conspiracy by a stranger?', 'answer': 'Liam Neeson', 'category': 'Thriller'}, {'question': "Who plays Congressman Raymond Prentiss Shaw in 2004's The Manchurian Candidate?", 'answer': 'Liev Schreiber', 'category': 'Denzel Washington'}, {'question': "Who plays the lead role of cellular biology professor and Army veteran Lena in 2018's Annihilation?", 'answer': 'Natalie Portman', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Cameron Diaz, Lucy Liu, Drew Barrymore, Bernie Mac, and Demi Moore all appear in what 2003 action sequel from director McG?', 'answer': "Charlie's Angels: Full Throttle", 'category': '2000s'}, {'question': 'What 2019 film follows Zack, a 22-year-old man with Down syndrome who escapes from a state-run facility with the help of his elderly roommate to train as a professional wrestler? ', 'answer': 'The Peanut Butter Falcon', 'category': 'Dramas'}, {'question': 'Which buddy cop franchise features supporting performances from Joe Pantoliano, Gabrielle Union, and Vanessa Hudgens?', 'answer': 'Bad Boys', 'category': 'Action/Adventure'}, {'question': 'Which 1990 film marked the first collaboration of director Tim Burton and actor Johnny Depp?', 'answer': 'Edward Scissorhands', 'category': 'Directors'}, {'question': 'Brittany Snow, Anna Camp, Skylar Astin, and Adam DeVine have supporting roles in what 2012 musical comedy?', 'answer': 'Pitch Perfect', 'category': 'Comedies'}, {'question': 'What non-English-language film won the Best Picture Oscar in 2020?', 'answer': 'Parasite', 'category': 'Oscars'}, {'question': 'Which actress stars in the romantic comedies Killers, Life as We Know It, and The Big Wedding?', 'answer': 'Katherine Heigl', 'category': 'Rom-Coms'}, {'question': 'Which found footage horror franchise has installments directed by Oren Peli, Tod Williams, and Christopher Landon?', 'answer': 'Paranormal Activity', 'category': 'N/A'}, {'question': 'Which MCU actress played a young ballet dancer named Eva in the 2000 film Center Stage?', 'answer': 'Zoe Saldana', 'category': 'Dance'}, {'question': "In Magic Mike, the Kid's first performance is to the cover of a Madonna song. Which song does he strip to?", 'answer': 'Like a Virgin', 'category': 'Dance'}, {'question': 'Which hit song was performed by Bill Medley and Jennifer Warnes and served as the theme for Dirty Dancing?', 'answer': "(I've Had) The Time of My Life", 'category': 'Dance'}, {'question': "Which actress plays the evil Velma Von Tussle in 2007's Hairspray?", 'answer': 'Michelle Pfeiffer', 'category': 'Dance'}, {'question': 'Which legendary crooner stars in the 1959 Capra comedy A Hole in the Head?', 'answer': 'Frank Sinatra', 'category': 'Frank Capra'}, {'question': 'Which Capra film follows a naive man who is appointed to the United States Senate and soon collides with political corruption?', 'answer': 'Mr. Smith Goes to Washington', 'category': 'Frank Capra'}, {'question': 'Frank Capra received his first Best Director nomination for what comedic film which was released in 1933?', 'answer': 'Lady for a Day', 'category': 'Frank Capra'}, {'question': 'In which Capra drama does Ronald Colman star as a diplomat who discovers the enchanted city of Shangri-La after a plane crash?', 'answer': 'Lost Horizon', 'category': 'Frank Capra'}, {'question': "What actor co-starred alongside Jaden Smith as Mr. Han in 2010's The Karate Kid?", 'answer': 'Jackie Chan', 'category': '2010s'}, {'question': 'Steven Seagal plays Chief Petty Officer Casey Ryback, a former Navy SEAL who now serves as a personal cook on the USS Missouri in what 1992 action film?', 'answer': 'Under Siege', 'category': 'Action/Adventure'}, {'question': 'In what 2010s rom-com do a comedian and a grad student fall in love but struggle as their cultures clash and a mysterious illness affects their lives?', 'answer': 'The Big Sick', 'category': 'Rom-Coms'}, {'question': 'In the film Trouble with the Curve, who plays former player and now scout Johnny "The Flame" Flanagan?', 'answer': 'Justin Timberlake', 'category': 'Sports'}, {'question': "What horror icon portrayed the character of François Delambre in both 1958's The Fly and its 1959 sequel Return of the Fly?", 'answer': 'Vincent Price', 'category': 'Horror'}, {'question': 'Who plays Bart Mancuso, Commanding Officer of the USS Dallas, in The Hunt for Red October?', 'answer': 'Scott Glenn', 'category': 'Thriller'}, {'question': 'What 1984 horror comedy features performances from Judge Reinhold, Dick Miller, and Phoebe Cates?', 'answer': 'Gremlins', 'category': 'Horror/Thriller'}, {'question': 'What 1990s comedy features supporting performances by Alyson Hannigan, Shannon Elizabeth, and Thomas Ian Nicholas?', 'answer': 'American Pie', 'category': '1990s'}, {'question': "Who was behind the lens for the films Pan's Labyrinth, The Shape of Water, and 2004's Hellboy?", 'answer': 'Guillermo del Toro', 'category': 'Directors'}, {'question': 'Liam Neeson must save his daughter after being kidnapped in what 2009 action film?', 'answer': 'Taken', 'category': 'Action/Adventure'}, {'question': 'DMX played Anthony Fait alongside which martial artist in the role of Su Duncan in the 2003 action film Cradle 2 the Grave?', 'answer': 'Jet Li', 'category': '2000s'}, {'question': 'What comedian stars as an over-the-top television evangelist who finds a way to turn television home shopping into a religious experience in the 1998 film Holy Man?', 'answer': 'Eddie Murphy', 'category': 'Comedies'}, {'question': 'Which comedian voices Tow Mater in the Cars franchise?', 'answer': 'Larry the Cable Guy', 'category': 'Animated'}, {'question': 'Who plays Colonel Walter E. Kurtz, who has apparently gone insane and is waging a brutal guerilla war without permission, in the film Apocalypse Now?', 'answer': 'Marlon Brando', 'category': 'War'}, {'question': 'Viola Davis was nominated for her first acting Oscar for what film?', 'answer': 'Doubt', 'category': 'Viola Davis'}, {'question': "Viola plays Delia Shiraz, the best friend of Julia Roberts' character in what film?", 'answer': 'Eat Pray Love', 'category': 'Viola Davis'}, {'question': 'Viola Davis has been directed by Tyler Perry in one film starring his character Madea. What film was this?', 'answer': 'Madea Goes to Jail', 'category': 'Viola Davis'}, {'question': 'Viola plays Major Gwen Anderson, who prepares her Battle School students for a possible alien invasion, in what film?', 'answer': "Ender's Game", 'category': 'Viola Davis'}, {'question': 'Ed Harris plays the character Christof in what 1990s film that stars Jim Carrey?', 'answer': 'The Truman Show', 'category': 'Ed Harris'}, {'question': 'Which actress won an Oscar for the film Pollock, which Ed Harris starred in and directed?', 'answer': 'Marcia Gay Harden', 'category': 'Ed Harris'}, {'question': 'Which Oscar-winning actor played the villainous rancher Randall Bragg in the western Appaloosa, which Ed Harris directed?', 'answer': 'Jeremy Irons', 'category': 'Ed Harris'}, {'question': 'Ed Harris played which famous real-life astronaut in the 1983 film The Right Stuff?', 'answer': 'John Glenn', 'category': 'Ed Harris'}, {'question': 'Who directed the films Adventures in Babysitting and Mrs. Doubtfire?', 'answer': 'Chris Columbus', 'category': 'Directors'}, {'question': 'What 1996 film features supporting performances from Mary McDonnell, Vivica A. Fox, Judd Hirsch, and Mae Whitman?', 'answer': 'Independence Day', 'category': 'Fantasy/Sci-Fi'}, {'question': 'The famously ad-libbed line "I\'m walking here! I\'m walking here!" is from what 1969 movie?', 'answer': 'Midnight Cowboy', 'category': 'Quotes'}, {'question': 'What Hollywood screen legend played real-life characters such as Charles Lindbergh, Glenn Miller, and Wyatt Earp?', 'answer': 'James Stewart', 'category': 'Biopics'}, {'question': "Who plays Hailee Steinfeld's brother in The Edge of Seventeen?", 'answer': 'Blake Jenner', 'category': 'Coming of Age'}, {'question': "Rosamund Pike plays Jane, Keira Knightley's sister, in what 2005 film?", 'answer': 'Pride & Prejudice', 'category': 'Rom-Coms'}, {'question': 'What 2004 horror remake features the tagline "When there\'s no more room in Hell, the dead will walk the Earth."?', 'answer': 'Dawn of the Dead', 'category': 'Horror/Thriller'}, {'question': 'Christopher Lee, Eva Green, and Daniel Craig appear in what 2007 fantasy adventure film?', 'answer': 'The Golden Compass', 'category': 'Fantasy/Sci-Fi'}, {'question': 'This 2007 musical drama stars Jonathan Rhys Meyers, Keri Russell, and Robin Williams, and follows an 11-year-old musical prodigy living in an orphanage who runs away to New York City.', 'answer': 'August Rush', 'category': 'Dramas'}, {'question': 'Which actor co-stars alongside Hailee Steinfeld and Jeff Bridges as Texas Ranger LaBoeuf in True Grit?', 'answer': 'Matt Damon', 'category': 'Westerns'}, {'question': 'The songs "A Girl Worth Fighting For" and "Honor to Us All" are performed in what 1990s animated Disney film?', 'answer': 'Mulan', 'category': 'Animated'}, {'question': 'You\'ll find the characters of Cheeseburger Eddy, Paul "Wrecking" Crewe, and Caretaker in what 2005 comedy?', 'answer': 'The Longest Yard', 'category': 'Comedies'}, {'question': 'Jason Isaacs, Terence Stamp, and Jennifer Garner appear in which 2000s comic book film?', 'answer': 'Elektra', 'category': 'Comic Book'}, {'question': 'Who directed the films Trainspotting, Steve Jobs, and Slumdog Millionaire?', 'answer': 'Danny Boyle', 'category': 'Directors'}, {'question': 'What film from director Martin Scorsese follows an old pro teaching a cocky protégé the ropes of pool hustling?', 'answer': 'The Color of Money', 'category': 'N/A'}, {'question': "Which actress co-stars as Judge Hershey in 1995's Judge Dredd?", 'answer': 'Diane Lane', 'category': 'Comic Book'}, {'question': "This actress played Sarah Ross, the object of Bruce Willis' affection, in Red and Red 2?", 'answer': 'Mary-Louise Parker', 'category': 'Comic Book'}, {'question': "Andrea Beaumont is the name of Bruce Wayne's love interest in which Batman film?", 'answer': 'Batman: Mask of the Phantasm', 'category': 'Comic Book'}, {'question': 'In Thor, what is the name of the realm that the Frost Giants are from?', 'answer': 'Jotunheim', 'category': 'Comic Book'}, {'question': 'Who plays Mr. Sivana, the estranged father of Dr. Thaddeus Silvana and CEO of Sivana Industries, in the film Shazam!?', 'answer': 'John Glover', 'category': 'Comic Book'}, {'question': 'Who stars as Ashe Corven, the latest person to be resurrected by the spirit of the Crow, in the film The Crow: City of Angels?', 'answer': 'Vincent Pérez', 'category': 'Comic Book'}, {'question': 'Who plays Tom Hagen in the Godfather films?', 'answer': 'Robert Duvall', 'category': 'Francis Ford Coppola'}, {'question': "Who plays the title character in 1986's Peggy Sue Got Married?", 'answer': 'Kathleen Turner', 'category': 'Francis Ford Coppola'}, {'question': 'Francis Ford Coppola directed what 1990s legal thriller based on a Josh Grisham novel, which stars Matt Damon?', 'answer': 'The Rainmaker', 'category': 'Francis Ford Coppola'}, {'question': "Who plays the main female character Mina Harker in Bram Stoker's Dracula?", 'answer': 'Winona Ryder', 'category': 'Francis Ford Coppola'}, {'question': "Which actor plays the character known only as the Motorcycle Boy in 1983's Rumble Fish?", 'answer': 'Mickey Rourke', 'category': 'Francis Ford Coppola'}, {'question': 'Laurence Fishburne had an early role as Tyrone "Mr. Clean" Miller in which 1970s Coppola film?', 'answer': 'Apocalypse Now', 'category': 'Francis Ford Coppola'}, {'question': 'Denzel Washington plays Coach Herman Boone in what football film?', 'answer': 'Remember the Titans', 'category': 'Denzel Washington'}, {'question': "What is the name of the cursed Egyptian high priest who rises from the dead to destroy the world in 1999's The Mummy?", 'answer': 'Imhotep', 'category': 'Action/Adventure'}, {'question': 'Which Oscar-winning actor plays Captain James Hook in the film Hook?', 'answer': 'Dustin Hoffman', 'category': 'Steven Spielberg'}, {'question': 'Carey Mulligan stars as a teenage girl growing up in 1960s London who begins a relationship with a man twice her age in what 2009 film?', 'answer': 'An Education', 'category': 'Coming of Age'}, {'question': 'What Hong Kong filmmaker made his American directorial debut with the 1993 film Hard Target?', 'answer': 'John Woo', 'category': 'Martial Arts'}, {'question': "In what Tarantino film will you find a bar named Güero's and a character named Jungle Julia?", 'answer': 'Grindhouse (in Death Proof)', 'category': 'Quentin Tarantino'}, {'question': 'Which actor received an Academy Award nomination for playing Charlie Chaplin in the 1990s biopic Chaplin, directed by Richard Attenborough?', 'answer': 'Robert Downey Jr.', 'category': 'Dramas'}, {'question': 'Steve Carr directed Mike Epps and Ice Cube in what 2000 comedy sequel?', 'answer': 'Next Friday', 'category': 'Black Cinema'}, {'question': 'In which 90s action film does the character Bodhi say "If you want the ultimate, you\'ve got to be willing to pay the ultimate price. It\'s not tragic to die doing what you love."?', 'answer': 'Point Break', 'category': 'Action/Adventure'}, {'question': "Andy Fickman directed Amanda Bynes and Channing Tatum in what 2006 rom-com inspired by William Shakespeare's play Twelfth Night?", 'answer': "She's the Man", 'category': '2000s'}, {'question': 'Which actress starred in the thrillers Perfect Stranger, The Call, and Kidnap?', 'answer': 'Halle Berry', 'category': 'Horror/Thriller'}, {'question': 'Which actress appeared in the comedies Sweet Home Alabama and Just Like Heaven?', 'answer': 'Reese Witherspoon', 'category': 'Comedies'}, {'question': 'Who plays Detective James Carter, who is a fast-talking street-smart LAPD Detective, in the Rush Hour trilogy?', 'answer': 'Chris Tucker', 'category': 'Martial Arts'}, {'question': 'Casey Affleck and Michelle Monaghan play a couple who are professional private detectives in what 2007 film directed by Ben Affleck?', 'answer': 'Gone Baby Gone', 'category': 'Mystery'}, {'question': 'Matt Damon received his first acting Oscar nomination for which film?', 'answer': 'Good Will Hunting', 'category': 'N/A'}, {'question': 'Which famous crooner stars as the character Dan Brooks in the 1950 comedy Riding High?', 'answer': 'Bing Crosby', 'category': 'Frank Capra'}, {'question': "Which famous actor starred as a wealthy young man named Tony Kirby in 1938's You Can't Take It with You?", 'answer': 'James Stewart', 'category': 'Frank Capra'}, {'question': 'Which 1932 drama stars Walter Huston as a banker who suffers a crisis of conscience?', 'answer': 'American Madness', 'category': 'Frank Capra'}, {'question': "What is the name of George Bailey's guardian angel in It's a Wonderful Life?", 'answer': 'Clarence Odbody', 'category': 'Frank Capra'}, {'question': 'Which famously blonde actress starred as the character Anne in the 1931 Capra film Platinum Blonde?', 'answer': 'Jean Harlow', 'category': 'Frank Capra'}, {'question': 'Which 1934 Frank Capra film won five Oscars including Best Picture, Best Director, Best Actor, and Best Actress?', 'answer': 'It Happened One Night', 'category': 'Frank Capra'}, {'question': "Who plays Mel Brooks's biggest rival Vance Crasswell in Life Stinks?", 'answer': 'Jeffrey Tambor', 'category': 'Mel Brooks'}, {'question': 'Who directed Mel Brooks and Anne Bancroft in the film To Be or Not to Be?', 'answer': 'Alan Johnson', 'category': 'Mel Brooks'}, {'question': 'Mel Brooks makes a voice appearance in what Pixar film as a character named Melephant Brooks?', 'answer': 'Toy Story 4', 'category': 'Mel Brooks'}, {'question': "Who has a cameo as the musical director Buddy Bizarre in 1974's Blazing Saddles?", 'answer': 'Dom DeLuise', 'category': 'Mel Brooks'}, {'question': "Who plays Marty Eggs, one of Mel Funn's sidekicks who pitches the first silent film in 40 years to a Hollywood studio head in Silent Movie?", 'answer': 'Marty Feldman', 'category': 'Mel Brooks'}, {'question': "Who plays the role of S.S. Colonel Erhardt in 1983's To Be or Not to Be?", 'answer': 'Charles Durning', 'category': 'Mel Brooks'}, {'question': 'Who plays the role of Selena St. George as an adult in the film Dolores Claiborne?', 'answer': 'Jennifer Jason Leigh', 'category': 'Stephen King'}, {'question': 'Who played the lead role of Benjamin Gates in National Treasure?', 'answer': 'Nicolas Cage', 'category': 'N/A'}, {'question': "Who directed 1984's A Nightmare on Elm Street?", 'answer': 'Wes Craven', 'category': 'N/A'}, {'question': 'Which actress played the lead role in Runaway Bride?', 'answer': 'Julia Roberts', 'category': 'N/A'}, {'question': 'What animated Disney film features the song "Son of Man"?', 'answer': 'Tarzan', 'category': 'N/A'}, {'question': 'Who directed Blade Runner?', 'answer': 'Ridley Scott', 'category': 'N/A'}, {'question': 'Who plays the lead role of Jack Ryan in Jack Ryan: Shadow Recruit?', 'answer': 'Chris Pine', 'category': 'N/A'}, {'question': 'Who directed The Conjuring?', 'answer': 'James Wan', 'category': 'N/A'}, {'question': 'Which actress plays the lead role in Salt?', 'answer': 'Angelina Jolie', 'category': 'N/A'}, {'question': "Who directed 2002's Spider-Man?", 'answer': 'Sam Raimi', 'category': 'N/A'}, {'question': "Who plays the lead role of John Thornton in 2020's The Call of the Wild?", 'answer': 'Harrison Ford', 'category': 'N/A'}, {'question': 'Who plays Eli in The Book of Eli?', 'answer': 'Denzel Washington', 'category': 'Action/Adventure'}, {'question': 'How many times did Leslie Nielsen play the role of Frank Drebin in the Naked Gun big screen franchise?', 'answer': '3', 'category': 'Comedies'}, {'question': 'In what 2013 film does Will Smith appear with his son Jaden?', 'answer': 'After Earth', 'category': 'Will Smith'}, {'question': 'In The Sound of Music, Maria makes playclothes for herself and the Von Trapp children out of what?', 'answer': 'her bedroom drapes', 'category': 'Musicals'}, {'question': 'How many times did Richard Roundtree play the role of John Shaft from the original to the 2019 film?', 'answer': "5 (1971's Shaft, Shaft's Big Score!, Shaft in Africa, 2000's Shaft, 2019's Shaft)", 'category': 'Black Cinema'}, {'question': 'Casey Affleck plays Ray Sybert, an engineer on an oil tanker that is caught in a blizzard, in what 2010s film?', 'answer': 'The Finest Hours', 'category': 'Disaster'}, {'question': 'Kevin Reynolds directed which actor as the lead in the films Waterworld and Robin Hood: Prince of Thieves?', 'answer': 'Kevin Costner', 'category': 'Directors'}, {'question': 'Who plays the lead role of investigative reporter Cal McAffrey in the 2009 political thriller State of Play?', 'answer': 'Russell Crowe', 'category': 'Dramas'}, {'question': 'What year saw the release of the following films: The Last Starfighter, Gremlins, and Dune?', 'answer': '1984', 'category': 'Mixed Bag'}, {'question': 'Who plays Fred Rogers in A Beautiful Day in the Neighborhood?', 'answer': 'Tom Hanks', 'category': 'Biopics'}, {'question': 'Tina Fey voices the character 22, who is trapped in the Great Before, in what Pixar film?', 'answer': 'Soul', 'category': 'Animated'}, {'question': 'What 1990s horror film has the tagline "Someone has taken their love of scary movies one step too far. Solving this mystery is going to be murder."?', 'answer': 'Scream', 'category': 'Horror/Thriller'}, {'question': 'What 1996 family film from director Danny DeVito follows a bright little girl with special powers whose insensitive parents send her to a school run by a cruel authoritarian?', 'answer': 'Matilda', 'category': 'Family'}, {'question': 'For what film did Alicia Vikander win her Supporting Actress Oscar?', 'answer': 'The Danish Girl', 'category': 'Oscars'}, {'question': 'How many total Teenage Mutant Ninja Turtles films have been released to date?', 'answer': '6', 'category': 'N/A'}, {'question': 'Who wrote and directed Promising Young Woman?', 'answer': 'Emerald Fennell', 'category': 'New Releases'}, {'question': 'Who was nominated for a Best Supporting Actor Academy Award for their role of Abbie Hoffman in The Trial of the Chicago 7?', 'answer': 'Sacha Baron Cohen', 'category': 'New Releases'}, {'question': 'Colin Farrell and Judi Dench appear in what 2020 fantasy film?', 'answer': 'Artemis Fowl', 'category': 'New Releases'}, {'question': 'What horror film from director Natalie Erika James follows a family of women who are haunted by a manifestation of dementia that consumes their home?', 'answer': 'Relic', 'category': 'New Releases'}, {'question': 'Halle Berry plays the character Sofia Al-Azwar in what action movie franchise?', 'answer': 'John Wick (in Chapter 3)', 'category': 'Halle Berry'}, {'question': 'Halle Berry plays the character Miss Stone in what live-action 1994 family film based on a TV cartoon?', 'answer': 'The Flintstones', 'category': 'Halle Berry'}, {'question': 'Halle Berry made her movie debut in which film from director Spike Lee?', 'answer': 'Jungle Fever', 'category': 'Halle Berry'}, {'question': "What is the first name of Halle Berry's character in the film Catwoman?", 'answer': 'Patience', 'category': 'Halle Berry'}, {'question': 'In what Oscar-winning western will you find a town sheriff named Little Bill and a gunslinger named English Bob?', 'answer': 'Unforgiven', 'category': 'Westerns'}, {'question': 'What is the most recent time that Tom Hanks has been directed by Steven Spielberg?', 'answer': 'The Post', 'category': 'Tom Hanks'}, {'question': 'Which famous musician plays an Italian-American widow that falls in love with Nicolas Cage in the 1987 romantic comedy Moonstruck?', 'answer': 'Cher', 'category': 'Comedies'}, {'question': 'What 2014 film features the Oscar-winning song "Glory" performed by John Legend and Common?', 'answer': 'Selma', 'category': 'Scores & Soundtracks'}, {'question': 'In which Scorsese film will you find a character named Francine Evans, who records the anthem "But the World Goes Round" that turns her into a popular figure in the music industry?', 'answer': 'New York, New York', 'category': 'Martin Scorsese'}, {'question': 'In the 1984 film Red Dawn, which actor plays Lieutenant Colonel Andrew "Andy" Tanner, who meets the Wolverines after being shot down by a jet fighter?', 'answer': 'Powers Boothe', 'category': 'Action/Adventure'}, {'question': 'Battle of the Smithsonian and Secret of the Tomb are entries in what family fantasy film franchise?', 'answer': 'Night at the Museum', 'category': 'Family'}, {'question': 'Who plays Oswald Cobblepot, also known as the Penguin, in the film Batman Returns?', 'answer': 'Danny DeVito', 'category': 'Comic Book'}, {'question': 'Who starred in the 90s films Falling Down, Disclosure, and The American President?', 'answer': 'Michael Douglas', 'category': 'Famous Actors & Actresses'}, {'question': 'F. Gary Gray directed Jamie Foxx and Gerard Butler in what 2009 vigilante action thriller about an honorable family man whose wife and daughter are murdered in a home invasion?', 'answer': 'Law Abiding Citizen', 'category': 'Crime'}, {'question': 'Which filmmaker directed the comedies Road Trip, School for Scoundrels, and Due Date?', 'answer': 'Todd Phillips', 'category': 'Directors'}, {'question': 'Who stars as a man thrust into an international spy plot that he mistakenly thinks is a theatre exercise in the 1997 comedy The Man Who Knew Too Little?', 'answer': 'Bill Murray', 'category': 'Comedies'}, {'question': 'Which Academy Award winning actress plays airplane engineer Kyle Pratt, whose daughter goes missing onboard in a flight in Flightplan?', 'answer': 'Jodie Foster', 'category': 'Mystery'}, {'question': 'Which actress plays Letty Ortiz in the Fast & Furious franchise?', 'answer': 'Michelle Rodriguez', 'category': 'Action/Adventure'}, {'question': 'Which actor voices the title character in the 2017 animated film The Boss Baby?', 'answer': 'Alec Baldwin', 'category': 'N/A'}, {'question': "You'll find the characters Professor Henry Higgins, Alfred P. Doolittle, and Colonel Hugh Pickering in what Hepburn film?", 'answer': 'My Fair Lady', 'category': 'Audrey Hepburn'}, {'question': 'Which Oscar nominee co-stars with Audrey in the film Two for the Road as Mark Wallace?', 'answer': 'Albert Finney', 'category': 'Audrey Hepburn'}, {'question': 'Audrey Hepburn starred in what 1956 epic war film based on a famous Russian novel?', 'answer': 'War and Peace', 'category': 'Audrey Hepburn'}, {'question': 'Cary Grant romances Audrey Hepburn after meeting on a holiday in the French Alps in what 1963 mystery film?', 'answer': 'Charade', 'category': 'Audrey Hepburn'}, {'question': 'What year saw the release of the Robert Altman film M*A*S*H?', 'answer': '1970', 'category': 'Release Dates'}, {'question': 'Tom Hanks starred in Big and what other film in 1988?', 'answer': 'Punchline', 'category': 'Release Dates'}, {'question': 'What year saw films released in the following franchises: Jaws, Star Wars, Superman, and James Bond?', 'answer': '1983 (Jaws 3-D; Return of the Jedi; Superman III; Octopussy, Never Say Never Again)', 'category': 'Release Dates'}, {'question': 'In what year were the mall cop comedies Observe and Report and Paul Blart: Mall Cop released?', 'answer': '2009', 'category': 'Release Dates'}, {'question': 'Who provides the voice of the main character Emmet in The Lego Movie?', 'answer': 'Chris Pratt', 'category': 'Animated'}, {'question': 'This comedian made his directorial debut with the 1968 film The Producers, which also got him an Oscar for Best Screenplay.', 'answer': 'Mel Brooks', 'category': 'Directors'}, {'question': 'What musical has the songs Science Fiction/Double Feature and Dammit Janet?', 'answer': 'The Rocky Horror Picture Show', 'category': 'Musicals'}, {'question': 'Tupac Shakur made his first starring role as Roland Bishop in 1992 in a film alongside Omar Epps and directed by Ernest R. Dickerson. What was that movie?', 'answer': 'Juice', 'category': 'Crime'}, {'question': 'Justin Benson and Aaron Moorhead directed what 2020 sci-fi thriller starring Anthony Mackie and Jamie Dornan?', 'answer': 'Synchronic', 'category': 'New Releases'}, {'question': 'Jeffrey Donovan plays Robert F. Kennedy in what 2010s DiCaprio film?', 'answer': 'J. Edgar', 'category': 'Leonardo DiCaprio'}, {'question': 'Which actor plays Jason Nesmith, who stars as a starship captain on TV, in the film Galaxy Quest?', 'answer': 'Tim Allen', 'category': '1990s'}, {'question': "What Oscar-winning actress plays Julia Roberts' mother in the film August: Osage County?", 'answer': 'Meryl Streep', 'category': 'Dramas'}, {'question': 'Which buddy cop franchise features performances from Gary Busey, Rene Russo, and Chris Rock?', 'answer': 'Lethal Weapon', 'category': 'Action/Adventure'}, {'question': 'What horror franchise centers around a child named Damien Thorn?', 'answer': 'The Omen', 'category': 'Horror/Thriller'}, {'question': 'Denzel Washington plays Troy Maxson, a garbage truck driver trying to raise his family during the 1950s, in what 2010s drama?', 'answer': 'Fences', 'category': 'Black Cinema'}, {'question': 'Seth Rogen and Evan Goldberg made their directorial debut with what 2013 apocalypse-themed comedy?', 'answer': 'This Is the End', 'category': 'Comedies'}, {'question': 'Who won a Best Actor Oscar for playing the character Raymond Babbitt in Rain Man?', 'answer': 'Dustin Hoffman', 'category': 'Oscars'}, {'question': 'Ray Liotta plays Shoeless Joe Jackson, and James Earl Jones plays Terence Mann in what 1989 baseball drama from director Phil Alden Robinson?', 'answer': 'Field of Dreams', 'category': 'Sports'}, {'question': 'Which comedic actor plays Nate Pullman, the father of young Auggie, in the 2017 family drama Wonder?', 'answer': 'Owen Wilson', 'category': 'N/A'}, {'question': 'Samuel L. Jackson starred in Pulp Fiction and which other Tarantino film from the 90s?', 'answer': 'Jackie Brown', 'category': '1990s'}, {'question': 'Which superhero actor had a small role as Congressman Jack Lewis in the 1993 film The Remains of the Day?', 'answer': 'Christopher Reeve', 'category': '1990s'}, {'question': 'Which thriller based on a John Grisham novel follows a lawyer named Reggie Love played by Susan Sarandon?', 'answer': 'The Client', 'category': '1990s'}, {'question': "In Robert Altman's Short Cuts, Matthew Modine plays Dr. Ralph Wyman. Which Oscar winner plays his wife Marian Wyman?", 'answer': 'Julianne Moore', 'category': '1990s'}, {'question': 'Sean Connery won an Oscar for portraying the character Jimmy Malone in what film?', 'answer': 'The Untouchables', 'category': 'Sean Connery'}, {'question': "Which actress plays Sean Connery's love interest Gin in the 1999 film Entrapment?", 'answer': 'Catherine Zeta-Jones', 'category': 'Sean Connery'}, {'question': 'James Bond famously drives what brand of car in the film Goldfinger?', 'answer': 'an Aston Martin DB5', 'category': 'Sean Connery'}, {'question': "Who plays Lancelot to Sean Connery's King Arthur in the 1995 film First Knight?", 'answer': 'Richard Gere', 'category': 'Sean Connery'}, {'question': 'Name this Best Picture winning film: A young African-American man grapples with his identity and sexuality while experiencing childhood, adolescence, and adulthood.', 'answer': 'Moonlight', 'category': 'Oscars'}, {'question': 'Which Oscar-winning actress co-stars as the character Sofia in John Wick: Chapter 3 – Parabellum?', 'answer': 'Halle Berry', 'category': 'Action/Adventure'}, {'question': '"This Is Me" was the Oscar-nominated original song for what 2010s musical?', 'answer': 'The Greatest Showman', 'category': 'Musicals'}, {'question': 'Who composed the film scores for Gremlins and Poltergeist?', 'answer': 'Jerry Goldsmith', 'category': 'Scores & Soundtracks'}, {'question': "In 2006's Annapolis, James Franco plays a young man who enrolls in the Naval Academy and participates in a tournament of what sport?", 'answer': 'boxing', 'category': '2000s'}, {'question': 'Lance Henriksen plays Emil Fouchon, a wealthy sportsman who hunts former soldiers, in what 1993 film?', 'answer': 'Hard Target', 'category': 'Martial Arts'}, {'question': "Which actor plays Standard Gabriel, who is released from prison and is married to Carey Mulligan's Irene, in 2011's Drive?", 'answer': 'Oscar Isaac', 'category': 'N/A'}, {'question': 'Which former Saturday Night Live actor voices the protagonist Red in The Angry Birds Movie?', 'answer': 'Jason Sudeikis', 'category': 'N/A'}, {'question': 'What 2005 mystery thriller about a Gulf War veteran falsely accused of murder and put in an asylum stars Adrien Brody, Keira Knightley, and Daniel Craig?', 'answer': 'The Jacket', 'category': 'N/A'}, {'question': "Who directed the 2016 film Miss Peregrine's Home for Peculiar Children?", 'answer': 'Tim Burton', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In which 2000s Pixar film do the characters of Remy, Linguini, and Colette appear?', 'answer': 'Ratatouille', 'category': 'Animated'}, {'question': 'Which X-Men actor plays Roy Courtnay, an aging con man, in the 2019 film The Good Liar?', 'answer': 'Ian McKellen', 'category': 'Dramas'}, {'question': 'What film follows an unorthodox and irreverent DJ named Adrian Cronauer, who shakes things up at a U.S. Armed Forces radio station?', 'answer': 'Good Morning, Vietnam', 'category': '1980s'}, {'question': 'Which MCU actor appears in the films Zodiac, The Brothers Bloom, and Shutter Island?', 'answer': 'Mark Ruffalo', 'category': 'Crime'}, {'question': 'Which comedian starred in the 2000s films Down to Earth, Head of State, and I Think I Love My Wife?', 'answer': 'Chris Rock', 'category': 'Comedies'}, {'question': 'Ronny Yu directed what 2003 film in which two famous horror characters faced off for the first time?', 'answer': 'Freddy vs. Jason', 'category': 'Horror/Thriller'}, {'question': 'Which actress appears in the films Mars Attacks!, Your Highness, and Heat?', 'answer': 'Natalie Portman', 'category': 'Famous Actors & Actresses'}, {'question': "Who plays famed baseball player Jackie Robinson alongside Harrison Ford's Branch Rickey in 42?", 'answer': 'Chadwick Boseman', 'category': 'Harrison Ford'}, {'question': 'In The Call of the Wild, what is the name of the gentle St. Bernard mix dog that the film revolves around?', 'answer': 'Buck', 'category': 'Harrison Ford'}, {'question': "What Oscar-nominated actress plays Sarah Turner, Ford's wife in the 1991 film Regarding Henry?", 'answer': 'Annette Bening', 'category': 'Harrison Ford'}, {'question': 'Harrison Ford was nominated for Best Actor for his work as Det. Capt. John Book in what 1985 film?', 'answer': 'Witness', 'category': 'Harrison Ford'}, {'question': 'What is the name of the third Star Trek film to star the cast of Star Trek: The Next Generation?', 'answer': 'Star Trek: Insurrection', 'category': 'Star Trek'}, {'question': 'Who played Dr. McCoy in Star Trek: The Motion Picture?', 'answer': 'DeForest Kelley', 'category': 'Star Trek'}, {'question': "In 2009's Star Trek, who is Captain of the Enterprise when it first sets off into space?", 'answer': 'Christopher Pike', 'category': 'Star Trek'}, {'question': 'What song did Jaylah use to jam and disorient the swarm ships in Star Trek Beyond at the end of the film?', 'answer': 'Sabotage', 'category': 'Star Trek'}, {'question': 'Which Disney animated film features the songs "One Jump Ahead" and "Friend Like Me"?', 'answer': 'Aladdin', 'category': 'Animated'}, {'question': 'What 2002 horror film, featuring Naomi Watts, has the tagline "Before you die, you see"?', 'answer': 'The Ring', 'category': 'Horror/Thriller'}, {'question': 'This 2005 adventure film from director Breck Eisner follows an explorer named Dirk Pitt as he seeks a lost Civil War battleship in the deserts of West Africa.', 'answer': 'Sahara', 'category': 'Action/Adventure'}, {'question': 'Who plays the main character Derek Vinyard in the 1998 film American History X?', 'answer': 'Edward Norton', 'category': 'Dramas'}, {'question': 'Who stars as a television morning show producer named Becky, opposite Harrison Ford and Diane Keaton, in the 2010 film Morning Glory?', 'answer': 'Rachel McAdams', 'category': 'Rom-Coms'}, {'question': 'Who plays General Izzi, ruler of the rival kingdom of Nexdoria, in the 2021 comedy sequel Coming 2 America?', 'answer': 'Wesley Snipes', 'category': 'Comedies'}, {'question': 'What 2015 film follows a young Peruvian bear who travels to London in search of a home, then meets the kindly Brown family?', 'answer': 'Paddington', 'category': 'Family'}, {'question': 'What famous filmmaker directed the films New York, New York, After Hours, and Bringing Out the Dead?', 'answer': 'Martin Scorsese', 'category': 'Directors'}, {'question': 'Who plays the fearsome boxer Clubber Lang in the Rocky franchise?', 'answer': 'Mr. T', 'category': 'Sports'}, {'question': 'Which baseball film features such actors as Robert Duvall, Wilford Brimley, and Michael Madsen in its cast?', 'answer': 'The Natural', 'category': 'Sports'}, {'question': 'What basketball legend portrays a ballplayer named Neon in the 1994 film Blue Chips?', 'answer': "Shaquille O'Neal", 'category': 'Sports'}, {'question': "What kind of animal is Bill Murray's Carl Spackler going to war with in 1980's Caddyshack?", 'answer': 'a gopher', 'category': 'Sports'}, {'question': 'Reese Witherspoon won an Oscar for what 2005 biopic?', 'answer': 'Walk the Line', 'category': 'Reese Witherspoon'}, {'question': "Who plays Jake, the estranged husband of Reese Witherspoon's character in the rom-com Sweet Home Alabama?", 'answer': 'Josh Lucas', 'category': 'Reese Witherspoon'}, {'question': 'Elle Woods enrolls at what famous university in Legally Blonde?', 'answer': 'Harvard University', 'category': 'Reese Witherspoon'}, {'question': 'Which actor plays Brad, the male lead in the comedy Four Christmases?', 'answer': 'Vince Vaughn', 'category': 'Reese Witherspoon'}, {'question': 'What Academy Award winning actor plays Richard Wershe Sr. in White Boy Rick?', 'answer': 'Matthew McConaughey', 'category': 'Crime'}, {'question': 'What 1988 family film follows the character Josh Baskin, who makes a wish that comes true?', 'answer': 'Big', 'category': '1980s'}, {'question': 'Joe Johnston made his directorial debut on what 1989 American comedic science fiction film starring Rick Moranis?', 'answer': 'Honey, I Shrunk the Kids', 'category': 'Family'}, {'question': 'Who plays the role of Reggie "Reg" Dunlop, the coach, as well as player, of the Charlestown Chiefs in Slap Shot?', 'answer': 'Paul Newman', 'category': 'Sports'}, {'question': 'Steven Spielberg directed the short "Kick the Can" in what 1983 anthology film?', 'answer': 'Twilight Zone: The Movie', 'category': 'Steven Spielberg'}, {'question': 'Which actor plays Merlin in the Kingsman franchise?', 'answer': 'Mark Strong', 'category': 'Spy'}, {'question': 'Who plays FBI agent Carl Hanratty in Catch Me If You Can?', 'answer': 'Tom Hanks', 'category': 'N/A'}, {'question': "What instrument does John C. Reilly's character play in the comedy Step Brothers?", 'answer': 'the drums', 'category': 'N/A'}, {'question': 'Which wrestler played the character Blain in the 1987 film Predator?', 'answer': 'Jesse Ventura', 'category': 'N/A'}, {'question': 'What is the name of the ancient, ultra-powerful, and malignant entity that the Ghostbusters battle in the 1984 film?', 'answer': 'Gozer', 'category': 'N/A'}, {'question': "Before appearing as the T-1000 in Terminator 2, Robert Patrick was a henchman by the name of O'Reilly in what action sequel?", 'answer': 'Die Hard 2', 'category': 'N/A'}, {'question': 'Who directed the biographical spy thriller Snowden?', 'answer': 'Oliver Stone', 'category': 'N/A'}, {'question': 'What 2020 comic book film stars Maisie Williams, Anya Taylor-Joy, and Charlie Heaton?', 'answer': 'The New Mutants', 'category': 'Comic Book'}, {'question': 'This 1987 film which tells the story of the real-life ruler Puyi won the Academy Award for Best Picture.', 'answer': 'The Last Emperor', 'category': 'Dramas'}, {'question': 'Which actress plays real-life author Susan Orlean in the 2002 film Adaptation?', 'answer': 'Meryl Streep', 'category': 'Famous Actors & Actresses'}, {'question': 'This Disney animated film features the line: "Teenagers. They think they know everything. You give them an inch, they swim all over you."?', 'answer': 'The Little Mermaid', 'category': 'Quotes'}, {'question': 'Who plays Doctor Rumack in the 1980 comedy Airplane!?', 'answer': 'Leslie Nielsen', 'category': '1980s'}, {'question': 'Who plays the lead role of Dickie Roberts in the 2000s comedy Dickie Roberts: Former Child Star?', 'answer': 'David Spade', 'category': 'Comedies'}, {'question': 'What sci-fi franchise features the characters Ari, Cornelia, Bright Eyes, and Winter?', 'answer': 'Planet of the Apes', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actress appears in more installments of the Halloween franchise than any other performer, with a total of five to date?', 'answer': "Jamie Lee Curtis (in 1978's Halloween, 1981's Halloween II, Halloween H20: 20 Years Later, Halloween: Resurrection, 2018's Halloween)", 'category': 'Horror/Thriller'}, {'question': 'Who plays Albert Goldman, the star performer at a luxurious drag club in South Florida, in The Birdcage?', 'answer': 'Nathan Lane', 'category': 'N/A'}, {'question': 'In what 2006 DreamWorks animated film does Bruce Willis voice a raccoon?', 'answer': 'Over the Hedge', 'category': 'Animated'}, {'question': 'What government agency is after the Simpsons in The Simpsons Movie?', 'answer': 'the EPA', 'category': 'Animated'}, {'question': 'Who voices Chicken Little in the 2005 Disney film Chicken Little?', 'answer': 'Zach Braff', 'category': 'Animated'}, {'question': 'What 2007 DreamWorks animated film follows an insect who decides to sue the human race for stealing resources from his kind?', 'answer': 'Bee Movie', 'category': 'Animated'}, {'question': 'Jake Gyllenhaal, Dennis Quaid, and Emmy Rossum star together in which 2004 disaster film?', 'answer': 'The Day After Tomorrow', 'category': 'Disaster'}, {'question': 'Gene Hackman plays Reverend Scott in this 1972 disaster film.', 'answer': 'The Poseidon Adventure', 'category': 'Disaster'}, {'question': 'Medical Services chief Kit Latura has to save a group of people trapped in a New Jersey tunnel in this 1996 disaster film.', 'answer': 'Daylight', 'category': 'Disaster'}, {'question': 'In what film does Earth have 18 days until an asteroid hits it, eliminating life as we know it?', 'answer': 'Armageddon', 'category': 'Disaster'}, {'question': 'Amy Heckerling made her directorial debut with this 1982 high school comedy, written by Cameron Crowe, and featuring performances by Phoebe Cates and Sean Penn?', 'answer': 'Fast Times at Ridgemont High', 'category': 'Comedies'}, {'question': "In 2017's Hostiles, who plays Sergeant Philip Wills, a criminal whom Christian Bale is escorting north?", 'answer': 'Ben Foster', 'category': 'Westerns'}, {'question': 'Steven Spielberg and Tom Hanks have collaborated a total of five times. What was their third film they did together?', 'answer': 'The Terminal', 'category': 'Steven Spielberg'}, {'question': 'Which actress plays the lead role of Norah Price in Underwater?', 'answer': 'Kristen Stewart', 'category': 'New Releases'}, {'question': "Who plays Dr. Jonas Miller, Bill Paxton's rival storm chaser in Twister?", 'answer': 'Cary Elwes', 'category': 'Disaster'}, {'question': "Who plays the villainous industrialist Zorg in 1997's The Fifth Element?", 'answer': 'Gary Oldman', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What rom-com starring Seth Rogen has the tagline "Save the due date"?', 'answer': 'Knocked Up', 'category': 'Rom-Coms'}, {'question': 'What music star appeared in the 1980s films 9 to 5, Rhinestone, and Steel Magnolias?', 'answer': 'Dolly Parton', 'category': '1980s'}, {'question': 'Which martial arts star provides the voice of Monkey in the Kung Fu Panda franchise?', 'answer': 'Jackie Chan', 'category': 'Animated'}, {'question': 'Who plays Freddy Krueger in the 1984 film A Nightmare on Elm Street?', 'answer': 'Robert Englund', 'category': 'Horror/Thriller'}, {'question': 'Who plays troubled Vietnam Vet Walter Sobchak, friend of the Dude, in The Big Lebowski?', 'answer': 'John Goodman', 'category': 'Comedies'}, {'question': 'Which Pixar film features the line "You are a sad, strange little man, and you have my pity."?', 'answer': 'Toy Story', 'category': 'Quotes'}, {'question': 'What is the title of the 2009 sequel to The Da Vinci Code?', 'answer': 'Angels & Demons', 'category': 'Mystery'}, {'question': 'Christopher Nolan received his only Best Director Oscar nomination for what film?', 'answer': 'Dunkirk', 'category': 'N/A'}, {'question': 'What is the first name of Professor Klump in the Nutty Professor films?', 'answer': 'Sherman', 'category': 'Eddie Murphy'}, {'question': 'In what 90s comedy does Eddie Murphy have a dual role as a movie star and his nerdy brother Jiff?', 'answer': 'Bowfinger', 'category': 'Eddie Murphy'}, {'question': "In the 2016 film Mr. Church, Eddie's character gets hired to do what for a family in need?", 'answer': 'cook food', 'category': 'Eddie Murphy'}, {'question': "Who plays Ricky Hayman, an executive at a home shopping network on the verge of losing his job, in 1998's Holy Man?", 'answer': 'Jeff Goldblum', 'category': 'Eddie Murphy'}, {'question': 'Bruce Wilis provides the voice of a scheming raccoon named RJ in which 2000s DreamWorks film?', 'answer': 'Over the Hedge', 'category': 'DreamWorks Animation'}, {'question': 'Who voices Don Lino, a shark and leader of a mob consisting of criminally-inclined great white sharks, in Shark Tale?', 'answer': 'Robert De Niro', 'category': 'DreamWorks Animation'}, {'question': 'What 2019 film follows three teenagers who must help a yeti return to his family before others can find him?', 'answer': 'Abominable', 'category': 'DreamWorks Animation'}, {'question': "Which late night talk show host provides the voice of Tim's dad in The Boss Baby?", 'answer': 'Jimmy Kimmel', 'category': 'DreamWorks Animation'}, {'question': "Which character is the Terminator sent to kill in 1984's The Terminator?", 'answer': 'Sarah Connor', 'category': 'Action/Adventure'}, {'question': 'Jet Li stars in what 2006 film, directed by Ronny Yu, about Huo Yuanjia, a Chinese martial artist who challenged foreign fighters in highly publicized events?', 'answer': 'Fearless', 'category': 'Martial Arts'}, {'question': 'This Illumination franchise features the voice talents of Kristen Wiig, Jason Segel, Russell Brand, and Steve Carell.', 'answer': 'Despicable Me', 'category': 'Animated'}, {'question': 'Which comedic actor co-starred alongside Val Kilmer as the Riddler in Batman Forever?', 'answer': 'Jim Carrey', 'category': 'Comic Book'}, {'question': 'What is the name of the demonically possessed doll in the Conjuring franchise that features in its own films?', 'answer': 'Annabelle', 'category': 'Horror/Thriller'}, {'question': 'Alicia Vikander plays video game heroine Lara Croft in what 2018 film?', 'answer': 'Tomb Raider', 'category': 'Action/Adventure'}, {'question': 'The characters of Alex Pruitt, Uncle Frank, and Marv appear in what family franchise?', 'answer': 'Home Alone', 'category': 'Family'}, {'question': 'What 2008 comedy features supporting performances from Jack Black, Jay Baruchel, Danny McBride, and Matthew McConaughey?', 'answer': 'Tropic Thunder', 'category': 'Comedies'}, {'question': 'Matthew Vaughn directed what 2007 fantasy film that stars Charlie Cox, Robert De Niro, and Claire Danes?', 'answer': 'Stardust', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actress stars in the rom-coms The Holiday, The Other Woman, and Sex Tape?', 'answer': 'Cameron Diaz', 'category': 'Rom-Coms'}, {'question': "Who directed 2018's Death Wish?", 'answer': 'Eli Roth', 'category': '2010s'}, {'question': 'Who plays Kyle Reese in Terminator Genisys?', 'answer': 'Jai Courtney', 'category': '2010s'}, {'question': 'In the 2011 film Young Adult, Charlize Theron plays a ghostwriter that has written several books in what genre?', 'answer': 'young adult', 'category': '2010s'}, {'question': 'Spike Jonze directed Joaquin Phoenix in what film about falling in love with an AI system?', 'answer': 'Her', 'category': '2010s'}, {'question': 'Jodie Foster plays card-playing con artist Mrs. Annabelle Bransford in what 1994 western?', 'answer': 'Maverick', 'category': 'Jodie Foster'}, {'question': 'Foster plays a character called the Nurse, who runs a secret emergency room for criminals, in what 2018 film?', 'answer': 'Hotel Artemis', 'category': 'Jodie Foster'}, {'question': 'Jodie Foster plays a radio personality who begins a quest for vengeance against those who assaulted her and killed her fiancé, leaving a bloody trail across New York City, in what film?', 'answer': 'The Brave One', 'category': 'Jodie Foster'}, {'question': 'This Neill Blomkamp film starred Jodie Foster and Matt Damon.', 'answer': 'Elysium', 'category': 'Jodie Foster'}, {'question': 'James Corden, Judi Dench, and Jason Derulo appear in what 2019 musical, based off a legendary Broadway show?', 'answer': 'Cats', 'category': 'Musicals'}, {'question': 'What is the name of the titular killer St. Bernard in the 1983 movie based on a novel by Stephen King?', 'answer': 'Cujo', 'category': 'Horror'}, {'question': 'What 2008 romantic fantasy film, based on a story by F. Scott Fitzgerald, features supporting performances from Taraji P. Henson, Jared Harris, and Tilda Swinton?', 'answer': 'The Curious Case of Benjamin Button', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the name of the McConaughey film about a video store clerk who agrees to have his life filmed by a camera crew for a television show?', 'answer': 'EDtv', 'category': 'Matthew McConaughey'}, {'question': "Kyle Chandler plays Cate Blanchett's estranged husband in this film by director Todd Haynes.", 'answer': 'Carol', 'category': 'Romance'}, {'question': 'Jon S. Baird directed John C. Reilly in what 2010s biopic?', 'answer': 'Stan & Ollie', 'category': 'Biopics'}, {'question': 'Adam Driver, David Oyelowo, Joseph Gordon-Levitt, and Tim Blake Nelson have roles in which Spielberg film?', 'answer': 'Lincoln', 'category': 'N/A'}, {'question': "Who played Alma Beers Del Mar, Heath Ledger's wife, in Brokeback Mountain?", 'answer': 'Michelle Williams', 'category': 'N/A'}, {'question': 'The Great Khali made his big screen debut in what 2005 Adam Sandler sports film?', 'answer': 'The Longest Yard', 'category': 'N/A'}, {'question': 'Joe Johnston directed Robin Williams and Bonnie Hunt in what 1995 adventure film?', 'answer': 'Jumanji', 'category': 'Family'}, {'question': 'Which actor stars in the thrillers Nick of Time, The Ninth Gate, and From Hell?', 'answer': 'Johnny Depp', 'category': 'Horror/Thriller'}, {'question': 'In Gremlins, what name is given to the adorable Mogwai creature that Billy Peltzer is given for Christmas?', 'answer': 'Gizmo', 'category': '1980s'}, {'question': 'Idina Menzel performs the Oscar-nominated song "Into the Unknown" in what 2019 animated Disney film?', 'answer': 'Frozen II', 'category': 'Animated'}, {'question': 'Which 2010s Martin Scorsese film features supporting performances from Ray Romano, Bobby Cannavale, and Anna Paquin?', 'answer': 'The Irishman', 'category': 'Crime'}, {'question': 'Shane Black directed what 2000s murder mystery that involves a private eye, a struggling actress, and a thief masquerading as an actor?', 'answer': 'Kiss Kiss Bang Bang', 'category': 'Mystery'}, {'question': 'This SNL actor stars as an IRS agent who falls in love with a woman played by Maggie Gyllenhaal in the 2006 film Stranger than Fiction.', 'answer': 'Will Ferrell', 'category': 'Rom-Coms'}, {'question': 'Nikolaj Coster-Waldau and Gerard Butler star in what 2016 fantasy adventure film?', 'answer': 'Gods of Egypt', 'category': 'Action/Adventure'}, {'question': 'Monsters Unleashed is the subtitle of the 2004 sequel to what family film?', 'answer': 'Scooby-Doo', 'category': 'N/A'}, {'question': 'After the murders of his family and his partner, a maverick cop becomes hell-bent on revenge in what 2008 film?', 'answer': 'Max Payne', 'category': 'Video Game'}, {'question': 'Who plays Mario in Super Mario Bros.?', 'answer': 'Bob Hoskins', 'category': 'Video Game'}, {'question': "Who directed 1995's Mortal Kombat?", 'answer': 'Paul W. S. Anderson', 'category': 'Video Game'}, {'question': 'Sean Bean, Laurie Holden, and Deborah Kara Unger appear in what video game film franchise?', 'answer': 'Silent Hill', 'category': 'Video Game'}, {'question': 'Shailene Woodley stars as a teen cancer patient in this 2014 film based on the novel by John Green.', 'answer': 'The Fault in Our Stars', 'category': 'Young Adult Adaptations'}, {'question': "Which actress plays the rapidly grown version of Renesmee, Bella and Edward's daughter, in Twilight: Breaking Dawn – Part 2?", 'answer': 'Mackenzie Foy', 'category': 'Young Adult Adaptations'}, {'question': 'Who directed the Hunger Games installments Catching Fire, Mockingjay – Part 1, and Mockingjay – Part 2?', 'answer': 'Francis Lawrence', 'category': 'Young Adult Adaptations'}, {'question': 'Amandla Stenberg and Mandy Moore star in what 2018 dystopian film about superpowered teenagers on the run from the government?', 'answer': 'The Darkest Minds', 'category': 'Young Adult Adaptations'}, {'question': "Who plays Jack Hall, Jake Gyllenhaal's father who is a paleoclimatologist, who must make a daring trek from Washington, D.C. to New York City to reach his son, in The Day After Tomorrow?", 'answer': 'Dennis Quaid', 'category': 'Disaster'}, {'question': 'Who directed Matthew McConaughey in the 2002 thriller Frailty?', 'answer': 'Bill Paxton', 'category': 'Matthew McConaughey'}, {'question': 'Who plays the lead role of John Garrity, a structural engineer, in Greenland?', 'answer': 'Gerard Butler', 'category': 'New Releases'}, {'question': 'Matthew Modine stars opposite which actress, who plays Morgan Adams, in the film Cutthroat Island?', 'answer': 'Geena Davis', 'category': '1990s'}, {'question': "Who directed Jim Carrey in 1998's The Truman Show?", 'answer': 'Peter Weir', 'category': 'Modern Classics'}, {'question': 'Lord Humungus is the name of the main villain in what 1980s dystopian action sequel?', 'answer': 'The Road Warrior', 'category': 'Action/Adventure'}, {'question': 'What famous fantasy character has been played by Dustin Hoffman, Jason Isaacs, and Garrett Hedlund?', 'answer': 'Captain Hook (in Hook, Peter Pan, Pan)', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Alexandre Aja directed what 2006 remake of a Wes Craven classic, in which a family falls victim to mutated cannibals in the desert?', 'answer': 'The Hills Have Eyes', 'category': 'Horror/Thriller'}, {'question': 'Which actor appears in the films The Long Kiss Goodnight, XXX, and Die Hard with a Vengeance?', 'answer': 'Samuel L. Jackson', 'category': 'Action/Adventure'}, {'question': 'Which actor appears in the biographical dramas Ali, Ray, and Just Mercy?', 'answer': 'Jamie Foxx', 'category': 'Biopics'}, {'question': 'What is the title of the 2014 film in the Muppets franchise in which a criminal frog named Constantine pretends to be Kermit?', 'answer': 'Muppets Most Wanted', 'category': 'Family'}, {'question': 'Which actor received a Best Supporting Actor Oscar nomination for his performance as Donnie Azoff in The Wolf of Wall Street?', 'answer': 'Jonah Hill', 'category': 'Crime'}, {'question': 'How many comedies have Will Ferrell and Mark Wahlberg co-starred in together?', 'answer': "3 (The Other Guys, Daddy's Home, Daddy's Home 2)", 'category': 'Comedies'}, {'question': 'Who plays Andrew Paxton, the male lead in the romantic comedy The Proposal?', 'answer': 'Ryan Reynolds', 'category': 'Rom-Coms'}, {'question': 'Who stars as a New York bike courier named Wilee in the 2012 action thriller Premium Rush?', 'answer': 'Joseph Gordon-Levitt', 'category': 'N/A'}, {'question': 'Which director did Nicole Kidman work with the second time in her career when she filmed the 2011 crime drama film Trespass?', 'answer': 'Joel Schumacher', 'category': 'Nicole Kidman'}, {'question': 'Nicole Kidman stars in what 1989 thriller about a couple who encounter a psychotic stranger while on a sailboating trip?', 'answer': 'Dead Calm', 'category': 'Nicole Kidman'}, {'question': "In Days of Thunder, Cole Trickle's car is sponsored by which soft drink?", 'answer': 'Mello Yello', 'category': 'Nicole Kidman'}, {'question': "In 2002's Birthday Girl, Kidman plays a mail-order bride from which country?", 'answer': 'Russia', 'category': 'Nicole Kidman'}, {'question': 'Tyler Perry plays scientist Baxter Stockman, who creates two mutant creatures named Bebop and Rocksteady, in what action adventure franchise?', 'answer': 'Teenage Mutant Ninja Turtles', 'category': 'Tyler Perry'}, {'question': 'What 2005 film was the first theatrical feature in which Tyler Perry appeared as Madea?', 'answer': 'Diary of a Mad Black Woman', 'category': 'Tyler Perry'}, {'question': 'Nia Long, Amy Smart, and Terry Crews star in what film directed by Tyler Perry?', 'answer': 'The Single Moms Club', 'category': 'Tyler Perry'}, {'question': 'In Madea Goes to Jail, Madea becomes enraged with a snobby woman for doing what in a public setting, which results in Madea serving time?', 'answer': 'stealing her parking space', 'category': 'Tyler Perry'}, {'question': "Who plays the lead role of Will Graham in 2002's Red Dragon?", 'answer': 'Edward Norton', 'category': 'Crime'}, {'question': 'Gary Oldman won an Oscar for playing what famous British Prime Minister in the film Darkest Hour?', 'answer': 'Winston Churchill', 'category': 'Biopics'}, {'question': 'In the film The Goonies, what is the name of the pirate whose ship the kids are in search of?', 'answer': 'One-Eyed Willy', 'category': '1980s'}, {'question': 'Which DiCaprio film has supporting roles from famous directors Spike Jonze, Rob Reiner, and Jon Favreau?', 'answer': 'The Wolf of Wall Street', 'category': 'Leonardo DiCaprio'}, {'question': 'Famke Janssen plays the evil grand witch Muriel in what 2013 film with Gemma Arterton?', 'answer': 'Hansel & Gretel: Witch Hunters', 'category': '2010s'}, {'question': 'What director helmed the 1990 Jamie Lee Curtis film Blue Steel?', 'answer': 'Kathryn Bigelow', 'category': 'Directors'}, {'question': "What actor was the star of the classic westerns The Gunfighter, The Bravados, and Mackenna's Gold?", 'answer': 'Gregory Peck', 'category': 'N/A'}, {'question': "Which wrestler plays Dan Paine, the right hand of Eric Roberts' James Munroe, in The Expendables?", 'answer': 'Steve Austin', 'category': 'N/A'}, {'question': 'Who directed the war film 13 Hours: The Secret Soldiers of Benghazi?', 'answer': 'Michael Bay', 'category': 'War'}, {'question': 'Gerard Butler provides the voice of Stoick, a Viking leader, in what 2010 animated film?', 'answer': 'How to Train Your Dragon', 'category': 'Animated'}, {'question': "Who plays Alex, the main love interest of Sandra Bullock's character in the romantic drama The Lake House?", 'answer': 'Keanu Reeves', 'category': 'Romance'}, {'question': "What year saw the release of the animated films Antz and A Bug's Life?", 'answer': '1998', 'category': 'Release Dates'}, {'question': 'Who plays Adaline Bowman, a young woman who stops aging after an accident at the age of 29, in the film The Age of Adaline?', 'answer': 'Blake Lively', 'category': 'Dramas'}, {'question': "Who plays Darius Kincaid, one of the world's most notorious hitmen, in The Hitman's Bodyguard?", 'answer': 'Samuel L. Jackson', 'category': 'Comedies'}, {'question': 'Which MCU filmmaker was behind the lens of the sci-fi adventure film Zathura: A Space Adventure?', 'answer': 'Jon Favreau', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays Walter, a man who becomes obsessed with the 23 enigma once he reads about it in a strange book that seemingly mirrors his own life, in The Number 23?', 'answer': 'Jim Carrey', 'category': 'Mystery'}, {'question': 'Who stars as Arthur Kirkland, a lawyer who is forced to defend a judge, whom he knows is guilty, in the 1979 film ...And Justice For All.?', 'answer': 'Al Pacino', 'category': 'N/A'}, {'question': 'The Pixar film Coco takes place in the town of Santa Cecilia in what Latin country?', 'answer': 'Mexico', 'category': 'Pixar'}, {'question': 'In Cars, Sally runs the Cozy Cone Motel, and does what other job in town as well?', 'answer': 'the town attorney', 'category': 'Pixar'}, {'question': 'In Toy Story 4, which actress voices the antagonist of the film Gabby Gabby?', 'answer': 'Christina Hendricks', 'category': 'Pixar'}, {'question': "In the Pixar film Onward, who voices Laurel Lightfoot, Ian and Barley's mother?", 'answer': 'Julia Louis-Dreyfus', 'category': 'Pixar'}, {'question': 'The Oscar-winning films Marriage Story and 1917 had Oscar-qualifying releases in what year?', 'answer': '2019', 'category': 'Release Dates'}, {'question': 'What year saw the release of the counterculture classic Easy Rider?', 'answer': '1969', 'category': 'Release Dates'}, {'question': 'Eddie Murphy starred in the film Life and which other comedy in 1999?', 'answer': 'Bowfinger', 'category': 'Release Dates'}, {'question': 'What year saw the release of Ghostbusters and The Karate Kid?', 'answer': '1984', 'category': 'Release Dates'}, {'question': 'Sandra Bullock co-stars with Melissa McCarthy in what 2013 comedy?', 'answer': 'The Heat', 'category': 'Comedies'}, {'question': 'In Pulp Fiction, who plays the burglar that simply goes by the name Pumpkin?', 'answer': 'Tim Roth', 'category': 'Quentin Tarantino'}, {'question': 'What Oscar-winning actress voices Sassy the cat in the 1993 family film Homeward Bound: The Incredible Journey?', 'answer': 'Sally Field', 'category': 'Family'}, {'question': 'Robert Pattinson plays the character Neil in what 2020 action epic?', 'answer': 'Tenet', 'category': 'New Releases'}, {'question': 'Name two of the three films in which Tom Cruise co-stars with Nicole Kidman.', 'answer': 'Days of Thunder, Far and Away, Eyes Wide Shut', 'category': 'Tom Cruise'}, {'question': 'Which actor starred in the films Instinct, Red Dragon, and The Rite?', 'answer': 'Anthony Hopkins', 'category': 'Horror/Thriller'}, {'question': 'Jared Harris plays the literary criminal Professor Moriarty in what 2011 mystery movie sequel?', 'answer': 'Sherlock Holmes: A Game of Shadows', 'category': 'Mystery'}, {'question': 'The 2020 film Mank depicts the writing of what legendary film that was directed by Orson Welles?', 'answer': 'Citizen Kane', 'category': 'Dramas'}, {'question': 'Who stars as Sam Chisholm, leader of a group of gunslingers-for-hire in the 2016 remake The Magnificent Seven?', 'answer': 'Denzel Washington', 'category': 'Westerns'}, {'question': 'Will Smith plays General Cypher Raige in what sci-fi adventure film from director M. Night Shyamalan?', 'answer': 'After Earth', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor starred in the films The Grifters, Grosse Pointe Blank, and Con Air?', 'answer': 'John Cusack', 'category': '1990s'}, {'question': 'What 1990s thriller was the first collaboration of actor Brad Pitt with director David Fincher?', 'answer': 'Seven', 'category': 'Directors'}, {'question': "Which real-life female music star plays a fictional popstar named Xania in 2006's The Pink Panther?", 'answer': 'Beyoncé', 'category': 'Comedies'}, {'question': 'Which 1986 action film features supporting performances from Tom Skerritt, Tim Robbins, and Michael Ironside?', 'answer': 'Top Gun', 'category': 'N/A'}, {'question': 'In what 2004 fantasy rom-com does Anne Hathaway play Ella of Frell?', 'answer': 'Ella Enchanted', 'category': 'Anne Hathaway'}, {'question': 'What 2005 film marks the first time Anne Hathaway lent her voice to an American animated film?', 'answer': 'Hoodwinked!', 'category': 'Anne Hathaway'}, {'question': 'Anne Hathaway plays Agent 99 in which 2008 action spy comedy?', 'answer': 'Get Smart', 'category': 'Anne Hathaway'}, {'question': "Which actress co-stars as Anne Hathaway's best friend in the comedy Bride Wars?", 'answer': 'Kate Hudson', 'category': 'Anne Hathaway'}, {'question': "Who plays Amy Adams' sister in the 2008 dramedy Sunshine Cleaning?", 'answer': 'Emily Blunt', 'category': 'Amy Adams'}, {'question': 'Who directed Amy Adams in the biopic Big Eyes?', 'answer': 'Tim Burton', 'category': 'Amy Adams'}, {'question': 'Amy Adams received her first Oscar nomination for what 2000s film?', 'answer': 'Junebug', 'category': 'Amy Adams'}, {'question': 'Which Walking Dead actor plays Al Capone in Night at the Museum: Battle of the Smithsonian?', 'answer': 'Jon Bernthal', 'category': 'Amy Adams'}, {'question': 'Martin Scorsese lost Best Director for Goodfellas to what famous actor turned director in 1991?', 'answer': 'Kevin Costner (for Dances with Wolves)', 'category': 'Oscars'}, {'question': 'Laurence Fishburne stars as an LAPD officer who is tasked with going undercover to break up a drug ring in what 1992 film?', 'answer': 'Deep Cover', 'category': 'Black Cinema'}, {'question': "Who plays the villainous Mitch Leary, who is taunting Clint Eastwood's Frank Horrigan, a Secret Service Agent, in the action thriller In the Line of Fire?", 'answer': 'John Malkovich', 'category': 'Horror/Thriller'}, {'question': 'Will Smith plays seasoned con man Nicky Spurgeon alongside Margot Robbie in what 2015 comedic drama?', 'answer': 'Focus', 'category': 'Crime'}, {'question': 'Which actor starred in the 1960s family films Mary Poppins and Chitty Chitty Bang Bang?', 'answer': 'Dick Van Dyke', 'category': 'Family'}, {'question': "Which MCU filmmaker directed the films Dead Again, Artemis Fowl, and 2007's Sleuth?", 'answer': 'Kenneth Branagh', 'category': 'Directors'}, {'question': "Who plays Branch Rickey alongside Chadwick Boseman's Jackie Robinson in 42?", 'answer': 'Harrison Ford', 'category': 'Biopics'}, {'question': 'Which musician stars alongside Steve Martin as the character of Charlene Morton, who needs help proving her innocence after being framed for a crime, in the film Bringing Down the House?', 'answer': 'Queen Latifah', 'category': 'Comedies'}, {'question': 'The Voyage of the Dawn Treader is the third installment in what fantasy movie franchise?', 'answer': 'The Chronicles of Narnia', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which Oscar-winning actor plays Simon Peter Gruber in Die Hard with a Vengeance?', 'answer': 'Jeremy Irons', 'category': 'Action/Adventure'}, {'question': 'What Oscar-winning 1990s film features supporting performances from Judi Dench, Geoffrey Rush, and Ben Affleck?', 'answer': 'Shakespeare in Love', 'category': 'N/A'}, {'question': "Which comedic actor plays a gangster named Frank Milo, opposite Robert De Niro in 1993's Mad Dog and Glory?", 'answer': 'Bill Murray', 'category': 'Robert De Niro'}, {'question': 'Who directed Robert De Niro in the 2001 heist film The Score?', 'answer': 'Frank Oz', 'category': 'Robert De Niro'}, {'question': "What is the current profession of Robert De Niro's character Jack Walsh, in the action comedy Midnight Run?", 'answer': 'a bounty hunter', 'category': 'Robert De Niro'}, {'question': 'Who directed the 1990 drama Awakenings, starring Robert De Niro and Robin Williams?', 'answer': 'Penny Marshall', 'category': 'Robert De Niro'}, {'question': 'In the 2000 Aardman Animations co-production Chicken Run, what movie star provides the voice of the rooster Rocky?', 'answer': 'Mel Gibson', 'category': 'DreamWorks Animation'}, {'question': 'What is the subtitle of the 2020 sequel to The Croods?', 'answer': 'A New Age', 'category': 'DreamWorks Animation'}, {'question': 'Which character tricks Shrek into allowing himself to be erased from existence and cast in a dark alternate timeline in the film Shrek Forever After?', 'answer': 'Rumpelstiltskin', 'category': 'DreamWorks Animation'}, {'question': "Who provides the voice of the title character in 2011's Puss in Boots?", 'answer': 'Antonio Banderas', 'category': 'DreamWorks Animation'}, {'question': "Julia Roberts plays the Queen to Lily Collins' Snow White in what 2012 film?", 'answer': 'Mirror Mirror', 'category': 'Julia Roberts'}, {'question': 'For what film did John Wayne win his only Academy Award?', 'answer': 'True Grit', 'category': 'Westerns'}, {'question': "Which actress stars as Maggie Peyton in 2005's Herbie: Fully Loaded?", 'answer': 'Lindsay Lohan', 'category': 'Disney'}, {'question': 'Who directed Saoirse Ronan and Cate Blanchett in the 2011 action thriller Hanna?', 'answer': 'Joe Wright', 'category': '2010s'}, {'question': 'Who directed the 1994 film Stargate?', 'answer': 'Roland Emmerich', 'category': '1990s'}, {'question': 'In what 1990s musical does a character named Jack dream of leaving New York to move to Santa Fe?', 'answer': 'Newsies', 'category': 'Musicals'}, {'question': "Who plays U.S. Marshal Jim T. West, who teams up with Kevin Kline's Artemus Gordon, in the 1999 film Wild Wild West?", 'answer': 'Will Smith', 'category': 'Westerns'}, {'question': 'Ewan McGregor and Albert Finney both play the character Ed Bloom at different ages in what 2000s film?', 'answer': 'Big Fish', 'category': 'Dramas'}, {'question': 'Who stars as a serial killer called the Butcher, who switches bodies with a teenage girl, in the 2020 film Freaky?', 'answer': 'Vince Vaughn', 'category': 'Horror/Thriller'}, {'question': 'Alec Baldwin, Geena Davis, and Winona Ryder co-star in what comedy fantasy film?', 'answer': 'Beetlejuice', 'category': '1980s'}, {'question': 'What 2010s action film marked the only occasion that Sylvester Stallone directed Arnold Schwarzenegger in a film?', 'answer': 'The Expendables', 'category': 'Directors'}, {'question': 'Which actress starred in the 2000s teen comedies What a Girl Wants and Sydney White?', 'answer': 'Amanda Bynes', 'category': 'Comedies'}, {'question': 'Jason Statham, Benicio del Toro, and Brad Pitt star in which film from director Guy Ritchie?', 'answer': 'Snatch', 'category': 'Crime'}, {'question': 'Who directed the sci-fi films Universal Soldier, Stargate, and Independence Day: Resurgence?', 'answer': 'Roland Emmerich', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Richard Jenkins and Bradley Whitford have supporting roles as engineers Gary and Steve, who work in an underground bunker, in this 2012 comedy horror film.', 'answer': 'The Cabin in the Woods', 'category': 'N/A'}, {'question': 'Who played the father of author P. L. Travers in Saving Mr. Banks?', 'answer': 'Colin Farrell', 'category': 'Tom Hanks'}, {'question': "Which actress played Jim Lovell's wife Marilyn in Apollo 13?", 'answer': 'Kathleen Quinlan', 'category': 'Tom Hanks'}, {'question': 'Who directed Tom Hanks in the 1990 film The Bonfire of the Vanities?', 'answer': 'Brian De Palma', 'category': 'Tom Hanks'}, {'question': "In what movie did Carrie Fisher play Tom Hanks' wife?", 'answer': "The 'Burbs", 'category': 'Tom Hanks'}, {'question': 'In what film does Tom Hanks yell "You are a child\'s plaything!"?', 'answer': 'Toy Story', 'category': 'Tom Hanks'}, {'question': "Forrest keeps a copy of what children's book in his briefcase in the film Forrest Gump?", 'answer': 'Curious George', 'category': 'Tom Hanks'}, {'question': 'Who directed The New Mutants?', 'answer': 'Josh Boone', 'category': 'New Releases'}, {'question': 'Who plays Sherlock Holmes in the film Enola Holmes?', 'answer': 'Henry Cavill', 'category': 'New Releases'}, {'question': 'What 2020 biopic features supporting performances from Linda Cardellini, Kyle MacLachlan, and Matt Dillon?', 'answer': 'Capone', 'category': 'New Releases'}, {'question': "Which character actor played Stanley, father of Carey Mulligan's character, in Promising Young Woman?", 'answer': 'Clancy Brown', 'category': 'New Releases'}, {'question': "Who plays Margaret Blackledge, Kevin Costner's wife, in the film Let Him Go?", 'answer': 'Diane Lane', 'category': 'New Releases'}, {'question': 'Natalie Krinsky directed what 2020 romantic comedy about a young woman who starts a unique pop-up space after a breakup?', 'answer': 'The Broken Hearts Gallery', 'category': 'New Releases'}, {'question': 'Richard Donner directed Julia Roberts and Mel Gibson in what 90s thriller?', 'answer': 'Conspiracy Theory', 'category': 'Julia Roberts'}, {'question': 'What prominent comedic actor has a small role in Donnie Darko as the character of Ricky Danforth?', 'answer': 'Seth Rogen', 'category': 'Drew Barrymore'}, {'question': 'Phillip Noyce directed Denzel Washington in what 1999 thriller?', 'answer': 'The Bone Collector', 'category': 'Denzel Washington'}, {'question': 'Tom Hanks plays what real-life person in the 2013 film Saving Mr. Banks?', 'answer': 'Walt Disney', 'category': 'Tom Hanks'}, {'question': 'Which Academy Award winning actor plays Rick "The Pecker" Peck, Tugg Speedman\'s extremely devoted agent and best friend, in Tropic Thunder?', 'answer': 'Matthew McConaughey', 'category': 'Comedies'}, {'question': 'Duncan Jones directed what 2016 video game film starring Paula Patton, Toby Kebbell, Ben Foster, and Dominic Cooper?', 'answer': 'Warcraft', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who plays car designer Carroll Shelby in the film Ford v Ferrari?', 'answer': 'Matt Damon', 'category': 'Biopics'}, {'question': 'What 2000s Best Picture nominee stars Michelle Yeoh and is directed by Ang Lee?', 'answer': 'Crouching Tiger, Hidden Dragon', 'category': 'Martial Arts'}, {'question': 'Arnold Schwarzenegger stars as Sheriff Ray Owens alongside Johnny Knoxville and Forest Whitaker in what 2013 action film?', 'answer': 'The Last Stand', 'category': 'Action/Adventure'}, {'question': 'Emerald Fennell won a Best Original Screenplay Oscar for what 2020 film starring Carey Mulligan and Bo Burnham?', 'answer': 'Promising Young Woman', 'category': 'Oscars'}, {'question': "Which actor appears in the films Black Knight, Big Momma's House, and Blue Streak?", 'answer': 'Martin Lawrence', 'category': 'Comedies'}, {'question': 'The formidable boxing villain Ivan Drago first appeared in what 1985 boxing film?', 'answer': 'Rocky IV', 'category': 'Sports'}, {'question': 'Ewan McGregor co-stars alongside which Oscar-winning actress, who plays author Barbara Novak, in the film Down with Love?', 'answer': 'Renée Zellweger', 'category': 'Rom-Coms'}, {'question': 'In what comic book movie does Robert Redford first play the character Alexander Pierce?', 'answer': 'Captain America: The Winter Soldier', 'category': 'Robert Redford'}, {'question': "Which actress stars as Grace, the daughter of Robert Redford's character, in the 2016 Disney remake Pete's Dragon?", 'answer': 'Bryce Dallas Howard', 'category': 'Robert Redford'}, {'question': 'In what 2000s drama does Robert Redford play a court-martialed General who rallies other inmates against a corrupt warden?', 'answer': 'The Last Castle', 'category': 'Robert Redford'}, {'question': 'Robert Redford made his directorial debut with what 1980 family drama, which won the Best Picture Oscar?', 'answer': 'Ordinary People', 'category': 'Robert Redford'}, {'question': "What is the profession of Tom Cruise's character in 2004's Collateral?", 'answer': 'a hitman', 'category': 'Thriller'}, {'question': 'The character of Hannibal Lecter has appeared in how many theatrically released films?', 'answer': '5 (Manhunter, The Silence of the Lambs, Hannibal, Red Dragon, Hannibal Rising)', 'category': 'Thriller'}, {'question': "Who plays the idealistic FBI agent Kate Macer in 2015's Sicario?", 'answer': 'Emily Blunt', 'category': 'Thriller'}, {'question': "Who played the character of Chuck, Leonardo DiCaprio's new partner in the film Shutter Island?", 'answer': 'Mark Ruffalo', 'category': 'Thriller'}, {'question': "Who plays Matthew McConaughey's co-lead in Fool's Gold?", 'answer': 'Kate Hudson', 'category': 'Matthew McConaughey'}, {'question': 'Queen Latifah, Jada Pinkett Smith, and Tiffany Haddish play friends on a vacation in New Orleans in this 2017 comedy.', 'answer': 'Girls Trip', 'category': 'Comedies'}, {'question': 'What is the title of the fifth entry in the Bourne franchise, released in 2016?', 'answer': 'Jason Bourne', 'category': 'Spy'}, {'question': 'Which actor received an Oscar nomination for playing the character Bill the Butcher in the film Gangs of New York?', 'answer': 'Daniel Day-Lewis', 'category': 'Dramas'}, {'question': 'Chloë Grace Moretz and Michael Peña star in what 2021 live-action and animated film that brings classic cartoon characters into the modern day?', 'answer': 'Tom & Jerry', 'category': 'New Releases'}, {'question': 'Who plays Harry Hart, who has the code name Galahad, in the Kingsman franchise?', 'answer': 'Colin Firth', 'category': 'Action/Adventure'}, {'question': 'What actor is known for playing a civil rights leader, a corrupt LAPD detective, and an alcoholic airline pilot?', 'answer': 'Denzel Washington (in Malcolm X, Training Day, Flight)', 'category': 'Famous Actors & Actresses'}, {'question': 'Ludwig Göransson won a Best Original Score Oscar for what 2018 MCU film?', 'answer': 'Black Panther', 'category': 'Oscars'}, {'question': 'Which actress stars as Evelyn Abbott in the film A Quiet Place?', 'answer': 'Emily Blunt', 'category': 'Horror/Thriller'}, {'question': 'What Pixar film is known for the line "We should lock the door and scream that curse word we know. It\'s a good one!"?', 'answer': 'Inside Out', 'category': 'N/A'}, {'question': 'What courtroom drama is known for the line "You can\'t handle the truth!"?', 'answer': 'A Few Good Men', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': "Who directed 1995's John Grisham adaptation The Rainmaker?", 'answer': 'Francis Ford Coppola', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'In Kramer vs. Kramer, Dustin Hoffman plays Ted Kramer. Who plays Joanna Kramer?', 'answer': 'Meryl Streep', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'Which 1957 Billy Wilder courtroom drama was based on a story by Agatha Christie?', 'answer': 'Witness for the Prosecution', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': "Who plays the lead role of Michael Bryce, a former triple A rated executive protection agent and CIA officer, in The HItman's Bodyguard?", 'answer': 'Ryan Reynolds', 'category': 'Action/Adventure'}, {'question': "In True Lies, Jamie Lee Curtis' character remarks that she married what action movie character, when she learns the truth about her husband?", 'answer': 'Rambo', 'category': 'Action/Adventure'}, {'question': "Which actor plays Cash to Sylvester Stallone's Tang, in the buddy cop movie Tango & Cash?", 'answer': 'Kurt Russell', 'category': 'Action/Adventure'}, {'question': 'Which actor played the villain Ian Howe, treasure hunter and former friend of Benjamin Gates, in National Treasure?', 'answer': 'Sean Bean', 'category': 'Action/Adventure'}, {'question': 'Donnie Yen and Jet Li appear in what 2020 live-action Disney film?', 'answer': 'Mulan', 'category': 'Disney'}, {'question': "Star Wars actor Jake Lloyd plays Arnold Schwarzenegger's son in what 1990s family film?", 'answer': 'Jingle All the Way', 'category': 'Family'}, {'question': 'What 2018 musical Disney sequel features the songs "(Underneath the) Lovely London Sky" and "Trip a Little Light Fantastic"?', 'answer': 'Mary Poppins Returns', 'category': 'Musicals'}, {'question': "Who plays the role of John Steed in 1998's The Avengers?", 'answer': 'Ralph Fiennes', 'category': 'Spy'}, {'question': 'Roger Spottiswoode directed what 1990 comedic action war film that stars Mel Gibson and Robert Downey Jr.?', 'answer': 'Air America', 'category': '1990s'}, {'question': 'What is the title of the eighth film in the Fast & Furious franchise?', 'answer': 'The Fate of the Furious', 'category': 'Action/Adventure'}, {'question': 'Who won an Oscar for composing the score for the film E.T. the Extra-Terrestrial?', 'answer': 'John Williams', 'category': 'Oscars'}, {'question': "Which Oscar winner directed 1974's The Conversation, which starred Gene Hackman as a surveillance expert caught up in a possible conspiracy?", 'answer': 'Francis Ford Coppola', 'category': 'Dramas'}, {'question': 'The films Menace II Society and Friday take place in inner-city neighborhoods of what famous United States city?', 'answer': 'Los Angeles', 'category': 'Black Cinema'}, {'question': 'Which actress stars as an obsessive character named Mary in the film All About Steve?', 'answer': 'Sandra Bullock', 'category': 'Comedies'}, {'question': "Which actor starred in the crime films Lawless, The Drop, and 2015's Legend?", 'answer': 'Tom Hardy', 'category': 'Crime'}, {'question': 'The Lego Batman Movie featured the voice talents of Zach Galifianakis and Rosario Dawson, and was released in what year?', 'answer': '2017', 'category': 'Animated'}, {'question': 'Logan Lerman plays Charlie, a high school freshman struggling with depression and post-traumatic stress, in what 2012 film?', 'answer': 'The Perks of Being a Wallflower', 'category': 'Dramas'}, {'question': 'Who stars as an undercover cop named Tom Ludlow in the 2008 David Ayer film Street Kings?', 'answer': 'Keanu Reeves', 'category': 'N/A'}, {'question': "Who plays George Kirk in 2009's Star Trek?", 'answer': 'Chris Hemsworth', 'category': 'Star Trek'}, {'question': 'Who plays Saavik in The Wrath of Khan?', 'answer': 'Kirstie Alley', 'category': 'Star Trek'}, {'question': 'Which Trek film has the line "Admiral, there be whales here!"?', 'answer': 'Star Trek IV: The Voyage Home', 'category': 'Star Trek'}, {'question': "In what Star Trek film does the Enterprise-D's stardrive section get destroyed, leading to the saucer section crash landing on Veridian III?", 'answer': 'Star Trek Generations', 'category': 'Star Trek'}, {'question': 'Who directed Star Trek: First Contact?', 'answer': 'Jonathan Frakes', 'category': 'Star Trek'}, {'question': 'Whoopi Goldberg appears as the character Guinan in which two Star Trek films?', 'answer': 'Star Trek Generations, Star Trek: Nemesis', 'category': 'Star Trek'}, {'question': 'How many Step Up films have been released in theaters?', 'answer': '5 (Step Up, The Streets, 3D, Revolution, All In)', 'category': 'Dance'}, {'question': 'What famous musical featured two dancing street gangs called the Jets and the Sharks?', 'answer': 'West Side Story', 'category': 'Dance'}, {'question': 'Who directed the 1988 film Hairspray?', 'answer': 'John Waters', 'category': 'Dance'}, {'question': "This actress played the role of Vi Moore, Ariel's mom, in the 2011 remake of Footloose.", 'answer': 'Andie MacDowell', 'category': 'Dance'}, {'question': "This actress played Joanna, Mike's on-again off-again lover, in Magic Mike.", 'answer': 'Olivia Munn', 'category': 'Dance'}, {'question': 'Which Oscar winner played Motormouth Maybelle in the 2007 version of Hairspray?', 'answer': 'Queen Latifah', 'category': 'Dance'}, {'question': 'Who directed Matthew McConaughey in the film EDtv?', 'answer': 'Ron Howard', 'category': 'Matthew McConaughey'}, {'question': "Who played Leo's father in Gangs of New York?", 'answer': 'Liam Neeson', 'category': 'Leonardo DiCaprio'}, {'question': 'Lorene Scafaria directed Jennifer Lopez in what 2019 crime drama?', 'answer': 'Hustlers', 'category': 'Crime'}, {'question': 'John Lithgow plays hitman Earl Talbot Blake in what 1991 thriller also featuring Ice-T?', 'answer': 'Ricochet', 'category': 'Denzel Washington'}, {'question': 'Which actor directed Will Smith and Matt Damon in the 2000 film The Legend of Bagger Vance?', 'answer': 'Robert Redford', 'category': 'Directors'}, {'question': 'Desmond Davis directed what 1981 fantasy adventure film that co-stars Laurence Olivier?', 'answer': 'Clash of the Titans', 'category': '1980s'}, {'question': 'Alex Wolff and Gabriel Byrne star in which horror film from director Ari Aster?', 'answer': 'Hereditary', 'category': 'Horror/Thriller'}, {'question': 'Who plays the character Johnny Castle in the film Dirty Dancing?', 'answer': 'Patrick Swayze', 'category': '1980s'}, {'question': 'Who wrote, directed, and starred in the film Chef, about a chef named Carl Casper, who opens a food truck with the aid of both his son and his friend named Martin?', 'answer': 'Jon Favreau', 'category': 'Comedies'}, {'question': 'Ron Perlman played the character Hellboy in how many films?', 'answer': '2 (Hellboy, The Golden Army)', 'category': 'Comic Book'}, {'question': 'In what 2010s Disney film will you hear Kristen Bell perform the songs "Some Things Never Change" and "The Next Right Thing"?', 'answer': 'Frozen II', 'category': 'Animated'}, {'question': 'Which actor received Oscar nominations for his performances in the films Midnight Cowboy, Wag the Dog, and Lenny?', 'answer': 'Dustin Hoffman', 'category': 'Oscars'}, {'question': 'Which DCEU actress played the character Gisele Yashar in the Fast & Furious franchise?', 'answer': 'Gal Gadot', 'category': 'Action/Adventure'}, {'question': "Which movie star provided the inner monologue of the baby Mikey in 1989's Look Who's Talking?", 'answer': 'Bruce Willis', 'category': 'Family'}, {'question': 'Angela Lansbury stars in what 1971 Disney film that mixes live action and animation?', 'answer': 'Bedknobs and Broomsticks', 'category': 'N/A'}, {'question': 'What is the title of the 2015 sequel to Magic Mike?', 'answer': 'Magic Mike XXL', 'category': '2010s'}, {'question': 'Who played Joseph "Joe" Chandler, the older brother of Casey Affleck\'s character, in 2016\'s Manchester by the Sea?', 'answer': 'Kyle Chandler', 'category': '2010s'}, {'question': "Robert Rodriguez and Ethan Maniquis co-directed what 2010 action film starring Danny Trejo, that was a spin-off of 2007's Grindhouse?", 'answer': 'Machete', 'category': '2010s'}, {'question': "Which actress plays Johnny Depp's wife Evelyn in 2014's Transcendence?", 'answer': 'Rebecca Hall', 'category': '2010s'}, {'question': 'This 2011 film, which starred Emma Stone and Octavia Spencer, was adapted from a Kathryn Stockett novel.', 'answer': 'The Help', 'category': '2010s'}, {'question': "Who plays the ruthless and bloodthirsty dictator of Belarus, Dukhovich, in the action film The Hitman's Bodyguard?", 'answer': 'Gary Oldman', 'category': '2010s'}, {'question': "What 1993 indie hit was Robert Rodriguez's debut feature film?", 'answer': 'El Mariachi', 'category': 'Robert Rodriguez'}, {'question': 'Which actor plays the United States President in the film Machete Kills?', 'answer': 'Charlie Sheen', 'category': 'Robert Rodriguez'}, {'question': 'What is the subtitle of the fourth film in the Spy Kids franchise?', 'answer': 'All the Time in the World', 'category': 'Robert Rodriguez'}, {'question': 'Which Robert Rodriguez film features supporting performances from such actors as Tom Savini, Fred Williamson, and John Saxon?', 'answer': 'From Dusk till Dawn', 'category': 'Robert Rodriguez'}, {'question': 'Johnny Depp plays a corrupt officer of what government agency in the film Once Upon a Time in Mexico?', 'answer': 'the CIA', 'category': 'Robert Rodriguez'}, {'question': 'Who plays the psychotic and murderous criminal Richie Gecko in the film From Dusk till Dawn?', 'answer': 'Quentin Tarantino', 'category': 'Robert Rodriguez'}, {'question': 'Which director helmed the films The Last Temptation of Christ and Mean Streets?', 'answer': 'Martin Scorsese', 'category': 'Modern Classics'}, {'question': 'Julia Roberts co-stars with Cameron Diaz, Dermot Mulroney, and Rupert Everett in what 1990s romantic comedy?', 'answer': "My Best Friend's Wedding", 'category': 'Julia Roberts'}, {'question': 'What 2012 film features characters such as King Candy, Zangief, Sonic the Hedgehog, and Fix-It Felix Jr.?', 'answer': 'Wreck-It Ralph', 'category': 'Animated'}, {'question': 'Who co-stars alongside Tom Hanks as the character of Joe Friday in Dragnet?', 'answer': 'Dan Aykroyd', 'category': 'Tom Hanks'}, {'question': 'Dominic West, Wayne Knight, and Julie Benz all feature in what 2008 comic book reboot?', 'answer': 'Punisher: War Zone', 'category': 'Remakes & Reboots'}, {'question': 'What actor, who was Academy Award nominated in the 2000s, plays Stavros, an international terrorist, in the 1997 film Double Team?', 'answer': 'Mickey Rourke', 'category': 'Martial Arts'}, {'question': "Julia Roberts plays what famous character in Steven Spielberg's 1991 update of the Peter Pan story, Hook?", 'answer': 'Tinker Bell', 'category': 'Family'}, {'question': 'Adam Wingard directed Alexander Skarsgård, Millie Bobby Brown, and Rebecca Hall in what 2021 action adventure film?', 'answer': 'Godzilla vs. Kong', 'category': 'New Releases'}, {'question': 'Which Academy Award winning actor plays the lead role of lawyer Michael "Mickey" Haller in The Lincoln Lawyer?', 'answer': 'Matthew McConaughey', 'category': 'Thriller'}, {'question': 'Adam Sandler plays Henry Roth, a veterinarian living in Hawaii in what 2000s rom-com?', 'answer': '50 First Dates', 'category': 'Comedies'}, {'question': 'Who directed the films The Island and Pain & Gain?', 'answer': 'Michael Bay', 'category': 'Action/Adventure'}, {'question': 'Robin Williams stars as a voice actor named Daniel Hillard in what 1993 family film?', 'answer': 'Mrs. Doubtfire', 'category': '1990s'}, {'question': 'Billy Crystal and John Goodman reprised their roles of Mike and Sulley in what 2013 prequel?', 'answer': 'Monsters University', 'category': 'Animated'}, {'question': 'Marion Cotillard plays Mal Cobb, alongside Elliot Page and Joseph Gordon-Levitt, in what 2010 sci-fi action blockbuster?', 'answer': 'Inception', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2000 film starring George Clooney tells the story of a 1991 killer storm that catches the swordfishing boat Andrea Gail?', 'answer': 'The Perfect Storm', 'category': 'Disaster'}, {'question': "What Game of Thrones actor plays the lead Milo in 2014's Pompeii?", 'answer': 'Kit Harington', 'category': 'Disaster'}, {'question': 'The 1958 film A Night to Remember depicts what real-life tragedy?', 'answer': 'the sinking of the Titanic', 'category': 'Disaster'}, {'question': "Who played Henry Bennett, Naomi Watts' husband, in the 2012 film The Impossible?", 'answer': 'Ewan McGregor', 'category': 'Disaster'}, {'question': 'Paul Newman provides the voice of Doc Hudson in which animated film from Pixar Studios?', 'answer': 'Cars', 'category': 'Paul Newman'}, {'question': 'Which famous actress plays the character Maggie, opposite Paul Newman, in the 1958 classic Cat on a Hot Tin Roof?', 'answer': 'Elizabeth Taylor', 'category': 'Paul Newman'}, {'question': 'Who directed Paul Newman in the 1966 Cold War thriller Torn Curtain?', 'answer': 'Alfred Hitchcock', 'category': 'Paul Newman'}, {'question': 'Paul Newman plays Reggie Dunlop, an aging hockey player, in what 1977 comedy?', 'answer': 'Slap Shot', 'category': 'Paul Newman'}, {'question': 'Denzel Washington plays a father who holds up a hospital to force them to give his son a heart transplant in what film?', 'answer': 'John Q.', 'category': 'Black Cinema'}, {'question': 'Ethan Hawke stars in this 1991 live-action Disney film, based on a Jack London novel.', 'answer': 'White Fang', 'category': 'Disney'}, {'question': 'What 1990s Bill Murray comedy largely takes place in Lake Winnipesaukee, New Hampshire?', 'answer': 'What About Bob?', 'category': '1990s'}, {'question': 'Who plays the lead character Seth Gecko in the Tarantino-penned From Dusk till Dawn?', 'answer': 'George Clooney', 'category': 'Quentin Tarantino'}, {'question': 'Jason Schwartzman, Aziz Ansari, and Jonah Hill have roles in what Judd Apatow directed film?', 'answer': 'Funny People', 'category': 'Judd Apatow'}, {'question': 'Which Oscar-winning actor plays an ex-con named Jack Jordan, who has found religion and is trying to get his life back on track, in the 2003 drama 21 Grams?', 'answer': 'Benicio del Toro', 'category': '2000s'}, {'question': 'Which female rock star co-starred in the films The People vs. Larry Flynt and Man on the Moon?', 'answer': 'Courtney Love', 'category': 'Dramas'}, {'question': 'Which actress appeared in the 2010s films 50/50, Into the Woods, and Mike and Dave Need Wedding Dates?', 'answer': 'Anna Kendrick', 'category': 'Famous Actors & Actresses'}, {'question': "Which comedic actor plays the irreverent golfer Ty Webb in 1980's Caddyshack?", 'answer': 'Chevy Chase', 'category': '1980s'}, {'question': "Which MCU actor appeared in the following reboots: 2009's Star Trek and 2016's Ghostbusters?", 'answer': 'Chris Hemsworth', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What comedy franchise features the characters Scott Evil, Number 2, and Fat Bastard?', 'answer': 'Austin Powers', 'category': 'Comedies'}, {'question': 'What famous character has been played in action adventure films by such actors as Charlie Hunnam, Sean Connery, and Clive Owen?', 'answer': 'King Arthur (in King Arthur: Legend of the Sword, First Knight, King Arthur)', 'category': 'Action/Adventure'}, {'question': 'Which actress plays Barbara Minerva, also known as Cheetah, in Wonder Woman 1984?', 'answer': 'Kristen Wiig', 'category': 'Comic Book'}, {'question': 'What was the first collaboration of director James Cameron with actor Arnold Schwarzenegger?', 'answer': 'The Terminator', 'category': 'Directors'}, {'question': 'The films Seabiscuit and Secretariat both depict what sport?', 'answer': 'horse racing', 'category': 'N/A'}, {'question': "Who plays Miles Dumont, a Hollywood music composer who falls in love with Kate Winslet's Iris Simpkins in The Holiday?", 'answer': 'Jack Black', 'category': '2000s'}, {'question': 'In the film Public Enemies, John Dillinger is gunned down after leaving what type of establishment?', 'answer': 'a movie theater', 'category': '2000s'}, {'question': 'In O Brother, Where Art Thou?, who played inmate Ulysses Everett McGill?', 'answer': 'George Clooney', 'category': '2000s'}, {'question': 'Michael Sheen and Frank Langella star in what biopic that was nominated at the 2009 Academy Awards?', 'answer': 'Frost/Nixon', 'category': '2000s'}, {'question': 'Which John Hughes film has the line "Life moves pretty fast. If you don\'t stop and look around once in a while, you could miss it."?', 'answer': "Ferris Bueller's Day Off", 'category': 'John Hughes'}, {'question': "Who stars as a homeless con man in 1991's Curly Sue?", 'answer': 'Jim Belushi', 'category': 'John Hughes'}, {'question': 'What specific item does traveling salesman Del Griffith claim to sell in Planes, Trains and Automobiles?', 'answer': 'shower curtain rings', 'category': 'John Hughes'}, {'question': "In Uncle Buck, Buck's teenage niece Tia begins dating a boy who has what unusual first name?", 'answer': 'Bug', 'category': 'John Hughes'}, {'question': 'Who directed The Wolf of Wall Street?', 'answer': 'Martin Scorsese', 'category': 'Biopics'}, {'question': 'For which film was Joaquin Phoenix nominated for his first Oscar?', 'answer': 'Gladiator', 'category': 'Oscars'}, {'question': 'What family film ends with the line: "don\'t forget what happened to the man who suddenly got everything he always wanted... He lived happily ever after."?', 'answer': 'Willy Wonka & the Chocolate Factory', 'category': 'Family'}, {'question': 'Which actor appeared in the 2000s remakes Planet of the Apes, The Italian Job, and The Departed?', 'answer': 'Mark Wahlberg', 'category': 'Remakes & Reboots'}, {'question': 'What 1980s sci-fi action film is known for the line "Dead or alive, you\'re coming with me!"?', 'answer': 'RoboCop', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which 2020 film from director Regina King follows a meeting of the real-life individuals Sam Cooke, Cassius Clay, Malcolm X, and Jim Brown?', 'answer': 'One Night in Miami...', 'category': 'Black Cinema'}, {'question': 'Which James Bond actor starred in the films After the Sunset, The November Man, and The Foreigner?', 'answer': 'Pierce Brosnan', 'category': 'Action/Adventure'}, {'question': 'Which animated franchise features the characters Princess Fiona, King Harold, and Queen Lillian?', 'answer': 'Shrek', 'category': 'Animated'}, {'question': "Who plays the unhinged ex-con Max Cady in 1991's Cape Fear?", 'answer': 'Robert De Niro', 'category': 'Horror/Thriller'}, {'question': 'Steven Spielberg directed Jurassic Park and which other film in 1993?', 'answer': "Schindler's List", 'category': 'Release Dates'}, {'question': 'Which actress stars as the character Emma, opposite Kate Hudson, in the film Bride Wars?', 'answer': 'Anne Hathaway', 'category': 'Rom-Coms'}, {'question': "1983's Staying Alive is a sequel to what landmark 1977 dance film from director John Badham?", 'answer': 'Saturday Night Fever', 'category': 'N/A'}, {'question': "Who provides the voice of Li, Po's long-lost father in Kung Fu Panda 3?", 'answer': 'Bryan Cranston', 'category': 'DreamWorks Animation'}, {'question': 'Amy Poehler voices Snow White, and Maya Rudolph voices Rapunzel, in which film in the Shrek franchise?', 'answer': 'Shrek the Third', 'category': 'DreamWorks Animation'}, {'question': 'Which DreamWorks film features musical performances by Justin Timberlake, Anthony Ramos, and Kelly Clarkson?', 'answer': 'Trolls World Tour', 'category': 'DreamWorks Animation'}, {'question': 'Which comedian voices George Beard, one of the two boys behind the creation of Captain Underpants, in the film Captain Underpants?', 'answer': 'Kevin Hart', 'category': 'DreamWorks Animation'}, {'question': "Who voices Pharaoh Seti, Rameses's father and Moses's adoptive father, in The Prince of Egypt?", 'answer': 'Patrick Stewart', 'category': 'DreamWorks Animation'}, {'question': 'Paul Giamatti, Bill Hader, and Samuel L. Jackson lent their voices to what 2013 DreamWorks film?', 'answer': 'Turbo', 'category': 'DreamWorks Animation'}, {'question': 'Who directed Ed Harris and Viggo Mortensen in A History of Violence?', 'answer': 'David Cronenberg', 'category': 'Ed Harris'}, {'question': 'Harris plays Detective Sergeant Remy Bressant in what 2000s crime thriller?', 'answer': 'Gone Baby Gone', 'category': 'Ed Harris'}, {'question': 'Ed Harris received a Best Supporting Actor nomination for which film in which he co-starred with Meryl Streep and Nicole Kidman?', 'answer': 'The Hours', 'category': 'Ed Harris'}, {'question': 'Ed Harris is heard as the voice of Mission Control in what 2013 sci-fi film?', 'answer': 'Gravity', 'category': 'Ed Harris'}, {'question': 'Ed Harris co-stars with Julia Roberts in what 1990s tearjerker?', 'answer': 'Stepmom', 'category': 'Ed Harris'}, {'question': 'John Schlesinger directed Harris and Sally Field in what 1990s thriller?', 'answer': 'Eye for an Eye', 'category': 'Ed Harris'}, {'question': 'Which action star plays the lead in the 2018 film The Commuter?', 'answer': 'Liam Neeson', 'category': 'Thriller'}, {'question': 'Which MCU actor plays the paranoid character James Barris in the 2006 Richard Linklater film A Scanner Darkly?', 'answer': 'Robert Downey Jr.', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2000s film directed by Guillermo del Toro depicts a haunted orphanage in 1930s Spain?', 'answer': "The Devil's Backbone", 'category': '2000s'}, {'question': 'Who plays the romantic lead William Thacker in Notting Hill?', 'answer': 'Hugh Grant', 'category': 'Julia Roberts'}, {'question': 'Joel Grey won a Best Supporting Actor Oscar for his performance as the Master of Ceremonies in what 1972 musical from director Bob Fosse?', 'answer': 'Cabaret', 'category': 'Musicals'}, {'question': 'This 1970s musical features a greaser gang called the "T-Birds" and a clique called the "Pink Ladies".', 'answer': 'Grease', 'category': 'Musicals'}, {'question': 'Which actor plays Vincent Mancini, nephew of Michael Corleone, in The Godfather Part III?', 'answer': 'Andy García', 'category': 'Crime'}, {'question': 'Which Pixar film features the characters Carl, Ellie, Russell, and Dug?', 'answer': 'Up', 'category': 'Animated'}, {'question': 'Who stars as Matt King, a man trying to connect with his daughters after his wife suffers a tragic accident, in the 2011 film The Descendants?', 'answer': 'George Clooney', 'category': 'Dramas'}, {'question': 'The 2017 film All Eyez on Me follows the life of what famous rapper, as played by Demetrius Shipp Jr.?', 'answer': 'Tupac Shakur', 'category': 'Black Cinema'}, {'question': 'Which actress plays Lillian, the bride-to-be, in the film Bridesmaids?', 'answer': 'Maya Rudolph', 'category': 'Comedies'}, {'question': 'What horror film had the tagline "No Accidents. No Coincidences. No Escapes. You Can\'t Cheat Death."?', 'answer': 'Final Destination', 'category': 'Horror/Thriller'}, {'question': 'Who starred in the live-action Disney films The Game Plan and Tooth Fairy?', 'answer': 'Dwayne Johnson', 'category': 'Family'}, {'question': 'In which movie franchise did Nick Stahl and Jason Clarke play the same character, in different films?', 'answer': 'the Terminator (Stahl in Rise of the Machines, Clarke in Genisys)', 'category': 'N/A'}, {'question': "Who directed 2016's Star Trek Beyond?", 'answer': 'Justin Lin', 'category': 'Star Trek'}, {'question': 'Which Star Trek film has the tagline "Two captains. One destiny."?', 'answer': 'Star Trek Generations', 'category': 'Star Trek'}, {'question': 'At the funeral for Spock in The Wrath of Khan, Kirk could only bring himself to say "of all the souls I have encountered in my travels, his was the most" what?', 'answer': 'human', 'category': 'Star Trek'}, {'question': 'Brent Spiner plays two Androids, Data and B-4, in which Star Trek film?', 'answer': 'Star Trek: Nemesis', 'category': 'Star Trek'}, {'question': "Which actress plays Lily, a dancer whom Natalie Portman's character becomes competitive with in the film Black Swan?", 'answer': 'Mila Kunis', 'category': 'Dance'}, {'question': 'Which actor danced his way through the classic musicals An American in Paris and Anchors Aweigh?', 'answer': 'Gene Kelly', 'category': 'Dance'}, {'question': 'Havana Nights is the subtitle of the sequel to what 80s dance film?', 'answer': 'Dirty Dancing', 'category': 'Dance'}, {'question': 'In Magic Mike XXL, Richie dances to a song by which popular boy band in a convenience store?', 'answer': 'the Backstreet Boys', 'category': 'Dance'}, {'question': 'In which 2000s film does Tom Cruise star opposite Meryl Streep and Robert Redford?', 'answer': 'Lions for Lambs', 'category': 'Tom Cruise'}, {'question': 'Screenwriter Drew Pearce made his theatrical directing debut with what 2018 sci-fi film that stars Jodie Foster, Sofia Boutella, and Dave Bautista?', 'answer': 'Hotel Artemis', 'category': 'Jodie Foster'}, {'question': 'Which actor stars in the following 2010s films: The Eagle, The Vow, and Foxcatcher?', 'answer': 'Channing Tatum', 'category': '2010s'}, {'question': 'In Blade Runner 2049, who plays Gaff, a role he has played before in the original Blade Runner film?', 'answer': 'Edward James Olmos', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Greg Heffley is the 12-year-old protagonist, played by actor Zachary Gordon, in what 2010 family film?', 'answer': 'Diary of a Wimpy Kid', 'category': 'Family'}, {'question': 'What 2000s biopic featuring Kevin Bacon has the line "I shall be your fiercest adversary. I shall come at you with everything I got, because the limelight can only shine on one of us."?', 'answer': 'Frost/Nixon', 'category': 'Biopics'}, {'question': 'Actress Frances McDormand and director Chloé Zhao won Oscars for what 2020 drama?', 'answer': 'Nomadland', 'category': 'Oscars'}, {'question': 'What 2010s Stephen King adaptation features performances from Rebecca Ferguson, Bruce Greenwood, and Kyliegh Curran?', 'answer': 'Doctor Sleep', 'category': 'Horror'}, {'question': 'Who plays Katniss Everdeen in the Hunger Games franchise?', 'answer': 'Jennifer Lawrence', 'category': 'Action/Adventure'}, {'question': 'Which actor starred in the dramatic films Changing Lanes, Hollywoodland, and Live by Night?', 'answer': 'Ben Affleck', 'category': 'Dramas'}, {'question': 'Joel Courtney, Elle Fanning, and Kyle Chandler star in this 2011 sci-fi adventure film from director J. J. Abrams.', 'answer': 'Super 8', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which former SNL actor plays the villain Jacobim Mugatu in Zoolander?', 'answer': 'Will Ferrell', 'category': 'Comedies'}, {'question': 'Who plays the lead role of taxi driver Jimmy Tong in the 2002 film The Tuxedo?', 'answer': 'Jackie Chan', 'category': 'Martial Arts'}, {'question': "Who directed the films Small Soldiers, Looney Tunes: Back in Action, and The 'Burbs?", 'answer': 'Joe Dante', 'category': 'Directors'}, {'question': "Which actor portrayed Batman in 1966's Batman: The Movie?", 'answer': 'Adam West', 'category': 'N/A'}, {'question': 'George Lucas directed what 1973 coming-of-age film that was the first produced by Lucasfilm?', 'answer': 'American Graffiti', 'category': 'Lucasfilm'}, {'question': 'Who plays the title character in the 1988 fantasy epic Willow?', 'answer': 'Warwick Davis', 'category': 'Lucasfilm'}, {'question': 'What 1988 animated film follows the journey of a young dinosaur named Littlefoot and his friends to find their herds?', 'answer': 'The Land Before Time', 'category': 'Lucasfilm'}, {'question': 'Who was a scriptwriter on all of these films: Raiders of the Lost Ark, The Empire Strikes Back, and Solo: A Star Wars Story?', 'answer': 'Lawrence Kasdan', 'category': 'Lucasfilm'}, {'question': 'Which actor earned two Academy Awards for starring in back-to-back Quentin Tarantino movies?', 'answer': 'Christoph Waltz (for Inglourious Basterds, Django Unchained)', 'category': 'Quentin Tarantino'}, {'question': 'What is the first name of the killer stuntman played by Kurt Russell in Death Proof?', 'answer': 'Mike', 'category': 'Quentin Tarantino'}, {'question': 'Who plays the older General Sandy Smithers in The Hateful Eight?', 'answer': 'Bruce Dern', 'category': 'Quentin Tarantino'}, {'question': 'In Reservoir Dogs, Tim Roth is referred to as what color nickname in the heist crew?', 'answer': 'Mr. Orange', 'category': 'Quentin Tarantino'}, {'question': 'Which actor co-stars with Jennifer Lawrence as Jim Preston in the film Passengers?', 'answer': 'Chris Pratt', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Denzel Washington plays Philadelphia police detective John Hobbes in what 1998 horror thriller about a serial killer whose murderous rampage continues after his execution?', 'answer': 'Fallen', 'category': 'Horror'}, {'question': 'Tom Hanks starred in, directed and wrote what 1996 film that also has Tom Everett Scott, Liv Tyler, and Steve Zahn?', 'answer': 'That Thing You Do!', 'category': 'Tom Hanks'}, {'question': "You'll find a kangaroo named Jackie Legs in what 2000s comedy?", 'answer': 'Kangaroo Jack', 'category': 'Comedies'}, {'question': "Which Academy Award winning actress plays Eva Mae Fisher, Antwone's mother, in Antwone Fisher?", 'answer': 'Viola Davis', 'category': 'Denzel Washington'}, {'question': 'Which 2010s Disney film features the songs "When Will My Life Begin?" and "I\'ve Got a Dream"?', 'answer': 'Tangled', 'category': 'Animated'}, {'question': 'Which actress stars in the 90s films Picture Perfect, The Object of My Affection, and Office Space?', 'answer': 'Jennifer Aniston', 'category': '1990s'}, {'question': 'Director Simon McQuoid directed what 2021 action film that stars Lewis Tan and is based on a popular video game franchise?', 'answer': 'Mortal Kombat', 'category': 'New Releases'}, {'question': 'The first three entries in the Dirty Harry franchise, which starred Clint Eastwood, were released in which decade?', 'answer': 'the 1970s (Dirty Harry in 1971, Magnum Force in 1973, The Enforcer in 1976)', 'category': 'Action/Adventure'}, {'question': 'Jason Reitman directed this acclaimed 2009 film about a corporate downsizing expert who travels the country firing people and soon faces a personal crisis.', 'answer': 'Up in the Air', 'category': 'Dramas'}, {'question': 'Chris Farley plays a slovenly gym teacher in this 1996 comedy also starring David Spade and Gary Busey.', 'answer': 'Black Sheep', 'category': 'Comedies'}, {'question': 'In what 1954 Universal Monster film does an expedition searching for fossils along the Amazon River discover a prehistoric Gill-man?', 'answer': 'Creature from the Black Lagoon', 'category': 'Horror/Thriller'}, {'question': 'Which actress stars as the character Lieutenant Artemis in the 2020 film Monster Hunter?', 'answer': 'Milla Jovovich', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What famous comedy troupe starred in the classic films Horse Feathers, Duck Soup, and A Night at the Opera?', 'answer': 'the Marx Brothers', 'category': 'N/A'}, {'question': 'Bill Pullman plays U.S. President Thomas Whitmore in what 1990s blockbuster?', 'answer': 'Independence Day', 'category': '1990s'}, {'question': 'Who received Best Actor Oscar nominations for the films The Remains of the Day and Nixon?', 'answer': 'Anthony Hopkins', 'category': '1990s'}, {'question': "Who stars as a big city doctor in a small town in 1991's Doc Hollywood?", 'answer': 'Michael J. Fox', 'category': '1990s'}, {'question': 'Heath Ledger, Julia Stiles, and Joseph Gordon-Levitt star in what 90s teen film?', 'answer': '10 Things I Hate About You', 'category': '1990s'}, {'question': "What is the name of the giant tree that moves and thrashes the Weasleys' flying car in Harry Potter and the Chamber of Secrets?", 'answer': 'the Whomping Willow', 'category': 'Wizarding World'}, {'question': 'Petter Pettigrew can transform himself into what kind of animal?', 'answer': 'a rat', 'category': 'Wizarding World'}, {'question': 'As revealed in The Deathly Hallows – Part 1, which character stole the Elder Wand from wandmaker Gregorovitch as a teenager?', 'answer': 'Gellert Grindelwald', 'category': 'Wizarding World'}, {'question': "During the game of Wizard's Chess in the challenges to get to the Sorcerer's Stone, what chess piece does Ron have Harry take the position of?", 'answer': 'a bishop', 'category': 'Wizarding World'}, {'question': 'Which actor stars as an elite Navy SEAL named John Kelly in the 2021 Tom Clancy adaptation Without Remorse?', 'answer': 'Michael B. Jordan', 'category': 'New Releases'}, {'question': 'In which family film does Jim Carrey star opposite Carla Gugino, Angela Lansbury, and Clark Gregg?', 'answer': "Mr. Popper's Penguins", 'category': 'Family'}, {'question': 'A man named Richard Kimble is wrongfully accused of murdering his wife and escapes from the law in an attempt to find her killer and clear his name in what 1990s mystery thriller?', 'answer': 'The Fugitive', 'category': 'Mystery'}, {'question': "Who directed 1982's Creepshow, inspired by the macabre tales of EC Comics?", 'answer': 'George A. Romero', 'category': 'Directors'}, {'question': 'Which actress appeared in the films Dark City, Hulk, and Noah?', 'answer': 'Jennifer Connelly', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In the comedy film The Internship, Owen Wilson and Vince Vaughn become interns for what tech company?', 'answer': 'Google', 'category': 'Comedies'}, {'question': 'Rise of the Lycans, Awakening, and Blood Wars are entries in which action horror franchise?', 'answer': 'Underworld', 'category': 'Horror/Thriller'}, {'question': 'Which Oscar-winning actor appeared in the films The Legend of Tarzan, The Zero Theorem, and Downsizing?', 'answer': 'Christoph Waltz', 'category': 'Famous Actors & Actresses'}, {'question': 'Who composed the scores for the films The Land Before Time and Willow?', 'answer': 'James Horner', 'category': 'Lucasfilm'}, {'question': 'Who directed the 1986 fantasy film Labyrinth?', 'answer': 'Jim Henson', 'category': 'Lucasfilm'}, {'question': 'Which Oscar winner plays Major Emanuel Stance, who commands African-American fighter pilots during World War II, in the film Red Tails?', 'answer': 'Cuba Gooding Jr.', 'category': 'Lucasfilm'}, {'question': 'Bill L. Norton directed what 1979 film for Lucasfilm that features cast members such as Cindy Williams, Scott Glenn, and Harrison Ford?', 'answer': 'More American Graffiti', 'category': 'Lucasfilm'}, {'question': 'Which comedian turned actor plays a brownie named Rool in the film Willow?', 'answer': 'Kevin Pollak', 'category': 'Lucasfilm'}, {'question': 'What 1988 biopic was the only Lucasfilm production that was directed by Francis Ford Coppola?', 'answer': 'Tucker: The Man and His Dream', 'category': 'Lucasfilm'}, {'question': 'Sean Connery plays the immortal character Juan Sánchez-Villalobos Ramírez in what 1980s film?', 'answer': 'Highlander', 'category': 'Sean Connery'}, {'question': 'Who directed Sean Connery in the films The Hill, The Anderson Tapes, and Family Business?', 'answer': 'Sidney Lumet', 'category': 'Sean Connery'}, {'question': 'Sean Connery appears in which 1980s film from director Terry Gilliam?', 'answer': 'Time Bandits', 'category': 'Sean Connery'}, {'question': 'Sean Connery appears alongside Andy García, Billy Drago, and Patricia Clarkson in what action thriller film?', 'answer': 'The Untouchables', 'category': 'Sean Connery'}, {'question': 'Who directed the 2000 drama Finding Forrester, in which Sean Connery played a reclusive writer who mentors a teenage boy?', 'answer': 'Gus Van Sant', 'category': 'Sean Connery'}, {'question': "Which actor plays Adso, the teenage apprentice of Sean Connery's character in the 1986 mystery thriller The Name of the Rose?", 'answer': 'Christian Slater', 'category': 'Sean Connery'}, {'question': 'Meg Ryan plays Kathleen Kelly, owner of a local bookstore, in what 1990s rom-com from director Nora Ephron?', 'answer': "You've Got Mail", 'category': 'Rom-Coms'}, {'question': 'Which actress starred in the romantic dramas Hope Floats and The Lake House?', 'answer': 'Sandra Bullock', 'category': 'Romance'}, {'question': 'Which famous actor stars as Martin Bishop, a security expert who is forced to lead his team on a dangerous job in the 1992 film Sneakers?', 'answer': 'Robert Redford', 'category': 'Crime'}, {'question': 'Bruce Willis plays the character Mr. Church in what action franchise?', 'answer': 'The Expendables', 'category': 'Action/Adventure'}, {'question': 'Which 1986 comedy features supporting performances from Cindy Pickett, Edie McClurg, and Ben Stein?', 'answer': "Ferris Bueller's Day Off", 'category': 'Modern Classics'}, {'question': "You'll find the characters of Lt. Mark Rumsfield and Art Weingartner in what 1980s Tom Hanks comedy?", 'answer': "The 'Burbs", 'category': 'Tom Hanks'}, {'question': 'Who plays field reporter Brian Fantana in the Anchorman franchise?', 'answer': 'Paul Rudd', 'category': 'Comedies'}, {'question': 'Stanley Kubrick received his first Best Director nomination for what 1964 classic that co-stars George C. Scott?', 'answer': 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', 'category': 'Oscars'}, {'question': 'Dark Territory is the subtitle of the sequel to what 90s Steve Seagal film?', 'answer': 'Under Siege', 'category': 'Action/Adventure'}, {'question': 'Which comedian co-stars in the films Silver Linings Playbook, Dead Presidents, and Money Talks?', 'answer': 'Chris Tucker', 'category': 'Black Cinema'}, {'question': 'What acclaimed 1990s drama features characters named Ellis "Red" Redding, Tommy Williams, and Brooks Hatlen?', 'answer': 'The Shawshank Redemption', 'category': 'Dramas'}, {'question': 'In what 80s film does Harrison Ford say the line "Those aren\'t your memories, they\'re somebody else\'s."?', 'answer': 'Blade Runner', 'category': '1980s'}, {'question': "The sci-fi films Logan's Run, The Black Hole, and Conquest of the Planet of the Apes were released during which decade?", 'answer': 'the 1970s', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actress has played a call girl, a medical student, a fairy, and a famous movie star?', 'answer': 'Julia Roberts (in Pretty Woman, Flatliners, Hook, Notting Hill)', 'category': 'Famous Actors & Actresses'}, {'question': 'What classic Universal Horror franchise features performances from Colin Clive, Boris Karloff, Elsa Lanchester, and Basil Rathbone?', 'answer': 'Frankenstein', 'category': 'N/A'}, {'question': 'Neil LaBute directed Chris Rock, Martin Lawrence, and Tracy Morgan in what 2010 comedy remake?', 'answer': 'Death at a Funeral', 'category': 'Black Cinema'}, {'question': 'Who directed the first film in the Friday franchise?', 'answer': 'F. Gary Gray', 'category': 'Black Cinema'}, {'question': 'Who won an Academy Award for Best Original Song in 2006, for the song "It\'s Hard out Here for a Pimp"?', 'answer': 'Three 6 Mafia (for Hustle & Flow)', 'category': 'Black Cinema'}, {'question': 'Which actress appeared in Scary Movie 3, Girls Trip, and Little?', 'answer': 'Regina Hall', 'category': 'Black Cinema'}, {'question': 'Which Oscar-winning actress co-stars with Whoopi Goldberg in the 1990 drama The Long Walk Home?', 'answer': 'Sissy Spacek', 'category': 'Whoopi Goldberg'}, {'question': 'Whoopi Goldberg co-stars with Breckin Meyer, Cuba Gooding Jr., John Cleese, and others in what 2001 ensemble comedy?', 'answer': 'Rat Race', 'category': 'Whoopi Goldberg'}, {'question': 'Whoopi Goldberg provides the voice of a playful purple octopus character called Stretch in which Pixar film?', 'answer': 'Toy Story 3', 'category': 'Whoopi Goldberg'}, {'question': 'Which comedian co-stars with Whoopi Goldberg as the character Carl Hefler in the 1987 comedy Burglar?', 'answer': 'Bobcat Goldthwait', 'category': 'Whoopi Goldberg'}, {'question': 'Chris Pratt and Tom Holland voice elves in what 2020 Pixar film?', 'answer': 'Onward', 'category': 'Pixar'}, {'question': 'In what Disney film does Dennis Quaid play Jimmy Morris, a man who gets a shot to pitch in Major League Baseball?', 'answer': 'The Rookie', 'category': 'Sports'}, {'question': "Which actor appeared in the comedies Austin Powers: International Man of Mystery, Can't Hardly Wait, and Without a Paddle?", 'answer': 'Seth Green', 'category': 'Comedies'}, {'question': "Who plays defense counsel William Kunstler in 2020's The Trial of the Chicago 7?", 'answer': 'Mark Rylance', 'category': 'New Releases'}, {'question': 'Roger Donaldson directed Kevin Costner in what 1987 neo-noir spy thriller?', 'answer': 'No Way Out', 'category': 'Spy'}, {'question': 'Which 1991 film starring Jodie Foster and Adam Hann-Byrd was the first film Jodie Foster ever directed?', 'answer': 'Little Man Tate', 'category': 'Directors'}, {'question': 'Ben Stiller voices Alex the lion in which animated film franchise?', 'answer': 'Madagascar', 'category': 'Animated'}, {'question': 'In what comedic mystery film does Tim Curry say the line "We\'re trying to find out who killed him, and where, and with what!"?', 'answer': 'Clue', 'category': 'Mystery'}, {'question': 'Who directed Wonder Woman 1984?', 'answer': 'Patty Jenkins', 'category': 'New Releases'}, {'question': 'Who won the Best Actor Oscar as an elderly man struggling with dementia for the 2021 film The Father?', 'answer': 'Anthony Hopkins', 'category': 'Oscars'}, {'question': "Which actress starred in the films Notes on a Scandal, The Curious Case of Benjamin Button, and Where'd You Go, Bernadette?", 'answer': 'Cate Blanchett', 'category': 'Dramas'}, {'question': "Who stars as the alcoholic gunslinger the Waco Kid in Mel Brooks' Blazing Saddles?", 'answer': 'Gene Wilder', 'category': 'Comedies'}, {'question': 'What 2015 action comedy stars Melissa McCarthy, Jason Statham, and Jude Law?', 'answer': 'Spy', 'category': 'Action/Adventure'}, {'question': 'What Oscar-winning film has the line "It\'s a hell of a thing, killing a man. Take away all he\'s got and all he\'s ever gonna have."?', 'answer': 'Unforgiven', 'category': 'Quotes'}, {'question': 'Which actress received Oscar nominations for her performances in the films Dangerous Liaisons, The Wife, and Hillbilly Elegy?', 'answer': 'Glenn Close', 'category': 'N/A'}, {'question': 'Reese Witherspoon plays Deputy District Attorney Penny Kimball in what 2014 film from director Paul Thomas Anderson?', 'answer': 'Inherent Vice', 'category': 'Reese Witherspoon'}, {'question': 'What offbeat 1996 thriller stars Reese Witherspoon as a teen who runs afoul of a killer played by Kiefer Sutherland?', 'answer': 'Freeway', 'category': 'Reese Witherspoon'}, {'question': 'Which actress plays the title character, opposite Reese Witherspoon, in the 2008 romantic fantasy Penelope?', 'answer': 'Christina Ricci', 'category': 'Reese Witherspoon'}, {'question': 'Reese Witherspoon stars in which 1993 live-action Disney film about a group of teens who must trek across the African desert?', 'answer': 'A Far Off Place', 'category': 'Reese Witherspoon'}, {'question': 'Before playing Batman, Ben Affleck had portrayed what other comic book superhero?', 'answer': 'Daredevil', 'category': 'Matt & Ben'}, {'question': 'Which actress co-stars with Matt Damon in the film We Bought a Zoo, as the lead zookeeper Kelly Foster?', 'answer': 'Scarlett Johansson', 'category': 'Matt & Ben'}, {'question': 'How many Oscars has Matt Damon won?', 'answer': '1 (for Original Screenplay for Good Will Hunting)', 'category': 'Matt & Ben'}, {'question': 'What is the first film that featured Matt Damon and Ben Affleck in the same cast?', 'answer': 'School Ties', 'category': 'Matt & Ben'}, {'question': 'This 1984 film stars Patrick Swayze, C. Thomas Howell, and Charlie Sheen as young men who defend their town from invading Russians.', 'answer': 'Red Dawn', 'category': 'Action/Adventure'}, {'question': 'What classic Disney animated film is known for the song "Heigh-Ho"?', 'answer': 'Snow White and the Seven Dwarfs', 'category': 'Disney'}, {'question': "Which sitcom actress plays Tom Hanks' wife in 1986's The Money Pit?", 'answer': 'Shelley Long', 'category': 'Tom Hanks'}, {'question': 'This 2001 film, starring Renée Zellweger, follows a year in the life of a British woman who is determined to improve herself while she looks for love.', 'answer': "Bridget Jones's Diary", 'category': 'Rom-Coms'}, {'question': 'Leslie Nielsen plays the President of the United States, Baxter Harris, in what 2003 spoof film featuring Queen Latifah, George Carlin, and Ja Rule?', 'answer': 'Scary Movie 3', 'category': 'Comedies'}, {'question': 'Which actor made an appearance or starred in the films Draft Day, Get on Up, and Marshall?', 'answer': 'Chadwick Boseman', 'category': 'Famous Actors & Actresses'}, {'question': 'In which 2000s Pixar film does a computer say the line "Buy n Large. Everything you need to be happy. Your day is very important to us."?', 'answer': 'WALL-E', 'category': 'Animated'}, {'question': 'Which actress won an Oscar for her performance as divorce lawyer Nora Fanshaw in the film Marriage Story?', 'answer': 'Laura Dern', 'category': 'Oscars'}, {'question': "Who starred in 1985's The Protector, as well as the 2000s films The Medallion and The Forbidden Kingdom?", 'answer': 'Jackie Chan', 'category': 'Martial Arts'}, {'question': 'What is the profession of the protagonist Paul Sheldon in the 1990 film Misery?', 'answer': 'an author', 'category': 'Horror/Thriller'}, {'question': 'Which famous sitcom actor co-starred in the comedies Serving Sara, Almost Heroes, and 17 Again?', 'answer': 'Matthew Perry', 'category': 'Comedies'}, {'question': 'Who directed the films The Goonies, Scrooged, and Lethal Weapon?', 'answer': 'Richard Donner', 'category': 'Directors'}, {'question': 'Who stars as Sam, a man obsessed with Charlie Chaplin and Buster Keaton comedies, in the 1993 film Benny & Joon?', 'answer': 'Johnny Depp', 'category': '1990s'}, {'question': 'In what action film does Arnold Schwarzenegger say the line "I eat Green Berets for breakfast. And right now, I\'m very hungry!"?', 'answer': 'Commando', 'category': 'N/A'}, {'question': "You'll find the Loom of Fate, a device that has mystical properties and produces the new names for assassination, in what film?", 'answer': 'Wanted', 'category': 'Innergeekdom'}, {'question': "Who plays the FBI Director Tom Manning in 2004's Hellboy?", 'answer': 'Jeffrey Tambor', 'category': 'Innergeekdom'}, {'question': 'At the end of Harry Potter and the Deathly Hallows – Part 1, which character kills Dobby the house-elf?', 'answer': 'Bellatrix Lestrange', 'category': 'Innergeekdom'}, {'question': 'Which Star Trek film features Patrick Stewart, Jonathan Frakes, F. Murray Abraham, and Donna Murphy?', 'answer': 'Star Trek: Insurrection', 'category': 'Innergeekdom'}, {'question': 'In Fantastic Four: Rise of the Silver Surfer, Galactus is know as the what of Worlds?', 'answer': 'the Devourer', 'category': 'Innergeekdom'}, {'question': 'In The League of Extraordinary Gentlemen, Dr. Henry Jekyll calls his other half by what name?', 'answer': 'Edward', 'category': 'Innergeekdom'}, {'question': 'The Black Dahlia follows the investigation of a real-life Hollywood murder that was committed during what decade?', 'answer': 'the 1940s', 'category': '2000s'}, {'question': 'In the 2006 film Borat, from what country does the title character hail?', 'answer': 'Kazakhstan', 'category': '2000s'}, {'question': "Who plays Mary Feur, Norman and Claire's neighbor, in What Lies Beneath?", 'answer': 'Miranda Otto', 'category': '2000s'}, {'question': "Who played Charlotte's celebrity photographer husband, John, in Lost in Translation?", 'answer': 'Giovanni Ribisi', 'category': '2000s'}, {'question': 'What is the subtitle of the third High School Musical film, which was released theatrically in 2008?', 'answer': 'Senior Year', 'category': '2000s'}, {'question': "In 2003's The Cat in the Hat, who stars as Quinn, a neighbor vying for the affection of Sally and Conrad's mother?", 'answer': 'Alec Baldwin', 'category': '2000s'}, {'question': 'What 2002 drama about a young male street hustler is the only film that Nicolas Cage directed?', 'answer': 'Sonny', 'category': 'Nicolas Cage'}, {'question': 'Which franchise features characters such as Oz, Finch, Nadia, and Sherman?', 'answer': 'American Pie', 'category': 'N/A'}, {'question': 'Who directed the films Groundhog Day, Multiplicity, and Caddyshack?', 'answer': 'Harold Ramis', 'category': 'N/A'}, {'question': 'Which actor appeared in the films Dazed and Confused, Sahara, and Tropic Thunder?', 'answer': 'Matthew McConaughey', 'category': 'N/A'}, {'question': 'What year saw the release of Jaws: The Revenge, Teen Wolf Too, and Beverly Hills Cop II?', 'answer': '1987', 'category': 'N/A'}, {'question': 'Which actress voiced characters in ParaNorman and Trolls?', 'answer': 'Anna Kendrick', 'category': 'N/A'}, {'question': 'The song "Beat It" by Michael Jackson can be heard playing in the Cafe 80\'s in what 1989 sci-fi comedy?', 'answer': 'Back to the Future Part II', 'category': 'Scores & Soundtracks'}, {'question': "Who plays Tommy, the brother of Tobey Maguire's character in the 2009 military drama Brothers?", 'answer': 'Jake Gyllenhaal', 'category': '2000s'}, {'question': 'Brian Kirk directed Chadwick Boseman as NYPD detective Andre Davis in what film?', 'answer': '21 Bridges', 'category': 'Crime'}, {'question': 'In what installment of the Saw franchise are the players trapped in a house inhaling deadly poison while Detective Matthews tries to find his son?', 'answer': 'Saw II', 'category': 'Horror'}, {'question': "What screen legend plays Coach Nate Scarborough opposite Adam Sandler in 2005's The Longest Yard?", 'answer': 'Burt Reynolds', 'category': 'Remakes & Reboots'}, {'question': 'What specific object had crushed and killed musician Ernesto de la Cruz during a live performance in Coco?', 'answer': 'a bell', 'category': 'Pixar'}, {'question': 'What 70s musical includes songs such as "Summer Nights", "You\'re the One That I Want", and "Beauty School Dropout"?', 'answer': 'Grease', 'category': 'N/A'}, {'question': "Angela Bassett plays what famous singer in the biopic What's Love Got to Do with It??", 'answer': 'Tina Turner', 'category': 'N/A'}, {'question': 'What year saw the release of The Mummy Returns?', 'answer': '2001', 'category': 'N/A'}, {'question': 'In what Southern U.S. state was the film Cold Mountain set?', 'answer': 'North Carolina', 'category': 'N/A'}, {'question': 'Which Pixar film features the voice talents of Armie Hammer, Kerry Washington, and Chris Cooper?', 'answer': 'Cars 3', 'category': 'N/A'}, {'question': 'Who plays psychiatrist Ben Sobel in the 1999 comedy Analyze This?', 'answer': 'Billy Crystal', 'category': 'N/A'}, {'question': "Who plays a college basketball coach who travels to Africa to find talent in 1994's The Air Up There?", 'answer': 'Kevin Bacon', 'category': 'N/A'}, {'question': "What 2010s film follows Ray Kroc, a salesman who turned two brothers' eatery, McDonald's, into the biggest restaurant business in the world?", 'answer': 'The Founder', 'category': 'Biopics'}, {'question': "Who directed the films Dirty Rotten Scoundrels, The Indian in the Cupboard, and 2007's Death at a Funeral?", 'answer': 'Frank Oz', 'category': 'Directors'}, {'question': 'Florian Zeller directed Olivia Colman in what recent awards favorite?', 'answer': 'The Father', 'category': 'New Releases'}, {'question': 'Who plays Lefty Ruggiero, an aging longtime gangster in the Bonanno crime family, in the film Donnie Brasco?', 'answer': 'Al Pacino', 'category': 'Crime'}, {'question': 'What year saw the release of the animated films Jimmy Neutron: Boy Genius, Atlantis: The Lost Empire, and Osmosis Jones?', 'answer': '2001', 'category': 'Release Dates'}, {'question': 'Which actor is in the following films: Three Billboards Outside Ebbing, Missouri; Avengers: Infinity War; and Pixels?', 'answer': 'Peter Dinklage', 'category': 'Famous Actors & Actresses'}, {'question': 'Glenn Close received her first Best Actress nomination for what 1987 thriller?', 'answer': 'Fatal Attraction', 'category': 'Oscars'}, {'question': 'The biographical 2017 film Battle of the Sexes depicts what sport?', 'answer': 'tennis', 'category': 'Sports'}, {'question': "Which actor appears in the films We Are Marshall, Hot Rod, and 2019's Hellboy?", 'answer': 'Ian McShane', 'category': 'N/A'}, {'question': 'Philip Seymour Hoffman appears in what 2010s YA franchise?', 'answer': 'The Hunger Games (in Catching Fire, Mockingjay – Part 1, Mockingjay – Part 2)', 'category': 'Young Adult Adaptations'}, {'question': 'Rose Hathaway, the lead for the 2014 film Vampire Academy, is a 17-year-old Dhampir, which is a half vampire and half what?', 'answer': 'human', 'category': 'Young Adult Adaptations'}, {'question': "You'll find the MEDUSA, a quantum energy based superweapon that instantly destroys cities, in what 2010s YA movie?", 'answer': 'Mortal Engines', 'category': 'Young Adult Adaptations'}, {'question': 'In Twilight: Breaking Dawn – Part 1, in what month do Bella and Edward get married?', 'answer': 'August', 'category': 'Young Adult Adaptations'}, {'question': "What item does Kevin Hart's character Mouse have a weakness for, which causes him to explode, in Jumanji: Welcome to the Jungle?", 'answer': 'cake', 'category': 'Kevin Hart'}, {'question': 'Kevin Hart plays fight promoter Dante Slate, Jr. in what 2013 sports comedy featuring Sylvester Stallone from director Peter Segal?', 'answer': 'Grudge Match', 'category': 'Kevin Hart'}, {'question': 'What 2010s comedy did Kevin Hart co-write the screenplay for, in addition to starring in the film?', 'answer': 'Night School', 'category': 'Kevin Hart'}, {'question': 'Tim Story directed Kevin Hart in two films in 2014. Ride Along was one. Which was the other?', 'answer': 'Think Like a Man Too', 'category': 'Kevin Hart'}, {'question': 'Who plays store owner Zeus Carver in Die Hard with a Vengeance?', 'answer': 'Samuel L. Jackson', 'category': 'Action/Adventure'}, {'question': 'Norm Macdonald, Bridgette Wilson, Bradley Whitford, and Chris Farley appear in what 1995 Adam Sandler movie?', 'answer': 'Billy Madison', 'category': '1990s'}, {'question': "Who was nominated for Best Actor for his role in the 2018 film At Eternity's Gate, about the final years of painter Vincent van Gogh's life?", 'answer': 'Willem Dafoe', 'category': 'Biopics'}, {'question': 'What 2005 thriller from director Robert Schwentke follows a woman whose daughter vanishes on an international flight, and then everyone denies that the girl was on the plane?', 'answer': 'Flightplan', 'category': 'Thriller'}, {'question': 'What 1994 romantic comedy has the tagline "Five good reasons to stay single"?', 'answer': 'Four Weddings and a Funeral', 'category': 'Rom-Coms'}, {'question': 'Which Oscar winner directed Himesh Patel and Lily James in the 2019 film Yesterday?', 'answer': 'Danny Boyle', 'category': 'Rom-Coms'}, {'question': 'Which famous action star plays the character Roadblock in G.I. Joe: Retaliation?', 'answer': 'Dwayne Johnson', 'category': 'Action/Adventure'}, {'question': 'Anthony Ramos and Corey Hawkins star in what 2021 musical adaptation from director Jon M. Chu?', 'answer': 'In the Heights', 'category': 'New Releases'}, {'question': 'Who directed the following movies: Slacker, The Newton Boys, and A Scanner Darkly?', 'answer': 'Richard Linklater', 'category': 'Directors'}, {'question': 'Garrett Hedlund, Michael Sheen, and Olivia Wilde appear in what 2010 sequel from director Joseph Kosinski?', 'answer': 'Tron: Legacy', 'category': 'Fantasy/Sci-Fi'}, {'question': "Which actress appears in 2017's The Mummy, Atomic Blonde, and Kingsman: The Secret Service?", 'answer': 'Sofia Boutella', 'category': 'Famous Actors & Actresses'}, {'question': 'David Arquette, Doug E. Doug, and Scarlett Johansson star in this 2000s comedic monster film about a mining town attacked by mutated arachnids.', 'answer': 'Eight Legged Freaks', 'category': 'Horror/Thriller'}, {'question': 'Which actor appeared in the films U.S. Marshals, The Gingerbread Man, and Zodiac?', 'answer': 'Robert Downey Jr.', 'category': 'Crime'}, {'question': "Which Oscar-winning actress plays the main role of Isabel a.k.a. Samantha in 2005's Bewitched?", 'answer': 'Nicole Kidman', 'category': 'Nora Ephron'}, {'question': "What famous female singer had a supporting role in 1983's Silkwood, which was written by Nora Ephron?", 'answer': 'Cher', 'category': 'Nora Ephron'}, {'question': 'The 1994 comedy Mixed Nuts stars Steve Martin and takes place during what holiday?', 'answer': 'Christmas', 'category': 'Nora Ephron'}, {'question': "Who plays Tom Hanks' girlfriend, Patricia Eden, in You've Got Mail?", 'answer': 'Parker Posey', 'category': 'Nora Ephron'}, {'question': 'In what Adam Sandler film that Apatow wrote does he go by the alias Scrappy Coco that he gets from two dogs?', 'answer': "You Don't Mess with the Zohan", 'category': 'Judd Apatow'}, {'question': 'In Trainwreck, which actor plays the Dog Walker, as seen in the movie that Amy and Steven attend?', 'answer': 'Daniel Radcliffe', 'category': 'Judd Apatow'}, {'question': 'In the Apatow-written film Heavyweights, which actor plays motivational speaker Tony Perkis, Jr.?', 'answer': 'Ben Stiller', 'category': 'Judd Apatow'}, {'question': 'In the Apatow-written film Walk Hard: The Dewey Cox Story, which actress plays his wife Darlene Madison Cox?', 'answer': 'Jenna Fischer', 'category': 'Judd Apatow'}, {'question': "Who plays George's ex-fiancée, Laura, in 2009's Funny People?", 'answer': 'Leslie Mann', 'category': 'Judd Apatow'}, {'question': 'Who played the lead in the 2007 thriller Disturbia?', 'answer': 'Shia LaBeouf', 'category': '2000s'}, {'question': 'Steven Spielberg executive produced and wrote the original story for what 1985 adventure film in which a group of kids go on a search for treasure?', 'answer': 'The Goonies', 'category': 'Steven Spielberg'}, {'question': "Who plays Logan Lerman's friend Patrick in The Perks of Being a Wallflower?", 'answer': 'Ezra Miller', 'category': 'Coming of Age'}, {'question': "What Oscar-winning actor plays General Ford, whom Dustin Hoffman's character reports to, in 1995's Outbreak?", 'answer': 'Morgan Freeman', 'category': 'Disaster'}, {'question': "Which Game of Thrones actor voices Phil Betterman, the patriarch of the Bettermans who had a history with Guy's parents, in the film The Croods: A New Age?", 'answer': 'Peter Dinklage', 'category': 'New Releases'}, {'question': "In what film does the New York Post refuse the bribes offered by a man named Sir Bayfield, and end up writing a damning review of Meryl's character's performance?", 'answer': 'Florence Foster Jenkins', 'category': 'Meryl Streep'}, {'question': 'Which film in the Mission: Impossible franchise features supporting performances from Michelle Monaghan, Ving Rhames, and Laurence Fishburne?', 'answer': 'Mission: Impossible III', 'category': 'Action/Adventure'}, {'question': "This 2021 film follows Denzel Washington as a sheriff who teams up with Rami Malek as they look for a serial killer who's terrorizing Los Angeles.", 'answer': 'The Little Things', 'category': 'New Releases'}, {'question': 'Which actress appears in the films Ray, Django Unchained, and Miracle at St. Anna?', 'answer': 'Kerry Washington', 'category': 'Black Cinema'}, {'question': 'This 2000s satirical dark comedy mystery from director Robert Altman stars Michael Gambon, Maggie Smith, and Charles Dance.', 'answer': 'Gosford Park', 'category': 'Mystery'}, {'question': 'Which actor appeared in the films The Ghost and the Darkness, Déjà Vu, and The Missing?', 'answer': 'Val Kilmer', 'category': 'Famous Actors & Actresses'}, {'question': 'This 1980s comedy featuring Steve Guttenberg, Marion Ramsey, and Bubba Smith featured the tagline "Just don\'t call them when you\'re in trouble.".', 'answer': 'Police Academy', 'category': 'Comedies'}, {'question': 'This 1990s Jackie Chan film directed by Stanley Tong also co-stars Michelle Yeoh and follows Chan as he attempts to infiltrate a drug cartel.', 'answer': 'Supercop', 'category': 'Martial Arts'}, {'question': 'Matthew Broderick and Michelle Pfeiffer star in what 1985 medieval dark fantasy from director Richard Donner?', 'answer': 'Ladyhawke', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor appears in the films Earthquake, Charade, and JFK?', 'answer': 'Walter Matthau', 'category': 'N/A'}, {'question': 'Al Pacino plays Sonny, a man who attempts to rob what type of establishment, in the film Dog Day Afternoon?', 'answer': 'a bank', 'category': '1970s'}, {'question': 'What name does Alex use to refer to his group of thugs in A Clockwork Orange?', 'answer': 'droogs', 'category': '1970s'}, {'question': 'The 1971 coming-of-age drama The Last Picture Show takes place in what U.S. state during the 1950s?', 'answer': 'Texas', 'category': '1970s'}, {'question': 'Which actress won Oscars for her performances in the 70s films Women in Love and A Touch of Class?', 'answer': 'Glenda Jackson', 'category': '1970s'}, {'question': 'Spike Lee was nominated for his first Best Director Academy Award for which film?', 'answer': 'BlacKkKlansman', 'category': 'Directors'}, {'question': 'Which 2017 film did Kathryn Bigelow direct, which starred John Boyega?', 'answer': 'Detroit', 'category': 'Directors'}, {'question': 'How many times did the Russo brothers direct Chadwick Boseman?', 'answer': '3 (in Captain America: Civil War, Avengers: Infinity War, Avengers: Endgame)', 'category': 'Directors'}, {'question': 'Steven Soderbergh directed Channing Tatum, Adam Driver, and Daniel Craig in which 2017 film?', 'answer': 'Logan Lucky', 'category': 'Directors'}, {'question': 'How many roles does Halle Berry play in the 2012 sci-fi drama Cloud Atlas?', 'answer': '6 roles (as Native Woman, Jocasta Ayrs, Luisa Rey, Indian Party Guest, Ovid, Meronym)', 'category': 'Halle Berry'}, {'question': 'Who directed the films Rocky V, Happy New Year, and The Karate Kid Part II?', 'answer': 'John G. Avildsen', 'category': 'N/A'}, {'question': 'What year saw the release of the following films: Ace Ventura: When Nature Calls, Die Hard with a Vengeance, and Batman Forever?', 'answer': '1995', 'category': 'N/A'}, {'question': 'Which actress appears in the films Big Trouble in Little China and Star Trek VI: The Undiscovered Country?', 'answer': 'Kim Cattrall', 'category': 'N/A'}, {'question': 'Which actor appeared in the films Almost Famous, Enemy of the State, and Mallrats?', 'answer': 'Jason Lee', 'category': 'N/A'}, {'question': 'What franchise features the characters Frank Catton, Terry Benedict, "The Amazing" Yen, and Linus Caldwell?', 'answer': "Ocean's", 'category': 'N/A'}, {'question': 'What film first gave us the famous image of blood pouring out of an elevator?', 'answer': 'The Shining', 'category': 'Horror'}, {'question': "Who directed 1980's Raging Bull?", 'answer': 'Martin Scorsese', 'category': '1980s'}, {'question': 'What legendary western film composer composed the following 80s and 90s movies: The Mission, The Untouchables, and Cinema Paradiso?', 'answer': 'Ennio Morricone', 'category': 'Scores & Soundtracks'}, {'question': 'Jason Biggs, Alyson Hannigan, January Jones, and Fred Willard all appear in what 2003 comedy sequel?', 'answer': 'American Wedding', 'category': '2000s'}, {'question': 'Tom Cruise played a cocky character named Vincent Lauria in what 1986 film?', 'answer': 'The Color of Money', 'category': 'Tom Cruise'}, {'question': 'What film from director Andrew Davis stars Keanu Reeves as a man on the run after being framed for treason and murder?', 'answer': 'Chain Reaction', 'category': 'Action/Adventure'}, {'question': 'Who plays the now grown Damien Thorn in Omen III: The Final Conflict?', 'answer': 'Sam Neill', 'category': 'Horror/Thriller'}, {'question': "Which Oscar-winning actress stars as the character Molly in the 2007 film Mr. Magorium's Wonder Emporium?", 'answer': 'Natalie Portman', 'category': 'Family'}, {'question': 'How many installments in the Die Hard franchise did John McTiernan direct?', 'answer': '2 (Die Hard, Die Hard with a Vengeance)', 'category': 'Action/Adventure'}, {'question': 'This 2001 science-fiction psychological thriller follows a teenager who continues to see a figure in a monstrous rabbit costume known as Frank.', 'answer': 'Donnie Darko', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What was the first collaboration of director Martin Scorsese with actor Leonardo DiCaprio?', 'answer': 'Gangs of New York', 'category': 'Directors'}, {'question': 'Over three films, what two lead characters found themselves on an excellent adventure, went on a bogus journey, and found they had to face the music?', 'answer': 'Bill S. Preston, Esq., Ted "Theodore" Logan', 'category': 'Comedies'}, {'question': 'Which actress stars as the Grand High Witch in the 2020 remake The Witches?', 'answer': 'Anne Hathaway', 'category': 'New Releases'}, {'question': "Who plays Handsome Rob, the charming British member of a heist crew in 2003's The Italian Job?", 'answer': 'Jason Statham', 'category': 'Crime'}, {'question': 'What year saw the release of the films Stand by Me, Highlander, and Three Amigos?', 'answer': '1986', 'category': 'N/A'}, {'question': "Who co-wrote and directed 2003's Dreamcatcher?", 'answer': 'Lawrence Kasdan', 'category': 'Stephen King'}, {'question': 'Peter Askin directed what 2014 film, based on a Stephen King novella, that starred Joan Allen and Anthony LaPaglia?', 'answer': 'A Good Marriage', 'category': 'Stephen King'}, {'question': 'What punk rock band wrote a single for 1989\'s Pet Sematary, simply titled "Pet Sematary", that played over the film\'s end credits?', 'answer': 'the Ramones', 'category': 'Stephen King'}, {'question': 'Who plays Byron Hadley, the brutal captain of the prison guards, in The Shawshank Redemption?', 'answer': 'Clancy Brown', 'category': 'Stephen King'}, {'question': "In Hot Fuzz, who plays Simon Pegg's ex-girlfriend Janine?", 'answer': 'Cate Blanchett', 'category': '2000s'}, {'question': 'In Eternal Sunshine of the Spotless Mind, who plays Dr. Howard, who runs Lacuna and has an affair with his receptionist Mary?', 'answer': 'Tom Wilkinson', 'category': '2000s'}, {'question': 'In XXX, Samuel L. Jackson plays an agent from which U.S. government organization that recruits Xander Cage for a mission?', 'answer': 'the NSA', 'category': '2000s'}, {'question': 'In Almost Famous, believing William is older, he is hired sight unseen to write an article about Stillwater for what magazine?', 'answer': 'Rolling Stone', 'category': '2000s'}, {'question': 'What Best Picture winning film follows a CIA agent who uses a fake movie production as cover to rescue six American hostages in Iran?', 'answer': 'Argo', 'category': 'Oscars'}, {'question': 'Which singer stars as Savannah Jackson, a successful television producer, in the 1995 romance film Waiting to Exhale?', 'answer': 'Whitney Houston', 'category': 'Black Cinema'}, {'question': 'Who directed the British crime film Lock, Stock and Two Smoking Barrels?', 'answer': 'Guy Ritchie', 'category': 'Crime'}, {'question': 'Which Spielberg film co-stars Teri Garr, Melinda Dillon, and Bob Balaban?', 'answer': 'Close Encounters of the Third Kind', 'category': 'Steven Spielberg'}, {'question': 'Gregory Hines plays Detective Ray Hughes in what 1986 action comedy?', 'answer': 'Running Scared', 'category': '1980s'}, {'question': 'David Koepp wrote and directed what 1999 ghostly thriller that stars Kevin Bacon?', 'answer': 'Stir of Echoes', 'category': 'Horror'}, {'question': 'Vince Vaughn stars as a serial killer called the Butcher, who switches bodies with a teenage girl named Millie, in this 2020 horror film.', 'answer': 'Freaky', 'category': 'New Releases'}, {'question': 'Which actor plays the lead role of Nicky Spurgeon, a seasoned con man, in the 2015 film Focus?', 'answer': 'Will Smith', 'category': 'Crime'}, {'question': 'This 1990s Tim Burton film features performances from Jack Black, Michael J. Fox, Sarah Jessica Parker, and Martin Short.', 'answer': 'Mars Attacks!', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Sean Astin wants to play football at the University of Notre Dame, but has neither the money for tuition nor the grades to qualify for a scholarship, in this 1990s sports film.', 'answer': 'Rudy', 'category': 'Sports'}, {'question': 'Which actress appears in the films Home Alone 3, Hail, Caesar!, and The Prestige?', 'answer': 'Scarlett Johansson', 'category': 'Famous Actors & Actresses'}, {'question': 'Two veteran NYPD partners are on the trail of a stolen, rare, mint condition baseball card in this 2010 buddy cop film featuring Seann William Scott.', 'answer': 'Cop Out', 'category': 'Comedies'}, {'question': 'What 1994 film from director Robert Zemeckis won Best Picture at the 1995 Oscars?', 'answer': 'Forrest Gump', 'category': 'Oscars'}, {'question': 'Which actor appeared in the films Prometheus, Annabelle Comes Home, and Bone Tomahawk?', 'answer': 'Patrick Wilson', 'category': 'Horror/Thriller'}, {'question': 'Who plays Walter Simmons, the villainous CEO of a cybernetics corporation in Godzilla vs. Kong?', 'answer': 'Demián Bichir', 'category': 'New Releases'}, {'question': 'Actress Yuh-jung Youn won the Best Supporting Actress Oscar for what film that was released in 2020?', 'answer': 'Minari', 'category': 'New Releases'}, {'question': 'What 2020 thriller from director Derrick Borte follows a man with rage issues who targets a woman after an altercation on the road?', 'answer': 'Unhinged', 'category': 'New Releases'}, {'question': 'Which action movie star plays the Emperor in the 2020 remake of Mulan?', 'answer': 'Jet Li', 'category': 'New Releases'}, {'question': "In John Wick, who plays John's mentor Marcus, who helps him throughout the film?", 'answer': 'Willem Dafoe', 'category': 'Mixed Bag'}, {'question': 'Which 1998 rom-com boasts the tagline "In the history of partying, Huntington Hills High School is about to become legendary."?', 'answer': "Can't Hardly Wait", 'category': 'Mixed Bag'}, {'question': 'In Scream, what classic horror film is the group watching when Randy explains the rules for how to survive a horror film?', 'answer': 'Halloween', 'category': 'Mixed Bag'}, {'question': 'Neve Campbell plays Dwayne "The Rock" Johnson\'s wife in what 2010s action film?', 'answer': 'Skyscraper', 'category': 'Mixed Bag'}, {'question': "You'll find the characters Forky and Gabby Gabby in which film in the Toy Story franchise?", 'answer': 'Toy Story 4', 'category': 'Pixar'}, {'question': 'What 1996 Muppet film features the songs "Shiver My Timbers", "Cabin Fever", and "A Professional Pirate"?', 'answer': 'Muppet Treasure Island', 'category': 'Musicals'}, {'question': 'Linda Blair plays Regan MacNeil in what landmark 1973 horror film?', 'answer': 'The Exorcist', 'category': 'Horror/Thriller'}, {'question': "What actress stars alongside Will Smith as Rita Escobar in 1999's Wild Wild West?", 'answer': 'Salma Hayek', 'category': 'Will Smith'}, {'question': "Steve Zahn plays Officer Tucker, who finds sympathy toward Ron Woodruff's developing cause stemming from his own father's Alzheimer's battle in this 2010s Oscar-winning film.", 'answer': 'Dallas Buyers Club', 'category': 'Biopics'}, {'question': "Who stars as a successful architect having an affair with his white secretary in Spike Lee's Jungle Fever?", 'answer': 'Wesley Snipes', 'category': '1990s'}, {'question': 'Which actor stars as the title character in the 1972 American revisionist western Jeremiah Johnson?', 'answer': 'Robert Redford', 'category': 'N/A'}, {'question': 'Haunted Halloween is the subtitle of the sequel to what horror family film that was based on a book series?', 'answer': 'Goosebumps', 'category': 'Horror/Thriller'}, {'question': 'Which actor stars as a father whose 16-year-old daughter has gone missing in the 2018 film Searching?', 'answer': 'John Cho', 'category': 'Mystery'}, {'question': 'Which actor appeared in the films Babel, The Tree of Life, and The Counselor?', 'answer': 'Brad Pitt', 'category': 'Famous Actors & Actresses'}, {'question': 'Mark Ruffalo and Rachel McAdams both received Oscar nominations for what 2015 drama?', 'answer': 'Spotlight', 'category': 'Oscars'}, {'question': 'The films We Were Soldiers, Rescue Dawn, and Da 5 Bloods depict which war?', 'answer': 'the Vietnam War', 'category': 'War'}, {'question': 'In what 2000s comedy does Will Ferrell say "Well, let me just quote the late great Colonel Sanders who said \'I\'m too drunk to taste this chicken\'."?', 'answer': 'Talladega Nights: The Ballad of Ricky Bobby', 'category': 'Comedies'}, {'question': "Who stars as a trumpet player named Bleek Gilliam in the 1990 Spike Lee film Mo' Better Blues?", 'answer': 'Denzel Washington', 'category': 'Black Cinema'}, {'question': "Who directed the movies The Hunger, 1996's The Fan, and 1990's Revenge?", 'answer': 'Tony Scott', 'category': 'Directors'}, {'question': "Who plays Amy's character Susan's ex-husband in 2016's Nocturnal Animals?", 'answer': 'Jake Gyllenhaal', 'category': 'Amy Adams'}, {'question': 'Amy Adams co-stars in what 2000s Will Ferrell comedy?', 'answer': 'Talladega Nights: The Ballad of Ricky Bobby', 'category': 'Amy Adams'}, {'question': 'Amy Adams performs the song "Me Party" when she feels neglected by her boyfriend, in what family film musical?', 'answer': 'The Muppets', 'category': 'Amy Adams'}, {'question': 'Amy Adams plays what real-life person in Night at the Museum: Battle of the Smithsonian?', 'answer': 'Amelia Earhart', 'category': 'Amy Adams'}, {'question': "In Almost Famous, who plays William's older sister, Anita?", 'answer': 'Zooey Deschanel', 'category': '2000s'}, {'question': 'Who stars as Tony Wilson, a real-life British record executive for an independent label in the 2002 film 24 Hour Party People?', 'answer': 'Steve Coogan', 'category': '2000s'}, {'question': "In O Brother, Where Art Thou?, who played Penny Wharvey-McGill, Everett's ex-wife?", 'answer': 'Holly Hunter', 'category': '2000s'}, {'question': "What mental disorder does Seth Rogen's character suffer from in the dark comedy Observe and Report?", 'answer': 'bipolar disorder', 'category': '2000s'}, {'question': 'Who plays the title character of Sarah Marshall in Forgetting Sarah Marshall?', 'answer': 'Kristen Bell', 'category': 'Comedies'}, {'question': 'Ethan Embry, Jennifer Love Hewitt, and Seth Green all appear in what 1998 coming-of-age teen comedy?', 'answer': "Can't Hardly Wait", 'category': 'Coming of Age'}, {'question': 'Charles Stone III directed Nick Cannon and Zoe Saldana in this 2002 coming-of-age comedy set at a university.', 'answer': 'Drumline', 'category': 'Black Cinema'}, {'question': 'What 1980s film from director Jim Henson had the tagline "Where everything seems possible and nothing is what it seems."?', 'answer': 'Labyrinth', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what 2000s comedy will you see fictional rapper-turned-actor Alpa Chino advertising the energy drink Booty Sweat?', 'answer': 'Tropic Thunder', 'category': '2000s'}, {'question': "What famous sitcom actor voices the role of Mr. Litwak, owner of Litwak's Family Fun Center and Arcade, in both Wreck-It Ralph films?", 'answer': "Ed O'Neill", 'category': 'Disney'}, {'question': 'Michael Cera, Ralph Fiennes, Jonah Hill, and Channing Tatum lent their voices to what 2017 animated film?', 'answer': 'The Lego Batman Movie', 'category': 'Animated'}, {'question': 'Which Edgar Wright film features performances from Simon Pegg, David Bradley, Martin Freeman, and Rosamund Pike?', 'answer': "The World's End", 'category': 'Comedies'}, {'question': "Which actress appears in the films Beverly Hills Chihuahua and 2003's Freaky Friday?", 'answer': 'Jamie Lee Curtis', 'category': 'Family'}, {'question': 'Jack Nicholson and Helen Hunt both won acting Oscars for this 1997 romantic comedy from director James L. Brooks.', 'answer': 'As Good as It Gets', 'category': '1990s'}, {'question': "Which actor plays the lead role of Douglas Quaid in 2012's Total Recall?", 'answer': 'Colin Farrell', 'category': 'Remakes & Reboots'}, {'question': "O'Shea Jackson Jr. plays Ice Cube, and Corey Hawkins plays Dr. Dre in this 2010s biographical drama from director F. Gary Gray.", 'answer': 'Straight Outta Compton', 'category': 'Black Cinema'}, {'question': "Which actor appears in the films Pacific Rim Uprising, Horrible Bosses 2, and 2015's Vacation?", 'answer': 'Charlie Day', 'category': 'Famous Actors & Actresses'}, {'question': 'What 2017 musical featuring Michelle Williams and Zendaya features the songs "Rewrite the Stars" and "The Other Side"?', 'answer': 'The Greatest Showman', 'category': 'Musicals'}, {'question': "Which Judd Apatow directed film served as Ken Jeong's big screen debut?", 'answer': 'Knocked Up', 'category': 'Famous Actors & Actresses'}, {'question': "In 2018's A Star Is Born, who is the celebrity host of Saturday Night Live when Ally appears on the show?", 'answer': 'Alec Baldwin', 'category': 'Famous Actors & Actresses'}, {'question': 'In O Brother, Where Art Thou?, who played Daniel "Big Dan" Teague, an eyepatch-wearing villain?', 'answer': 'John Goodman', 'category': 'Famous Actors & Actresses'}, {'question': 'Matrix co-stars Laurence Fishburne and Keanu Reeves have both played a character by the name of Dr. William Foster, Reeves in the film Replicas, and Fishburne in what film?', 'answer': 'Ant-Man and the Wasp', 'category': 'Famous Actors & Actresses'}, {'question': "Who plays the role of Commander Malloy in 1996's Escape from L.A.?", 'answer': 'Stacy Keach', 'category': 'John Carpenter'}, {'question': 'Which Carpenter film had a remake that starred Ethan Hawke and Laurence Fishburne?', 'answer': 'Assault on Precinct 13', 'category': 'John Carpenter'}, {'question': 'Which John Carpenter film features performances by Sam Neill, Michael McKean, and Stephen Tobolowsky?', 'answer': 'Memoirs of an Invisible Man', 'category': 'John Carpenter'}, {'question': 'Which Carpenter film features the characters Arnie Cunningham and Dennis Guilder?', 'answer': 'Christine', 'category': 'John Carpenter'}, {'question': 'What classic animated Disney film features the songs "Hi-Diddle-Dee-Dee" and "I\'ve Got No Strings"?', 'answer': 'Pinocchio', 'category': 'Scores & Soundtracks'}, {'question': 'Who stars as the main character Earl Stone in the film The Mule?', 'answer': 'Clint Eastwood', 'category': 'Crime'}, {'question': 'Which comedic actor plays record executive Ray Foster in the film Bohemian Rhapsody?', 'answer': 'Mike Myers', 'category': 'Biopics'}, {'question': "Who plays the mayor of Dante's Peak, Washington, Rachel Wando, in Dante's Peak?", 'answer': 'Linda Hamilton', 'category': 'Disaster'}, {'question': 'What 1991 sports comedy, featuring Sinbad, follows the fictional college football team "The Texas State Fightin\' Armadillos"?', 'answer': 'Necessary Roughness', 'category': 'Sports'}, {'question': "Journalist Cal McAffrey investigates the murder of a congressman's mistress, walking headlong into a massive cover-up in what 2009 film featuring Russell Crowe and Helen Mirren?", 'answer': 'State of Play', 'category': 'Thriller'}, {'question': 'Which actor played detective Eddie Valiant in the film Who Framed Roger Rabbit?', 'answer': 'Bob Hoskins', 'category': '1980s'}, {'question': 'What year saw the releases of The Bourne Identity, Signs, and Die Another Day?', 'answer': '2002', 'category': 'Release Dates'}, {'question': "Which actor appeared in the films Lethal Weapon 2, A Bronx Tale, and Gone Fishin'?", 'answer': 'Joe Pesci', 'category': 'Famous Actors & Actresses'}, {'question': 'Which actor stars as a teenager named Elio Perlman in the film Call Me by Your Name?', 'answer': 'Timothée Chalamet', 'category': 'Dramas'}, {'question': 'Who directed the films Last Action Hero and The Hunt for Red October?', 'answer': 'John McTiernan', 'category': 'Action/Adventure'}, {'question': 'Which actress co-stars with Jackie Chan as Delilah "Del" Blaine in the action comedy The Tuxedo?', 'answer': 'Jennifer Love Hewitt', 'category': 'Comedies'}, {'question': "What film from director Tom Ford follows a wealthy art gallery owner who is haunted when reading her ex-husband's symbolic and violent novel?", 'answer': 'Nocturnal Animals', 'category': 'Crime'}, {'question': "What actor and singer plays Junior, one of the three criminal home invaders in 2002's Panic Room?", 'answer': 'Jared Leto', 'category': 'Horror/Thriller'}, {'question': 'In The Deathly Hallows – Part 2, Dobby\'s tombstone reads "Here Lies Dobby, a" what?', 'answer': 'Free Elf', 'category': 'Wizarding World'}, {'question': 'The Crimes of Grindelwald opens with Grindelwald in captivity in what year?', 'answer': '1927', 'category': 'Wizarding World'}, {'question': 'Who played Cedric Diggory, the student who was killed near the end of The Goblet of Fire?', 'answer': 'Robert Pattinson', 'category': 'Wizarding World'}, {'question': 'When Professor Lupin first saw Harry Potter, he recognized that he was Harry by what physical feature?', 'answer': 'his eyes', 'category': 'Wizarding World'}, {'question': 'What object does Annie Wilkes use to "hobble" Paul Sheldon in Misery?', 'answer': 'a sledgehammer', 'category': 'Thriller'}, {'question': 'In what 90s film does a group of high school students have a violent confrontation with their teacher, played by Helen Mirren?', 'answer': 'Teaching Mrs. Tingle', 'category': 'Thriller'}, {'question': 'Who co-stars as Ian, alongside Emma Roberts, in the 2016 thriller Nerve?', 'answer': 'Dave Franco', 'category': 'Thriller'}, {'question': "Who plays precinct head Captain McKenna in 2019's 21 Bridges?", 'answer': 'J. K. Simmons', 'category': 'Thriller'}, {'question': 'Tom Hanks won his first Best Actor Oscar for playing lawyer Andrew Beckett in what film from director Jonathan Demme?', 'answer': 'Philadelphia', 'category': 'Oscars'}, {'question': 'Brad Pitt was nominated for an Oscar for Best Actor for what 2008 David Fincher film?', 'answer': 'The Curious Case of Benjamin Button', 'category': 'Brad Pitt'}, {'question': 'Ted Danson, Nathan Fillion, Bryan Cranston, and Paul Giamatti appear in what 1990s Tom Hanks film?', 'answer': 'Saving Private Ryan', 'category': 'Tom Hanks'}, {'question': 'What 1987 Denzel Washington movie is set in South Africa?', 'answer': 'Cry Freedom', 'category': 'Denzel Washington'}, {'question': 'Brigitte Nielsen stars alongside Arnold Schwarzenegger in this 1985 epic sword and sorcery film.', 'answer': 'Red Sonja', 'category': 'Fantasy/Sci-Fi'}, {'question': 'KJ Apa plays real-life musician Jeremy Camp in what 2020 religious-themed film?', 'answer': 'I Still Believe', 'category': 'New Releases'}, {'question': 'Which film in the Shrek franchise features the voice talents of Antonio Banderas, Rupert Everett, John Cleese, and Justin Timberlake?', 'answer': 'Shrek the Third', 'category': 'Animated'}, {'question': 'What is the title of the 1987 adventure film in which Dolph Lundgren plays the famous character He-Man?', 'answer': 'Masters of the Universe', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor appeared in the 90s films L.A. Confidential, Space Jam, and Man on the Moon?', 'answer': 'Danny DeVito', 'category': '1990s'}, {'question': 'Which comedic actress stars as mob wife Kathy Brennan in the 2019 film The Kitchen?', 'answer': 'Melissa McCarthy', 'category': 'Comic Book'}, {'question': 'Who directed the 2020 film Capone starring Tom Hardy?', 'answer': 'Josh Trank', 'category': 'New Releases'}, {'question': 'This 2014 film follows Jake Johnson and Damon Wayans Jr. as two friends who pretend to be police officers in Los Angeles.', 'answer': "Let's Be Cops", 'category': 'Comedies'}, {'question': "Which actress appears in the films Confessions of a Dangerous Mind, He's Just Not That into You, and Donnie Darko?", 'answer': 'Drew Barrymore', 'category': 'Famous Actors & Actresses'}, {'question': 'What 2000s musical biopic from director James Mangold has the tagline "Love is a burning thing."?', 'answer': 'Walk the Line', 'category': 'Biopics'}, {'question': "In the Hobbit films, which of the dwarves in Thorin's company is played by actor Dean O'Gorman?", 'answer': 'Fíli', 'category': 'Middle-earth'}, {'question': 'In An Unexpected Journey, Gandalf tells Radagast that what type of Wargs can outrun him?', 'answer': 'Gundabad Wargs', 'category': 'Middle-earth'}, {'question': 'In The Return of the King, Gandalf tells the Gondor soldiers that what is the best defense they have now?', 'answer': 'courage', 'category': 'Middle-earth'}, {'question': "In The Hobbit: An Unexpected Journey, Durin's Day is the start of the new year for the dwarves as what season ends?", 'answer': 'fall', 'category': 'Middle-earth'}, {'question': 'In which early 2000s film does Angela Bassett star alongside Robert De Niro and Marlon Brando?', 'answer': 'The Score', 'category': 'Angela Bassett'}, {'question': 'Angela Bassett has a supporting role in what 2012 action comedy romance that stars Reese Witherspoon and Tom Hardy?', 'answer': 'This Means War', 'category': 'Angela Bassett'}, {'question': 'Which director known mostly for horror helmed the film Music of the Heart?', 'answer': 'Wes Craven', 'category': 'Angela Bassett'}, {'question': 'What is the name of the Queen Mother of Wakanda in Black Panther?', 'answer': 'Ramonda', 'category': 'Angela Bassett'}, {'question': 'Which actor plays the title character in the 2011 film Larry Crowne?', 'answer': 'Tom Hanks', 'category': 'Julia Roberts'}, {'question': "Who starred in the 80s films Losin' It, All the Right Moves, and Legend?", 'answer': 'Tom Cruise', 'category': '1980s'}, {'question': 'Who provides the voice of Sally Carrera in the Cars franchise?', 'answer': 'Bonnie Hunt', 'category': 'Pixar'}, {'question': 'Stephen Frears directed John Cusack and Annette Bening in what 1990 crime film?', 'answer': 'The Grifters', 'category': 'Crime'}, {'question': 'Which actor plays the male lead Garrett in the rom-com Going the Distance?', 'answer': 'Justin Long', 'category': 'Drew Barrymore'}, {'question': 'Which 1960s animated Disney film features supporting characters such as Lord Ector, Archimedes, and Madame Mim?', 'answer': 'The Sword in the Stone', 'category': 'Animated'}, {'question': 'Thomas Jane plays Frank Castle, a man whose family is murdered after a hit put out by mobster Howard Saint, in this 2004 comic book adaptation.', 'answer': 'The Punisher', 'category': 'Comic Book'}, {'question': "Which Academy Award winning actress appears in the films The Wrestler, Before the Devil Knows You're Dead, and The Lincoln Lawyer?", 'answer': 'Marisa Tomei', 'category': 'Dramas'}, {'question': 'Which 2000 animated Disney film featuring John Goodman was nominated for Best Song at the Oscars for "My Funny Friend and Me" by Sting and David Hartley?', 'answer': "The Emperor's New Groove", 'category': 'Animated'}, {'question': 'What 1999 rom-com has the tagline "Can the most famous film star in the world fall for just an ordinary guy?"?', 'answer': 'Notting Hill', 'category': '1990s'}, {'question': 'Jessica Chastain, Idris Elba, and Kevin Costner star in which biographical drama from writer director Aaron Sorkin?', 'answer': "Molly's Game", 'category': 'Biopics'}, {'question': 'Raul Julia, Christopher Lloyd, Carol Kane, and Anjelica Huston star in what 1990s Barry Sonnenfield film?', 'answer': 'Addams Family Values', 'category': 'Comedies'}, {'question': 'Who stars as Nick Twisp, and also plays his alter ego François Dillinger in the comedy Youth in Revolt?', 'answer': 'Michael Cera', 'category': 'Rom-Coms'}, {'question': 'Which actor appears in the films Halloween H20, Angels in the Outfield, and Sin City: A Dame to Kill For?', 'answer': 'Joseph Gordon-Levitt', 'category': 'Famous Actors & Actresses'}, {'question': 'Which classic Kurosawa film was remade as the western The Magnificent Seven?', 'answer': 'Seven Samurai', 'category': 'Akira Kurosawa'}, {'question': 'What epic 1985 Kurosawa film was a loose remake of the Shakespeare play King Lear?', 'answer': 'Ran', 'category': 'Akira Kurosawa'}, {'question': "Which Kurosawa film follows a shoe company executive who becomes a victim of extortion when his chauffeur's son is kidnapped?", 'answer': 'High and Low', 'category': 'Akira Kurosawa'}, {'question': 'Which actor, who famously starred in many Kurosawa films, played the lead character Sanjuro in the films Yojimbo and Sanjuro?', 'answer': 'Toshiro Mifune', 'category': 'Akira Kurosawa'}, {'question': 'Which 1949 Kurosawa thriller that was finally released in 1963 in the U.S. is about a police detective whose gun is stolen by a criminal?', 'answer': 'Stray Dog', 'category': 'Akira Kurosawa'}, {'question': 'Which Hollywood actor played a character named Clark in the 1991 Kurosawa film Rhapsody in August?', 'answer': 'Richard Gere', 'category': 'Akira Kurosawa'}, {'question': 'Renée Zellweger won a Best Actress Oscar for playing what real-life individual?', 'answer': 'Judy Garland', 'category': 'Oscars'}, {'question': 'Who received Best Actor nominations for the films Midnight Cowboy and Wag the Dog?', 'answer': 'Dustin Hoffman', 'category': 'Oscars'}, {'question': 'Who won Best Actor in 2015 for their role as Stephen Hawking?', 'answer': 'Eddie Redmayne (for The Theory of Everything)', 'category': 'Oscars'}, {'question': 'Cate Blanchett received her first Oscar nomination for her performance in what film?', 'answer': 'Elizabeth', 'category': 'Oscars'}, {'question': 'Who is the oldest actress to win the Best Actress Oscar at 80 years old?', 'answer': 'Jessica Tandy (for Driving Miss Daisy)', 'category': 'Oscars'}, {'question': "Who received Best Actor nominations for the films The Last Detail, Prizzi's Honor, and Ironweed?", 'answer': 'Jack Nicholson', 'category': 'Oscars'}, {'question': 'Donald Sutherland played Hawkeye Pierce in what 1970 comedy?', 'answer': 'M*A*S*H', 'category': '1970s'}, {'question': 'What 1965 film is about a woman named Maria who becomes a governess for the wealthy von Trapp family?', 'answer': 'The Sound of Music', 'category': 'Classics'}, {'question': 'Which actor starred in the 1990s films Bullets over Broadway, City Hall, and Con Air?', 'answer': 'John Cusack', 'category': '1990s'}, {'question': 'In The Hateful Eight, John Ruth, played by Kurt Russell, executes criminals using what method?', 'answer': 'hanging people', 'category': 'Quentin Tarantino'}, {'question': 'What 1995 film stars Meg Ryan as a woman who flies to confront her ex-fiancé but gets into a troubling situation with a crook?', 'answer': 'French Kiss', 'category': 'Romance'}, {'question': 'Ed Harris plays U.S. Secretary of State Leonard Dekkom in this 2017 disaster film.', 'answer': 'Geostorm', 'category': 'Disaster'}, {'question': 'What 90s adventure epic has the line "I will find you! No matter how long it takes, no matter how far. I will find you!"?', 'answer': 'The Last of the Mohicans', 'category': 'N/A'}, {'question': 'Julia Roberts plays Alice Sutton, a lawyer at the Justice Department, in what 1997 film?', 'answer': 'Conspiracy Theory', 'category': 'N/A'}, {'question': 'Which former SNL actress provides the voice of a new reporter named Roxanne Ritchie in the film Megamind?', 'answer': 'Tina Fey', 'category': 'N/A'}, {'question': 'Tom Cruise and Elisabeth Shue star together in what film?', 'answer': 'Cocktail', 'category': 'N/A'}, {'question': 'Kevin Costner plays the general manager of what NFL team in Draft Day?', 'answer': 'the Cleveland Browns', 'category': 'N/A'}, {'question': 'Who plays Helen, a London ad executive whom the audience sees on two different tracks of her life stemming from one event, in the 1998 film Sliding Doors?', 'answer': 'Gwyneth Paltrow', 'category': 'Romance'}, {'question': 'Who stars as Mason Storm, an LAPD detective who emerges from a seven-year coma to exact justice in the 1990 film Hard to Kill?', 'answer': 'Steven Seagal', 'category': 'Action/Adventure'}, {'question': 'Vin Diesel portrays Hugo Toorop, a mercenary and former Marine in this 2008 sci-fi film also featuring Mark Strong and Michelle Yeoh.', 'answer': 'Babylon A.D.', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actor plays Agent Phil Coulson in the MCU?', 'answer': 'Clark Gregg (in Iron Man, Iron Man 2, Thor, The Avengers, Captain Marvel)', 'category': 'Comic Book'}, {'question': 'Which Academy Award winning actor starred in and directed the 2014 western film The Homesman?', 'answer': 'Tommy Lee Jones', 'category': 'Westerns'}, {'question': 'John Cusack plays Martin Q. Blank, a professional assassin attending his high school reunion, in this 1997 dark comedy.', 'answer': 'Grosse Pointe Blank', 'category': 'Comedies'}, {'question': 'What year saw the release of the sequels Dawn of the Planet of the Apes, 22 Jump Street, and Sin City: A Dame to Kill For?', 'answer': '2014', 'category': '2010s'}, {'question': 'Which actress starred in the 90s films The Ice Storm, Copycat, and Dave?', 'answer': 'Sigourney Weaver', 'category': 'Famous Actors & Actresses'}, {'question': 'Reese Witherspoon plays the character Mrs. Whatsit in what 2018 family film from director Ava DuVernay?', 'answer': 'A Wrinkle in Time', 'category': 'Reese Witherspoon'}, {'question': 'Which actor plays Paul Metzler, a popular student who is running against Tracy Flick for student body president in the film Election?', 'answer': 'Chris Klein', 'category': 'Reese Witherspoon'}, {'question': 'In what 2010s film were Reese Witherspoon and Nat Wolff directed by Hallie Meyers-Shyer?', 'answer': 'Home Again', 'category': 'Reese Witherspoon'}, {'question': 'Who directed Reese Witherspoon and Robert Pattinson in Water for Elephants?', 'answer': 'Francis Lawrence', 'category': 'Reese Witherspoon'}, {'question': 'Which classic Disney film features the characters Lampwick, Figaro, Cleo, and Monstro the whale?', 'answer': 'Pinocchio', 'category': 'Classics'}, {'question': "Which actor played Captain Nemo in Disney's 1954 adaptation of Jules Verne's 20,000 Leagues Under the Sea?", 'answer': 'James Mason', 'category': 'Classics'}, {'question': 'Which Best Picture nominee opens with the dead body of a man named Joe Gillis floating in a pool?', 'answer': 'Sunset Boulevard', 'category': 'Classics'}, {'question': 'The 1949 film Criss Cross stars which actor as Steve Thompson, who returns to Los Angeles to resume his old job of driving an armored car?', 'answer': 'Burt Lancaster', 'category': 'Classics'}, {'question': 'Who directed the 2008 film Gran Torino?', 'answer': 'Clint Eastwood', 'category': 'Directors'}, {'question': 'Craig T. Nelson and Holly Hunter lead the voice cast of what 2004 Pixar film?', 'answer': 'The Incredibles', 'category': 'Animated'}, {'question': 'Yann Demange directed Matthew McConaughey in what 2018 biographical crime drama?', 'answer': 'White Boy Rick', 'category': 'Matthew McConaughey'}, {'question': 'Which actress plays Annabeth Chase, who helps Percy Jackson in the film Percy Jackson & the Olympians: The Lightning Thief?', 'answer': 'Alexandra Daddario', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1990s sci-fi action film features the tagline "Protecting the Earth from the scum of the universe"?', 'answer': 'Men in Black', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What year saw the releases of the films ParaNorman, Frankenweenie, and Wreck-It Ralph?', 'answer': '2012', 'category': 'Animated'}, {'question': 'Who plays accountant Jonathan "The Duke" Mardukas in the film Midnight Run?', 'answer': 'Charles Grodin', 'category': '1980s'}, {'question': "Which actor co-starred in the films The Last Boy Scout, Bulletproof, and Mo' Money?", 'answer': 'Damon Wayans', 'category': 'Famous Actors & Actresses'}, {'question': 'Which comedian starred in, wrote, and directed the 1991 dark comedy horror film Nothing but Trouble?', 'answer': 'Dan Aykroyd', 'category': 'Horror/Thriller'}, {'question': "Who plays Calvin Joyner, a former popular star athlete that went to high school with Dwayne Johnson's Bob Stone in the film Central Intelligence?", 'answer': 'Kevin Hart', 'category': 'Comedies'}, {'question': "Who plays Mary, alongside Domhnall Gleeson's Tim Lake, in the film About Time?", 'answer': 'Rachel McAdams', 'category': 'Romance'}, {'question': 'John Ford directed John Wayne, James Stewart, and Lee Marvin in this 1962 western film.', 'answer': 'The Man Who Shot Liberty Valance', 'category': 'Westerns'}, {'question': "Who plays the young assistant Inga in 1974's Young Frankenstein?", 'answer': 'Teri Garr', 'category': 'Mel Brooks'}, {'question': 'Which actor from the Alien franchise makes a cameo in Spaceballs parodying their famous death in the series?', 'answer': 'John Hurt', 'category': 'Mel Brooks'}, {'question': 'In History of the World, Part I, how many commandments did God give to Moses, before Moses dropped some of the tablets and ended up with 10?', 'answer': '15 commandments', 'category': 'Mel Brooks'}, {'question': "What musician plays the role of Asneeze, Robin's fellow inmate who helps him escape from captivity in Jerusalem, in Robin Hood: Men in Tights?", 'answer': 'Isaac Hayes', 'category': 'Mel Brooks'}, {'question': 'Which actress stars as Hunter Conrad, a woman that develops a dangerous addiction in the film Swallow?', 'answer': 'Haley Bennett', 'category': 'New Releases'}, {'question': 'Who plays Dr. Emil Harting in the film Bloodshot?', 'answer': 'Guy Pearce', 'category': 'New Releases'}, {'question': 'Kate Walsh and Liam Neeson star in what 2020 film?', 'answer': 'Honest Thief', 'category': 'New Releases'}, {'question': 'What 2021 film follows the characters Usnavi, Benny, Nina, and Vanessa over the course of a few days in their New York neighborhood?', 'answer': 'In the Heights', 'category': 'New Releases'}, {'question': 'Who provides the voice of Sulley in Monsters, Inc. and Monsters University?', 'answer': 'John Goodman', 'category': 'Pixar'}, {'question': 'Morgan Freeman plays the character Hoke Colburn in what Oscar-winning drama from the 1980s?', 'answer': 'Driving Miss Daisy', 'category': '1980s'}, {'question': 'What 2000s Disney film featured the songs "Great Spirits", "On My Way", and "Look Through My Eyes"?', 'answer': 'Brother Bear', 'category': 'Animated'}, {'question': 'Will Smith, Rosario Dawson, and Woody Harrelson star in this 2008 film about a man with a secret who sets out to change the lives of a group of strangers.', 'answer': 'Seven Pounds', 'category': 'Dramas'}, {'question': 'Which actor starred in the 1985 films Silverado, American Flyers, and Fandango?', 'answer': 'Kevin Costner', 'category': '1980s'}, {'question': 'What 2010 animated film features the line "once we take this shrink ray, we will have the capability to pull off the true crime of the century!"?', 'answer': 'Despicable Me', 'category': 'Animated'}, {'question': 'What year saw the release of the films Rush Hour, Out of Sight, and What Dreams May Come?', 'answer': '1998', 'category': 'Release Dates'}, {'question': "Which actress received Oscar nominations for her performances in the films The Client, Lorenzo's Oil, and Thelma & Louise?", 'answer': 'Susan Sarandon', 'category': 'Oscars'}, {'question': "Which actress plays a commitment-phobic New Yorker who's considering a serious relationship with a sports doctor in the Judd Apatow directed film Trainwreck?", 'answer': 'Amy Schumer', 'category': 'Rom-Coms'}, {'question': 'Rachel McAdams and Cillian Murphy star as airplane passengers in what 2005 thriller from director Wes Craven?', 'answer': 'Red Eye', 'category': 'Horror/Thriller'}, {'question': 'Which actor co-starred in the comedies Mister Roberts, The Odd Couple, and Grumpy Old Men?', 'answer': 'Jack Lemmon', 'category': 'Famous Actors & Actresses'}, {'question': "Who stars as Bart, the newly appointed African-American sheriff of an Old West town in Mel Brooks' Blazing Saddles?", 'answer': 'Cleavon Little', 'category': '1970s'}, {'question': 'How many entries in the Dirty Harry franchise were released in the 70s?', 'answer': '3 (Dirty Harry, Magnum Force, The Enforcer)', 'category': '1970s'}, {'question': 'Who directed Rocky II?', 'answer': 'Sylvester Stallone', 'category': '1970s'}, {'question': 'Butch Cassidy and the Sundance Kid was the first film that starred Paul Newman and Robert Redford. What was the second?', 'answer': 'The Sting', 'category': '1970s'}, {'question': 'What animated Disney film follows a mystery-solving mouse named Basil of Baker Street?', 'answer': 'The Great Mouse Detective', 'category': 'Mystery'}, {'question': 'John Hawkes, Alfred Molina, John C. McGinley, and Rebecca De Mornay feature in what 2003 film directed by James Mangold?', 'answer': 'Identity', 'category': 'Mystery'}, {'question': 'Which popular TV actress plays Daphne in the 2002 film version of Scooby-Doo?', 'answer': 'Sarah Michelle Gellar', 'category': 'Mystery'}, {'question': 'Which actress played Lisbeth Salander in the 2010 Swedish-language adaptation of The Girl with the Dragon Tattoo?', 'answer': 'Noomi Rapace', 'category': 'Mystery'}, {'question': 'Who directed the films Straight Outta Compton and Friday?', 'answer': 'F. Gary Gray', 'category': 'Directors'}, {'question': 'Mark Wahlberg stars as Vince Papale, a local Philadelphia man who is given a shot at professional football, in this 2006 Disney film.', 'answer': 'Invincible', 'category': 'Sports'}, {'question': 'What Spielberg film features supporting performances from Jennifer Garner, Amy Adams, and Martin Sheen?', 'answer': 'Catch Me If You Can', 'category': 'Steven Spielberg'}, {'question': 'Oprah Winfrey and Danny Glover were directed by Jonathan Demme in what 1998 psychological horror film?', 'answer': 'Beloved', 'category': 'Black Cinema'}, {'question': "Gerald McRaney plays Will Smith's father, Bucky Spurgeon, in what film?", 'answer': 'Focus', 'category': 'Will Smith'}, {'question': 'Which 2016 animated film features the voice talents of Russell Brand, Anna Kendrick, Gwen Stefani, and Justin Timberlake?', 'answer': 'Trolls', 'category': 'Animated'}, {'question': "Who plays the villainous Blackbeard alongside Levi Miller's Peter Pan and Garrett Hedlund's Hook in the 2015 film Pan?", 'answer': 'Hugh Jackman', 'category': 'Fantasy/Sci-Fi'}, {'question': "Which actress appears in the films Good Luck Chuck, Valentine's Day, and The Love Guru?", 'answer': 'Jessica Alba', 'category': 'Rom-Coms'}, {'question': 'This horror film from director Wes Craven features performances from Rory Culkin, David Arquette, Hayden Panettiere, and Anthony Anderson.', 'answer': 'Scream 4', 'category': 'Horror/Thriller'}, {'question': 'Who was nominated for a Best Actress Academy Award for her role as Tonya Harding in the film I, Tonya?', 'answer': 'Margot Robbie', 'category': 'Biopics'}, {'question': 'Whoopi Goldberg, Kathy Najimy, Maggie Smith, Jennifer Love Hewitt, and James Coburn appear in what 1993 comedy?', 'answer': 'Sister Act 2: Back in the Habit', 'category': 'Comedies'}, {'question': "Which actor plays Robert, a single dad who has a romance with Amy Adams' character in the Disney film Enchanted?", 'answer': 'Patrick Dempsey', 'category': 'Family'}, {'question': 'The Best Picture winner Parasite was released in what year?', 'answer': '2019', 'category': 'Release Dates'}, {'question': 'Which actor stars as Daniel / John Smith / Number Four in the 2011 film I Am Number Four?', 'answer': 'Alex Pettyfer', 'category': 'Young Adult Adaptations'}, {'question': "Zoey Deutch stars as Samantha Kingston, a young woman that keeps waking up on Cupid's Day in which 2017 film?", 'answer': 'Before I Fall', 'category': 'Young Adult Adaptations'}, {'question': 'What is the name of the small parasitic aliens that travel to other planets inserting themselves into host bodies in the 2013 film The Host?', 'answer': 'Souls', 'category': 'Young Adult Adaptations'}, {'question': 'Which 2015 YA film features an Erudite leader named Jeanine and her mind-controlled Dauntless soldiers?', 'answer': 'The Divergent Series: Insurgent', 'category': 'Young Adult Adaptations'}, {'question': 'What 90s teenage rom-com had the tagline "How do I loathe thee? Let me count the ways."?', 'answer': '10 Things I Hate About You', 'category': 'Rom-Coms'}, {'question': "What Nickelodeon actress played the character Viola Hastings in 2006's She's the Man?", 'answer': 'Amanda Bynes', 'category': 'Rom-Coms'}, {'question': "Which actress stars as a young chef who encounters magic and finds love in 1999's Simply Irresistible?", 'answer': 'Sarah Michelle Gellar', 'category': 'Rom-Coms'}, {'question': 'Olympia Dukakis won her first Academy Award for her role in this 1987 rom-com directed by Norman Jewison.', 'answer': 'Moonstruck', 'category': 'Rom-Coms'}, {'question': 'Prince won an Oscar for Best Original Song Score for what 1984 film, which included such hits as "Let\'s Go Crazy" and "When Doves Cry"?', 'answer': 'Purple Rain', 'category': 'Scores & Soundtracks'}, {'question': "Who plays Phillip Stuckey, Edward's insensitive lawyer, in Pretty Woman?", 'answer': 'Jason Alexander', 'category': 'Julia Roberts'}, {'question': 'Kodi Smit-McPhee stars as Owen, a young boy who befriends a vampire in this horror remake.', 'answer': 'Let Me In', 'category': 'Remakes & Reboots'}, {'question': 'What unconventional 2001 mystery thriller featuring Guy Pearce has characters named Leonard Shelby, Sammy Jankis, and Teddy Gammell?', 'answer': 'Memento', 'category': 'Mystery'}, {'question': 'Which actor appeared in the crime films Murder in the First, Wild Things, and Mystic River?', 'answer': 'Kevin Bacon', 'category': 'Crime'}, {'question': 'Tye Sheridan plays the lead role of a character who goes by Parzival when inside a digital world known as the OASIS in what 2018 sci-fi action adventure film?', 'answer': 'Ready Player One', 'category': 'Action/Adventure'}, {'question': 'Which actor is in the following films: Bad Times at the El Royale, Only the Brave, and The Mirror Has Two Faces?', 'answer': 'Jeff Bridges', 'category': 'Famous Actors & Actresses'}, {'question': 'Kelly Marie Tran and Daniel Dae Kim lent their voices to what Disney film set in the mystical land of Kumandra?', 'answer': 'Raya and the Last Dragon', 'category': 'Animated'}, {'question': 'Which actor plays Joe Bauers, who is selected to take part in a secret military experiment to put him in hibernation for a year, along with a woman named Rita, in the film Idiocracy?', 'answer': 'Luke Wilson', 'category': 'Comedies'}, {'question': 'Which actor played real-life individuals in the films Lean on Me and Invictus?', 'answer': 'Morgan Freeman', 'category': 'Biopics'}, {'question': 'This 2015 biopic written by Aaron Sorkin and directed by Danny Boyle received two Oscar nominations for Best Actor and Best Supporting Actress.', 'answer': 'Steve Jobs', 'category': 'Oscars'}, {'question': 'Which Paul Thomas Anderson film has the line "I\'m an oilman"?', 'answer': 'There Will Be Blood', 'category': 'Paul Thomas Anderson'}, {'question': 'Which Paul Thomas Anderson film features supporting performances from Benicio del Toro, Maya Rudolph, and Martin Short?', 'answer': 'Inherent Vice', 'category': 'Paul Thomas Anderson'}, {'question': "Who plays Val Dodd, the son of Philip Seymour Hoffman's character in The Master?", 'answer': 'Jesse Plemons', 'category': 'Paul Thomas Anderson'}, {'question': 'How many times has Paul Thomas Anderson been nominated for a Best Director Oscar?', 'answer': '2 (There Will Be Blood, Phantom Thread)', 'category': 'Paul Thomas Anderson'}, {'question': 'What 1960s musical is known for the line "Please sir, I want some more."?', 'answer': 'Oliver!', 'category': 'Classics'}, {'question': 'Who starred as Benjamin Braddock in The Graduate?', 'answer': 'Dustin Hoffman', 'category': 'Classics'}, {'question': "Who starred in the 1960s westerns Hang 'Em High and Paint Your Wagon?", 'answer': 'Clint Eastwood', 'category': 'Classics'}, {'question': "Basil Rathbone plays what famous literary character in 1939's The Hound of the Baskervilles?", 'answer': 'Sherlock Holmes', 'category': 'Classics'}, {'question': 'Who received a Best Supporting Actor nomination for his role as the treacherous John Fitzgerald in the film The Revenant?', 'answer': 'Tom Hardy', 'category': 'Westerns'}, {'question': 'Who plays hitman Jules in Pulp Fiction?', 'answer': 'Samuel L. Jackson', 'category': '1990s'}, {'question': 'Jason Statham plays a hitman named Arthur Bishop in what 2011 action thriller remake from director Simon West?', 'answer': 'The Mechanic', 'category': 'Action/Adventure'}, {'question': "Who made their directorial debut with the 1997 film Eve's Bayou?", 'answer': 'Kasi Lemmons', 'category': 'Black Cinema'}, {'question': 'Donald Moffat plays corrupt U.S. President Bennett in what 1990s spy action thriller directed by Phillip Noyce?', 'answer': 'Clear and Present Danger', 'category': 'Spy'}, {'question': 'You\'ll find the song "One Song Glory" in what 2005 movie adaptation of a Broadway hit, featuring Rosario Dawson and Jesse L. Martin?', 'answer': 'Rent', 'category': 'Musicals'}, {'question': 'Who stars opposite Ben Stiller in the 2000s rom-com Along Came Polly as a free-spirited woman who has a blind ferret as a pet?', 'answer': 'Jennifer Aniston', 'category': 'Rom-Coms'}, {'question': 'Queen Latifah plays the lead role of Gina Norris in this 2005 spin-off of the Barbershop franchise.', 'answer': 'Beauty Shop', 'category': 'Black Cinema'}, {'question': 'Which acclaimed filmmaker directed Cary Grant in the 1941 film Suspicion?', 'answer': 'Alfred Hitchcock', 'category': 'Directors'}, {'question': 'Charlize Theron stars as Lorraine Broughton, a top-level MI6 field agent, in what 2017 film from director David Leitch?', 'answer': 'Atomic Blonde', 'category': 'Spy'}, {'question': 'Ryan Gosling, Rachel McAdams, and James Garner star in this 2004 film based on a novel by Nicholas Sparks.', 'answer': 'The Notebook', 'category': '2000s'}, {'question': 'What 2018 comedy film features supporting turns from Lamorne Morris, Michael C. Hall, Kyle Chandler, and Jesse Plemons?', 'answer': 'Game Night', 'category': 'Comedies'}, {'question': 'What 2010s sci-fi film features supporting performances from Jessica Chastain, Ellen Burstyn, and Topher Grace?', 'answer': 'Interstellar', 'category': 'Fantasy/Sci-Fi'}, {'question': 'The Devil Made Me Do It is the third film in what horror series starring Vera Farmiga and Patrick Wilson?', 'answer': 'The Conjuring', 'category': 'New Releases'}, {'question': 'Which actor appears in the films The Last Temptation of Christ, Twin Peaks: Fire Walk with Me, and Zoolander?', 'answer': 'David Bowie', 'category': 'N/A'}, {'question': 'Which Disney animated film has the songs "Two Worlds", "A Wondrous Place", and "Son of Man" in its soundtrack?', 'answer': 'Tarzan', 'category': 'Disney'}, {'question': 'What famous singer narrates the Sleepy Hollow segment in the film The Adventures of Ichabod and Mr. Toad?', 'answer': 'Bing Crosby', 'category': 'Disney'}, {'question': 'What live-action Disney film stars Alexis Bledel, about a young woman who falls in love with a young man who is from a family of immortals?', 'answer': 'Tuck Everlasting', 'category': 'Disney'}, {'question': 'In what classic 1950s era animated Disney film does the main villain shoot, and apparently kill, a man who is singing an annoying song?', 'answer': 'Peter Pan', 'category': 'Disney'}, {'question': "Who starred as the lead role Jim Garrison in 1991's JFK?", 'answer': 'Kevin Costner', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'Which actress plays the character Eva Ansley in the film Just Mercy?', 'answer': 'Brie Larson', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'George Clooney stars as a "fixer" who works for a prominent law firm in what 2000s legal thriller?', 'answer': 'Michael Clayton', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'What 90s legal thriller is known for the line "Yes, they deserved to die and I hope they burn in hell!"?', 'answer': 'A Time to Kill', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'In Gone in 60 Seconds, which actress plays Sara Wayland, who helps Memphis steal cars?', 'answer': 'Angelina Jolie', 'category': 'Crime'}, {'question': 'Who plays scientist and inventor Wayne Szalinski in Honey, I Shrunk the Kids?', 'answer': 'Rick Moranis', 'category': 'Family'}, {'question': 'Who won an Oscar for her performance in the film I, Tonya?', 'answer': 'Allison Janney', 'category': 'Biopics'}, {'question': 'Which Ben Affleck directed film won the Best Picture Oscar in 2013?', 'answer': 'Argo', 'category': 'Oscars'}, {'question': 'What screen legend played the lead role in The Russia House, about a British publisher who unexpectedly finds himself working for British intelligence to investigate people in Russia?', 'answer': 'Sean Connery', 'category': 'Thriller'}, {'question': "Robin Williams stars in this 1998 fantasy film about a man's journey through the afterlife to reunite with his wife after he dies.", 'answer': 'What Dreams May Come', 'category': '1990s'}, {'question': 'What horror franchise has featured performances from Danny Glover, Sean Patrick Flanery, and Chris Rock?', 'answer': 'Saw (in Saw, 3D, Spiral)', 'category': 'Horror/Thriller'}, {'question': 'What Oscar-winning 1980s film has the tagline "The man... The music... The madness... The murder..."?', 'answer': 'Amadeus', 'category': 'Dramas'}, {'question': 'Who received an Oscar nomination for playing Marilyn Monroe in the film My Week with Marilyn?', 'answer': 'Michelle Williams', 'category': 'Biopics'}, {'question': "In what film in the James Bond franchise will you find Sean Connery's 007 attempting to stop a devious scheme to raid Fort Knox?", 'answer': 'Goldfinger', 'category': 'Action/Adventure'}, {'question': "Which rom-com franchise featured the title character's diary, found her on the edge of reason, and concluded with her having a baby?", 'answer': 'Bridget Jones', 'category': 'Comedies'}, {'question': 'What is the name of the clumsy dwarf who never speaks in the Disney classic Snow White and the Seven Dwarfs?', 'answer': 'Dopey', 'category': 'Animated'}, {'question': "Which rapper appeared in the films Smokin' Aces, Selma, and The Hate U Give?", 'answer': 'Common', 'category': 'Black Cinema'}, {'question': 'How many comedy films did Gene Wilder and Richard Pryor star in together?', 'answer': '4 (Silver Streak; Stir Crazy; See No Evil, Hear No Evil; Another You)', 'category': 'N/A'}, {'question': 'Harrison Ford played the Tom Clancy character Jack Ryan for the first time in what 1992 film?', 'answer': 'Patriot Games', 'category': 'Harrison Ford'}, {'question': "Who plays Sondra Walker, Ford's wife who mysteriously goes missing, in the film Frantic?", 'answer': 'Betty Buckley', 'category': 'Harrison Ford'}, {'question': "Who plays Harrison Ford's son, Percy Dolarhyde, in Cowboys & Aliens?", 'answer': 'Paul Dano', 'category': 'Harrison Ford'}, {'question': 'In Blade Runner 2049, Agent K tracks down Rick Deckard in the ruins of what U.S. city?', 'answer': 'Las Vegas', 'category': 'Harrison Ford'}, {'question': 'Michael Peña and Chloë Grace Moretz star in what 2021 family-based film based on a cartoon series?', 'answer': 'Tom & Jerry', 'category': 'New Releases'}, {'question': 'Aldis Hodge plays Jim Brown in what biopic also featuring Michael Imperioli and Leslie Odom Jr.?', 'answer': 'One Night in Miami...', 'category': 'New Releases'}, {'question': "Which actress plays the female lead Kat in Christopher Nolan's Tenet?", 'answer': 'Elizabeth Debicki', 'category': 'New Releases'}, {'question': 'Who directed the 2020 horror film Freaky?', 'answer': 'Christopher Landon', 'category': 'New Releases'}, {'question': 'Sharon Stone plays Catherine Tramell, a suspected killer, and Michael Douglas plays police detective Nick Curran in this 1992 thriller.', 'answer': 'Basic Instinct', 'category': 'Thriller'}, {'question': 'Alec Baldwin, Bill Murray, Rachel McAdams, and Danny McBride all appear in what 2015 romantic film?', 'answer': 'Aloha', 'category': 'Romance'}, {'question': 'What famous 1970s family film co-stars such actors as Peter Ostrum, Roy Kinnear, Julie Dawn Cole, and Leonard Stone?', 'answer': 'Willy Wonka & the Chocolate Factory', 'category': 'Family'}, {'question': 'Which actor stars as Edward Snowden in the 2016 Oliver Stone film Snowden?', 'answer': 'Joseph Gordon-Levitt', 'category': 'Biopics'}, {'question': 'Joel Kinnaman and Gary Oldman star in what 2014 remake of an 80s sci-fi action film?', 'answer': 'RoboCop', 'category': 'Remakes & Reboots'}, {'question': 'Which actor appeared in the 90s action films Tombstone, Navy SEALs, and Trespass?', 'answer': 'Bill Paxton', 'category': '1990s'}, {'question': 'What famous 1989 rom-com has the line "It is so nice when you can sit with someone and not have to talk."?', 'answer': 'When Harry Met Sally...', 'category': 'Rom-Coms'}, {'question': 'Which horror legend directed the films Shocker, Deadly Blessing, and Cursed?', 'answer': 'Wes Craven', 'category': 'Horror/Thriller'}, {'question': 'Which musician plays the lead role of George Newman in the film UHF?', 'answer': '"Weird Al" Yankovic', 'category': 'Comedies'}, {'question': 'John Wayne starred in the westerns Chisum, Big Jake, and The Cowboys during what decade?', 'answer': 'the 1970s', 'category': 'Westerns'}, {'question': 'Which actor received Oscar nominations for his performances in the films Dick Tracy, Glengarry Glen Ross, and The Irishman?', 'answer': 'Al Pacino', 'category': 'Oscars'}, {'question': 'Which wrestler made his acting debut in TMNT II: Secret of the Ooze in the role of Super Shredder?', 'answer': 'Kevin Nash', 'category': 'Wrestlers in Film'}, {'question': 'Early in the 2000 comedy Ready to Rumble, fictional wrestling champ Jimmy King loses his title to what real-life wrestler?', 'answer': 'Diamond Dallas Page', 'category': 'Wrestlers in Film'}, {'question': "The Big Show appears as Captain Insano, the wrestling hero of Adam Sandler's character, in what 1990s film?", 'answer': 'The Waterboy', 'category': 'Wrestlers in Film'}, {'question': "What is the name of Randy the Ram's finishing move, which is a diving headbutt, in the film The Wrestler?", 'answer': 'the Ram Jam', 'category': 'Wrestlers in Film'}, {'question': 'In what film does Tom Hanks play a failed American sales rep who travels to Saudi Arabia to sell to a wealthy monarch?', 'answer': 'A Hologram for the King', 'category': 'Tom Hanks'}, {'question': 'In what film does Tom Hanks\' character play the song "Heart and Soul" by jumping on a giant toy piano?', 'answer': 'Big', 'category': 'Tom Hanks'}, {'question': 'What 2002 movie features both Tom Hanks and Daniel Craig?', 'answer': 'Road to Perdition', 'category': 'Tom Hanks'}, {'question': 'Tom Hanks plays the character Sam Baldwin in what 1990s film?', 'answer': 'Sleepless in Seattle', 'category': 'Tom Hanks'}, {'question': 'What Oscar-winning film marked the first collaboration of director Robert Zemeckis with Tom Hanks?', 'answer': 'Forrest Gump', 'category': 'Tom Hanks'}, {'question': 'Which recent actor-turned-director became the first African American to win the Oscar for Best Original Screenplay?', 'answer': 'Jordan Peele (for Get Out)', 'category': 'Oscars'}, {'question': 'The 2007 musical Across the Universe features songs originally performed by what band?', 'answer': 'the Beatles', 'category': 'Scores & Soundtracks'}, {'question': "In which film does Robert Downey Jr.'s character have a dream about his wife giving birth and a grizzly bear chewing through the umbilical cord?", 'answer': 'Due Date', 'category': '2010s'}, {'question': 'Which action star has played the characters Lincoln Hawk, Gabe Walker, and John Spartan?', 'answer': 'Sylvester Stallone (in Over the Top, Cliffhanger, Demolition Man)', 'category': 'Action/Adventure'}, {'question': 'What comedy starring Jordan Peele and Keegan-Michael Key has the tagline "Kitten, please."?', 'answer': 'Keanu', 'category': 'Black Cinema'}, {'question': 'Which actor stars as a dad named Ben Cooper in the film Alexander and the Terrible, Horrible, No Good, Very Bad Day?', 'answer': 'Steve Carell', 'category': 'Family'}, {'question': 'Which action movie franchise had entries directed by Terence Young, Roger Spottiswoode, and Michael Apted?', 'answer': 'James Bond (with Dr. No, From Russia with Love, Thunderball; Tomorrow Never Dies; The World Is Not Enough)', 'category': 'Directors'}, {'question': 'Which actress plays teenager Mattie Ross in the 2010 film True Grit?', 'answer': 'Hailee Steinfeld', 'category': 'Remakes & Reboots'}, {'question': 'Ben Affleck, Chris Hemsworth, Justin Long, and Chris Jericho appear in which 2019 comedy?', 'answer': 'Jay and Silent Bob Reboot', 'category': 'Comedies'}, {'question': 'What year saw the release of the rom-coms The DUFF, The Wedding Ringer, and Trainwreck?', 'answer': '2015', 'category': 'Release Dates'}, {'question': 'Which Oscar-nominated actor plays horse trainer Lucien Laurin alongside Diane Lane in the film Secretariat?', 'answer': 'John Malkovich', 'category': 'Sports'}, {'question': 'What was the title of the feature film that Robert Rodriguez directed as a part of 2007s Grindhouse?', 'answer': 'Planet Terror', 'category': 'Robert Rodriguez'}, {'question': 'Which Oscar-winning actor plays the character Jackie Boy in Sin City?', 'answer': 'Benicio del Toro', 'category': 'Robert Rodriguez'}, {'question': 'Which actress plays young agent Carmen Cortez in the Spy Kids films?', 'answer': 'Alexa Vega', 'category': 'Robert Rodriguez'}, {'question': 'What horror movie screenwriter penned the script for the 1998 Robert Rodriguez film The Faculty?', 'answer': 'Kevin Williamson', 'category': 'Robert Rodriguez'}, {'question': "Who stars as former police detective Scottie Ferguson in Alfred Hitchcock's Vertigo?", 'answer': 'James Stewart', 'category': 'Thriller'}, {'question': "In which 2007 thriller does Kevin Bacon play a father who takes the law into his own hands to avenge his son's murder?", 'answer': 'Death Sentence', 'category': 'Thriller'}, {'question': "Who plays the well-dressed, fast-talking hotshot Freddy Lounds in Michael Mann's Manhunter?", 'answer': 'Stephen Lang', 'category': 'Thriller'}, {'question': 'In Unbreakable, the janitor that commits a home invasion is wearing what color jumpsuit?', 'answer': 'orange', 'category': 'Thriller'}, {'question': 'Donald Glover and Beyoncé lent their voices to what 2019 Disney remake?', 'answer': 'The Lion King', 'category': 'Family'}, {'question': 'Mackenzie Davis plays the orange-haired prostitute Mariette in what 2010s sci-fi sequel?', 'answer': 'Blade Runner 2049', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Pete Davidson stars as Scott Carlin, an aspiring tattoo artist, in what 2020 Judd Apatow film?', 'answer': 'The King of Staten Island', 'category': 'New Releases'}, {'question': 'Which film saw Brad Pitt receive his first Oscar nomination for Lead Actor?', 'answer': 'The Curious Case of Benjamin Button', 'category': 'Brad Pitt'}, {'question': 'Which famous child actor played an unhinged boy named Henry in the 1993 film The Good Son?', 'answer': 'Macaulay Culkin', 'category': 'Thriller'}, {'question': 'Kenneth Johnson directed which DC Comics film?', 'answer': 'Steel', 'category': 'Comic Book'}, {'question': 'What is the title of the first film released in the 2021 Fear Street trilogy?', 'answer': 'Fear Street Part One: 1994', 'category': 'Horror'}, {'question': 'Which Oscar-winning actress appears in the films Primal Fear, North Country, and Promised Land?', 'answer': 'Frances McDormand', 'category': 'Dramas'}, {'question': 'Aaron Taylor-Johnson plays what famous rock musician during his teenage years before he achieved fame in the biopic Nowhere Boy?', 'answer': 'John Lennon', 'category': 'Biopics'}, {'question': 'What film features the voice talents of Christina Hendricks, Annie Potts, Tony Hale, and Keanu Reeves?', 'answer': 'Toy Story 4', 'category': 'Animated'}, {'question': 'Which Oscar-winning actor appears in the films Edward Scissorhands, The Rocketeer, and Argo?', 'answer': 'Alan Arkin', 'category': 'Famous Actors & Actresses'}, {'question': 'What actor plays the character Aldous Snow in the films Forgetting Sarah Marshall and Get Him to the Greek?', 'answer': 'Russell Brand', 'category': 'Comedies'}, {'question': 'John Singleton directed this 1995 drama about a group of incoming freshmen at Columbus University starring Omar Epps.', 'answer': 'Higher Learning', 'category': 'Black Cinema'}, {'question': 'Geoffrey Rush and Helena Bonham Carter received Oscar nominations for their performances in what historical drama?', 'answer': "The King's Speech", 'category': 'Oscars'}, {'question': 'Which actor appears in the films Speed, Twister, and Freaky?', 'answer': 'Alan Ruck', 'category': 'N/A'}, {'question': 'James Stewart won an Oscar for what 1940 film that co-starred Katharine Hepburn and Cary Grant?', 'answer': 'The Philadelphia Story', 'category': 'James Stewart'}, {'question': 'Jefferson Smith takes on what public office in Mr. Smith Goes to Washington?', 'answer': 'a senator', 'category': 'James Stewart'}, {'question': 'Which actor plays the titular outlaw Liberty Valance in The Man Who Shot Liberty Valance?', 'answer': 'Lee Marvin', 'category': 'James Stewart'}, {'question': 'James Stewart stars alongside Ron Howard, Lauren Bacall, and John Wayne in what 1976 western?', 'answer': 'The Shootist', 'category': 'James Stewart'}, {'question': "Who plays April O'Neil in Teenage Mutant Ninja Turtles: The Secret of the Ooze?", 'answer': 'Paige Turco', 'category': 'Teenage Mutant Ninja Turtles'}, {'question': 'Kevin Nash portrays the villainous Super Shredder in what film?', 'answer': 'Teenage Mutant Ninja Turtles II: The Secret of the Ooze', 'category': 'Teenage Mutant Ninja Turtles'}, {'question': "To date, how many actresses have brought April O'Neil to life on the big screen, both in live action and animation?", 'answer': "4 (Judith Hoag in 1990's Teenage Mutant Ninja Turtles; Paige Turco in II, III; Sarah Michelle Gellar in TMNT; Megan Fox in 2014's Teenage Mutant Ninja Turtles, Out of the Shadows)", 'category': 'Teenage Mutant Ninja Turtles'}, {'question': 'In Teenage Mutant Ninja Turtles (1990), what is the first word the Turtles ever spoke?', 'answer': 'pizza', 'category': 'Teenage Mutant Ninja Turtles'}, {'question': 'David Lynch received his first Academy Award nomination for Best Director for which film?', 'answer': 'The Elephant Man', 'category': 'Directors'}, {'question': 'Which animated film features the vocal talents of Tony Shalhoub, Owen Wilson, and Chris Cooper?', 'answer': 'Cars 3', 'category': 'N/A'}, {'question': "Who appeared in the films Red Tails, 2015's Fantastic Four, and Just Mercy?", 'answer': 'Michael B. Jordan', 'category': 'N/A'}, {'question': 'What franchise includes performances from Tom Atkins, Thomas Ian Nicholas, Judy Greer, and Michelle Williams?', 'answer': "Halloween (in III, Resurrection, 2018's Halloween, H20)", 'category': 'N/A'}, {'question': 'What year saw the release of the films Independence Day: Resurgence, Neighbors 2, and Barbershop: The Next Cut?', 'answer': '2016', 'category': 'N/A'}, {'question': "What actress appears in the films The Lion in Winter, Guess Who's Coming to Dinner, and Bringing Up Baby?", 'answer': 'Katharine Hepburn', 'category': 'N/A'}, {'question': 'Tom Hanks provides the voice of six different characters in what 2004 animated Christmas film?', 'answer': 'The Polar Express', 'category': 'Tom Hanks'}, {'question': "Which James Bond actor plays a ruthless spy called Osnard in 2001's The Tailor of Panama?", 'answer': 'Pierce Brosnan', 'category': 'Spy'}, {'question': 'Ron Underwood directed what 1998 family adventure movie which was a remake of a 1949 film?', 'answer': 'Mighty Joe Young', 'category': 'Disney'}, {'question': 'Which popstar plays Deena Jones, the leader of a 1960s girl group in the film Dreamgirls?', 'answer': 'Beyoncé', 'category': 'Musicals'}, {'question': 'Which Oscar-nominated actress plays Glinda in the 2013 film Oz the Great and Powerful?', 'answer': 'Michelle Williams', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Tom Hanks co-stars alongside Dan Aykroyd in what 1987 comedy that follows Sgt. Joe Friday and his new partner Det. Pep Streebek?', 'answer': 'Dragnet', 'category': '1980s'}, {'question': 'Mike Lowrey and Marcus Burnett are the main characters of what buddy cop franchise?', 'answer': 'Bad Boys', 'category': 'Action/Adventure'}, {'question': 'What Academy Award winning actor plays notorious mob boss Al Capone in the film The Untouchables?', 'answer': 'Robert De Niro', 'category': 'Dramas'}, {'question': "What famous musician brought Michael Myers back to the big screen by directing 2007's Halloween?", 'answer': 'Rob Zombie', 'category': 'Horror/Thriller'}, {'question': 'What actress stars in the films Foul Play, Wildcats, and Bird on a Wire?', 'answer': 'Goldie Hawn', 'category': 'Famous Actors & Actresses'}, {'question': 'Jason Bateman appears as Special Agent Lorenzo Zoil in this 2011 sci-fi comedy that also features Kristen Wiig, Simon Pegg, and Sigourney Weaver.', 'answer': 'Paul', 'category': 'Comedies'}, {'question': 'What 2000s Oscar-winning crime film has the tagline "Cops or Criminals. When you\'re facing a loaded gun what\'s the difference?"?', 'answer': 'The Departed', 'category': 'Crime'}, {'question': 'Which actor stars as Lieutenant Chris Burnett in the 2001 war film Behind Enemy Lines?', 'answer': 'Owen Wilson', 'category': 'War'}, {'question': 'Which actor appears in the films Transcendence, Now You See Me, and Ted 2?', 'answer': 'Morgan Freeman', 'category': 'N/A'}, {'question': 'In which film does Clint Eastwood play Gunner Sgt. Thomas Highway, who is nearing mandatory retirement from the Marine Corps?', 'answer': 'Heartbreak Ridge', 'category': '1980s'}, {'question': 'Which actor stars opposite Barbra Streisand in the 1987 film Nuts as a public defender named Aaron Levinsky, who is assigned to take her case?', 'answer': 'Richard Dreyfuss', 'category': '1980s'}, {'question': 'In which acclaimed 1980s film will you hear Jack Nicholson say "Do I ice her? Do I marry her?"?', 'answer': "Prizzi's Honor", 'category': '1980s'}, {'question': 'Name the 80s comedy that has the tagline "They\'re not just getting rich... They\'re getting even.".', 'answer': 'Trading Places', 'category': '1980s'}, {'question': "Which actor plays Frank, the friend who gets in an epic fist fight with Roddy Piper's character in They Live?", 'answer': 'Keith David', 'category': 'Wrestlers in Film'}, {'question': 'Who directed John Cena and Aaron Taylor-Johnson in the 2017 war film The Wall?', 'answer': 'Doug Liman', 'category': 'Wrestlers in Film'}, {'question': 'Who starred in the films 12 Rounds and Legendary?', 'answer': 'John Cena', 'category': 'Wrestlers in Film'}, {'question': "What is the name of Immortan Joe's son, played by wrestler Nathan Jones, in the film Mad Max: Fury Road?", 'answer': 'Rictus Erectus', 'category': 'Wrestlers in Film'}, {'question': 'Jerry Goldsmith received a Best Original Score Oscar nomination for which 1979 epic sci-fi film?', 'answer': 'Star Trek: The Motion Picture', 'category': 'Scores & Soundtracks'}, {'question': 'Colin Farrell, Danny DeVito, and Michael Keaton appear in what live-action Disney remake?', 'answer': 'Dumbo', 'category': 'Disney'}, {'question': "Which actress stars as a teen named Needy, opposite Megan Fox as Jennifer, in the 2009 horror film Jennifer's Body?", 'answer': 'Amanda Seyfried', 'category': '2000s'}, {'question': 'Who plays Gordie LaChance, the young protagonist who dreams of being a writer in the film Stand by Me?', 'answer': 'Wil Wheaton', 'category': 'Coming of Age'}, {'question': 'Who plays Baron Victor Frankenstein, who creates a monster, in the 1957 Hammer film The Curse of Frankenstein?', 'answer': 'Peter Cushing', 'category': 'Horror'}, {'question': 'Julia Roberts stars in what 2000s Steven Soderbergh film that follows a day in the life of some Hollywood players before a birthday party?', 'answer': 'Full Frontal', 'category': 'Julia Roberts'}, {'question': 'What crime trilogy features performances from Andy García, Robert De Niro, and Robert Duvall?', 'answer': 'The Godfather', 'category': 'Crime'}, {'question': 'What Academy Award winning actor plays failed Minor League Baseball player Merrill Hess in the film Signs?', 'answer': 'Joaquin Phoenix', 'category': '2000s'}, {'question': 'Who directed Tom Cruise in Mission: Impossible 2?', 'answer': 'John Woo', 'category': 'Action/Adventure'}, {'question': 'How many films in the Halloween franchise were released in the 1990s?', 'answer': '2 (The Curse of Michael Myers, H20)', 'category': 'Horror/Thriller'}, {'question': "Which actor lent his voice to the films Homeward Bound: The Incredible Journey, 1999's Stuart Little, and Atlantis: The Lost Empire?", 'answer': 'Michael J. Fox', 'category': 'Famous Actors & Actresses'}, {'question': 'Who directed the films Jojo Rabbit and The Hunt for the Wilderpeople?', 'answer': 'Taika Waititi', 'category': 'Comedies'}, {'question': 'Andy Tennant directed what 2005 film about a date doctor in New York City, which features performances from Eva Mendes and Michael Rapaport?', 'answer': 'Hitch', 'category': 'Rom-Coms'}, {'question': "Who stars as Ross Jennings, a doctor with a strong fear of spiders, in 1990's Arachnophobia?", 'answer': 'Jeff Daniels', 'category': '1990s'}, {'question': "In The Social Network, who plays Mark Zuckerberg's ex-girlfriend Erica Albright?", 'answer': 'Rooney Mara', 'category': 'David Fincher'}, {'question': 'In Fight Club, we see the Narrator and Tyler Durden first meet in what type of location?', 'answer': 'an airplane', 'category': 'David Fincher'}, {'question': "Who plays Daisy, the love of Benjamin's life in The Curious Case of Benjamin Button?", 'answer': 'Cate Blanchett', 'category': 'David Fincher'}, {'question': 'Which David Fincher film features performances from Pete Postlethwaite, Charles S. Dutton, and Lance Henriksen?', 'answer': 'Alien 3', 'category': 'David Fincher'}, {'question': 'Jared Leto, Dwight Yoakam, and which other actor play burglars in Panic Room?', 'answer': 'Forest Whitaker', 'category': 'David Fincher'}, {'question': 'Hailee Steinfeld and Woody Harrelson star in what 2016 coming-of-age film about an awkward girl named Nadine who is trying to find her way through high school?', 'answer': 'The Edge of Seventeen', 'category': 'Coming of Age'}, {'question': "In Dazed and Confused, what actor plays the character O'Bannion, who is repeating his senior year and is making it his mission to paddle some incoming freshmen?", 'answer': 'Ben Affleck', 'category': 'Coming of Age'}, {'question': 'In Stand by Me, Teddy had previously had what part of his body burned on a stove by his father?', 'answer': 'his ear', 'category': 'Coming of Age'}, {'question': "Who played June George, Regina's irresponsible mother, in Mean Girls?", 'answer': 'Amy Poehler', 'category': 'Coming of Age'}, {'question': 'Who starred as the character Gary in the 2011 film The Muppets?', 'answer': 'Jason Segel', 'category': 'Remakes & Reboots'}, {'question': "Bruce Campbell played Ash Williams for the third time when he's sent back in time by the Necronomicon in this 1993 film from director Sam Raimi.", 'answer': 'Army of Darkness', 'category': 'Horror'}, {'question': 'Which actor portrays Jamie, a writer who falls in love with his Portuguese housekeeper in Love Actually?', 'answer': 'Colin Firth', 'category': 'Rom-Coms'}, {'question': 'How many times has Damien Chazelle been nominated for Best Director?', 'answer': '1 (for La La Land)', 'category': 'Oscars'}, {'question': 'What 1995 crime film is known for the line "I do what I do best, I take scores. You do what you do best, try to stop guys like me."?', 'answer': 'Heat', 'category': '1990s'}, {'question': 'Nathan Fillion, Bill Hader, and Aubrey Plaza all lent their voices to what Pixar film?', 'answer': 'Monsters University', 'category': 'Pixar'}, {'question': 'Hellbound is the subtitle of the 1988 sequel to what 1987 horror film?', 'answer': 'Hellraiser', 'category': 'Horror'}, {'question': 'What year saw the release of the Oscar-nominated films Hacksaw Ridge and Hidden Figures?', 'answer': '2016', 'category': 'Release Dates'}, {'question': 'Which actor appeared in the films Gattaca, Road to Perdition, and The Imaginarium of Doctor Parnassus?', 'answer': 'Jude Law', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What famous film is known for the line "It rubs the lotion on its skin or else it gets the hose again."?', 'answer': 'The Silence of the Lambs', 'category': 'Thriller'}, {'question': 'Which actor has played the characters Sherlock Holmes, Federal Wildlife Marshal Willenholly, and Jacobim Mugatu?', 'answer': 'Will Ferrell (in Holmes & Watson; Jay and SIlent Bob Strike Back; Zoolander, Zoolander 2)', 'category': 'Famous Actors & Actresses'}, {'question': 'What comedy featuring Bill Murray has the tagline "You wouldn\'t want to meet these pinheads in an alley."?', 'answer': 'Kingpin', 'category': 'Comedies'}, {'question': "Which actor appeared in the Disney films Angels in the Outfield, Operation Dumbo Drop, and 2006's The Shaggy Dog?", 'answer': 'Danny Glover', 'category': 'Disney'}, {'question': 'Which Arnold Schwarzenegger action film is a remake of the French film La Totale!?', 'answer': 'True Lies', 'category': 'Remakes & Reboots'}, {'question': 'Which actor appeared in the 90s crime films Ricochet, Casino, and The Usual Suspects?', 'answer': 'Kevin Pollak', 'category': 'N/A'}, {'question': 'What year saw the release of the first film in the Harry Potter series?', 'answer': '2001', 'category': 'Wizarding World'}, {'question': "What character is shown to be the Death Eater who betrayed Harry's parents to Voldemort, resulting in their deaths?", 'answer': 'Peter Pettigrew', 'category': 'Wizarding World'}, {'question': 'In total, how many films in the overall Wizarding World franchise has David Yates directed?', 'answer': '6 (The Order of the Phoenix, The Half-Blood Prince, The Deathly Hallows – Part 1, The Deathly Hallows – Part 2, Fantastic Beasts and Where to Find Them, The Crimes of Grindelwald)', 'category': 'Wizarding World'}, {'question': "What are the objects that are used to store part of a person's soul called in the Harry Potter films?", 'answer': 'Horcruxes', 'category': 'Wizarding World'}, {'question': 'Which actress plays Nagini in Fantastic Beasts: The Crimes of Grindelwald?', 'answer': 'Claudia Kim', 'category': 'Wizarding World'}, {'question': 'Which female character said "People are easiest to read when they are hurting."?', 'answer': 'Queenie Goldstein (in Fantastic Beasts and Where to Find Them)', 'category': 'Wizarding World'}, {'question': "What year saw the release of Michael Bay's Bad Boys?", 'answer': '1995', 'category': 'Release Dates'}, {'question': 'Seth Rogen had the leading role in two 2008 comedies. Zack and Miri Make a Porno was one. Which Judd Apatow produced film was the other?', 'answer': 'Pineapple Express', 'category': 'Release Dates'}, {'question': 'In what year were a Fast & Furious and an XXX film both released?', 'answer': '2017 (with The Fate of the Furious, Return of Xander Cage)', 'category': 'Release Dates'}, {'question': 'What year saw the release of John Wick and Interstellar?', 'answer': '2014', 'category': 'Release Dates'}, {'question': 'What year saw the release of the YA adaptation The Fault in Our Stars?', 'answer': '2014', 'category': 'Release Dates'}, {'question': 'Which year saw releases in the Mad Max, James Bond, and Nightmare on Elm Street franchises?', 'answer': "1985 (with Beyond Thunderdome, A View to a Kill, Freddy's Revenge)", 'category': 'Release Dates'}, {'question': 'What 1980s comedy has the tagline "This summer, Prince Akeem discovers America."?', 'answer': 'Coming to America', 'category': 'Comedies'}, {'question': 'John Candy and Doug E. Doug star in this 1993 Disney sports film about the 1988 Winter Olympics Jamaican bobsled team.', 'answer': 'Cool Runnings', 'category': 'Sports'}, {'question': "Who won an Oscar for playing famous comedienne Fanny Brice in 1968's Funny Girl?", 'answer': 'Barbra Streisand', 'category': 'Biopics'}, {'question': 'William Fichtner plays money launderer Roger Van Zant in what Michael Mann film?', 'answer': 'Heat', 'category': 'Crime'}, {'question': 'Quentin Tarantino has a cameo as an insensitive director in what 1996 film from Spike Lee?', 'answer': 'Girl 6', 'category': 'Quentin Tarantino'}, {'question': 'Denzel Washington plays a British military veteran who turns to a life of crime in what 1989 thriller?', 'answer': 'For Queen and Country', 'category': 'Denzel Washington'}, {'question': 'Who plays Alexander Dane, an actor who plays an alien named Dr. Lazarus on a sci-fi TV show in the film Galaxy Quest?', 'answer': 'Alan Rickman', 'category': 'Fantasy/Sci-Fi'}, {'question': 'The sequels Machete Kills, Before Midnight, and The Hangover Part III were released in which year?', 'answer': '2013', 'category': 'Release Dates'}, {'question': 'Which actor appeared in the films Basic Instinct, Jurassic Park, and Space Jam?', 'answer': 'Wayne Knight', 'category': '1990s'}, {'question': 'Keri Russell appears in which film in the Planet of the Apes franchise?', 'answer': 'Dawn of the Planet of the Apes', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which famous lawman has been played by the actors Henry Fonda, Burt Lancaster, and Kevin Costner?', 'answer': 'Wyatt Earp (in My Darling Clementine, Gunfight at the O.K. Corral, Wyatt Earp)', 'category': 'Westerns'}, {'question': 'What comedy directed by Kevin Smith was released in 1999?', 'answer': 'Dogma', 'category': 'Comedies'}, {'question': 'Which actor received Oscar nominations for his performances in the films JFK and Lincoln?', 'answer': 'Tommy Lee Jones', 'category': 'Oscars'}, {'question': 'What animated franchise features the voice talents of Ian McShane, Gary Oldman, Angelina Jolie, and J. K. Simmons?', 'answer': 'Kung Fu Panda', 'category': 'Animated'}, {'question': "1968's The Producers received two Oscar nominations, resulting in one win for Best Screenplay for Mel Brooks. What was the second nomination it received?", 'answer': 'Best Supporting Actor', 'category': 'Oscars'}, {'question': 'What is the most recent Best Picture winner to not have any nominations for any acting performance?', 'answer': 'Parasite', 'category': 'Oscars'}, {'question': 'For what 2010 film was Australian actress Jacki Weaver nominated for an Oscar?', 'answer': 'Animal Kingdom', 'category': 'Oscars'}, {'question': 'Who was the first African American to be nominated for Best Actress at the Oscars?', 'answer': 'Dorothy Dandridge (for Carmen Jones)', 'category': 'Oscars'}, {'question': 'Which landmark horror film stars Ellen Burstyn, Jason Miller, and Max von Sydow?', 'answer': 'The Exorcist', 'category': 'Horror'}, {'question': 'Which 2011 film was the last to be directed by horror master Wes Craven?', 'answer': 'Scream 4', 'category': 'Horror'}, {'question': "Who plays Gabe, the husband of Lupita Nyong'o's character, as well as his doppelgänger, in the 2019 film Us?", 'answer': 'Winston Duke', 'category': 'Horror'}, {'question': 'Which entry in the Halloween franchise features performances from Malcolm McDowell, Margot Kidder, and Brad Dourif?', 'answer': 'Halloween II (2009)', 'category': 'Horror'}, {'question': 'What Oscar-winning actor plays pimp Drexl Spivey in True Romance?', 'answer': 'Gary Oldman', 'category': 'Brad Pitt'}, {'question': 'Who directed Melissa McCarthy in 2015 film Spy?', 'answer': 'Paul Feig', 'category': 'Spy'}, {'question': 'Jamie Foxx, Kerry Washington, and Regina King star in what 2004 biopic from director Taylor Hackford?', 'answer': 'Ray', 'category': 'Black Cinema'}, {'question': "Will Patton plays sheriff's deputy Frank Hawkins, alongside Andi Matichak and Judy Greer in what 2010s film?", 'answer': 'Halloween (2018)', 'category': 'Horror'}, {'question': 'Keanu Reeves stars opposite Laurence Fishburne and Peter Stormare in which action thriller?', 'answer': 'John Wick: Chapter 2', 'category': 'Action/Adventure'}, {'question': 'Which actor appeared in the 1990s films To Wong Foo, Thanks for Everything! Julie Newmar, Awakenings, and Being Human?', 'answer': 'Robin Williams', 'category': 'Famous Actors & Actresses'}, {'question': 'In which DC film does Batman say "I\'m not going to kill you. I want you to do me a favor. I want you to tell all your friends about me."?', 'answer': 'Batman (1989)', 'category': 'Comic Book'}, {'question': 'Diana Ross, Michael Jackson, and Richard Pryor star in this film adaptation of a Broadway hit.', 'answer': 'The Wiz', 'category': 'Black Cinema'}, {'question': 'How many films in the Home Alone franchise were released during the 1990s?', 'answer': '3 (Home Alone, Lost in New York, 3)', 'category': 'Family'}, {'question': 'What 1990s comedy has the tagline "New Animals. New Adventures. Same Hair."?', 'answer': 'Ace Ventura: When Nature Calls', 'category': 'Comedies'}, {'question': 'Which film composer received nominations for his scores to the films Good Will Hunting, Milk, and Men in Black?', 'answer': 'Danny Elfman', 'category': 'Oscars'}, {'question': 'Who plays the fearsome outlaw Clinch Leatherwood in the western comedy A Million Ways to Die in the West?', 'answer': 'Liam Neeson', 'category': 'Westerns'}, {'question': 'The actors Peter Facinelli, Elizabeth Reaser, and Michael Sheen appear in which YA franchise?', 'answer': 'Twilight', 'category': 'Young Adult Adaptations'}, {'question': 'Which Hunger Games film begins with Katniss, Beetee, and Finnick Odair being taken to a belowground district named District 13 that has been spearheading the rebellion?', 'answer': 'The Hunger Games: Mockingjay – Part 1', 'category': 'Young Adult Adaptations'}, {'question': "In 1983's The Outsiders, what term do the two gangs use to refer to the big, planned fight that they get into with each other?", 'answer': 'a rumble', 'category': 'Young Adult Adaptations'}, {'question': 'How many films were released theatrically in the Divergent series?', 'answer': '3 (Divergent, Insurgent, Allegiant)', 'category': 'Young Adult Adaptations'}, {'question': 'What 2019 film stars Yara Shahidi as a teenager who falls in love while facing deportation?', 'answer': 'The Sun is Also a Star', 'category': 'Young Adult Adaptations'}, {'question': 'Haley Lu Richardson and Cole Sprouse star together in what recent YA film?', 'answer': 'Five Feet Apart', 'category': 'Young Adult Adaptations'}, {'question': 'What was the first collaboration between director George Lucas and actor Harrison Ford?', 'answer': 'American Graffiti', 'category': '1970s'}, {'question': 'Who plays the male lead Oliver in the 1970 romance film Love Story?', 'answer': "Ryan O'Neal", 'category': '1970s'}, {'question': 'Norman Jewison directed what 1973 musical, based on a Broadway hit, which follows the last days of Jesus Christ?', 'answer': 'Jesus Christ Superstar', 'category': '1970s'}, {'question': 'Warren Beatty stars as Joe, a player of what professional sport, in the 1978 comedy fantasy Heaven Can Wait?', 'answer': 'American football', 'category': '1970s'}, {'question': 'Which actress plays Connie Corleone in The Godfather?', 'answer': 'Talia Shire', 'category': '1970s'}, {'question': 'Scatman Crothers provides the voice of a cat named Scat Cat in what 70s Disney animated film?', 'answer': 'The Aristocats', 'category': '1970s'}, {'question': 'Who plays William Foster, a middle-aged man dealing with both unemployment and divorce, in the film Falling Down?', 'answer': 'Michael Douglas', 'category': '1990s'}, {'question': 'In what Pixar film does a dog character say "I have just met you, and I love you."?', 'answer': 'Up', 'category': 'Pixar'}, {'question': 'Which actor stars as J. R. R. Tolkien in the biopic Tolkien?', 'answer': 'Nicholas Hoult', 'category': 'Biopics'}, {'question': 'Who directed the 2018 film Unsane?', 'answer': 'Steven Soderbergh', 'category': 'Horror'}, {'question': 'Which actress appears in the comedies The Internship, Jexi, and Like a Boss?', 'answer': 'Rose Byrne', 'category': 'Comedies'}, {'question': 'Menahem Golan directed Sylvester Stallone, Robert Loggia, and David Mendenhall in what 1987 film?', 'answer': 'Over the Top', 'category': 'Action/Adventure'}, {'question': 'Shirley MacLaine starred in what 1996 drama that was a sequel to the Oscar-winning 1983 film Terms of Endearment?', 'answer': 'The Evening Star', 'category': 'N/A'}, {'question': 'Which actor appeared in the films Godsend, Red Lights, and Hide and Seek?', 'answer': 'Robert De Niro', 'category': 'Horror/Thriller'}, {'question': "You'll find the mysterious and powerful terrorist organization the Syndicate, led by Solomon Lane, in what franchise?", 'answer': 'Mission: Impossible (in Rogue Nation, Fallout)', 'category': 'Action/Adventure'}, {'question': 'Angela Bassett and Laurence Fishburne were nominated for Academy Awards for this 1993 biopic about Tina Turner.', 'answer': "What's Love Got to Do with It", 'category': '1990s'}, {'question': 'What actor appeared in the following three films: JFK, Little Shop of Horrors, and Splash?', 'answer': 'John Candy', 'category': 'Famous Actors & Actresses'}, {'question': 'Who directed the 2019 fantasy adventure The Kid Who Would Be King?', 'answer': 'Joe Cornish', 'category': 'Fantasy/Sci-Fi'}, {'question': 'The comedies Road Trip, Shanghai Noon, and Meet the Parents were released in what year?', 'answer': '2000', 'category': 'Comedies'}, {'question': 'In Godzilla vs. Kong, who plays chief cartographer Dr. Nathan Lind, who charts the mission into the Hollow Earth, using Kong as a guide?', 'answer': 'Alexander Skarsgård', 'category': 'New Releases'}, {'question': 'Who directed the following three films: The Way We Were, The Electric Horseman, and The Firm?', 'answer': 'Sydney Pollack', 'category': 'Directors'}, {'question': 'How many films in the Fast & Furious franchise has Dwayne "The Rock" Johnson appeared in?', 'answer': '5 (in Fast Five, Fast & Furious 6, Furious 7, The Fate of the Furious, Hobbs & Shaw)', 'category': 'N/A'}, {'question': "Which actress co-stars as Bruce Willis' wife in the 1999 rom-com The Story of Us?", 'answer': 'Michelle Pfeiffer', 'category': 'Bruce Willis'}, {'question': 'Bruce Willis plays an unnamed narrator who dresses in a series of outfits, including an Easter Bunny suit, in what 1994 family film?', 'answer': 'North', 'category': 'Bruce Willis'}, {'question': 'Bruce Willis plays the character David Dunn in how many films from director M. Night Shyamalan?', 'answer': '3 (Unbreakable, Split, Glass)', 'category': 'Bruce Willis'}, {'question': "Bruce Willis' character leads an elite Navy SEAL team on a rescue mission into what African country in the film Tears of the Sun?", 'answer': 'Nigeria', 'category': 'Bruce Willis'}, {'question': 'What is the subtitle of the 1992 Twin Peaks film, which was a prequel and a sequel to the TV series?', 'answer': 'Fire Walk with Me', 'category': 'David Lynch'}, {'question': 'The 1999 film The Straight Story follows an elderly man who travels to see his brother on what type of vehicle?', 'answer': 'a lawn mower', 'category': 'David Lynch'}, {'question': 'Which actress appears in the David Lynch films Blue Velvet, Wild at Heart, and Inland Empire?', 'answer': 'Laura Dern', 'category': 'David Lynch'}, {'question': "Which actor stars as an unusual young man named Henry Spencer in David Lynch's debut feature Eraserhead?", 'answer': 'Jack Nance', 'category': 'David Lynch'}, {'question': 'Name one of the actresses that portrayed Mrs. Which, Mrs. Whatsit, or Mrs. Who in the film A Wrinkle in Time.', 'answer': 'Oprah Winfrey, Reese Witherspoon, Mindy Kaling', 'category': 'Disney'}, {'question': 'Which 1980s Best Picture winner stars Robert Redford and Meryl Streep?', 'answer': 'Out of Africa', 'category': '1980s'}, {'question': 'Anton Yelchin, Robert Downey Jr., and Kat Dennings star in what 2008 dramedy from director Jon Poll, about a wealthy teenager who was expelled from several private academies?', 'answer': 'Charlie Bartlett', 'category': 'Coming of Age'}, {'question': 'Who was the first person to win an acting Oscar for a Spielberg film, which was achieved in the 2010s?', 'answer': 'Daniel Day-Lewis (for Lincoln)', 'category': 'Steven Spielberg'}, {'question': "Who played Martin, the unhinged husband of Julia Roberts' character in the 1991 film Sleeping with the Enemy?", 'answer': 'Patrick Bergin', 'category': 'Julia Roberts'}, {'question': 'James Remar plays the character Raiden in what 1997 sequel?', 'answer': 'Mortal Kombat: Annihilation', 'category': 'Martial Arts'}, {'question': 'Which Broadway star voices the character Kristoff in the Frozen films?', 'answer': 'Jonathan Groff', 'category': 'Animated'}, {'question': 'Which actress appears in these three films: Men in Black 3, Replicas, and Star Trek Into Darkness?', 'answer': 'Alice Eve', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What year saw the releases of the films The Rainmaker, Private Parts, and Donnie Brasco?', 'answer': '1997', 'category': 'Release Dates'}, {'question': 'Which actor stars as the titular hero in the 1980s film The Adventures of Buckaroo Banzai Across the 8th Dimension?', 'answer': 'Peter Weller', 'category': 'Action/Adventure'}, {'question': "This 2006 family comedy featuring Owen Wilson and Ricky Gervais takes place centrally in New York City's American Museum of Natural History.", 'answer': 'Night at the Museum', 'category': 'Comedies'}, {'question': "What 2020 film stars Kevin Costner and Diane Lane as a retired sheriff and his wife who set out to find their only grandson after their son's death?", 'answer': 'Let Him Go', 'category': 'Dramas'}, {'question': 'This 2010s sci-fi sports film features performances from Evangeline Lilly, Anthony Mackie, and Kevin Durand.', 'answer': 'Real Steel', 'category': 'Sports'}, {'question': 'Who provides the voice of famous singer Ernesto de la Cruz in Coco?', 'answer': 'Benjamin Bratt', 'category': 'Pixar'}, {'question': "Which actress voices Disgust in Pixar's Inside Out?", 'answer': 'Mindy Kaling', 'category': 'Pixar'}, {'question': 'Geoffrey Rush voices a pelican named Nigel in what 2000s Pixar film?', 'answer': 'Finding Nemo', 'category': 'Pixar'}, {'question': 'Which Pixar film features voice performances by Brad Bird, Will Arnett, Ian Holm, and Brian Dennehy?', 'answer': 'Ratatouille', 'category': 'Pixar'}, {'question': "What 1977 comedy was Ron Howard's feature film directorial debut?", 'answer': 'Grand Theft Auto', 'category': 'Directors'}, {'question': 'Who directed the classic films Stage Fright and The Wrong Man?', 'answer': 'Alfred Hitchcock', 'category': 'Directors'}, {'question': 'What film marked the first collaboration of the Coen Brothers with actor John Goodman?', 'answer': 'Raising Arizona', 'category': 'Directors'}, {'question': "Who directed the 1980s comedy Porky's?", 'answer': 'Bob Clark', 'category': 'Directors'}, {'question': 'What 2017 courtroom drama features performances from Chadwick Boseman, Josh Gad, and Kate Hudson?', 'answer': 'Marshall', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'Which actor appears in the films Bad Santa, Sling Blade, and Stay Tuned?', 'answer': 'John Ritter', 'category': 'Famous Actors & Actresses'}, {'question': 'Which Oscar-winning actress plays a character called the Baroness in the 2021 film Cruella?', 'answer': 'Emma Thompson', 'category': 'New Releases'}, {'question': 'What year saw the releases of the films Moscow on the Hudson and the original Red Dawn?', 'answer': '1984', 'category': 'Release Dates'}, {'question': 'Which actress appears in the films Letters to Juliet, Mamma Mia!, and The Big Wedding?', 'answer': 'Amanda Seyfried', 'category': 'Romance'}, {'question': "Which actress won an Academy Award for playing Mona Lisa Vito alongside Ralph Macchio's Bill Gambini in the 1992 film My Cousin Vinny? ", 'answer': 'Marisa Tomei', 'category': 'Comedies'}, {'question': "Who appeared in the films The Players Club, Breakin' All the Rules, and Dreamgirls?", 'answer': 'Jamie Foxx', 'category': 'Black Cinema'}, {'question': 'This 2010s ensemble film features performances from Ashton Kutcher, Cary Elwes, Jessica Biel, and Robert De Niro,', 'answer': "New Year's Eve", 'category': '2010s'}, {'question': 'Meryl Streep has a small role as Cousin Topsy in what Disney film?', 'answer': 'Mary Poppins Returns', 'category': 'Meryl Streep'}, {'question': 'Who directed Meryl Streep and Anne Hathaway in the film The Devil Wears Prada?', 'answer': 'David Frankel', 'category': 'Meryl Streep'}, {'question': 'In what film was Meryl directed by Woody Allen?', 'answer': 'Manhattan', 'category': 'Meryl Streep'}, {'question': "In the film Little Women, which actor plays Mr. Laurence, who is the father to Timothée Chalamet''s character?", 'answer': 'Chris Cooper', 'category': 'Meryl Streep'}, {'question': 'Which musical artist performed the theme song to the 1996 spoof Spy Hard?', 'answer': '"Weird Al" Yankovic', 'category': 'Spoof'}, {'question': 'What 1980s comedy famously coined the line "These go to eleven."?', 'answer': 'This Is Spinal Tap', 'category': 'Spoof'}, {'question': 'What film opens with a Beach Boys inspired musical number called "Skeet Surfin\'"?', 'answer': 'Top Secret!', 'category': 'Spoof'}, {'question': 'Which actor plays Coconut Pete, operator of a swinging island resort in the 2004 horror comedy Club Dread?', 'answer': 'Bill Paxton', 'category': 'Spoof'}, {'question': 'What 1978 film had the tagline "Just when you thought it was safe to go back to the water."?', 'answer': 'Jaws 2', 'category': '1970s'}, {'question': "Which actor appears in these films: 1995's Village of the Damned, Kingsman: The Secret Service, and Jay and Silent Bob Strike Back?", 'answer': 'Mark Hamill', 'category': 'N/A'}, {'question': 'Which actress appears in the films High Noon and High Society?', 'answer': 'Grace Kelly', 'category': 'N/A'}, {'question': 'Which 2016 animated film features performances from Willem Dafoe and Albert Brooks?', 'answer': 'Finding Dory', 'category': 'N/A'}, {'question': "What year saw the release of the holiday classic It's a Wonderful Life?", 'answer': '1946', 'category': 'N/A'}, {'question': 'Which sci-fi film features performances from Michelle Rodriguez, Zoe Saldana, and Sigourney Weaver?', 'answer': 'Avatar', 'category': 'N/A'}, {'question': 'In Wild Wild West, what type of giant mechanical creature does Dr. Arliss Lovelace create as his ultimate weapon?', 'answer': 'a spider', 'category': 'Westerns'}, {'question': 'You will find Princess Eilonwy and pig keeper named Taran in what 1980s Disney film?', 'answer': 'The Black Cauldron', 'category': 'Animated'}, {'question': 'Which rap star turned actor plays the character of Darius Stone in the XXX franchise?', 'answer': 'Ice Cube (in State of the Union, Return of Xander Cage)', 'category': 'Action/Adventure'}, {'question': 'In what 1994 drama will you hear a character named Bugaloo, played by Marlon Wayans, say "Man, you look like Daffy Duck with his beak shot off."?', 'answer': 'Above the Rim', 'category': 'Black Cinema'}, {'question': 'Who plays the lead role of Hutch Mansell, who fails to defend himself and his family when thieves break into their suburban home, in the film Nobody?', 'answer': 'Bob Odenkirk', 'category': 'New Releases'}, {'question': 'Which Oscar winner provides the voice of Eep, the daughter of the Crood family in the film The Croods?', 'answer': 'Emma Stone', 'category': 'Animated'}, {'question': 'The opening sequence of The Godfather takes place on the day of what type of event?', 'answer': 'a wedding', 'category': 'Dramas'}, {'question': 'Who directed the following films: The Green Mile, The Majestic, and The Mist?', 'answer': 'Frank Darabont', 'category': 'Directors'}, {'question': 'What thriller starring Joel Edgerton and Rebecca Hall has the tagline "The past will be your present"?', 'answer': 'The Gift', 'category': 'Horror/Thriller'}, {'question': 'Which comedic actor appeared in the films Forgetting Sarah Marshall, Adventureland, and Superbad?', 'answer': 'Bill Hader', 'category': 'Comedies'}, {'question': 'What 1999 rom-com co-stars Rachael Leigh Cook and Matthew Lillard?', 'answer': "She's All That", 'category': 'Rom-Coms'}, {'question': 'Norman Jewison directed Sidney Poitier in this Best Picture winning film in which a black police detective is asked to investigate a murder in a racially hostile Southern town.', 'answer': 'In the Heat of the Night', 'category': 'Oscars'}, {'question': 'Which comedic actor appears in these three films: Pitch Perfect, Jexi, and Mike and Dave Need Wedding Dates?', 'answer': 'Adam Devine', 'category': 'N/A'}, {'question': 'In which film does Frances McDormand say the line "we got a shooting, these folks drive by, there\'s a high-speed pursuit, ends here, and then this execution-type deal."?', 'answer': 'Fargo', 'category': 'Frances McDormand'}, {'question': 'Which Oscar-winning actor stars opposite Frances McDormand as NYPD detective Vincent LaMarca in the 2002 film City by the Sea?', 'answer': 'Robert De Niro', 'category': 'Frances McDormand'}, {'question': 'Frances McDormand appears in what film in the Transformers franchise?', 'answer': 'Transformers: Dark of the Moon', 'category': 'Frances McDormand'}, {'question': "Frances McDormand's character lives in what U.S. state at the beginning of Nomadland?", 'answer': 'Nevada', 'category': 'Frances McDormand'}, {'question': 'Frances McDormand and which other actress received Oscar nominations for their performances in the film North Country?', 'answer': 'Charlize Theron', 'category': 'Frances McDormand'}, {'question': 'Frances McDormand was the voice of a character called Momma in which Pixar film?', 'answer': 'The Good Dinosaur', 'category': 'Frances McDormand'}, {'question': 'Which actor plays talented computer engineer Kevin Flynn in Tron?', 'answer': 'Jeff Bridges', 'category': '1980s'}, {'question': 'In The Lost Boys, what is the name of the coastal town that is infested with vampires?', 'answer': 'Santa Carla', 'category': '1980s'}, {'question': "Which actor stars as Carlton Whitfield, who comes up with a shortcut to rise up the corporate ranks in 1987's The Secret of My Success?", 'answer': 'Michael J. Fox', 'category': '1980s'}, {'question': "Who plays villainous Dick Jones in 1987's RoboCop?", 'answer': 'Ronny Cox', 'category': '1980s'}, {'question': 'Which Star Wars actor plays the butler Arthur in the film Dirty Rotten Scoundrels?', 'answer': 'Ian McDiarmid', 'category': '1980s'}, {'question': 'Richard Franklin directed what 1983 horror sequel that included Vera Miles and Robert Loggia?', 'answer': 'Psycho II', 'category': '1980s'}, {'question': 'Which actor stars as the character Nick Campbell, opposite Vince Vaughn, in the 2013 comedy The Internship?', 'answer': 'Owen Wilson', 'category': 'Comedies'}, {'question': 'DiCaprio starred in both The Great Gatsby and The Wolf of Wall Street in the same year. What was the year?', 'answer': '2013', 'category': 'Leonardo DiCaprio'}, {'question': "Who plays Lila Crane, Marion's concerned sister, in 1998's Psycho?", 'answer': 'Julianne Moore', 'category': 'Remakes & Reboots'}, {'question': 'What film features characters named Furiosa and Immortan Joe?', 'answer': 'Mad Max: Fury Road', 'category': 'Action/Adventure'}, {'question': "Which actor appears in the thrillers A Time to Kill, Phone Booth, and 1990's Flatliners?", 'answer': 'Kiefer Sutherland', 'category': 'Thriller'}, {'question': 'Which actor plays Bill in the Kill Bill films?', 'answer': 'David Carradine', 'category': 'Martial Arts'}, {'question': 'What horror franchise features performances from Lena Headey, Frank Grillo, Marisa Tomei, and Josh Lucas?', 'answer': 'The Purge (in The Purge; Anarchy, Election Year; The First Purge; The Forever Purge)', 'category': 'Horror/Thriller'}, {'question': 'How many films were released in the Naked Gun comedy franchise during the 1990s?', 'answer': '2 (The Smell of Fear, The Final Insult)', 'category': '1990s'}, {'question': "Which actress plays John McClane's daughter Lucy in the film Live Free or Die Hard?", 'answer': 'Mary Elizabeth Winstead', 'category': 'Action/Adventure'}, {'question': 'Which comedian stars as Ralph Kramden in the 2005 update of a classic sitcom, The Honeymooners?', 'answer': 'Cedric the Entertainer', 'category': 'Black Cinema'}, {'question': 'Which actor starred in the 1960s comedies The Bellboy, The Ladies Man, and The Nutty Professor?', 'answer': 'Jerry Lewis', 'category': 'Comedies'}, {'question': 'What 2019 film has the line "we see that the doughnut hole has a hole in its center - it is not a doughnut hole at all but a smaller doughnut with its own hole"?', 'answer': 'Knives Out', 'category': 'Mystery'}, {'question': 'Which actor appears in the Star Wars, Planet of the Apes, and Hunger Games franchises?', 'answer': 'Woody Harrelson (in Solo; War for the Planet of the Apes; The Hunger Games, Catching Fire, Mockingjay – Part 1, Mockingjay – Part 2)', 'category': 'Famous Actors & Actresses'}, {'question': 'Which actor lent his voice to the animated films Rango, Monsters University, and Ralph Breaks the Internet?', 'answer': 'Alfred Molina', 'category': 'N/A'}, {'question': 'What 1960 historical western epic did John Wayne both star in and direct?', 'answer': 'The Alamo', 'category': 'Classics'}, {'question': "Which actress stars as the character Melanie Daniels in Alfred Hitchcock's The Birds?", 'answer': 'Tippi Hedren', 'category': 'Classics'}, {'question': "You'll see the famous scene of Charlie Chaplin attempting to eat a shoe in which silent comedy?", 'answer': 'The Gold Rush', 'category': 'Classics'}, {'question': 'Which famous historical monarch was played in classic films by the actors Charles Laughton, Robert Shaw, and Richard Burton?', 'answer': 'Henry VIII (in The Private Life of Henry VIII, A Man for All Seasons, Anne of the Thousand Days)', 'category': 'Classics'}, {'question': "Which actress plays Ms. B. Haven, Mr. Freeze's assistant?", 'answer': 'Vivica A. Fox (in Batman & Robin)', 'category': 'Batman'}, {'question': '"Kiss from a Rose" was featured in the soundtrack of what film?', 'answer': 'Batman Forever', 'category': 'Batman'}, {'question': "Which famous actress plays Sugar, one of Two-Face's cohorts in Batman Forever?", 'answer': 'Drew Barrymore', 'category': 'Batman'}, {'question': 'Who provided the score for Batman Forever?', 'answer': 'Elliot Goldenthal', 'category': 'Batman'}, {'question': 'Jon Turteltaub directed what actor in the lead role of Russell "Russ" Duritz in the 2000 film The Kid?', 'answer': 'Bruce Willis', 'category': 'Disney'}, {'question': "In what 2007 film do J. K. Simmons and Allison Janney play Elliot Page's parents?", 'answer': 'Juno', 'category': 'Coming of Age'}, {'question': 'What 2004 comedy had cameo performances from Vinnie Jones, Fred Armisen, and Matt Damon?', 'answer': 'EuroTrip', 'category': '2000s'}, {'question': 'Bruce Willis stars as John Smith, a gunslinger-for-hire dealing with the Mafia during the 1930s, in this film from director Walter Hill.', 'answer': 'Last Man Standing', 'category': 'Action/Adventure'}, {'question': 'What 1993 live-action family film has a 1995 sequel with the subtitle The Adventure Home?', 'answer': 'Free Willy', 'category': 'Family'}, {'question': 'Which Oscar-winning actor plays newspaper owner Joseph Pulitzer in the Disney film Newsies?', 'answer': 'Robert Duvall', 'category': '1990s'}, {'question': 'Who plays real estate agent and father Jim Evers in The Haunted Mansion?', 'answer': 'Eddie Murphy', 'category': 'N/A'}, {'question': "Who directed 1994's Speed?", 'answer': 'Jan de Bont', 'category': 'N/A'}, {'question': 'Which famous actor provides the voice of Sinbad in Sinbad: Legend of the Seven Seas?', 'answer': 'Brad Pitt', 'category': 'N/A'}, {'question': 'Which famous composer received Oscar nominations for his scores to The Poseidon Adventure, Home Alone and The Patriot?', 'answer': 'John Williams', 'category': 'Oscars'}, {'question': 'Which Oscar winner plays Jim Baxter, an L.A. police detective who teams up with Denzel Washington to catch a serial killer in the 2021 film The Little Things?', 'answer': 'Rami Malek', 'category': 'New Releases'}, {'question': 'In which Avengers film does the main villain say "You want to protect the world, but you don\'t want it to change. There\'s only one path to peace... your extinction."?', 'answer': 'Avengers: Age of Ultron', 'category': 'Comic Book'}, {'question': 'Marcus Nispel directed Jared Padalecki and Danielle Panabaker in this 2009 remake of a famous slasher film.', 'answer': 'Friday the 13th', 'category': 'Remakes & Reboots'}, {'question': 'Which actress appears in these three films: The Social Network, The Peanut Butter Falcon, and The High Note?', 'answer': 'Dakota Johnson', 'category': 'Dramas'}, {'question': 'In what 2003 comedy will you find the characters of Mitch "The Godfather" Martin, Bernard "Beanie" Campbell, and Frank "The Tank" Richard?', 'answer': 'Old School', 'category': 'Comedies'}, {'question': 'How many films were released in the Beverly Hills Cop franchise during the 1980s?', 'answer': '2 (Beverly Hills Cop, II)', 'category': '1980s'}, {'question': "Which actor appears in these three action films: Déjà Vu, Escape Plan, and 2002's The Count of Monte Cristo?", 'answer': 'Jim Caviezel', 'category': 'Action/Adventure'}, {'question': 'Which animated film franchise features the voice talents of David Tennant, Craig Ferguson, and Cate Blanchett?', 'answer': 'How to Train Your Dragon', 'category': 'N/A'}, {'question': 'Who plays Jack, the lamplighter, in Mary Poppins Returns?', 'answer': 'Lin-Manuel Miranda', 'category': 'Emily Blunt'}, {'question': "Who plays Matt Graver, leader of a special CIA task force that Emily Blunt's character joins, in Sicario?", 'answer': 'Josh Brolin', 'category': 'Emily Blunt'}, {'question': "What is the profession of Emily Blunt's character in The Adjustment Bureau?", 'answer': 'a dancer', 'category': 'Emily Blunt'}, {'question': "What late-night talk show host plays Emily Blunt's husband in the musical Into the Woods?", 'answer': 'James Corden', 'category': 'Emily Blunt'}, {'question': 'Blunt voices Juliet in what animated retelling of the Romeo and Juliet story?', 'answer': 'Gnomeo & Juliet', 'category': 'Emily Blunt'}, {'question': 'Which MCU director directed Blunt in the 2010 film The Wolfman?', 'answer': 'Joe Johnston', 'category': 'Emily Blunt'}, {'question': "Who co-stars alongside Ice Cube as Smokey in 1995's Friday?", 'answer': 'Chris Tucker', 'category': 'Ice Cube'}, {'question': "Who directed 2002's Barbershop?", 'answer': 'Tim Story', 'category': 'Ice Cube'}, {'question': 'Ice Cube made his directorial debut with what 1998 dark comedy that he also starred in?', 'answer': 'The Players Club', 'category': 'Ice Cube'}, {'question': "Who co-stars alongside Ice Cube as Ben Barber in 2014's Ride Along?", 'answer': 'Kevin Hart', 'category': 'Ice Cube'}, {'question': "Who directed Ice Cube in 2001's Ghosts of Mars?", 'answer': 'John Carpenter', 'category': 'Ice Cube'}, {'question': 'Who directed the film XXX: State of the Union?', 'answer': 'Lee Tamahori', 'category': 'Ice Cube'}, {'question': 'Anthony Perkins plays which character in the 1960 film Psycho?', 'answer': 'Norman Bates', 'category': 'Thriller'}, {'question': 'Who played young Susan Walker in the 1947 Christmas classic Miracle on 34th Street?', 'answer': 'Natalie Wood', 'category': 'Classics'}, {'question': 'Agent J must travel back to 1969 to stop someone from murdering Agent K in what Men in Black film?', 'answer': 'Men in Black 3', 'category': 'Will Smith'}, {'question': 'Richard Armitage stars as a vice principal in what 2010s disaster film?', 'answer': 'Into the Storm', 'category': 'Disaster'}, {'question': 'Tournament of Champions is the subtitle to what 2021 horror sequel starring Taylor Russell and Logan Miller?', 'answer': 'Escape Room: Tournament of Champions', 'category': 'New Releases'}, {'question': 'Which actor starred in the 2000s crime films Knockaround Guys, A Man Apart, and Find Me Guilty?', 'answer': 'Vin Diesel', 'category': 'Crime'}, {'question': 'Who stars as a bounty hunter who many call Manco, also known as the Man with No Name, in the film For a Few Dollars More?', 'answer': 'Clint Eastwood', 'category': 'Westerns'}, {'question': "What is the first name of Rocky's brother-in-law, played by Burt Young in the Rocky franchise?", 'answer': 'Paulie', 'category': 'Sports'}, {'question': 'What classic thriller follows John "Scottie" Ferguson, a former police detective who has a paralyzing fear of heights?', 'answer': 'Vertigo', 'category': 'Thriller'}, {'question': 'What comedy features characters such as John "Bluto" Blutarsky and Eric "Otter" Stratton, about a troublesome fraternity who challenge the authority of the dean at Faber College?', 'answer': "National Lampoon's Animal House", 'category': 'Comedies'}, {'question': 'Which Oscar-winning actress co-stars in the biographical films Lion, Genius, and Bombshell?', 'answer': 'Nicole Kidman', 'category': 'Biopics'}, {'question': 'Dan Stevens and Kevin Kline appear in what live-action Disney remake?', 'answer': 'Beauty and the Beast', 'category': 'Remakes & Reboots'}, {'question': "Who played Deck Shifflet, the paralegal who assists Matt Damon's takedown of an insurance company in the 1997 movie The Rainmaker?", 'answer': 'Danny DeVito', 'category': 'Dramas'}, {'question': "Who won an Oscar for her portrayal of a nun, Sister Helen, in 1995's Dead Man Walking?", 'answer': 'Susan Sarandon', 'category': 'Dramas'}, {'question': 'Who directed the Best Picture winning film Spotlight?', 'answer': 'Tom McCarthy', 'category': 'Dramas'}, {'question': "El Paraíso is the name of the nightclub that Al Pacino's character buys in what 90s film?", 'answer': "Carlito's Way", 'category': 'Dramas'}, {'question': 'Who directed Reese Witherspoon in the 1999 film Election?', 'answer': 'Alexander Payne', 'category': 'Reese Witherspoon'}, {'question': 'Reese Witherspoon voices Susan Murphy, who is given what name after being transformed into a giant in the film Monsters vs. Aliens?', 'answer': 'Ginormica', 'category': 'Reese Witherspoon'}, {'question': 'Reese Witherspoon co-stars with Colin Firth and Rupert Everett in what 2002 adaptation of a famous Oscar Wilde play?', 'answer': 'The Importance of Being Earnest', 'category': 'Reese Witherspoon'}, {'question': 'Who directed Reese and Tobey Maguire in the 1998 film Pleasantville?', 'answer': 'Gary Ross', 'category': 'Reese Witherspoon'}, {'question': 'Who plays Brodie Bruce, an unemployed, lazy, comic book obsessed slacker in Mallrats?', 'answer': 'Jason Lee', 'category': 'Comedies'}, {'question': 'Jason Statham goes against a prehistoric creature in the Mariana Trench in what 2018 film from director Jon Turteltaub?', 'answer': 'The Meg', 'category': 'Thriller'}, {'question': 'Who stars as Brad "B-Rad" Gluckman, a rich, white, wannabe rapper in the 2003 comedy Malibu\'s Most Wanted?', 'answer': 'Jamie Kennedy', 'category': '2000s'}, {'question': "Who plays Raoul de Chagny, Christine's childhood sweetheart whom she gets engaged to, in 2004's The Phantom of the Opera?", 'answer': 'Patrick Wilson', 'category': 'Musicals'}, {'question': 'What 1980s horror remake involves a fictional science publication called Particle Magazine?', 'answer': 'The Fly', 'category': 'Remakes & Reboots'}, {'question': 'Tarantino directed the segment "The Man from Hollywood" in what anthology film?', 'answer': 'Four Rooms', 'category': 'Quentin Tarantino'}, {'question': 'Which acclaimed film featured the tagline "His whole life was a million-to-one shot."?', 'answer': 'Rocky', 'category': 'Sports'}, {'question': 'What 2010s sci-fi film features performances from Paul Dano, Emily Blunt, Bruce Willis, and Jeff Daniels?', 'answer': 'Looper', 'category': 'Fantasy/Sci-Fi'}, {'question': 'In what 1998 action adventure film do Jeremy Irons, John Malkovich, and Gérard Depardieu play aged versions of the Musketeers alongside Leonardo DiCaprio?', 'answer': 'The Man in the Iron Mask', 'category': 'Action/Adventure'}, {'question': 'What is the title of the second horror film in the Fear Street trilogy, which takes place mainly at the Camp Nightwing summer camp?', 'answer': 'Fear Street Part Two: 1978', 'category': 'New Releases'}, {'question': 'Which actor appeared in the 2010s films RoboCop, Kong: Skull Island, and The Legend of Tarzan?', 'answer': 'Samuel L. Jackson', 'category': 'Remakes & Reboots'}, {'question': 'Jimmy Fallon and Queen Latifah star in this 2004 comedy remake from director Tim Story.', 'answer': 'Taxi', 'category': 'Comedies'}, {'question': "Which actress appears in the rom-coms Take Me Home Tonight, What's Your Number?, and Just Friends?", 'answer': 'Anna Faris', 'category': 'Rom-Coms'}, {'question': 'Mary Elizabeth Winstead and John Goodman star in what 2016 sci-fi thriller?', 'answer': '10 Cloverfield Lane', 'category': '2010s'}, {'question': 'Karl Urban plays a hunter named Gavin Magary in what live-action Disney film?', 'answer': "Pete's Dragon", 'category': 'Disney'}, {'question': "What famous actor provides the voice of Baloo the bear in 2016's The Jungle Book?", 'answer': 'Bill Murray', 'category': 'Disney'}, {'question': 'The film The Aristocats takes place in the early 1900s in what European city?', 'answer': 'Paris', 'category': 'Disney'}, {'question': 'You can find the voice talents of Susan Egan, Danny DeVito, James Woods, and Rip Torn in what animated Disney film?', 'answer': 'Hercules', 'category': 'Disney'}, {'question': 'Meg Ryan stars in what film about an English Duke from 1876 who is dragged to modern day New York where he falls for a plucky advertising executive?', 'answer': 'Kate & Leopold', 'category': 'Meg Ryan'}, {'question': 'Meg Ryan lent her voice to what 1997 animated film, alongside John Cusack, Christopher Lloyd, and Kelsey Grammer?', 'answer': 'Anastasia', 'category': 'Meg Ryan'}, {'question': 'Meg Ryan plays the wife of which character in the film Top Gun?', 'answer': 'Nick "Goose" Bradshaw', 'category': 'Meg Ryan'}, {'question': 'Which Meg Ryan film is about a woman flying to France to confront her fiancé, but getting into trouble when the charming crook seated next to her uses her for smuggling?', 'answer': 'French Kiss', 'category': 'Meg Ryan'}, {'question': 'In what 2010s action thriller does Tom Cruise star opposite Rosamund Pike, Richard Jenkins, and David Oyelowo?', 'answer': 'Jack Reacher', 'category': 'Action/Adventure'}, {'question': 'Who plays the lead role of Dr. Ross Jennings in the 1990 horror comedy Arachnophobia?', 'answer': 'Jeff Daniels', 'category': 'Horror'}, {'question': 'Baz Luhrmann directed Leonardo DiCaprio in what 2013 film based on an F. Scott Fitzgerald novel?', 'answer': 'The Great Gatsby', 'category': 'Leonardo DiCaprio'}, {'question': 'What 1985 musical based on a Broadway hit features the songs "I Can Do That", "Let Me Dance for You", and "I Hope I Get It"?', 'answer': 'A Chorus Line', 'category': 'Musicals'}, {'question': 'Which actor has played such characters named Cole Trickle, Stacee Jaxx, and Les Grossman?', 'answer': 'Tom Cruise (in Days of Thunder, Rock of Ages, Tropic Thunder)', 'category': 'Famous Actors & Actresses'}, {'question': "Which Oscar winner plays Wanda, the mother of Michael B. Jordan's character in the film Fruitvale Station?", 'answer': 'Octavia Spencer', 'category': 'Black Cinema'}, {'question': 'What 80s comedy has the tagline "History is about to be rewritten by two guys who can\'t spell..."?', 'answer': "Bill & Ted's Excellent Adventure", 'category': '1980s'}, {'question': 'What 2001 psychological thriller features supporting performances from Jason Lee, Tilda Swinton, Michael Shannon, and Kurt Russell?', 'answer': 'Vanilla Sky', 'category': 'Thriller'}, {'question': 'What 2017 psychological horror film features supporting performances from Kristen Wiig, Domhnall Gleeson, and Ed Harris?', 'answer': 'Mother!', 'category': 'Horror'}, {'question': 'What film franchise features a third film subtitled Back to the Minors, which features performances from Corbin Bernsen and Scott Bakula?', 'answer': 'Major League', 'category': 'Sports'}, {'question': 'Which actor appeared in the films Congo, Sky High, and Escape from L.A.?', 'answer': 'Bruce Campbell', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Sandra Bullock has a supporting role as the character Jean Cabot in what award-winning 2005 film from director Paul Haggis?', 'answer': 'Crash', 'category': 'Dramas'}, {'question': 'What year saw the release of the fourth entries in both the Nightmare on Elm Street and Halloween franchises, as well as the seventh entry in the Friday the 13th franchise?', 'answer': '1988', 'category': 'N/A'}, {'question': 'Which actor plays a young doctor named Alan McMichael in the film Crimson Peak?', 'answer': 'Charlie Hunnam', 'category': 'Guillermo del Toro'}, {'question': 'Guillermo del Toro wrote and produced which 2011 horror film that was directed by Troy Nixey and starred Katie Holmes?', 'answer': "Don't Be Afraid of the Dark", 'category': 'Guillermo del Toro'}, {'question': 'Which Guillermo del Toro film won the Best Picture Oscar?', 'answer': 'The Shape of Water', 'category': 'Guillermo del Toro'}, {'question': "The film Pan's Labyrinth takes place in Spain during what decade?", 'answer': 'the 1940s', 'category': 'Guillermo del Toro'}, {'question': 'Which Guillermo del Toro film had the line "Is the enemy of my enemy my friend or my enemy?"?', 'answer': 'Blade II', 'category': 'Guillermo del Toro'}, {'question': 'Guillermo del Toro produced what 2019 horror film from director André Øvredal that features such monsters as Harold the Scarecrow and the Jangly Man?', 'answer': 'Scary Stories to Tell in the Dark', 'category': 'Guillermo del Toro'}, {'question': "Who directed and starred in 2008's Meet the Browns, opposite Angela Bassett?", 'answer': 'Tyler Perry', 'category': 'Angela Bassett'}, {'question': 'Which filmmaker directed Angela Bassett in the independent films City of Hope, Passion Fish, and Sunshine State?', 'answer': 'John Sayles', 'category': 'Angela Bassett'}, {'question': "August Walker works for Bassett's character, CIA Director Erika Slaone, in what 2018 film?", 'answer': 'Mission: Impossible – Fallout', 'category': 'Angela Bassett'}, {'question': 'In the film How Stella Got Her Groove Back, the title character takes a vacation to what country to get her groove back?', 'answer': 'Jamaica', 'category': 'Angela Bassett'}, {'question': "Who plays Irene, who loses her daughter in a gang shooting in 2015's Chi-Raq?", 'answer': 'Jennifer Hudson', 'category': 'Angela Bassett'}, {'question': 'Angela Bassett had a small role in what 1990 family action comedy that starred Arnold Schwarzenegger?', 'answer': 'Kindergarten Cop', 'category': 'Angela Bassett'}, {'question': 'What rapper co-stars with Jet Li as Anthony Fait in Cradle 2 the Grave?', 'answer': 'DMX', 'category': 'Martial Arts'}, {'question': 'What film was directed by Paul Thomas Anderson and loosely based on the novel "Oil!" by Upton Sinclair?', 'answer': 'There Will Be Blood', 'category': 'Modern Classics'}, {'question': 'Which Tarantino film has the line "Oooh, that\'s a bingo! Is that the way you say it? \'That\'s a bingo?\'"?', 'answer': 'Inglourious Basterds', 'category': 'Quentin Tarantino'}, {'question': 'What 1990s James Bond film features performances from John Cleese, Robbie Coltrane, and Robert Carlyle?', 'answer': 'The World Is Not Enough', 'category': '1990s'}, {'question': 'Charles Grodin plays Fred Wilson, owner of an oil company who leads an expedition, in this 1970s remake.', 'answer': 'King Kong', 'category': 'Remakes & Reboots'}, {'question': 'What is the title of the fourth installment in the Dirty Harry franchise, which is also the only entry to be directed by the star Clint Eastwood?', 'answer': 'Sudden Impact', 'category': 'Action/Adventure'}, {'question': 'What film featuring Anthony Mackie and Will Poulter follows riots in which rogue police officers respond to a complaint with retribution rather than justice on their mind?', 'answer': 'Detroit', 'category': 'Crime'}, {'question': 'Which actor starred in the 2000s family films August Rush, The Spiderwick Chronicles, and Charlie and the Chocolate Factory?', 'answer': 'Freddie Highmore', 'category': 'Family'}, {'question': 'Dennis Dun plays Wang Chi and James Hong plays David Lo Pan in this 1980s John Carpenter favorite.', 'answer': 'Big Trouble in Little China', 'category': 'Action/Adventure'}, {'question': 'Denzel Washington stars as a Florida police chief who must solve a double homicide before he becomes a suspect in this 2000s film from director Carl Franklin.', 'answer': 'Out of Time', 'category': 'Black Cinema'}, {'question': 'Kevin Costner features as the father of Jessica Chastain in this 2017 biographical crime film.', 'answer': "Molly's Game", 'category': 'Biopics'}, {'question': 'Which 2010 action comedy has the tagline "NY\'s finest were busy."?', 'answer': 'The Other Guys', 'category': 'Comedies'}, {'question': "Which actor appears in the sci-fi films Cloud Atlas, Mortal Engines, and 2010's The Wolfman?", 'answer': 'Hugo Weaving', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Ridley Scott received his first Best Director Oscar nomination for what film?', 'answer': 'Thelma & Louise', 'category': 'Directors'}, {'question': 'Which actor lent their voice to the films Kung Fu Panda 3 and Cats & Dogs: The Revenge of Kitty Galore?', 'answer': 'J. K. Simmons', 'category': 'N/A'}, {'question': 'Which actress plays Effie Trinket in the Hunger Games franchise?', 'answer': 'Elizabeth Banks', 'category': 'Young Adult Adaptations'}, {'question': "Which Star Wars actor plays the character Ethan Wate in 2013's Beautiful Creatures?", 'answer': 'Alden Ehrenreich', 'category': 'Young Adult Adaptations'}, {'question': 'How many films have been theatrically released in the Maze Runner franchise?', 'answer': '3 (The Maze Runner, The Scorch Trials, The Death Cure)', 'category': 'Young Adult Adaptations'}, {'question': 'What YA film has the tagline "He\'s done keeping his story straight."?', 'answer': 'Love, Simon', 'category': 'Young Adult Adaptations'}, {'question': 'What 1987 film, directed by Fred Dekker, follows a group of kids fighting a group of monsters led by Dracula?', 'answer': 'The Monster Squad', 'category': 'Monster'}, {'question': 'Who plays "Animal" Palotti in 1998\'s Godzilla?', 'answer': 'Hank Azaria', 'category': 'Monster'}, {'question': "Who plays Mrs. Clayton, Conor's strict grandmother who has a tense relationship with him, in the film A Monster Calls?", 'answer': 'Sigourney Weaver', 'category': 'Monster'}, {'question': 'Cedric Hardwicke plays Ludwig Frankenstein, one of the sons of the original Dr. Frankenstein, in which Universal monster film?', 'answer': 'The Ghost of Frankenstein', 'category': 'Monster'}, {'question': "Who plays the famous Frankenstein's monster in Mel Brooks' Young Frankenstein?", 'answer': 'Peter Boyle', 'category': 'Monster'}, {'question': 'What 1980s John Hughes comedy has the line "This is my ninth sick day this semester. It\'s pretty tough coming up with new illnesses."?', 'answer': "Ferris Bueller's Day Off", 'category': 'Comedies'}, {'question': 'A boy named Danny Madigan is magically transported into a movie called Jack Slater IV by a magic movie ticket in this 1993 Arnold Schwarzenegger film.', 'answer': 'Last Action Hero', 'category': '1990s'}, {'question': 'Name the 1979 Disney sci-fi adventure film that was directed by Gary Nelson and stars Anthony Perkins.', 'answer': 'The Black Hole', 'category': '1970s'}, {'question': 'DiCaprio has been nominated for six Academy Awards for his acting. Name two of the films he was nominated for.', 'answer': "What's Eating Gilbert Grape, The Aviator, Blood Diamond, The Wolf of Wall Street, The Revenant, Once Upon a Time in Hollywood", 'category': 'Leonardo DiCaprio'}, {'question': 'David Duchovny co-stars as Brian Kessler, a journalist researching serial killers, in what 1993 film?', 'answer': 'Kalifornia', 'category': 'Thriller'}, {'question': "Who plays the lead role of Snake Eyes in 2021's Snake Eyes?", 'answer': 'Henry Golding', 'category': 'New Releases'}, {'question': "What year saw the release of Underworld: Rise of the Lycans, Rob Zombie's Halloween II, and Zombieland?", 'answer': '2009', 'category': 'Horror/Thriller'}, {'question': 'What 2000s rom-com features supporting performances from Bradley Cooper, Zooey Deschanel, and Terry Bradshaw?', 'answer': 'Failure to Launch', 'category': 'Rom-Coms'}, {'question': 'Three films have each received 14 Oscar nominations since 1950. Name two.', 'answer': 'All About Eve, Titanic, La La Land', 'category': 'Oscars'}, {'question': 'Which action star has played the characters Joe Hallenbeck, Frank Moses, and the Jackal?', 'answer': 'Bruce Willis (in The Last Boy Scout; Red, Red 2; The Jackal)', 'category': 'Action/Adventure'}, {'question': 'Bill Murray stars in the 1980s semi-biographical comedy Where the Buffalo Roam, which follows the exploits of what real-life gonzo journalist?', 'answer': 'Hunter S. Thompson', 'category': 'Comedies'}, {'question': 'Which franchise features sequels subtitled Endgame and The Quickening?', 'answer': 'Highlander', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which actress appears in the films Under Siege 2: Dark Territory, Bride of Chucky, and The Ugly Truth?', 'answer': 'Katherine Heigl', 'category': 'Famous Actors & Actresses'}, {'question': "Which filmmaker who was behind 2006's The Descent also helmed 2019's Hellboy?", 'answer': 'Neil Marshall', 'category': 'Directors'}, {'question': 'Who directed the horror films Deep Rising and Odd Thomas?', 'answer': 'Stephen Sommers', 'category': 'Directors'}, {'question': 'What film was the only collaboration of director Guy Ritchie with actor Tom Hardy?', 'answer': 'RocknRolla', 'category': 'Directors'}, {'question': 'Who directed the films Logan Lucky and Unsane?', 'answer': 'Steven Soderbergh', 'category': 'Directors'}, {'question': 'Who won Best Director Oscars for the classic films From Here to Eternity and A Man for All Seasons?', 'answer': 'Fred Zinnemann', 'category': 'Directors'}, {'question': 'Warren Beatty and Buck Henry co-directed what romantic fantasy film?', 'answer': 'Heaven Can Wait', 'category': 'Directors'}, {'question': 'Which film marked the first collaboration between James Stewart and Alfred Hitchcock?', 'answer': 'Rope', 'category': 'Alfred Hitchcock'}, {'question': 'Which Hitchcock film involves the character Blanche Tyler, a con woman who pretends to be a psychic to scam money out of millionaires?', 'answer': 'Family Plot', 'category': 'Alfred Hitchcock'}, {'question': 'What was the first film for which Hitchcock was nominated for Best Director?', 'answer': 'Rebecca', 'category': 'Alfred Hitchcock'}, {'question': 'Who plays Charlotte "Charlie" Newton, a precocious teenager who initially idolizes her loving uncle, in Shadow of a Doubt?', 'answer': 'Teresa Wright', 'category': 'Alfred Hitchcock'}, {'question': 'How many times has Alfred Hitchcock directed Cary Grant?', 'answer': '4 (in Suspicion, Notorious, To Catch a Thief, North by Northwest)', 'category': 'Alfred Hitchcock'}, {'question': "In The Man Who Knew Too Much, what family member of James Stewart's character is kidnapped while the family is on vacation in Morocco?", 'answer': 'his son', 'category': 'Alfred Hitchcock'}, {'question': 'Nicole Kidman stars in what 2011 romantic comedy directed by Dennis Dugan?', 'answer': 'Just Go with It', 'category': 'Mixed Bag'}, {'question': 'Which franchise features Jai Courtney, William Sadler, Bonnie Bedelia, and Reginald VelJohnson?', 'answer': 'Die Hard', 'category': 'N/A'}, {'question': 'What year saw the releases of Flight of the Navigator, Iron Eagle, and Critters?', 'answer': '1986', 'category': 'N/A'}, {'question': 'Which actress features in Excalibur, Winchester, and Red?', 'answer': 'Helen Mirren', 'category': 'N/A'}, {'question': 'Who directed the two Happy Feet films?', 'answer': 'George Miller', 'category': 'N/A'}, {'question': 'This famous outlaw was portrayed in films by Paul Newman, Dane DeHaan, and Emilio Estevez.', 'answer': 'Billy the Kid (in The Left Handed Gun; The Kid; Young Guns, Young Guns II)', 'category': 'N/A'}, {'question': 'Who directed Jason Statham and Scott Eastwood in Wrath of Man?', 'answer': 'Guy Ritchie', 'category': 'New Releases'}, {'question': 'Which 2000s Disney film has the tagline "This time the sky really is falling."?', 'answer': 'Chicken Little', 'category': 'Animated'}, {'question': 'Who directed the 2010s films The Walk and Welcome to Marwen?', 'answer': 'Robert Zemeckis', 'category': 'Directors'}, {'question': 'What Oscar-winning blockbuster has the line "I figure life\'s a gift and I don\'t intend on wasting it. You don\'t know what hand you\'re gonna get dealt next."?', 'answer': 'Titanic', 'category': 'Quotes'}, {'question': 'Which Oscar-winning actress appeared in the 90s films Oscar, The Paper, and Chaplin?', 'answer': 'Marisa Tomei', 'category': 'Famous Actors & Actresses'}, {'question': '"Weird Al" Yankovic makes a cameo, twice as himself and once as a police station thug, over the course of what spoof comedy franchise?', 'answer': 'The Naked Gun (himself in From the Files of Police Squad!, The Final Insult; thug in The Smell of Fear)', 'category': 'Comedies'}, {'question': 'Which actor stars in the thrillers Switchback, Frequency, and Vantage Point?', 'answer': 'Dennis Quaid', 'category': 'Horror/Thriller'}, {'question': 'What classic 1960 sci-fi film starring Rod Taylor had a 2002 remake starring Guy Pearce?', 'answer': 'The Time Machine', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What classic animated Disney film features such characters as Patch, Rolly, Lucky, and Rover?', 'answer': 'One Hundred and One Dalmatians', 'category': 'Classics'}, {'question': 'What film has the line "Merry Christmas, movie house! Merry Christmas, Emporium! Merry Christmas, you wonderful old Building and Loan!"?', 'answer': "It's a Wonderful Life", 'category': 'Classics'}, {'question': 'In The Wizard of Oz, which character asks the Wizard for a heart?', 'answer': 'the Tin Man', 'category': 'Classics'}, {'question': 'Who stars as Mark Thackeray, an engineer who takes a teaching job at an inner-city London school, in the 1967 film To Sir, with Love?', 'answer': 'Sidney Poitier', 'category': 'Classics'}, {'question': 'What is the name of the fake movie being shown in the opening scene of Scream 2?', 'answer': 'Stab', 'category': '1990s'}, {'question': 'In the family film Hocus Pocus, the three main actresses who play the witches are Sarah Jessica Parker, Bette Middler, and who else?', 'answer': 'Kathy Najimy', 'category': '1990s'}, {'question': "Who directed 1998's Fear and Loathing in Las Vegas?", 'answer': 'Terry Gilliam', 'category': '1990s'}, {'question': "In 1995's Jumanji, what type of factory did Alan's family run in the film?", 'answer': 'a shoe factory', 'category': '1990s'}, {'question': 'James Woods provides the voice of the main villain in what 1997 animated Disney film?', 'answer': 'Hercules', 'category': 'Disney'}, {'question': "Who plays Ulla, a Swedish woman that Max hires as a secretary, in 2005's The Producers?", 'answer': 'Uma Thurman', 'category': 'Musicals'}, {'question': 'Rosa Salazar plays the title character in what 2019 sci-fi action film?', 'answer': 'Alita: Battle Angel', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Clint Eastwood plays a mysterious preacher who protects a prospector village from a greedy mining company in this 1980s western.', 'answer': 'Pale Rider', 'category': 'Westerns'}, {'question': 'Matt Reeves directed Chloë Grace Moretz, Elias Koteas, and Richard Jenkins in this 2010 horror film.', 'answer': 'Let Me In', 'category': '2010s'}, {'question': "What year saw the releases of the franchise films Hannibal Rising, Live Free or Die Hard, and Pirates of the Caribbean: At World's End?", 'answer': '2007', 'category': 'Release Dates'}, {'question': 'Who directed Kevin Bacon, Kelly Preston, and John Goodman in the revenge thriller Death Sentence?', 'answer': 'James Wan', 'category': 'Horror/Thriller'}, {'question': 'Cary Elwes, Lloyd Bridges, Ryan Stiles, and Charlie Sheen appear in what 1991 American comedy film directed by Jim Abrahams?', 'answer': 'Hot Shots!', 'category': 'Comedies'}, {'question': 'How many feature films did James Cameron direct during the 1990s?', 'answer': '3 (Terminator 2: Judgment Day, True Lies, Titanic)', 'category': 'Directors'}, {'question': 'Which actor appeared in the 1980s films Parenthood, Spaceballs, and Streets of Fire?', 'answer': 'Rick Moranis', 'category': 'Famous Actors & Actresses'}, {'question': 'Which actor plays Simon, the leader of an elite group of assassins, in the film Ava?', 'answer': 'Colin Farrell', 'category': 'New Releases'}, {'question': 'What 2021 animated film follows a friendship that grows between a human being and a sea monster disguised as a human on the Italian Riviera?', 'answer': 'Luca', 'category': 'New Releases'}, {'question': 'Which actor plays the time traveling robot Dennis in Bill & Ted Face the Music?', 'answer': 'Anthony Carrigan', 'category': 'New Releases'}, {'question': 'What is the subtitle for the third film in the Conjuring franchise?', 'answer': 'The Devil Made Me Do It', 'category': 'New Releases'}, {'question': 'Actor Ludi Lin plays which character in the 2021 film Mortal Kombat?', 'answer': 'Liu Kang', 'category': 'New Releases'}, {'question': 'Which actor plays Mr. Stringer, the manager of a seaside hotel, in the 2020 film The Witches?', 'answer': 'Stanley Tucci', 'category': 'New Releases'}, {'question': 'Perry directs the actresses Tiffany Haddish, Whoopi Goldberg, and Tika Sumpter in which 2018 romantic comedy?', 'answer': "Nobody's Fool", 'category': 'Tyler Perry'}, {'question': "What sitcom star plays Cheryl in 2008's Meet the Browns?", 'answer': 'Sofía Vergara', 'category': 'Tyler Perry'}, {'question': 'Perry voices Cyrus the camel in what 2017 animated film?', 'answer': 'The Star', 'category': 'Tyler Perry'}, {'question': 'Which popular white comedian plays the character Buddy Williams in A Madea Christmas?', 'answer': 'Larry the Cable Guy', 'category': 'Tyler Perry'}, {'question': 'Dwayne "The Rock" Johnson has a cameo in which Tyler Perry directed sequel?', 'answer': 'Why Did I Get Married Too?', 'category': 'Tyler Perry'}, {'question': 'Which Tyler Perry film revolves around April, a self-centered alcoholic singer taking care of her niece and nephews Jennifer, Manny, and Byron?', 'answer': 'I Can Do Bad All by Myself', 'category': 'Tyler Perry'}, {'question': "What actor took over the role of Scotty in 2009's Star Trek?", 'answer': 'Simon Pegg', 'category': 'Remakes & Reboots'}, {'question': 'Bob Odenkirk stars as Hutch Mansell, a former government assassin for the CIA, in what 2021 action film?', 'answer': 'Nobody', 'category': 'New Releases'}, {'question': 'Who plays Master Sergeant Farell, the head of J-Squad, in Edge of Tomorrow?', 'answer': 'Bill Paxton', 'category': '2010s'}, {'question': 'Albert and Allen Hughes directed Larenz Tate, Keith David, and Chris Tucker in this 1995 drama that chronicles the life of a character named Anthony Curtis.', 'answer': 'Dead Presidents', 'category': 'Black Cinema'}, {'question': 'What 1990s comedic drama features supporting performances by Laura Linney, Natascha McElhone, Paul Giamatti, and Noah Emmerich?', 'answer': 'The Truman Show', 'category': '1990s'}, {'question': 'Joe Johnston directed what western adventure film that follows a 3,000-mile horse race called the "Ocean of Fire"?', 'answer': 'Hidalgo', 'category': 'Westerns'}, {'question': 'Which actress received an Oscar nomination for her performance as a bored housewife named Sarah Pierce in the film Little Children?', 'answer': 'Kate Winslet', 'category': 'Dramas'}, {'question': "Which actor appears in the action films Under Siege, Drop Zone, and 1991's Point Break?", 'answer': 'Gary Busey', 'category': 'Action/Adventure'}, {'question': 'What 1984 family fantasy film has the line "Having a luck dragon with you is the only way to go on a quest."?', 'answer': 'The NeverEnding Story', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Antonio Banderas voices the character Puss in Boots in how many films?', 'answer': '4 (Shrek 2, Shrek the Third, Shrek Forever After, Puss in Boots)', 'category': 'Animated'}, {'question': 'Who stars as Brendan Conlon, a teacher and family man who enters an MMA tournament and ultimately fights his brother, in the film Warrior?', 'answer': 'Joel Edgerton', 'category': 'Martial Arts'}, {'question': 'What year saw the releases of the comedies Tommy Boy, The American President, and Billy Madison?', 'answer': '1995', 'category': 'Comedies'}, {'question': "How many people received Oscar nominations for their performances in 1997's Titanic?", 'answer': '2 (Kate Winslet for Actress, Gloria Stuart for Supporting Actress)', 'category': 'Oscars'}, {'question': 'Which comedic actress starred in the dramatic films The Sugarland Express, Swing Shift, and Crisscross?', 'answer': 'Goldie Hawn', 'category': 'Famous Actors & Actresses'}, {'question': 'Tony Danza stars alongside Catherine Hicks in this 1989 coming-of-age comedy film about a widower from California who lives with his two daughters.', 'answer': "She's Out of Control", 'category': 'N/A'}, {'question': 'This 2016 film starred Casey Affleck, Michelle Williams, and Lucas Hedges.', 'answer': 'Manchester by the Sea', 'category': '2010s'}, {'question': "This actress played the racially prejudiced socialite Hilly Holbrook in 2011's The Help.", 'answer': 'Bryce Dallas Howard', 'category': '2010s'}, {'question': 'In which 2011 film that features Sean Penn do Brad Pitt and Jessica Chastain play a husband and wife?', 'answer': 'The Tree of Life', 'category': '2010s'}, {'question': "Which Oscar-nominated actress plays Sam, the female lead, in the Edgar Wright film The World's End?", 'answer': 'Rosamund Pike', 'category': '2010s'}, {'question': 'What 1990s Stephen King based film features Brad Dourif as an eccentric exterminator and Vietnam veteran Tucker Cleveland?', 'answer': 'Graveyard Shift', 'category': 'Stephen King'}, {'question': 'Which Stephen King adaptation has a climactic scene in which the villain is attacked by a large group of sparrows?', 'answer': 'The Dark Half', 'category': 'Stephen King'}, {'question': "Who stars as the main character David Drayton in 2007's The Mist?", 'answer': 'Thomas Jane', 'category': 'Stephen King'}, {'question': "What specific health ailment does John Coffey heal Melinda, the warden's wife, of in The Green Mile?", 'answer': 'a brain tumor', 'category': 'Stephen King'}, {'question': 'Who directed Denzel Washington in the film Man on Fire?', 'answer': 'Tony Scott', 'category': 'Denzel Washington'}, {'question': "In Boyhood, Mason's father gives him an album for his thirteenth birthday entitled The Black Album, which was a compilation of solo music by members of what former band?", 'answer': 'the Beatles', 'category': '2010s'}, {'question': "In what 2014 movie do the characters of the Baker and the Baker's wife wish for a child at the beginning of the movie?", 'answer': 'Into the Woods', 'category': 'Musicals'}, {'question': 'What Tom Hanks film features supporting performances from Stephen Root, Marlon Wayans, and J. K. Simmons?', 'answer': 'The Ladykillers', 'category': 'Tom Hanks'}, {'question': 'In what 2001 film does a nearly retired CIA operative named Nathan Muir try to free his protégé, who has been arrested in China for espionage?', 'answer': 'Spy Game', 'category': 'Spy'}, {'question': 'Angela Lansbury voices Mayor McGerkle in what 2010s animated film also featuring Kenan Thompson?', 'answer': 'The Grinch', 'category': 'Family'}, {'question': 'Who directed the 1998 conspiracy thriller Snake Eyes starring Nicolas Cage?', 'answer': 'Brian De Palma', 'category': 'Directors'}, {'question': 'John Hughes wrote what 1988 film starring Dan Aykroyd, Annette Bening, and John Candy?', 'answer': 'The Great Outdoors', 'category': '1980s'}, {'question': 'Clive Owen, Brian Cox, and Walton Goggins appear in which film in the Bourne franchise?', 'answer': 'The Bourne Identity', 'category': 'Action/Adventure'}, {'question': 'Who directed the 2011 remake of Footloose starring Julianne Hough and Kenny Wormald?', 'answer': 'Craig Brewer', 'category': 'Remakes & Reboots'}, {'question': 'Which actor appears in the films Stand by Me, Sixteen Candles, and Identity?', 'answer': 'John Cusack', 'category': 'Famous Actors & Actresses'}, {'question': 'Barry Sonnenfield directed this 1995 crime comedy starring John Travolta as a mobster breaking into the film industry.', 'answer': 'Get Shorty', 'category': 'Comedies'}, {'question': 'Scarlett Johansson stars opposite Juliette Binoche and Michael Pitt in what sci-fi action film from director Rupert Sanders?', 'answer': 'Ghost in the Shell', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which former sitcom actress plays the character of Dominique La Rue in the 1989 crime comedy Harlem Nights?', 'answer': 'Jasmine Guy', 'category': 'Black Cinema'}, {'question': 'In the 2001 remake of Planet of the Apes, who played the ape Thade?', 'answer': 'Tim Roth', 'category': 'Remakes & Reboots'}, {'question': 'Bruce Greenwood, Paul Rudd, and Zach Galifianakis star in what 2010 comedy remake directed by Jay Roach?', 'answer': 'Dinner for Schmucks', 'category': 'Remakes & Reboots'}, {'question': 'What horror remake was co-written by Frank Darabont and takes place in the small town of Arborville, California?', 'answer': 'The Blob', 'category': 'Remakes & Reboots'}, {'question': "Who voiced Chucky in the 2019 remake of Child's Play?", 'answer': 'Mark Hamill', 'category': 'Remakes & Reboots'}, {'question': 'What Robert Louis Stevenson adventure novel was adapted into a Muppets film starring Tim Curry and Billy Connolly?', 'answer': 'Treasure Island', 'category': 'Jim Henson'}, {'question': 'Who co-directed The Dark Crystal with Jim Henson?', 'answer': 'Frank Oz', 'category': 'Jim Henson'}, {'question': 'Which actor plays Murray Plotsky, a con artist who pretends to be a Broadway producer, in The Muppets Take Manhattan?', 'answer': 'Dabney Coleman', 'category': 'Jim Henson'}, {'question': "Who directed 2018's The Happytime Murders?", 'answer': 'Brian Henson', 'category': 'Jim Henson'}, {'question': 'Tom Hanks plays the role of washed-up Jimmy Dugan in what film?', 'answer': 'A League of Their Own', 'category': 'Tom Hanks'}, {'question': "Who plays Melina, a member of the Resistance and love interest of Colin Farrell's Quaid, in 2012's Total Recall?", 'answer': 'Jessica Biel', 'category': 'Remakes & Reboots'}, {'question': 'Gwyneth Paltrow, Christina Applegate, and Mark Ruffalo star in what 2000s romantic comedy?', 'answer': 'View from the Top', 'category': '2000s'}, {'question': 'What slasher film franchise had eight films released in theaters during the 1980s?', 'answer': 'Friday the 13th', 'category': 'Horror'}, {'question': 'This 1993 action film features performances from Art Carney, Charles Dance, Ian McKellen, and F. Murray Abraham.', 'answer': 'Last Action Hero', 'category': 'Action/Adventure'}, {'question': 'Which Disney animated film has the line "I tried to run away and be a good guy. But I\'m not! I\'m just a bad guy."?', 'answer': 'Wreck-It Ralph', 'category': 'Quotes'}, {'question': 'This biopic directed by Gus Van Sant features supporting performances from Diego Luna, Alison Pill, and Josh Brolin.', 'answer': 'Milk', 'category': 'Biopics'}, {'question': 'What year saw the releases of the sequels Police Academy 4: Citizens on Patrol and The Living Daylights?', 'answer': '1987', 'category': 'Release Dates'}, {'question': 'Who plays the lead role of science professor Ira Kane, alongside Julianne Moore and Orlando Jones, in the 2001 film Evolution?', 'answer': 'David Duchovny', 'category': 'Comedies'}, {'question': 'This actor features in the following films: Beautiful Boy, The Dark Half, and Ordinary People.', 'answer': 'Timothy Hutton', 'category': 'Famous Actors & Actresses'}, {'question': 'This Tales from the Crypt Presents film features performances from Billy Zane, Dick Miller, William Sadler, and Jada Pinkett Smith.', 'answer': 'Tales from the Crypt Presents: Demon Knight', 'category': '1990s'}, {'question': 'Which actress appears in the films King Kong Lives, Shadow Conspiracy, and Mr. Destiny?', 'answer': 'Linda Hamilton', 'category': 'N/A'}, {'question': 'Danny Trejo, Enrique Iglesias, and Willem Dafoe appear in what film from director Robert Rodriguez?', 'answer': 'Once Upon a Time in Mexico', 'category': 'Robert Rodriguez'}, {'question': 'Robert Rodriguez is credited composing the score of which film from director Quentin Tarantino?', 'answer': 'Kill Bill: Volume 2', 'category': 'Robert Rodriguez'}, {'question': "Who stars as Casey Connor, a boy who is the high school's newspaper photographer, in the 1998 film The Faculty?", 'answer': 'Elijah Wood', 'category': 'Robert Rodriguez'}, {'question': 'What is the name of the vampire-killing biker character played by Tom Savini in From Dusk till Dawn?', 'answer': 'Sex Machine', 'category': 'Robert Rodriguez'}, {'question': 'Which Fast & Furious actress played an aspiring boxer in the 2000 film Girlfight?', 'answer': 'Michelle Rodriguez', 'category': 'Festival Darlings'}, {'question': 'What 2000s indie comedy hit features the characters Kip, Uncle Rico, and Deb?', 'answer': 'Napoleon Dynamite', 'category': 'Festival Darlings'}, {'question': 'Which actress received a Best Supporting Actress Oscar nomination for her performance in the 2016 film Moonlight?', 'answer': 'Naomie Harris', 'category': 'Festival Darlings'}, {'question': 'Directors Shari Springer Berman and Robert Pulcini cover the life of Harvey Pekar in what awards favorite?', 'answer': 'American Splendor', 'category': 'Festival Darlings'}, {'question': 'What is the title of the first film in the Muppets franchise that was released in 1979?', 'answer': 'The Muppet Movie', 'category': 'Family'}, {'question': 'What basketball star plays Yaz, an eccentric arms dealer, in the film Double Team starring Jean-Claude Van Damme?', 'answer': 'Dennis Rodman', 'category': 'Martial Arts'}, {'question': 'Bill and Ted go to heaven and hell in what 1991 sequel?', 'answer': "Bill & Ted's Bogus Journey", 'category': '1990s'}, {'question': 'Matthew McConaughey provides the voice of a character called Beetle in what animated film?', 'answer': 'Kubo and the Two Strings', 'category': 'Matthew McConaughey'}, {'question': "What famous actor had an early starring role as a teen named Chris, who struggles to deal with his best friend's death, in 1988's Permanent Record?", 'answer': 'Keanu Reeves', 'category': 'Coming of Age'}, {'question': "Who plays Cathy Muller, a medical student who helps Jack Ryan learn to walk again after a severe injury, in 2014's Jack Ryan: Shadow Recruit?", 'answer': 'Keira Knightley', 'category': 'Action/Adventure'}, {'question': 'What 2004 sports film has the tagline "The story of the greatest moment in sports history."?', 'answer': 'Miracle', 'category': 'Sports'}, {'question': 'James Marsden, Bruce Greenwood, Jeffrey Donovan, and Caspar Phillipson have all portrayed what U.S. President on the big screen?', 'answer': "John F. Kennedy (in Lee Daniels' The Butler, Thirteen Days, LBJ, Jackie)", 'category': 'Dramas'}, {'question': 'What 1990s rom-com from director Hugh Wilson featured the tagline "She\'d never met anyone like him. He\'s never met anyone... Period."?', 'answer': 'Blast from the Past', 'category': 'Rom-Coms'}, {'question': 'This 2000s musical featuring Michelle Pfeiffer and Amanda Bynes features the songs "You Can\'t Stop the Beat" and "Welcome to the 60\'s"?', 'answer': 'Hairspray', 'category': 'Musicals'}, {'question': "This 2004 political satire starring Ray Romano and Gene Hackman ended up being Hackman's final film performance to date.", 'answer': 'Welcome to Mooseport', 'category': 'Comedies'}, {'question': 'Which actress and singer appeared in the films Southland Tales, The Princess Diaries, and License to Wed?', 'answer': 'Mandy Moore', 'category': 'Famous Actors & Actresses'}, {'question': 'Ben Affleck and Uma Thurman co-star in this 2003 science-fiction film about a man who wakes with memory erasure and finds the fate of the entire world may be in his hands.', 'answer': 'Paycheck', 'category': 'Fantasy/Sci-Fi'}, {'question': "In Bridget Jones's Diary, who plays lawyer Mark Darcy?", 'answer': 'Colin Firth', 'category': 'Rom-Coms'}, {'question': "This actor played Olive's father, Dill Penderghast, in Easy A.", 'answer': 'Stanley Tucci', 'category': 'Rom-Coms'}, {'question': 'In what 1994 rom-com does Marisa Tomei play a character who is seemingly told the name of the man of her dreams by a ouija board?', 'answer': 'Only You', 'category': 'Rom-Coms'}, {'question': "In the 1953 film Sabrina, Audrey Hepburn plays Sabrina Fairchild, a chauffeur's daughter who had gone away to school to learn what profession?", 'answer': 'cooking', 'category': 'Rom-Coms'}, {'question': 'What Scorsese film features the characters Colin Sullivan and Frank Costello?', 'answer': 'The Departed', 'category': 'Martin Scorsese'}, {'question': "What actress played Countess Ellen Olenska, opposite Daniel Day-Lewis, in Martin Scorsese's The Age of Innocence?", 'answer': 'Michelle Pfeiffer', 'category': 'Martin Scorsese'}, {'question': "What was the name of Robert De Niro's character in Goodfellas?", 'answer': 'Jimmy Conway', 'category': 'Martin Scorsese'}, {'question': 'What was the first Scorsese film to be nominated for a Best Director Oscar?', 'answer': 'Raging Bull', 'category': 'Martin Scorsese'}, {'question': 'Who played the title role in the 2013 remake of Carrie?', 'answer': 'Chloë Grace Moretz', 'category': 'Horror'}, {'question': 'John Belushi plays Jake Blues in The Blues Brothers. What is the name of the character portrayed by Dan Aykroyd?', 'answer': 'Elwood Blues', 'category': '1980s'}, {'question': 'This 2000s family film based on a Disney Channel series featured supporting performances from Adam Lamberg and Robert Carradine.', 'answer': 'The Lizzie McGuire Movie', 'category': '2000s'}, {'question': 'What action thriller, released in the U.S. in 2012, stars Iko Uwais as Rama, a rookie member of a special forces unit tasked with taking down a crime lord in a high-rise building?', 'answer': 'The Raid: Redemption', 'category': 'Martial Arts'}, {'question': 'Who co-stars with Demi Moore as Command Master Chief John James Urgayle in G.I. Jane?', 'answer': 'Viggo Mortensen', 'category': '1990s'}, {'question': 'How many years did the Bride spend in a coma in the Kill Bill films?', 'answer': '4 years', 'category': 'Quentin Tarantino'}, {'question': "Which actress plays the female lead Anne Weying in 2018's Venom?", 'answer': 'Michelle Williams', 'category': 'Comic Book'}, {'question': 'Michael Keaton stars in this 2005 supernatural horror film about a man using EVP to receive messages from his recently passed wife.', 'answer': 'White Noise', 'category': 'Horror/Thriller'}, {'question': "Who plays the role of Sergeant John O'Mara, a World War II veteran turned cop, in the 2013 film Gangster Squad?", 'answer': 'Josh Brolin', 'category': 'Crime'}, {'question': 'What 2001 rom-com follows a couple that search for each other years after the night they first met over a pair of cashmere gloves in New York City, fell in love, and separated?', 'answer': 'Serendipity', 'category': 'Rom-Coms'}, {'question': 'Which actor appeared in the films White Chicks, Fifty Shades of Black, and The 6th Man?', 'answer': 'Marlon Wayans', 'category': 'Black Cinema'}, {'question': 'Topher Grace stars as a recent MIT graduate who works at Suncoast Video in 1988 in what 2010s film alongside Michael Biehn?', 'answer': 'Take Me Home Tonight', 'category': 'Comedies'}, {'question': 'What monster movie from director Luis Llosa, and featuring Eric Stoltz, had the tagline "When You Can\'t Breathe You Can\'t Scream"?', 'answer': 'Anaconda', 'category': '1990s'}, {'question': 'Who directed the following three films: Six Days, Seven Nights, Kindergarten Cop, and Legal Eagles?', 'answer': 'Ivan Reitman', 'category': 'Directors'}, {'question': 'Name the 1974 rock musical directed by Brian De Palma.', 'answer': 'Phantom of the Paradise', 'category': 'Musicals'}, {'question': 'Robert Preston played Professor Harold Hill in this 1960s musical.', 'answer': 'The Music Man', 'category': 'Musicals'}, {'question': 'Which 2000s Disney musical features Prince Edward, Queen Narissa, and her servant Nathaniel?', 'answer': 'Enchanted', 'category': 'Musicals'}, {'question': 'Which Marvel actor plays the TV dance show host Corny Collins in the 2007 film Hairspray?', 'answer': 'James Marsden', 'category': 'Musicals'}, {'question': 'Who played Professor Henry Higgins in the film My Fair Lady?', 'answer': 'Rex Harrison', 'category': 'Musicals'}, {'question': 'Andy García plays Fernando Cienfuegos, the manager of the Hotel Bella Donna, in what jukebox musical film?', 'answer': 'Mamma Mia! Here We Go Again', 'category': 'Musicals'}, {'question': 'What classic rock song plays in the opening scene of Christine, when the car Christine comes off the assembly line?', 'answer': 'Bad to the Bone', 'category': 'John Carpenter'}, {'question': 'Which actor plays the U.S. President in Escape from New York?', 'answer': 'Donald Pleasence', 'category': 'John Carpenter'}, {'question': 'Besides John Carpenter, who else is credited for composing the score for Big Trouble in Little China?', 'answer': 'Alan Howarth', 'category': 'John Carpenter'}, {'question': "You will find the lead Nick Halloway going to this favorite bar, the Academy Club, and attending a shareholders' meeting at Magnascopic Laboratories in what 1992 film?", 'answer': 'Memoirs of an Invisible Man', 'category': 'John Carpenter'}, {'question': "Who stars as the character Jack Crow in 1998's Vampires?", 'answer': 'James Woods', 'category': 'John Carpenter'}, {'question': 'John Carpenter directed Adrienne Barbeau, Jamie Lee Curtis, and John Houseman in what 1980 film?', 'answer': 'The Fog', 'category': 'John Carpenter'}, {'question': "Which Carpenter film follows an alien being who takes the form of a woman's dead husband?", 'answer': 'Starman', 'category': 'John Carpenter'}, {'question': 'Anthony Ramos stars as Usnavi in what 2021 musical?', 'answer': 'In the Heights', 'category': 'N/A'}, {'question': 'Who starred in the films Dead Poets Society, Reality Bites, and Boyhood?', 'answer': 'Ethan Hawke', 'category': 'N/A'}, {'question': 'Which animated film features performances from Brad Pitt, Tina Fey, and Will Ferrell?', 'answer': 'Megamind', 'category': 'N/A'}, {'question': "Which actress appears in the films Funny Face, The Nun's Story, and My Fair Lady?", 'answer': 'Audrey Hepburn', 'category': 'N/A'}, {'question': 'How many Mission: Impossible films were released in the 2010s?', 'answer': '3 (Ghost Protocol, Rogue Nation, Fallout)', 'category': 'N/A'}, {'question': 'Elisabeth Moss stars in what 2020 horror remake?', 'answer': 'The Invisible Man', 'category': 'N/A'}, {'question': 'Which actor appears in the films Guys and Dolls, The Wild One, and The Freshman?', 'answer': 'Marlon Brando', 'category': 'N/A'}, {'question': 'Whoopi Goldberg provides a voice in what Toy Story film?', 'answer': 'Toy Story 3', 'category': 'N/A'}, {'question': 'Which actress appears in the films Mad Dog and Glory, Johnny Be Good, and Pulp Fiction?', 'answer': 'Uma Thurman', 'category': 'N/A'}, {'question': 'How many Halloween films featured Donald Pleasence?', 'answer': "5 (1978's Halloween, 1981's Halloween II, The Return of Michael Myers, The Revenge of Michael Myers, The Curse of Michael Myers)", 'category': 'N/A'}, {'question': 'Who stars as high school jock turned police officer Greg Jenko in the 2012 film 21 Jump Street?', 'answer': 'Channing Tatum', 'category': 'Remakes & Reboots'}, {'question': 'Robert De Niro starred in how many films from Martin Scorsese during the 1990s?', 'answer': '3 (Goodfellas, Cape Fear, Casino)', 'category': '1990s'}, {'question': 'This 2021 film stars Jeffrey Dean Morgan as a man who works a job reporting on unusual occurrences, and a girl named Alice who claims to have been healed by the Virgin Mary.', 'answer': 'The Unholy', 'category': 'New Releases'}, {'question': "Which actor appears in the films Necessary Roughness, Smokin' Aces, and Starsky & Hutch?", 'answer': 'Jason Bateman', 'category': 'Famous Actors & Actresses'}, {'question': 'RZA starred in and directed this 2012 martial arts film that also features performances from Russell Crowe, Dave Bautista, and Lucy Liu.', 'answer': 'The Man with the Iron Fists', 'category': 'Martial Arts'}, {'question': 'Which actress received Oscar nominations for the films Being Julia and The Kids Are All Right?', 'answer': 'Annette Bening', 'category': 'Oscars'}, {'question': 'Who directed the 1980s films Married to the Mob, Something Wild, and Swing Shift?', 'answer': 'Jonathan Demme', 'category': 'Directors'}, {'question': 'What 1998 Leslie Nielsen spoof film follows a violinist named Ryan Harrison, who is framed for murder by a mysterious one-eyed, one-armed, one-legged man?', 'answer': 'Wrongfully Accused', 'category': 'Comedies'}, {'question': 'This 2013 crime film, inspired by a true story, features supporting performances from Michael K. Williams, Susan Sarandon, Benjamin Bratt, and Jon Bernthal.', 'answer': 'Snitch', 'category': 'Crime'}, {'question': 'What year saw the releases of the sequels French Connection II, Walking Tall Part 2, and The Strongest Man in the World?', 'answer': '1975', 'category': 'Release Dates'}, {'question': 'Who plays Pavel Chekov in Star Trek Beyond?', 'answer': 'Anton Yelchin', 'category': 'Star Trek'}, {'question': 'Which Star Trek film was released in 1979?', 'answer': 'Star Trek: The Motion Picture', 'category': 'Star Trek'}, {'question': 'The characters Maltz and Valkris are from what alien race in Star Trek III: The Search for Spock?', 'answer': 'Klingons', 'category': 'Star Trek'}, {'question': 'Leonard Nimoy and Zachary Quinto both appear together as the character of Spock in how many films?', 'answer': '2 (Star Trek, Into Darkness)', 'category': 'Star Trek'}, {'question': 'In 50 First Dates, what does Lucy order at the diner every day that she likes to build things out of before eating?', 'answer': 'waffles', 'category': 'Drew Barrymore'}, {'question': 'Penny Marshall directed Drew Barrymore and Brittany Murphy in this 2001 film.', 'answer': 'Riding in Cars with Boys', 'category': 'Drew Barrymore'}, {'question': 'Who starred alongside Drew Barrymore as an aging popstar in Music and Lyrics?', 'answer': 'Hugh Grant', 'category': 'Drew Barrymore'}, {'question': 'Which famous TV showrunner wrote the screenplay for the 1998 Drew Barrymore film Home Fries?', 'answer': 'Vince Gilligan', 'category': 'Drew Barrymore'}, {'question': 'Who starred in the 70s films Deliverance, The Longest Yard, and Smokey and the Bandit?', 'answer': 'Burt Reynolds', 'category': '1970s'}, {'question': 'How many films were in the Taken franchise, starring Liam Neeson?', 'answer': '3', 'category': 'Action/Adventure'}, {'question': "Who wrote, starred in, and directed 2014's Top Five?", 'answer': 'Chris Rock', 'category': 'Black Cinema'}, {'question': 'What 2004 comedy featuring Gary Cole and Justin Long features the line "Nobody makes me bleed my own blood - nobody!"?', 'answer': 'Dodgeball: A True Underdog Story', 'category': 'Comedies'}, {'question': 'Richard Schiff plays Eddie Carr, a field equipment expert, in what Spielberg film?', 'answer': 'The Lost World: Jurassic Park', 'category': 'Steven Spielberg'}, {'question': 'Actor Rodrigo Santoro plays Jesus Christ in this 2010s remake.', 'answer': 'Ben-Hur', 'category': 'Remakes & Reboots'}, {'question': 'What 90s film is known for the line "just when I think you couldn\'t possibly be any dumber, you go and do something like this... and totally redeem yourself!"?', 'answer': 'Dumb and Dumber', 'category': 'N/A'}, {'question': 'In what year were films released in the Hellboy, X-Men, and Fast & Furious franchises?', 'answer': '2019 (with Hellboy, Dark Phoenix, Hobbs & Shaw)', 'category': 'N/A'}, {'question': "Who plays Natasha's father figure, Alexei Shostakov a.k.a. Red Guardian, in the 2021 film Black Widow?", 'answer': 'David Harbour', 'category': 'New Releases'}, {'question': 'Sandra Bullock stars as a newspaper columnist obliged to enter rehabilitation for alcoholism in this 2000s film that also features performances from Viggo Mortensen and Elizabeth Perkins.', 'answer': '28 Days', 'category': '2000s'}, {'question': 'What 2017 sci-fi film features supporting performances from Mackenzie Davis, Robin Wright, and David Dastmalchian?', 'answer': 'Blade Runner 2049', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What famous actor features in the following three films: Be Cool, Fighting with My Family, and Dragged Across Concrete?', 'answer': 'Vince Vaughn', 'category': 'Famous Actors & Actresses'}, {'question': 'What 1986 slasher sequel did Anthony Perkins both star in and direct?', 'answer': 'Psycho III', 'category': 'Horror/Thriller'}, {'question': 'Which actress appeared in the following comedies: The 40-Year-Old Virgin, The Cable Guy, and George of the Jungle?', 'answer': 'Leslie Mann', 'category': 'Comedies'}, {'question': 'Tom Petty and the Heartbreakers provided the music for this 1996 rom-com that was written by, directed by, and starred Edward Burns alongside Jennifer Aniston and Cameron Diaz.', 'answer': "She's the One", 'category': 'Rom-Coms'}, {'question': 'How many films were theatrically released in the popular House Party franchise?', 'answer': '3', 'category': 'Black Cinema'}, {'question': "Who plays WorryFree CEO Steve Lift in 2018's Sorry to Bother You?", 'answer': 'Armie Hammer', 'category': '2010s'}, {'question': 'Who directed the 2010 film Never Let Me Go?', 'answer': 'Mark Romanek', 'category': '2010s'}, {'question': 'In BlacKkKlansman, who plays national civil rights leader Kwame Ture?', 'answer': 'Corey Hawkins', 'category': '2010s'}, {'question': 'Jason Momoa stars as a fearless warrior in the land of Hyboria in what 2010s film?', 'answer': 'Conan the Barbarian', 'category': '2010s'}, {'question': "Gabrielle Union stars alongside which MCU actor in 2007's Daddy's Little Girls?", 'answer': 'Idris Elba', 'category': 'Tyler Perry'}, {'question': 'Matthew Fox co-stars with Tyler Perry in which thriller?', 'answer': 'Alex Cross', 'category': 'Tyler Perry'}, {'question': 'A Madea Family Funeral ends with the matriarch of the family going to Las Vegas with what celebrity who plays Roy?', 'answer': 'Mike Tyson', 'category': 'Tyler Perry'}, {'question': "Which pop music superstar stars as Patricia in Tyler Perry's Why Did I Get Married??", 'answer': 'Janet Jackson', 'category': 'Tyler Perry'}, {'question': 'Cynthia Erivo received an Oscar nomination for playing a famous freedom fighter during the U.S. Civil War in what 2019 biopic?', 'answer': 'Harriet', 'category': 'Biopics'}, {'question': 'Who plays Melvin Udall, a bigoted, obsessive, compulsive writer, in the film As Good as It Gets?', 'answer': 'Jack Nicholson', 'category': '1990s'}, {'question': 'What family movie franchise has entries titled Dog Days and Rodrick Rules?', 'answer': 'Diary of a Wimpy Kid', 'category': 'Family'}, {'question': 'Who starred in, produced, and directed the 1986 war film Heartbreak Ridge?', 'answer': 'Clint Eastwood', 'category': '1980s'}, {'question': "You'll find the characters of Noah Cross, Lieutenant Lou Escobar, and Hollis Mulwray in what 1970s crime film?", 'answer': 'Chinatown', 'category': '1970s'}, {'question': 'Chevy Chase stars in the titular role of undercover reporter Irwin "Fletch" Fletcher in 1985\'s Fletch and this 1989 sequel.', 'answer': 'Fletch Lives', 'category': '1980s'}, {'question': 'Who stars as production line manager Tom Sanders opposite Demi Moore in the 1994 Barry Levinson directed thriller Disclosure?', 'answer': 'Michael Douglas', 'category': 'Thriller'}, {'question': 'Christopher Guest directed this 1998 western comedy featuring Matthew Perry, Eugene Levy, and Chris Farley in his final leading role.', 'answer': 'Almost Heroes', 'category': 'Westerns'}, {'question': 'What famous actor appeared in the following three films: Appaloosa, Witness, and A History of Violence?', 'answer': 'Viggo Mortensen', 'category': 'Famous Actors & Actresses'}, {'question': 'What popular supernatural horror franchise features performances from Craig T. Nelson, Tom Skerritt, Lara Flynn Boyle, and Sam Rockwell?', 'answer': "Poltergeist (in 1982's Poltergeist, The Other Side; III; III; 2015's Poltergeist)", 'category': 'Horror'}, {'question': 'Rosario Dawson co-stars with Kevin James as a veterinarian in this 2011 film directed by Frank Coraci that features the voice talents of Sylvester Stallone, Adam Sandler, and Don Rickles.', 'answer': 'Zookeeper', 'category': 'Comedies'}, {'question': 'Name the two films released in 1995 that featured Tom Hanks.', 'answer': 'Apollo 13, Toy Story', 'category': 'Release Dates'}, {'question': "What 2004 rom-com features performances from Catherine O'Hara, Ben Affleck, James Gandolfini, and Christina Applegate?", 'answer': 'Surviving Christmas', 'category': 'Rom-Coms'}, {'question': "Which actor appears in the sequels Alvin and the Chipmunks: The Squeakquel and Big Momma's House 2?", 'answer': 'Zachary Levi', 'category': 'N/A'}, {'question': "Which actress appeared in the films Neighbors 2: Sorority Rising, Hugo, and 2018's Suspiria?", 'answer': 'Chloë Grace Moretz', 'category': '2010s'}, {'question': 'Bill Murray, Melissa McCarthy, and Naomi Watts star in this film about a hedonistic Vietnam War vet who befriends a young boy.', 'answer': 'St. Vincent', 'category': '2010s'}, {'question': 'What actress stars as the character Olivia in the horror film Truth or Dare?', 'answer': 'Lucy Hale', 'category': '2010s'}, {'question': 'What 2012 horror film had a sequel with the subtitle Angel of Death?', 'answer': 'The Woman in Black', 'category': '2010s'}, {'question': "Who directed 2006's Dreamgirls?", 'answer': 'Bill Condon', 'category': 'Eddie Murphy'}, {'question': 'In what animated film does Eddie Murphy say "You know, not everybody likes onions. Cake! Everybody loves cake! Cakes have layers!"?', 'answer': 'Shrek', 'category': 'Eddie Murphy'}, {'question': 'In which film does Eddie Murphy star opposite such actors as Keegan-Michael Key, Mike Epps, and Craig Robinson?', 'answer': 'Dolemite Is My Name', 'category': 'Eddie Murphy'}, {'question': 'Which Eddie Murphy comedy features supporting characters named Penelope Witherspoon and Clarence Beeks?', 'answer': 'Trading Places', 'category': 'Eddie Murphy'}, {'question': 'In which decade did Hitchcock direct only two films?', 'answer': 'the 1970s (with Frenzy, Family Plot)', 'category': 'Alfred Hitchcock'}, {'question': 'Which actor appears in The Mosquito Coast, My Own Private Idaho, and Stand by Me?', 'answer': 'River Phoenix', 'category': 'N/A'}, {'question': 'Dick Van Dyke, Drew Barrymore, and Will Ferrell feature in this 2006 animated film.', 'answer': 'Curious George', 'category': 'N/A'}, {'question': 'Who directed Used Cars, Beowulf, and What Lies Beneath?', 'answer': 'Robert Zemeckis', 'category': 'N/A'}, {'question': 'Which actress appears in The Faculty, GoldenEye, and Taken?', 'answer': 'Famke Janssen', 'category': 'N/A'}, {'question': 'Who played Mark "Rent Boy" Renton in both Trainspotting films?', 'answer': 'Ewan McGregor', 'category': 'N/A'}, {'question': 'What year saw the release of Joy Ride?', 'answer': '2001', 'category': 'N/A'}, {'question': 'What comedy franchise features Kim Cattrall, David Spade, and Bubba Smith?', 'answer': 'Police Academy', 'category': 'N/A'}, {'question': 'Which actress appears in Smokey and the Bandit, Lincoln, and Forrest Gump?', 'answer': 'Sally Field', 'category': 'N/A'}, {'question': 'Julia Stiles plays Katarina "Kat" Stratford in this 1999 rom-com.', 'answer': '10 Things I Hate About You', 'category': 'N/A'}, {'question': 'Jason Voorhees appears in how many films in the 2000s?', 'answer': "3 (Jason X, Freddy vs. Jason, 2009's Friday the 13th)", 'category': 'N/A'}, {'question': 'Who plays the lead role of a man who goes by the name "H" in the 2021 crime film Wrath of Man?', 'answer': 'Jason Statham', 'category': 'New Releases'}, {'question': 'Lawrence Kasdan directed this 1985 western film starring Scott Glenn as Emmett, who assembles a group of misfit cowboys including Kevin Kline and Danny Glover.', 'answer': 'Silverado', 'category': 'Westerns'}, {'question': 'Robert Duvall plays Lt. Frank Grimes alongside Denzel Washington in what 2002 film?', 'answer': 'John Q.', 'category': 'Black Cinema'}, {'question': 'A girl group consisting of the characters Crystal, Ronette, and Chiffon sing the title song in what 1980s musical from director Frank Oz?', 'answer': 'Little Shop of Horrors', 'category': 'Musicals'}, {'question': 'Which Oscar-winning actress plays the Central Park "Pigeon Lady" whom Kevin befriends in Home Alone 2: Lost in New York?', 'answer': 'Brenda Fricker', 'category': 'Family'}, {'question': 'What 2021 film features cameos from Hugh Jackman, Chris Evans, Channing Tatum, and John Krasinski?', 'answer': 'Free Guy', 'category': 'New Releases'}, {'question': 'This 2000 dramedy film from David McNally about a songwriter in New York City features Piper Perabo, Maria Bello, LeAnn Rimes, and John Goodman.', 'answer': 'Coyote Ugly', 'category': '2000s'}, {'question': 'This famous actor featured in the following three films: State of Grace, The Right Stuff, and The Abyss.', 'answer': 'Ed Harris', 'category': 'Famous Actors & Actresses'}, {'question': 'Who played the role of Dr. Samuel Loomis in the Rob Zombie entries of the Halloween franchise?', 'answer': 'Malcolm McDowell', 'category': 'Horror/Thriller'}, {'question': 'Who directed the following: Beaches, Exit to Eden, and The Princess Diaries?', 'answer': 'Garry Marshall', 'category': 'Directors'}, {'question': 'What 2001 comedy features performances from Thomas Ian Nicholas, John Cho, and Eugene Levy?', 'answer': 'American Pie 2', 'category': 'Comedies'}, {'question': 'What year saw the releases of the films Tango & Cash, All Dogs Go to Heaven, and Honey, I Shrunk the Kids?', 'answer': '1989', 'category': 'Release Dates'}, {'question': 'What actor appears in the following three action films: Boiling Point, U.S. Marshals, and Rising Sun?', 'answer': 'Wesley Snipes', 'category': 'Action/Adventure'}, {'question': 'Which actor appeared in the following films: Sky Captain and the World of Tomorrow, The Rum Diary, and Boiler Room?', 'answer': 'Giovanni Ribisi', 'category': 'N/A'}, {'question': "Who voices Gilbert Huph, Bob's demeaning boss in The Incredibles?", 'answer': 'Wallace Shawn', 'category': 'Pixar'}, {'question': 'Mrs. Potato Head packs an extra pair of shoes and what else into the back of Mr. Potato Head in Toy Story 2?', 'answer': 'his angry eyes', 'category': 'Pixar'}, {'question': 'Who directed Toy Story 2?', 'answer': 'John Lasseter', 'category': 'Pixar'}, {'question': 'In Incredibles 2, the villain Screenslaver controls superheroes by making them wear what?', 'answer': 'goggles', 'category': 'Pixar'}, {'question': 'In Monsters University, what is the name of the fraternity that Mike joins?', 'answer': 'Oozma Kappa', 'category': 'Pixar'}, {'question': 'What was the first film in which Michael Keaton voiced a character in a Pixar film?', 'answer': 'Cars', 'category': 'Pixar'}, {'question': 'Which David Lynch film features performances from Charlotte Stewart, Jeanne Bates, and Jack Nance?', 'answer': 'Eraserhead', 'category': 'David Lynch'}, {'question': 'Who directed Harry Dean Stanton and David Lynch in the 2017 film Lucky about a 90-year-old man and the quirky characters that inhabit his off the map desert town?', 'answer': 'John Carroll Lynch', 'category': 'David Lynch'}, {'question': 'In which David Lynch film does Nicolas Cage star as a character named Sailor Ripley?', 'answer': 'Wild at Heart', 'category': 'David Lynch'}, {'question': "Who composed the scores for many of David Lynch's films including Blue Velvet and Mulholland Drive?", 'answer': 'Angelo Badalamenti', 'category': 'David Lynch'}, {'question': 'Sheryl Lee plays which character in Twin Peaks: Fire Walk with Me?', 'answer': 'Laura Palmer', 'category': 'David Lynch'}, {'question': 'Which David Lynch film features supporting performances from Robert Blake, Richard Pryor, and Gary Busey?', 'answer': 'Lost Highway', 'category': 'David Lynch'}, {'question': "Justin Chambers stars as the literary character d'Artagnan in what 2001 action adventure film from director Peter Hyams?", 'answer': 'The Musketeer', 'category': 'Action/Adventure'}, {'question': 'Which actress appears in Teaching Ms. Tingle, The Pick-up Artist, and The Breakfast Club?', 'answer': 'Molly Ringwald', 'category': 'N/A'}, {'question': 'Who directed the movies The Accidental Tourist, French Kiss, and Wyatt Earp?', 'answer': 'Lawrence Kasdan', 'category': 'N/A'}, {'question': 'What 1999 family film features performances from Geena Davis, Hugh Laurie, Jonathan Lipnicki, and Michael J. Fox?', 'answer': 'Stuart Little', 'category': 'N/A'}, {'question': 'What 1980 action comedy sequel features performances from Jackie Gleason, Dom DeLuise, and Sally Field?', 'answer': 'Smokey and the Bandit II', 'category': 'N/A'}, {'question': 'In which year did both Wes Anderson and the Wachowskis make their feature film directorial debuts?', 'answer': '1996 (with Bottle Rocket, Bound)', 'category': 'N/A'}, {'question': 'Who directed the films All the Money in the World and Legend?', 'answer': 'Ridley Scott', 'category': 'Directors'}, {'question': "You'll find The Shop Around the Corner, an independent bookstore owned by Meg Ryan, in what rom-com?", 'answer': "You've Got Mail", 'category': 'Rom-Coms'}, {'question': 'Paul Hogan stars in the titular role of this 1986 comedy that takes place in the Australian Outback and New York City.', 'answer': 'Crocodile Dundee', 'category': 'Comedies'}, {'question': 'John Goodman plays Frank King, one of the owners of B-movie production company King Brothers Productions in what 2010s biopic that features Elle Fanning and Michael Stuhlbarg?', 'answer': 'Trumbo', 'category': '2010s'}, {'question': 'Christopher Plummer played journalist Mike Wallace in what 1999 film co-starring Al Pacino?', 'answer': 'The Insider', 'category': 'Dramas'}, {'question': 'What 1989 family film follows a boy and his brother who hitchhike cross country to compete in a video game championship?', 'answer': 'The Wizard', 'category': '1980s'}, {'question': 'Arnold Schwarzenegger stars as Sheriff Ray Owens alongside Johnny Knoxville and Forest Whitaker in this 2013 action thriller directed by Kim Jee-woon.', 'answer': 'The Last Stand', 'category': 'Action/Adventure'}, {'question': 'Who received an Oscar nomination for his performance as a killer named George Harvey in the fantasy thriller The Lovely Bones?', 'answer': 'Stanley Tucci', 'category': 'Horror/Thriller'}, {'question': "What year saw the releases of The Dead Don't Die, Rambo: Last Blood, and Avengers: Endgame?", 'answer': '2019', 'category': 'Release Dates'}, {'question': 'D. J. Caruso directed Alex Pettyfer and Timothy Olyphant in this 2011 film about an alien race called the Garde who come from the planet Lorien?', 'answer': 'I Am Number Four', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Which Martin Scorsese film features the line "Nowadays, young people, they don\'t know who Jimmy Hoffa was. They don\'t have a clue."?', 'answer': 'The Irishman', 'category': 'Crime'}, {'question': 'What 2001 war film features supporting performances from Eric Bana, Orlando Bloom, Tom Hardy, and Ewan McGregor?', 'answer': 'Black Hawk Down', 'category': 'War'}, {'question': "Which actor appeared in these three films: The Last Detail, The Bucket List, and Something's Gotta Give?", 'answer': 'Jack Nicholson', 'category': 'Dramas'}, {'question': 'What 1998 comedic drama about a doctor from director Tom Shadyac has the tagline "Laughter is contagious."?', 'answer': 'Patch Adams', 'category': '1990s'}, {'question': 'What 1950s romantic drama that depicts the bombing of Pearl Harbor won the Best Picture Oscar?', 'answer': 'From Here to Eternity', 'category': 'N/A'}, {'question': 'How many times did Christopher Reeve play Superman in the 1980s?', 'answer': '3 (in II, III, The Quest for Peace)', 'category': '1980s'}, {'question': 'Who starred in the 80s films Repo Man, Wisdom, and Maximum Overdrive?', 'answer': 'Emilio Estevez', 'category': '1980s'}, {'question': 'Robert Benton directed this Oscar-winning 1984 film about a Depression-era Texas widow trying to save her cotton farm featuring Ed Harris and Danny Glover.', 'answer': 'Places in the Heart', 'category': '1980s'}, {'question': 'What 80s comedy franchise had the entries Citizens on Patrol, Back in Training, and Their First Assignment?', 'answer': 'Police Academy', 'category': '1980s'}, {'question': "Which famous actor infamously plays the role of Holly's landlord Mr. Yunioshi in Breakfast at Tiffany's?", 'answer': 'Mickey Rooney', 'category': 'Audrey Hepburn'}, {'question': 'In the film Funny Face, Maggie Prescott is a publisher for what fashion magazine that is looking for the next big fashion trend?', 'answer': 'Quality', 'category': 'Audrey Hepburn'}, {'question': 'William Holden and Audrey Hepburn were directed by Richard Quine in this 1964 romantic comedy.', 'answer': 'Paris When It Sizzles', 'category': 'Audrey Hepburn'}, {'question': 'Which Audrey Hepburn movie features risk-taking aerial firefighter Pete Sandich, who is dating a pilot named Dorinda Durston?', 'answer': 'Always', 'category': 'Audrey Hepburn'}, {'question': 'What is the fake name that Marion Crane uses when she checks into the Bates Motel in the film Psycho?', 'answer': 'Marie Samuels', 'category': 'Alfred Hitchcock'}, {'question': 'Jack Lemmon and Walter Matthau star in this 1993 romantic comedy.', 'answer': 'Grumpy Old Men', 'category': 'N/A'}, {'question': 'Which famed comedian played God in the Oh, God! trilogy?', 'answer': 'George Burns', 'category': 'N/A'}, {'question': "Who plays Rocky's trainer Mickey in Rocky?", 'answer': 'Burgess Meredith', 'category': 'N/A'}, {'question': 'Javier Bardem and Woody Harrelson feature in this 2007 Coen Bros film.', 'answer': 'No Country for Old Men', 'category': 'N/A'}, {'question': 'Which 2017 comic book film features Stephen Merchant, Richard E. Grant, and Patrick Stewart?', 'answer': 'Logan', 'category': 'N/A'}, {'question': 'Who starred in the 90s action films Nowhere to Run, Universal Soldier, and Sudden Death?', 'answer': 'Jean-Claude Van Damme', 'category': '1990s'}, {'question': "Which actress plays Laney Boggs, a dorky, solitary, unpopular art student in the 1999 film She's All That?", 'answer': 'Rachael Leigh Cook', 'category': 'Rom-Coms'}, {'question': "What Bruce Lee movie was completed five years after his death, using a combination of unused footage, stunt doubles, and actual footage from Lee's funeral?", 'answer': 'Game of Death', 'category': 'Action/Adventure'}, {'question': '"I don\'t want to come off as arrogant here, but I\'m the greatest botanist on this planet." is said by Matt Damon in which sci-fi drama?', 'answer': 'The Martian', 'category': 'Quotes'}, {'question': 'Which actor appeared in the films American Gangster, The Fighting Temptations, and Selma?', 'answer': 'Cuba Gooding Jr.', 'category': 'Black Cinema'}, {'question': 'Who directed Cary Grant and Priscilla Lane in the classic 1944 dark comedy film Arsenic and Old Lace?', 'answer': 'Frank Capra', 'category': 'Directors'}, {'question': 'What horror franchise has featured performances from the actor Tony Todd, David Koechner, Mary Elizabeth Winstead, and Seann William Scott?', 'answer': 'Final Destination (in Final Destination, 2, 3, 5; 5; 3; Final Destination)', 'category': 'Horror/Thriller'}, {'question': 'This classic Robert Altman follows a unit of medical personnel during the Korean War.', 'answer': 'M*A*S*H', 'category': '1970s'}, {'question': 'What 2012 rom-com follows five couples as their lives are turned upside down by the difficulties and surprises of parenthood and features Cameron Diaz, Chris Rock, and Jennifer Lopez?', 'answer': "What to Expect When You're Expecting", 'category': 'Rom-Coms'}, {'question': "Which Oscar-winning actress appeared in the films Shoot the Moon, Manhattan Murder Mystery, and 2010's Morning Glory?", 'answer': 'Diane Keaton', 'category': 'Famous Actors & Actresses'}, {'question': "What year saw the releases of Don't Tell Mom the Babysitter's Dead, My Girl, and Career Opportunities?", 'answer': '1991', 'category': 'Release Dates'}, {'question': 'David Wenham and Nicole Kidman play a married couple who adopt a young boy from India in which biographical film?', 'answer': 'Lion', 'category': 'Nicole Kidman'}, {'question': "Which actor stars as Nicole Kidman's son Jared in 2018's Boy Erased?", 'answer': 'Lucas Hedges', 'category': 'Nicole Kidman'}, {'question': 'Kidman plays a taxidermist, Millicent Clyde, in what 2010s family film?', 'answer': 'Paddington', 'category': 'Nicole Kidman'}, {'question': 'Which female filmmaker directed Nicole Kidman in the 1990s period piece The Portrait of a Lady?', 'answer': 'Jane Campion', 'category': 'Nicole Kidman'}, {'question': 'Nora Ephron received her only Oscar nominations for what category?', 'answer': 'Best Original Screenplay (for Silkwood, When Harry Met Sally..., Sleepless in Seattle)', 'category': 'Nora Ephron'}, {'question': "Which Oscar-winning actress plays Iris a.k.a. Endora in 2005's Bewitched?", 'answer': 'Shirley MacLaine', 'category': 'Nora Ephron'}, {'question': 'Diane Keaton starred in and directed what 2000 film written by Nora Ephron that also starred Meg Ryan and Lisa Kudrow?', 'answer': 'Hanging Up', 'category': 'Nora Ephron'}, {'question': "Which actor plays Amy Adams' husband in Julie & Julia?", 'answer': 'Chris Messina', 'category': 'Nora Ephron'}, {'question': 'Which actress stars as Frances Stevens, the daughter of a wealthy widow, in the film To Catch a Thief?', 'answer': 'Grace Kelly', 'category': 'Alfred Hitchcock'}, {'question': 'Which actor appeared in the films Out of Sight, Jackie Brown, Jack Frost, Mr. Mom, and Gung Ho?', 'answer': 'Michael Keaton', 'category': 'N/A'}, {'question': 'What year saw the releases of A Night to Remember and Vertigo?', 'answer': '1958', 'category': 'N/A'}, {'question': 'Which actress appears in Die Another Day, Dick Tracy, and Evita?', 'answer': 'Madonna', 'category': 'N/A'}, {'question': 'How many entries of the Karate Kid franchise did John G. Avildsen direct?', 'answer': '3 entries (The Karate Kid, Part II, Part III)', 'category': 'N/A'}, {'question': 'Which film in the Twilight Saga was released in 2009?', 'answer': 'The Twilight Saga: New Moon', 'category': 'N/A'}, {'question': 'Blake Edwards directed whom as the wacky Inspector Clouseau in the 1970s films The Return of the Pink Panther and The Pink Panther Strikes Again?', 'answer': 'Peter Sellers', 'category': '1970s'}, {'question': 'What 2010s action thriller stars Mark Wahlberg, Lauren Cohan, and John Malkovich?', 'answer': 'Mile 22', 'category': 'Action/Adventure'}, {'question': "You'll find the characters William S. Holabird and Lewis Tappan, played by Pete Postlethwaite and Stellan Skarsgård, in what Steven Spielberg film?", 'answer': 'Amistad', 'category': 'Steven Spielberg'}, {'question': "Which actor plays Tonto in 2013's The Lone Ranger?", 'answer': 'Johnny Depp', 'category': 'Remakes & Reboots'}, {'question': "You'll find the characters of Little Rock and Wichita in what 2009 horror comedy?", 'answer': 'Zombieland', 'category': 'Horror'}, {'question': "Mel Gibson's Martin Riggs is reassigned and partnered with Danny Glover's Roger Murtaugh in what 1987 buddy cop comedy from director Richard Donner?", 'answer': 'Lethal Weapon', 'category': 'Action/Adventure'}, {'question': 'Rob Reiner directed Billy Crystal as Harry opposite what actress as Sally in the 1989 comedy When Harry Met Sally...?', 'answer': 'Meg Ryan', 'category': 'Rom-Coms'}, {'question': 'Jennifer Aniston and Adam Sandler star in what 2019 Netflix comedy about a couple on vacation who are framed for the murder of an elderly billionaire?', 'answer': 'Murder Mystery', 'category': 'Streaming'}, {'question': 'What comedy star was nominated for Best Actor for playing Parry, a homeless man whose mission is to find the Holy Grail, in the 1991 film The Fisher King?', 'answer': 'Robin Williams', 'category': 'Oscars'}, {'question': 'What 2014 Gareth Edwards directed film has a 2019 sequel subtitled King of the Monsters?', 'answer': 'Godzilla', 'category': 'Monster'}, {'question': 'What 2017 horror comedy follows Tree, a murdered college student who begins reliving the day repeatedly until she can stop the killer?', 'answer': 'Happy Death Day', 'category': '2010s'}, {'question': 'Which famous actor appeared in the following four films: Taken, Men in Black: International, The Grey, and Love Actually?', 'answer': 'Liam Neeson', 'category': 'Famous Actors & Actresses'}, {'question': 'Who stars as Mabel "Madea" Earlene Simmons and also directs the bulk of the movies in the Madea series?', 'answer': 'Tyler Perry', 'category': 'Black Cinema'}, {'question': 'Which actress appears in the following three dramas: Pearl Harbor, Underworld, and The Aviator?', 'answer': 'Kate Beckinsale', 'category': 'Dramas'}, {'question': 'Which actress co-stars as Dr. Lily Houghton alongside Dwayne Johnson in the 2021 film Jungle Cruise?', 'answer': 'Emily Blunt', 'category': 'Disney'}, {'question': 'Stephen King plays the character known as Jordy Verrill in what anthology film?', 'answer': 'Creepshow', 'category': 'Stephen King'}, {'question': 'Who directed Kathy Bates and Jennifer Jason Leigh in Dolores Claiborne?', 'answer': 'Taylor Hackford', 'category': 'Stephen King'}, {'question': 'Which Stephen King adaptation stars Tom Hanks, Michael Clarke Duncan, and Sam Rockwell?', 'answer': 'The Green Mile', 'category': 'Stephen King'}, {'question': 'Who played the lead role of William "Bill" Gartley in the 1995 film The Mangler?', 'answer': 'Robert Englund', 'category': 'Stephen King'}, {'question': "Who plays Jud Crandall in 2019's Pet Sematary?", 'answer': 'John Lithgow', 'category': 'Stephen King'}, {'question': 'This Die Hard riff stars Nicolas Cage as Cameron Poe, who spends the bulk of the film on a plane full of criminals, in what 1990s action film?', 'answer': 'Con Air', 'category': 'WC: Die Hard in a ___'}, {'question': 'What Die Hard meets The Towering Inferno film stars Dwayne Johnson as Will Sawyer, a former Marine and HRT leader, who now assesses building security?', 'answer': 'Skyscraper', 'category': 'WC: Die Hard in a ___'}, {'question': 'Who directed the Die Hard on a plane riff Air Force One, which starred Harrison Ford as President James Marshall, who famously quips "Get off my plane!"?', 'answer': 'Wolfgang Petersen', 'category': 'WC: Die Hard in a ___'}, {'question': "In Olympus Has Fallen, one of two Die Hard in the White House riffs, who plays the POTUS that Gerard Butler's Mike Banning must try and rescue?", 'answer': 'Aaron Eckhart', 'category': 'WC: Die Hard in a ___'}, {'question': 'Which Jean-Claude Van Damme action film, which riffs as Die Hard in a hockey rink, is set in a Pittsburgh hockey stadium?', 'answer': 'Sudden Death', 'category': 'WC: Die Hard in a ___'}, {'question': 'Which Spielberg film is known for coining the line "Life finds a way."?', 'answer': 'Jurassic Park', 'category': 'Steven Spielberg'}, {'question': 'Which actor played the real-life individuals Jake LaMotta and Al Capone?', 'answer': 'Robert De Niro (in Raging Bull, The Untouchables)', 'category': 'Famous Actors & Actresses'}, {'question': 'Guns N\' Roses performed the song "You Could Be Mine" on the soundtrack of what blockbuster from director James Cameron?', 'answer': 'Terminator 2: Judgment Day', 'category': 'Scores & Soundtracks'}, {'question': 'Name one of the two leads in the 1973 romance film The Way We Were.', 'answer': 'Barbra Streisand, Robert Redford', 'category': 'Romance'}, {'question': 'Benjamin Bratt plays Capt. Ricardo Ramírez, part of the U.S. Special Forces group fighting the Colombian drug cartel, in what 1994 film featuring Willem Dafoe?', 'answer': 'Clear and Present Danger', 'category': 'Spy'}, {'question': "Who plays Laurie Strode in 2007's Halloween?", 'answer': 'Scout Taylor-Compton', 'category': '2000s'}, {'question': "Which 1995 comic book film features supporting performances from Jim Carrey, Nicole Kidman, and Chris O'Donnell?", 'answer': 'Batman Forever', 'category': 'Comic Book'}, {'question': "Who directed Charlie's Angels: Full Throttle, This Means War, and Terminator Salvation?", 'answer': 'McG', 'category': 'Directors'}, {'question': 'What 2014 comedy, starring Chris Pratt and Elizabeth Banks, featured the Oscar-nominated song "Everything Is Awesome"?', 'answer': 'The Lego Movie', 'category': 'Family'}, {'question': 'The Last Key is the subtitle of the fourth film in what horror franchise that has featured performances from Rose Byrne, Lin Shaye, and Patrick Wilson?', 'answer': 'Insidious', 'category': 'Horror'}, {'question': "Which actress plays Sara, who falls for John Cusack's Jonathan on a magical evening in New York City, in Serendipity?", 'answer': 'Kate Beckinsale', 'category': 'Romance'}, {'question': 'Tim Burton directed which actor in the lead role of astronaut Leo Davidson in the 2001 remake of Planet of the Apes?', 'answer': 'Mark Wahlberg', 'category': '2000s'}, {'question': 'Which 2017 Netflix remake from director Adam Wingard follows high schooler Light Turner, who stumbles across a mysterious notebook and its owner Ryuk?', 'answer': 'Death Note', 'category': 'Streaming'}, {'question': 'Which 2004 Peter Berg film stars Billy Bob Thornton and follows a small, turbulent town in Texas that obsesses over their high school football team?', 'answer': 'Friday Night Lights', 'category': 'Sports'}, {'question': 'Which film from director Mel Brooks features characters such as Lone Starr, Barf, Pizza the Hutt, and Princess Vespa?', 'answer': 'Spaceballs', 'category': 'Mixed Bag'}, {'question': 'Which of the following films does not feature Jeff Daniels: The Social Network, Gettysburg, Steve Jobs, or Arachnophobia?', 'answer': 'The Social Network', 'category': 'Famous Actors & Actresses'}, {'question': 'Gene Hackman featured alongside Harrison Ford, Cindy Williams, and Robert Duvall in this 1974 Best Picture nominee.', 'answer': 'The Conversation', 'category': 'Gene Hackman'}, {'question': 'What year saw Gene Hackman return to the role of NYPD detective Jimmy "Popeye" Dolan in French Connection II?', 'answer': '1975', 'category': 'Gene Hackman'}, {'question': 'Gene Hackman featured alongside Luke Wilson, Bill Murray, Anjelica Huston, and Danny Glover in this 2001 dramedy directed by Wes Anderson.', 'answer': 'The Royal Tenenbaums', 'category': 'Gene Hackman'}, {'question': 'Who stars opposite Gene Hackman as his daughter and opposing legal counsel in the 1991 legal drama Class Action directed by Michael Apted?', 'answer': 'Mary Elizabeth Mastrantonio', 'category': 'Gene Hackman'}, {'question': "Who features as Doc Holliday alongside Kevin Costner in the titular role of the 1994 biographical western Wyatt Earp and Gene Hackman, who portrayed Earp's father?", 'answer': 'Dennis Quaid', 'category': 'Gene Hackman'}, {'question': 'What is the final film Mel Brooks has directed to date?', 'answer': 'Dracula: Dead and Loving It', 'category': 'Mel Brooks'}, {'question': 'Which Brooks film features the line "We are so poor, we do not even have a language! Just this stupid accent!"?', 'answer': 'History of the World, Part I', 'category': 'Mel Brooks'}, {'question': "Who plays Hedley Lamarr's flunky, Taggart, in Blazing Saddles?", 'answer': 'Slim Pickens', 'category': 'Mel Brooks'}, {'question': 'Who provides the voice of Dot Matrix in Spaceballs?', 'answer': 'Joan Rivers', 'category': 'Mel Brooks'}, {'question': 'Which Mel Brooks movie features the supporting characters Franz Liebkind and Ulla the secretary?', 'answer': 'The Producers', 'category': 'Mel Brooks'}, {'question': 'What Spielberg film had the tagline "He is afraid. He is alone. He is three million light years from home."?', 'answer': 'E.T. the Extra-Terrestrial', 'category': 'Steven Spielberg'}, {'question': 'In the Men in Black franchise, Will Smith plays Agent J, and Tommy Lee Jones plays Agent what?', 'answer': 'K', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Who starred, produced, directed, and wrote the film Heaven Can Wait?', 'answer': 'Warren Beatty', 'category': '1970s'}, {'question': "Which Oscar-nominated actress plays Leonardo DiCaprio's wife in Shutter Island?", 'answer': 'Michelle Williams', 'category': 'Martin Scorsese'}, {'question': 'Peter Landesman directed Will Smith in what sports drama?', 'answer': 'Concussion', 'category': 'Sports'}, {'question': 'Jeff Wadlow directed what comic book movie sequel?', 'answer': 'Kick-Ass 2', 'category': 'Comic Book'}, {'question': 'Inkheart, Monkeybone, and The Mummy: Tomb of the Dragon Emperor all star which actor?', 'answer': 'Brendan Fraser', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What year saw the releases of the Steven Spielberg films War of the Worlds and Munich?', 'answer': '2005', 'category': 'Release Dates'}, {'question': 'Matt Reeves directed what 2008 found footage creature feature starring Lizzy Caplan?', 'answer': 'Cloverfield', 'category': 'Monster'}, {'question': 'Which Academy Award winning actress appears in both My Cousin Vinny and The Lincoln Lawyer?', 'answer': 'Marisa Tomei', 'category': 'Crime'}, {'question': 'Which famed sports drama became known for the line "Hey... Dad? You wanna have a catch?"?', 'answer': 'Field of Dreams', 'category': '1980s'}, {'question': 'In Anchorman: The Legend of Ron Burgundy, who plays weatherman Brick Tamland?', 'answer': 'Steve Carell', 'category': 'Comedies'}, {'question': 'Who directed the 1986 film Stand by Me starring Corey Feldman and River Phoenix?', 'answer': 'Rob Reiner', 'category': 'Coming of Age'}, {'question': 'Which actor appears in the following movies: Synchronic, Real Steel, Ant-Man, and The Night Before?', 'answer': 'Anthony Mackie', 'category': 'Famous Actors & Actresses'}, {'question': 'Gary Busey and Danny Glover appear in which film in the Predator franchise?', 'answer': 'Predator 2', 'category': 'Sequels & Prequels'}, {'question': "Which of the following actors does not appear in Sam Raimi's Spider-Man 2: Joel McHale, Octavia Spencer, Bruce Campbell, or Cliff Robertson?", 'answer': 'Octavia Spencer', 'category': 'Comic Book'}, {'question': 'Which actor received Oscar nominations for the films Dead Man Walking and I Am Sam?', 'answer': 'Sean Penn', 'category': 'Oscars'}, {'question': 'This 2017 film won the Oscar for Best Picture at the 90th Academy Awards in 2018.', 'answer': 'The Shape of Water', 'category': 'Oscars'}, {'question': 'How many times has Matt Damon been nominated for Best Actor?', 'answer': '2 (for Good Will Hunting, The Martian)', 'category': 'Oscars'}, {'question': 'Which actor received Best Supporting Actor nominations for the films Apollo 13 and The Truman Show?', 'answer': 'Ed Harris', 'category': 'Oscars'}, {'question': 'What was the first film Steven Spielberg directed that received a Best Picture nomination?', 'answer': 'Jaws', 'category': 'Oscars'}, {'question': 'Who plays the character of Doug Harris, a successful tax attorney, alongside Kevin Hart in The Wedding Ringer?', 'answer': 'Josh Gad', 'category': 'Kevin Hart'}, {'question': 'Kevin Hart voices Snowball in The Secret Life of Pets. What type of animal is Snowball?', 'answer': 'a rabbit', 'category': 'Kevin Hart'}, {'question': 'Kevin Hart appears as the character CJ in how many films in the Scary Movie franchise?', 'answer': '2 (3, 4)', 'category': 'Kevin Hart'}, {'question': 'Kevin Hart has a supporting role as Number 17 in which 2000s sci-fi comedy starring Eddie Murphy?', 'answer': 'Meet Dave', 'category': 'Kevin Hart'}, {'question': 'Which comedic actor plays A.J., a hacker who aids the heroes in an investigation in Ride Along 2?', 'answer': 'Ken Jeong', 'category': 'Kevin Hart'}, {'question': 'Which Disney animated film has an opening musical number in which townspeople repeatedly sing the word "Bonjour"?', 'answer': 'Beauty and the Beast', 'category': 'Disney'}, {'question': 'Which Wizarding World actor plays the pimp Drexl, whom an apparition of Elvis tells Christian Slater to kill, in True Romance?', 'answer': 'Gary Oldman', 'category': 'Robert Rodriguez & Quentin Tarantino'}, {'question': 'In what 1988 film does a gangster named Ken hide the keys to a safety deposit box containing stolen diamonds inside an aquarium?', 'answer': 'A Fish Called Wanda', 'category': '1980s'}, {'question': 'Which 2021 Netflix adventure film stars Dwayne Johnson, Ryan Reynolds, and Gal Gadot?', 'answer': 'Red Notice', 'category': 'Streaming'}, {'question': "You'll find which Oscar-winning actress in the following films: Heat, Garden State, and Jackie?", 'answer': 'Natalie Portman', 'category': 'Dramas'}, {'question': 'Which 1995 modern classic from director F. Gary Gray featured the tagline "a lot can go down between thursday and saturday..."?', 'answer': 'Friday', 'category': 'Black Cinema'}, {'question': 'Which Pixar film features the vocal talents of Kaitlyn Dias, Bill Hader, Richard Kind, and Diane Lane?', 'answer': 'Inside Out', 'category': 'Pixar'}, {'question': "What actor, who has been nominated for three acting Oscars, plays the lead role of Rudy Baylor in Francis Ford Coppola's The Rainmaker?", 'answer': 'Matt Damon', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'Which Oscar-winning director helmed the films Angels & Demons and Inferno, based on novels by Dan Brown?', 'answer': 'Ron Howard', 'category': 'Mystery/Thriller'}, {'question': 'What 1988 western from Christopher Cain stars Emilio Estevez as Billy the Kid, alongside Charlie Sheen, Kiefer Sutherland, and Lou Diamond Phillips?', 'answer': 'Young Guns', 'category': 'Westerns'}, {'question': 'Which legendary spoof movie star plays the role of President Baxter Harris in Scary Movie 3?', 'answer': 'Leslie Nielsen', 'category': 'Spoof'}, {'question': "Pablo Larraín's Spencer is led by which actress as Diana, Princess of Wales?", 'answer': 'Kristen Stewart', 'category': 'Biopics'}, {'question': 'What 2005 film involves Max Bialystock and Leo Bloom, who want to make a Broadway flop with the offensive musical Springtime for Hitler?', 'answer': 'The Producers', 'category': 'Musicals'}, {'question': 'Which 2019 horror thriller features supporting performances from Cliff Curtis, Bruce Greenwood, Henry Thomas, and Kyliegh Curran?', 'answer': 'Doctor Sleep', 'category': 'N/A'}, {'question': 'What film directed by Edgar Wright features such songs as "Bellbottoms", "Harlem Shuffle", and "Brighton Rock"?', 'answer': 'Baby Driver', 'category': 'Scores & Soundtracks'}, {'question': "1964's Mary Poppins won the Academy Award for Best Original Song for which magical tune?", 'answer': 'Chim Chim Cher-ee', 'category': 'Scores & Soundtracks'}, {'question': "Who composed the score for Pixar's Inside Out?", 'answer': 'Michael Giacchino', 'category': 'Scores & Soundtracks'}, {'question': 'Who composed the score for the following Michael Mann films: Heat and Public Enemies?', 'answer': 'Elliot Goldenthal', 'category': 'Scores & Soundtracks'}, {'question': 'Madonna\'s "Crazy for You" and Journey\'s "Only the Young" are both featured in the soundtrack of what 1985 Matthew Modine movie?', 'answer': 'Vision Quest', 'category': 'Scores & Soundtracks'}, {'question': "What is the last name of Harry's aunt and uncle that he lives with?", 'answer': 'Dursley', 'category': 'Wizarding World'}, {'question': "Luna Lovegood's father is the editor of what magazine?", 'answer': 'The Quibbler', 'category': 'Wizarding World'}, {'question': 'Who directed Harry Potter and the Goblet of Fire?', 'answer': 'Mike Newell', 'category': 'Wizarding World'}, {'question': 'Emma Thompson portrays Professor Sybill Trelawney in how many Harry Potter films?', 'answer': '3 (in The Prisoner of Azkaban, The Order of the Phoenix, The Deathly Hallows – Part 2)', 'category': 'Wizarding World'}, {'question': "Who killed Voldemort's pet snake that held a piece of his soul in The Deathly Hallows – Part 2?", 'answer': 'Neville Longbottom', 'category': 'Wizarding World'}, {'question': 'In which Will Smith action thriller, from director Tony Scott, does Hackman appear as Edward "Brill" Lyle, a former NSA communications expert?', 'answer': 'Enemy of the State', 'category': 'Gene Hackman'}, {'question': 'Peter Banning, a workaholic father who has lost sight of his past and who he really is, is the lead character of what Steven Spielberg film?', 'answer': 'Hook', 'category': 'Amblin'}, {'question': 'Who plays the title character, a homicidal singing cowboy, in The Ballad of Buster Scruggs?', 'answer': 'Tim Blake Nelson', 'category': 'Westerns'}, {'question': "Which 2007 crime thriller starring Casey Affleck, Ed Harris, and Michelle Monaghan marked Ben Affleck's directorial debut?", 'answer': 'Gone Baby Gone', 'category': 'Matt & Ben'}, {'question': 'Which Oscar winner plays the representative to the "Life Extension" company in the film Vanilla Sky?', 'answer': 'Tilda Swinton', 'category': 'Tom Cruise'}, {'question': 'George Tillman Jr. directed what 1997 dramedy featuring Vivica A. Fox and Nia Long, which is told through the eyes of 11-year-old Ahmad?', 'answer': 'Soul Food', 'category': 'Black Cinema'}, {'question': 'What horror franchise has featured performances from Mckenna Grace, Patrick Wilson, Anthony LaPaglia, and John Noble?', 'answer': 'The Conjuring (in Annabelle Comes Home; The Conjuring, 2, Annabelle Comes Home, The Devil Made Me Do It; Annabelle: Creation; The Devil Made Me Do It)', 'category': 'Horror'}, {'question': 'Which 1995 comedy starring Chris Farley and David Spade featured the tagline "If at first you don\'t succeed, lower your standards."?', 'answer': 'Tommy Boy', 'category': 'Comedies'}, {'question': 'What actor appears in the following films: To Wong Foo, Thanks for Everything! Julie Newmar, Donnie Darko, and The Outsiders?', 'answer': 'Patrick Swayze', 'category': 'Famous Actors & Actresses'}, {'question': 'What 2004 time travel film starring Ashton Kutcher and Amy Smart follows a man named Evan who attempts to fix his past to disastrous results?', 'answer': 'The Butterfly Effect', 'category': '2000s'}, {'question': "Which of the following actors did not appear in the 2011 film New Year's Eve: Josh Duhamel, Katherine Heigl, Bradley Cooper, or Nat Wolff?", 'answer': 'Bradley Cooper', 'category': 'Romance'}, {'question': 'Which film features the vocal talents of Bruce Campbell, Emily Mortimer, Michael Caine, and Cheech Marin?', 'answer': 'Cars 2', 'category': 'Pixar'}, {'question': 'Jacob Tremblay plays the son of which actress, who received an Oscar for her role as Joy, in the film Room?', 'answer': 'Brie Larson', 'category': 'Dramas'}, {'question': 'What is the title of the 2007 prequel about Hannibal Lecter that starred the late Gaspard Ulliel, Rhys Ifans, and Dominic West?', 'answer': 'Hannibal Rising', 'category': 'Sequels & Prequels'}, {'question': 'Which 1980s film features the characters Stacy Hamilton, Mark Ratner, Brad Hamilton, and Jeff Spicoli?', 'answer': 'Fast Times at Ridgemont High', 'category': 'Coming of Age'}, {'question': 'Harrison Ford co-stars with Anne Heche in what 1998 film from director Ivan Reitman?', 'answer': 'Six Days, Seven Nights', 'category': 'Action/Adventure'}, {'question': 'Tom Cruise starred in which legal thriller that was adapted from a John Grisham novel?', 'answer': 'The Firm', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'In what 80s film does an alcoholic lawyer played by Paul Newman take a malpractice case against a hospital run by the Catholic Archdiocese to trial?', 'answer': 'The Verdict', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'The 2020 film The Trial of the Chicago 7 depicts a long-running trial that began during which decade?', 'answer': 'the 1960s', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'Mark Ruffalo stars as corporate defense lawyer Robert Bilott in what 2019 film from director Todd Haynes?', 'answer': 'Dark Waters', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'Who directed 12 Angry Men?', 'answer': 'Sidney Lumet', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'Samuel L. Jackson played a criminal and gun runner named Ordell Robbie in which Quentin Tarantino film?', 'answer': 'Jackie Brown', 'category': 'Samuel L. Jackson'}, {'question': 'Samuel L. Jackson voiced the character of Whiplash opposite Ryan Reynolds and Maya Rudolph in what 2013 animated film?', 'answer': 'Turbo', 'category': 'Samuel L. Jackson'}, {'question': 'Samuel L. Jackson played the character of Lt. Cmdr. Robby Jackson in which 1992 spy thriller?', 'answer': 'Patriot Games', 'category': 'Samuel L. Jackson'}, {'question': "In Unbreakable, Sam Jackson's Elijah Price is often found wearing clothes of various shades of what color?", 'answer': 'purple', 'category': 'Samuel L. Jackson'}, {'question': 'Samuel L. Jackson\'s character went by the nickname of "Hondo" in what 2000s action film?', 'answer': 'S.W.A.T.', 'category': 'Samuel L. Jackson'}, {'question': 'Who plays the role of Oswald Cobblepot, also known as the Penguin, in Batman Returns?', 'answer': 'Danny DeVito', 'category': 'Sequels & Prequels'}, {'question': 'Who directed Brad Pitt in the film World War Z?', 'answer': 'Marc Forster', 'category': 'Brad Pitt & George Clooney'}, {'question': 'Mark Dacascos and Scott Wolf star as brothers Jimmy and Billy Lee in what martial arts film based on a video game?', 'answer': 'Double Dragon', 'category': 'Martial Arts'}, {'question': 'Michelle Pfeiffer plays Stephanie, the leader of a girl gang, in what musical sequel?', 'answer': 'Grease 2', 'category': 'Musicals'}, {'question': 'Jay Baruchel voices Hiccup, a Norse teen who befriends an injured dragon he names Toothless, in what 2010 DreamWorks Animation film?', 'answer': 'How to Train Your Dragon', 'category': 'Animated'}, {'question': "Which comedian stars in the films Big Momma's House, Black Knight, and National Security?", 'answer': 'Martin Lawrence', 'category': '2000s'}, {'question': 'Zach Braff wrote, directed, and starred in what 2004 romantic dramedy that also stars Natalie Portman and Peter Sarsgaard?', 'answer': 'Garden State', 'category': 'Dramas'}, {'question': 'In the 1993 thriller The Fugitive, which of the following actors did not appear: Joe Pantoliano, Cynthia Nixon, Jane Lynch, or Julianne Moore?', 'answer': 'Cynthia Nixon', 'category': 'Action/Adventure'}, {'question': 'Which actress made her big screen debut as Tina Carlyle, opposite Jim Carrey, in the 1994 comedy The Mask?', 'answer': 'Cameron Diaz', 'category': 'Comedies'}, {'question': 'Jennifer Lawrence stars as the courageous Katniss Everdeen in what dystopian science-fiction series with four films to date?', 'answer': 'The Hunger Games', 'category': 'Fantasy/Sci-Fi'}, {'question': 'Rose goes in search of her adopted daughter within the confines of a strange, desolate town in what 2006 film based on a video game?', 'answer': 'Silent Hill', 'category': 'Horror'}, {'question': 'Who starred in and directed the 1993 version of Much Ado About Nothing, also featuring Emma Thompson, Michael Keaton, Keanu Reeves, and Kate Beckinsale?', 'answer': 'Kenneth Branagh', 'category': 'Rom-Coms'}, {'question': "Which actor appeared in the following four films: Child's Play, The Exorcist III, Rob Zombie's Halloween, and The Lord of the Rings: The Two Towers?", 'answer': 'Brad Dourif', 'category': 'Famous Actors & Actresses'}, {'question': 'What 2016 film from Dexter Fletcher, which stars Taron Egerton and Hugh Jackman, follows the true life story of Michael Edwards and his journey to the 1988 Winter Olympics in Calgary, Alberta?', 'answer': 'Eddie the Eagle', 'category': 'Biopics'}, {'question': 'Aliens intercept video feeds of classic arcade games and misinterpret them as a declaration of war in what film starring Adam Sandler and Kevin James?', 'answer': 'Pixels', 'category': 'WC: Alien Invasion'}, {'question': 'Who directed the 1996 comedic alien invasion film Mars Attacks!, which stars Jack Nicholson, Michael J. Fox, Pierce Brosnan, and Glenn Close?', 'answer': 'Tim Burton', 'category': 'WC: Alien Invasion'}, {'question': 'Stephen Herek made his directorial debut with what 1986 film where a group of dangerous aliens known as Krites appear in rural Kansas, terrifying the locals?', 'answer': 'Critters', 'category': 'WC: Alien Invasion'}, {'question': "2011's British sci-fi film Attack the Block, from director Joe Cornish, follows a group of teens who defend their neighborhood from extraterrestrials. Who plays the group's leader, Moses?", 'answer': 'John Boyega', 'category': 'WC: Alien Invasion'}, {'question': 'What 2010s alien invasion film features performances from Maika Monroe, William Fichtner, Liam Hemsworth, and Vivica A. Fox?', 'answer': 'Independence Day: Resurgence', 'category': 'WC: Alien Invasion'}, {'question': "In Cast Away, who played Kelly Frears, Chuck's girlfriend?", 'answer': 'Helen Hunt', 'category': 'Tom Hanks'}, {'question': 'Hanks stars in which 1980s comedy with the tagline "A man\'s tradition every woman should know about."?', 'answer': 'Bachelor Party', 'category': 'Tom Hanks'}, {'question': 'In what film does Tom Hanks\' character play the song "Heart and Soul" by jumping on a giant toy piano?', 'answer': 'Big', 'category': 'Tom Hanks'}, {'question': "In Steven Spielberg's The Post, what is the name of the U.S. military contractor whose employee copies classified reports on the progress in Vietnam?", 'answer': 'the RAND Corporation', 'category': 'Tom Hanks'}, {'question': 'Which actor plays the title character, a struggling magician, in the 2009 comedy The Great Buck Howard?', 'answer': 'John Malkovich', 'category': 'Tom Hanks'}, {'question': 'Which actress plays the role of Jyn Erso, who is attempting to steal the Death Star plans for the Rebel Alliance in Rogue One: A Star Wars Story?', 'answer': 'Felicity Jones', 'category': 'Sequels & Prequels'}, {'question': "What famous horror director helmed 2018's Aquaman?", 'answer': 'James Wan', 'category': 'DC'}, {'question': 'While Paul Greengrass has become known as the definitive Bourne director, who initially directed Matt Damon in the first entry The Bourne Identity?', 'answer': 'Doug Liman', 'category': 'Matt & Ben'}, {'question': 'Who plays the role of Special Agent Paul Pryzwarra in Déjà Vu?', 'answer': 'Val Kilmer', 'category': 'Denzel Washington'}, {'question': 'What historical epic from director Ridley Scott features performances from David Thewlis, Eva Green, Liam Neeson, and Edward Norton?', 'answer': 'Kingdom of Heaven', 'category': 'Scotts'}, {'question': 'Morgan Freeman appears in what sci-fi film that features supporting performances from Andrea Riseborough, Nikolaj Coster-Waldau, and Melissa Leo?', 'answer': 'Oblivion', 'category': 'Morgan Freeman'}, {'question': "Who plays the lead role of Rob Feld, a former Portland-based chef turned reclusive truffle forager with the help of his prized foraging pig, in 2021's Pig?", 'answer': 'Nicolas Cage', 'category': 'New Releases'}, {'question': 'What 1988 comedy from director Ivan Reitman features performances from  Arnold Schwarzenegger, Kelly Preston, Danny DeVito, and David Caruso?', 'answer': 'Twins', 'category': '1980s'}, {'question': 'Who directed Steve Martin, Bonnie Hunt, and Piper Perabo in the 2003 family comedy Cheaper by the Dozen?', 'answer': 'Shawn Levy', 'category': 'Family'}, {'question': "J. J. Abrams' Super 8, Matthew Vaughn's X-Men: First Class, and Rupert Wyatt's Rise of the Planet of the Apes were released in what year?", 'answer': '2011', 'category': 'Release Dates'}, {'question': "Which actor plays Doc Holliday alongside Kurt Russell's Wyatt Earp in the 1993 western Tombstone?", 'answer': 'Val Kilmer', 'category': 'Biopics'}, {'question': 'What 2010s animated Disney film features performances from Idris Elba, J. K. Simmons, Jason Bateman, and Ginnifer Goodwin?', 'answer': 'Zootopia', 'category': 'Animated'}, {'question': 'Which actress appears in the following films: A Monster Calls, On the Basis of Sex, Rogue One: A Star Wars Story, and The Theory of Everything?', 'answer': 'Felicity Jones', 'category': 'Famous Actors & Actresses'}, {'question': 'Jake Gyllenhaal stars as Louis Bloom, a stringer who records violent events and sells the footage to an L.A. TV station, in what 2014 Dan Gilroy film?', 'answer': 'Nightcrawler', 'category': '2010s'}, {'question': 'Which of the following actors has not appeared in the Mission: Impossible franchise: Emilio Estevez, Léa Seydoux, Halle Berry, or Anthony Hopkins?', 'answer': 'Halle Berry (Estevez in Mission: Impossible, Seydoux in Ghost Protocol, Hopkins in 2)', 'category': 'Action/Adventure'}, {'question': 'Frances McDormand, Richard Gere, and Ed Norton appear in what 1996 thriller about an attorney who belives his client is not guilty of murdering an archbishop?', 'answer': 'Primal Fear', 'category': 'Courtroom Dramas & Legal Thrillers'}, {'question': 'Which film from director Joe Carnahan features Chris Pine, Common, Jason Bateman, and Ray Liotta?', 'answer': "Smokin' Aces", 'category': 'N/A'}, {'question': 'Oscar-winning actor George Sanders provided the voice of what classic Disney villain that is a Bengal tiger in the 1967 film The Jungle Book?', 'answer': 'Shere Khan', 'category': 'Disney'}, {'question': 'Which 2000s Disney sports film follows the story of real-life Olympic coach Herb Brooks as played by Kurt Russell?', 'answer': 'Miracle', 'category': 'Disney'}, {'question': 'Andrew Davis directed what 2003 film about a boy played by Shia LaBeouf, who is wrongfully sent to a brutal camp where children are forced to dig in the desert all day long?', 'answer': 'Holes', 'category': 'Disney'}, {'question': "Which MCU actress voices Namaari, the warrior princess of Fang, and Raya's rival, in the film Raya and the Last Dragon?", 'answer': 'Gemma Chan', 'category': 'Disney'}, {'question': 'Meredith Salenger stars opposite which famous actor who plays a young traveler named Harry in the 1985 adventure film The Journey of Natty Gann?', 'answer': 'John Cusack', 'category': 'Disney'}, {'question': 'Who plays the socially awkward Allison in The Breakfast Club?', 'answer': 'Ally Sheedy', 'category': 'John Hughes'}, {'question': 'John Hughes wrote the screenplay for what 1996 live-action Disney film that starred Glenn Close?', 'answer': '101 Dalmatians', 'category': 'John Hughes'}, {'question': 'In the John Hughes penned The Great Outdoors, John Candy and his family leave Chicago for a rustic vacation in what Midwestern state?', 'answer': 'Wisconsin', 'category': 'John Hughes'}, {'question': "John Hughes wrote the screenplay for National Lampoon's Vacation. Who directed the film?", 'answer': 'Harold Ramis', 'category': 'John Hughes'}, {'question': 'What is the name of the 2008 Owen Wilson comedy that was the last film John Hughes worked on as a writer?', 'answer': 'Drillbit Taylor', 'category': 'John Hughes'}, {'question': 'What legendary actor appears in the films The Glenn Miller Story, Harvey, Rear Window, and Vertigo?', 'answer': 'James Stewart', 'category': '1950s'}, {'question': 'Don Cheadle, John Goodman, and Bruce Greenwood have supporting performances in what 2012 Denzel film?', 'answer': 'Flight', 'category': 'Denzel Washington'}, {'question': 'Will Ferrell, John C. Reilly, Adam Scott, and Richard Jenkins appear together in which comedy?', 'answer': 'Step Brothers', 'category': 'Comedies'}, {'question': 'In what 2010s film, that he also directed, does Ivan Reitman make a cameo as a musical TV show director?', 'answer': 'No Strings Attached', 'category': 'Ramis & Reitmans'}, {'question': 'What is the title of the second film in the Mad Max series?', 'answer': 'The Road Warrior', 'category': 'Sequels & Prequels'}, {'question': "Joe Pesci has a cameo at the end of what 1993 crime drama as a man named Carmine that Chazz Palminteri's Sonny had protected early in the film?", 'answer': 'A Bronx Tale', 'category': '1990s'}, {'question': 'What 2014 sci-fi reboot featured Joel Kinnaman as Alex Murphy, a detective who is injured in an explosion and transformed into a cyborg?', 'answer': 'RoboCop', 'category': 'Remakes & Reboots'}, {'question': 'Joe Carnahan directed Frank Grillo and Naomi Watts in what 2021 action thriller about a former special forces agent trapped in a time loop?', 'answer': 'Boss Level', 'category': 'New Releases'}, {'question': "Which actress co-stars with Tom Cruise as Shannon Christie in Ron Howard's epic western romantic adventure film Far and Away?", 'answer': 'Nicole Kidman', 'category': 'Romance'}, {'question': 'Who plays professional assassin Martin Blank, who goes back home to Michigan for his high school reunion, in Grosse Pointe Blank?', 'answer': 'John Cusack', 'category': 'Comedies'}, {'question': 'Sidney Lumet directed what 1978 twist on The Wizard of Oz, starring Diana Ross, Michael Jackson, and Richard Pryor?', 'answer': 'The Wiz', 'category': 'Musicals'}, {'question': "In what year did Michael Bay's The Island, Tim Burton's Corpse Bride, and the Farrelly brothers' Fever Pitch release?", 'answer': '2005', 'category': 'Release Dates'}, {'question': 'Which of the following films did Kate Hudson not appear in: Almost Famous, Wish I Was Here, Failure to Launch, or Rock the Kasbah?', 'answer': 'Failure to Launch', 'category': 'Famous Actors & Actresses'}, {'question': 'What 1990 horror comedy, set in Perfection, Nevada, follows Val McKee and Earl Bassett, who fight for survival against prehistoric wormlike monsters?', 'answer': 'Tremors', 'category': '1990s'}, {'question': 'Sandra Bullock stars in which Netflix film, about a mysterious force that decimates the population, where if you see it, you die?', 'answer': 'Bird Box', 'category': 'Streaming'}, {'question': 'Which director was behind the video game adaptation Warcraft and the sci-fi film Moon?', 'answer': 'Duncan Jones', 'category': 'Fantasy/Sci-Fi'}, {'question': "What actress stars as Becky, manager of the fast food restaurant Mooby's, in Clerks II?", 'answer': 'Rosario Dawson', 'category': 'Kevin Smith'}, {'question': 'Who plays the unhinged Canadian recluse Howard Howe in Tusk?', 'answer': 'Michael Parks', 'category': 'Kevin Smith'}, {'question': 'Which Kevin Smith film has the tagline "They\'re not there to shop. - They\'re not there to work. - They\'re just there."?', 'answer': 'Mallrats', 'category': 'Kevin Smith'}, {'question': 'In Yoga Hosers, what do the media dub the Colleens after they save everyone from the potential Bratzi takeover and clear their names?', 'answer': 'Hero Clerks', 'category': 'Kevin Smith'}, {'question': 'Which actor says the following line in Jay and Silent Bob Strike Back: "Oh, you\'re the executive producer. Well, why don\'t you executive produce me a latte"?', 'answer': 'Chris Rock', 'category': 'Kevin Smith'}, {'question': "Which actress played England's Queen Victoria in two films: Mrs Brown and Victoria & Abdul?", 'answer': 'Judi Dench', 'category': 'Historical Epics & Dramas'}, {'question': "What 1962 epic starred Peter O'Toole and won the Best Picture Oscar?", 'answer': 'Lawrence of Arabia', 'category': 'Historical Epics & Dramas'}, {'question': "Spielberg's Lincoln focuses on the President's efforts to get what number amendment passed?", 'answer': 'the Thirteenth Amendment', 'category': 'Historical Epics & Dramas'}, {'question': 'In what film does Benedict Cumberbatch portray the real-life person Alan Turing?', 'answer': 'The Imitation Game', 'category': 'Historical Epics & Dramas'}, {'question': 'In the film Troy, which actor plays Agamemnon, King of the united Greek city-states?', 'answer': 'Brian Cox', 'category': 'Historical Epics & Dramas'}, {'question': 'In 2000, Samuel L. Jackson starred in the fourth film of what crime action franchise, alongside Richard Roundtree, Christian Bale, and Jeffrey Wright?', 'answer': 'Shaft', 'category': 'Samuel L. Jackson'}, {'question': 'What 2011 film was the first film in which Ryan Gosling and Emma Stone had an on-screen romance?', 'answer': 'Crazy, Stupid, Love.', 'category': 'Romance'}, {'question': 'Robert Redford plays the father of Bryce Dallas Howard in what 2010s Disney remake that also featured Karl Urban?', 'answer': "Pete's Dragon", 'category': 'Paul Newman & Robert Redford'}, {'question': 'Who directed Robin Williams and Bonnie Hunt in the family adventure film Jumanji?', 'answer': 'Joe Johnston', 'category': 'Robin Williams'}, {'question': 'Michael Caine, Maggie Smith, Ozzy Osbourne, and Stephen Merchant appeared in two computer-animated films in the 2010s. Name one.', 'answer': 'Gnomeo & Juliet, Sherlock Gnomes', 'category': 'Animated'}, {'question': "Which actor appeared in 2012's Total Recall, 2002's Solaris, and 2009's Star Trek?", 'answer': 'John Cho', 'category': 'Remakes & Reboots'}, {'question': 'Which actress plays the role of Trinity, opposite Keanu Reeves, in the Matrix franchise?', 'answer': 'Carrie-Anne Moss', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the title of the 2021 installment in the Halloween saga starring Jamie Lee Curtis and directed by David Gordon Green?', 'answer': 'Halloween Kills', 'category': 'New Releases'}, {'question': "Which actress stars in the films Our Brand Is Crisis, Ocean's 8, Speed, and A Time to Kill?", 'answer': 'Sandra Bullock', 'category': 'Famous Actors & Actresses'}, {'question': 'What 1999 fantasy comedy features supporting performances from Chris Rock, George Carlin, Janeane Garofalo, and Alanis Morissette?', 'answer': 'Dogma', 'category': 'Comedies'}, {'question': 'Who co-stars opposite Harrison Ford, Michiel Huisman, and Ellen Burstyn in The Age of Adaline as Adaline, a young woman who stops aging after a car accident?', 'answer': 'Blake Lively', 'category': 'Romance'}, {'question': 'Which 2019 horror film stars Samara Weaving, Adam Brody, Henry Czerny, and Andie MacDowell, which follows a bride in a deadly game of hide and seek?', 'answer': 'Ready or Not', 'category': '2010s'}, {'question': 'Who directed the following films: Last Flag Flying, Me and Orson Welles, and Before Sunrise?', 'answer': 'Richard Linklater', 'category': 'Dramas'}, {'question': 'In which installment of the Mission: Impossible franchise do Laurence Fishburne, Keri Russell, and Maggie Q appear?', 'answer': 'Mission: Impossible III', 'category': 'Action/Adventure'}, {'question': 'Prey at Night was the subtitle to the 2018 sequel to what 2008 psychological horror film starring Liv Tyler and Scott Speedman?', 'answer': 'The Strangers', 'category': 'Horror'}, {'question': 'Chris Columbus directed Hayden Panettiere, Paul Rust, and Alan Ruck in what rom-com about a valedictorian confessing his love to a cheerleader at graduation?', 'answer': 'I Love You, Beth Cooper', 'category': '2000s'}, {'question': 'Which Harry Potter film features performances from Richard Harris, Toby Jones, and Kenneth Branagh?', 'answer': 'Harry Potter and the Chamber of Secrets', 'category': 'N/A'}, {'question': 'Who directed Steve Martin and Michael Caine in the film Dirty Rotten Scoundrels?', 'answer': 'Frank Oz', 'category': 'Comedies'}, {'question': 'Eddie Murphy and Martin Lawrence share the screen as loudmouth Harlem grifter Ray and the no-nonsense Claude in what 1999 film?', 'answer': 'Life', 'category': 'Comedies'}, {'question': 'Which actor plays the vampire Vladislav in What We Do in the Shadows, as well as co-directed the film?', 'answer': 'Jemaine Clement', 'category': 'Comedies'}, {'question': 'What 2003 comedy featuring Christopher Walken and Anthony Anderson deals with two guys on a trip to Australia to deliver a package?', 'answer': 'Kangaroo Jack', 'category': 'Comedies'}, {'question': 'Which 2010s horror comedy features performances by Adam Driver, Danny Glover, Bill Murray, and Tilda Swinton?', 'answer': "The Dead Don't Die", 'category': 'Comedies'}, {'question': 'Jodie Foster plays a teen who swaps bodies with her mother in what 1976 Disney film?', 'answer': 'Freaky Friday', 'category': 'Jodie Foster'}, {'question': 'Jodie Foster co-stars in what 2006 crime film that co-stars Denzel Washington and Clive Owen?', 'answer': 'Inside Man', 'category': 'Jodie Foster'}, {'question': 'What 1976 drama has the tagline "On every street in every city, there\'s a nobody who dreams of being a somebody."?', 'answer': 'Taxi Driver', 'category': 'Jodie Foster'}, {'question': 'Who directed Jodie Foster and Mel Gibson in the 1994 western comedy Maverick?', 'answer': 'Richard Donner', 'category': 'Jodie Foster'}, {'question': 'Jodie Foster directed Mel Gibson in what 2011 box office flop alongside Anton Yelchin?', 'answer': 'The Beaver', 'category': 'Jodie Foster'}, {'question': 'Harrison Ford becomes the co-host of a morning show called DayBreak in what film featuring Rachel McAdams and Diane Keaton?', 'answer': 'Morning Glory', 'category': 'Harrison Ford'}, {'question': 'Which film franchise features performances from Nicole Kidman, Anne Hathaway, Uma Thurman, and Michelle Pfeiffer?', 'answer': 'Batman (in Batman Forever, The Dark Knight Rises, Batman & Robin, Batman Returns)', 'category': 'N/A'}, {'question': 'What year saw the release of Hot Fuzz, Spider-Man 3, Ghost Rider, and Grindhouse?', 'answer': '2007', 'category': 'N/A'}, {'question': 'What Tom Shadyac directed comedy features Morgan Freeman, Molly Shannon, John Goodman, and Steve Carell?', 'answer': 'Evan Almighty', 'category': 'N/A'}, {'question': 'What is the most recent film that Ridley Scott has directed Russell Crowe in?', 'answer': 'Robin Hood', 'category': 'N/A'}, {'question': 'Which actress appears in these films: Stuck in Love, Dark City, The Rocketeer, and A Beautiful Mind?', 'answer': 'Jennifer Connelly', 'category': 'N/A'}, {'question': 'Who directed the classic film Dial M for Murder?', 'answer': 'Alfred Hitchcock', 'category': 'Directors'}, {'question': 'Hackman appears in what 1970s Oscar-winning disaster film as Rev. Frank Scott, in an ensemble including Leslie Nielsen and Shelley Winters?', 'answer': 'The Poseidon Adventure', 'category': 'Gene Hackman'}, {'question': 'Who stars as Rick Santoro, a shady detective caught in the middle of a murder conspiracy at a boxing match, in the 1998 crime thriller Snake Eyes?', 'answer': 'Nicolas Cage', 'category': 'Crime'}, {'question': 'What 2007 Joe Carnahan film, about a Las Vegas performer turned snitch, features Ben Affleck, Chris Pine, Common, and Ryan Reynolds?', 'answer': "Smokin' Aces", 'category': 'Matt & Ben'}, {'question': 'What is the subtitle of the sixth film in the Halloween franchise, featuring Paul Rudd?', 'answer': 'The Curse of Michael Myers', 'category': '1990s'}, {'question': 'What musical stars Rod Steiger and Shirley Jones, and features the song "People Will Say We\'re In Love"?', 'answer': 'Oklahoma!', 'category': 'Musicals'}, {'question': "What 2013 supernatural horror film was Fede Álvarez's directorial debut, and the fourth installment in a franchise, the first not to be directed by Sam Raimi?", 'answer': 'Evil Dead', 'category': 'Horror'}, {'question': 'Which action franchise features performances from Richard Crenna, Brian Dennehy, Martin Kove, Kurtwood Smith, and Sylvester Stallone?', 'answer': 'Rambo', 'category': 'Action/Adventure'}, {'question': "Of the following actors, which does not appear in 2003's Daredevil: Jennifer Garner, Kevin Smith, Jon Favreau, or Katherine Heigl?", 'answer': 'Katherine Heigl', 'category': 'Comic Book'}, {'question': 'Matt Damon, Pedro Pascal, Jing Tian, and Willem Dafoe appear in what 2017 adventure film about a European mercenary imprisoned by Imperial Chinese forces?', 'answer': 'The Great Wall', 'category': 'Fantasy/Sci-Fi'}, {'question': "Will Ferrell and Nicole Kidman star in what 2005 Nora Ephron film, based on a sitcom, in which Kidman's Isabel Bigelow is revealed to be a real witch?", 'answer': 'Bewitched', 'category': 'Rom-Coms'}, {'question': 'Who voices the character of Wreck-It Ralph in both Wreck-It Ralph and Ralph Breaks the Internet?', 'answer': 'John C. Reilly', 'category': 'Animated'}, {'question': 'Michael Keaton appears as the villain Vulture in which Spider-Man film?', 'answer': 'Spider-Man: Homecoming', 'category': 'Famous Actors & Actresses'}, {'question': 'Spike Lee directed Josh Brolin, Elizabeth Olsen, and Samuel L. Jackson in what 2013 psychological action thriller, a remake of a 2005 South Korean film?', 'answer': 'Oldboy', 'category': '2010s'}, {'question': "Which of the following four sports films was not directed by Gavin O'Connor: Warrior, Miracle, The Way Back, or Radio?", 'answer': 'Radio', 'category': 'Sports'}, {'question': "In 1995's Friday, Craig spends the day with his pot dealing friend Smokey, who is played by whom?", 'answer': 'Chris Tucker', 'category': 'Black Cinema'}, {'question': 'Who portrays high school science teacher Elliot Moore alongside Zooey Deschanel in the M. Night Shyamalan directed film The Happening?', 'answer': 'Mark Wahlberg', 'category': 'N/A'}, {'question': "Who portrays Rocky's trainer Mickey Goldmill in the Rocky franchise?", 'answer': 'Burgess Meredith (in Rocky, II, III, V)', 'category': 'Rocky'}, {'question': 'How many films in the Rocky franchise did Sylvester Stallone receive a writing credit on?', 'answer': '7 (Rocky, II, III, IV, V, Rocky Balboa, Creed II)', 'category': 'Rocky'}, {'question': 'Who replaced Lavelle Roby and Sylvia Meals as Mary Anne Creed, the wife and widow of Apollo Creed in the Creed films?', 'answer': 'Phylicia Rashad', 'category': 'Rocky'}, {'question': 'What is the name of the restaurant Rocky has opened and is running in Rocky Balboa?', 'answer': "Adrian's Restaurant", 'category': 'Rocky'}, {'question': "Paul Micale's Father Carmine is first seen in Rocky II. In what film in the franchise does he next appear?", 'answer': 'Rocky V', 'category': 'Rocky'}, {'question': "What was Maverick's father's name in Top Gun?", 'answer': 'Duke Mitchell', 'category': 'Tom Cruise'}, {'question': 'Tom Cruise stars in what thriller that is based on a John Grisham novel?', 'answer': 'The Firm', 'category': 'Tom Cruise'}, {'question': 'Which film in the Mission: Impossible franchise is set largely in Australia?', 'answer': 'Mission: Impossible 2', 'category': 'Tom Cruise'}, {'question': 'What is the name of the real-life character played by Tom Cruise in Born on the Fourth of July?', 'answer': 'Ron Kovic', 'category': 'Tom Cruise'}, {'question': 'How many times has Tom Cruise been nominated for the Best Lead Actor Oscar?', 'answer': '2 (for Born on the Fourth of July, Jerry Maguire)', 'category': 'Tom Cruise'}, {'question': 'Sofia Boutella stars as Ahmanet, alongside Tom Cruise and Jake Johnson, in what 2017 action remake?', 'answer': 'The Mummy', 'category': 'Remakes & Reboots'}, {'question': "Kevin Pollak plays Lt. Sam Weinberg, co-counsel of Tom Cruise's character, in what 1990s legal drama?", 'answer': 'A Few Good Men', 'category': 'Tom Cruise'}, {'question': "Jovan Adepo plays Cory, the athletic son of Denzel Washington's character, in what acclaimed drama?", 'answer': 'Fences', 'category': 'Denzel Washington'}, {'question': 'What 2016 animated Disney film featuring Dwayne Johnson includes these songs by Lin-Manuel Miranda: "Shiny", "You\'re Welcome", and "How Far I\'ll Go"?', 'answer': 'Moana', 'category': 'Animated'}, {'question': 'Who stars as the international man of mystery Austin Powers in the Austin Powers trilogy?', 'answer': 'Mike Myers', 'category': 'Comedies'}, {'question': 'Which famed horror franchise features performances from Liev Schreiber, Kristen Bell, Jamie Kennedy, and David Arquette?', 'answer': 'Scream', 'category': 'Horror'}, {'question': 'How many films in the Bad Boys film series did Michael Bay direct?', 'answer': '2 (Bad Boys, II)', 'category': 'Action/Adventure'}, {'question': "Of the following actors, who doesn't appear in Kevin Smith's Clerks II: Rosario Dawson, Wanda Sykes, Matt Damon, or Jason Lee?", 'answer': 'Matt Damon', 'category': '2000s'}, {'question': 'Which 1994 biopic directed by Tim Burton won two Academy Awards, including one for Martin Landau as Best Supporting Actor for his performance as famed horror icon Bela Lugosi?', 'answer': 'Ed Wood', 'category': 'Biopics'}, {'question': 'Who stars as Kevin Wendell Crumb in the 2017 M. Night Shyamalan psychological thriller Split?', 'answer': 'James McAvoy', 'category': 'Mystery/Thriller'}, {'question': 'What 2019 Netflix rom-com featuring Ali Wong, Randall Park, and Keanu Reeves follows childhood friends who lost touch after a brief teenage fling ended badly?', 'answer': 'Always Be My Maybe', 'category': 'Streaming'}, {'question': 'Of the following films, which does not feature Angelina Jolie: Gone in 60 Seconds, Troy, Sky Captain and the World of Tomorrow, or Pushing Tin?', 'answer': 'Troy', 'category': 'Famous Actors & Actresses'}, {'question': "Which actress stars as Kat Harvey, the daughter of Bill Pullman's James Harvey and Casper's love interest and new friend in 1995's Casper?", 'answer': 'Christina Ricci', 'category': 'Amblin'}, {'question': 'What 1990s Joel Schumacher film features supporting performances from Barbara Hershey, Tuesday Weld, and Robert Duvall?', 'answer': 'Falling Down', 'category': 'N/A'}, {'question': 'What is the subtitle of the third film in the Madagascar franchise?', 'answer': "Europe's Most Wanted", 'category': 'DreamWorks Animation'}, {'question': 'What type of animal is the main character Max, as voiced by Patton Oswalt, in The Secret Life of Pets 2?', 'answer': 'a Jack Russell Terrier', 'category': 'DreamWorks Animation'}, {'question': "Which Oscar-winning actress provides the voice of the Queen Ant, mother of Sharon Stone's Princess Bala, in Antz?", 'answer': 'Anne Bancroft', 'category': 'DreamWorks Animation'}, {'question': 'Craig Ferguson, America Ferrera, and Jonah Hill lent their voices to which DreamWorks franchise?', 'answer': 'How to Train Your Dragon', 'category': 'DreamWorks Animation'}, {'question': "Which actress voices Ugga, wife to Nicolas Cage's Grug and the mother of the Crood kids in The Croods?", 'answer': 'Catherine Keener', 'category': 'DreamWorks Animation'}, {'question': 'Which actor appeared opposite Tom Hanks in the films Apollo 13, The Green Mile, and Forrest Gump?', 'answer': 'Gary Sinise', 'category': '1990s'}, {'question': 'Which actor wrote and directed the 1996 film Sling Blade, and played the main character Karl Childers in the film as well?', 'answer': 'Billy Bob Thornton', 'category': '1990s'}, {'question': 'James Ivory directed Anthony Hopkins and Emma Thopmson in two 90s films: Howards End and what other film?', 'answer': 'The Remains of the Day', 'category': '1990s'}, {'question': 'Who played Sebastian Valmont in the film Cruel Intentions?', 'answer': 'Ryan Phillippe', 'category': '1990s'}, {'question': 'What 1990s biopic features supporting performances from Angela Bassett, Delroy Lindo, Peter Boyle, and Spike Lee?', 'answer': 'Malcolm X', 'category': '1990s'}, {'question': 'What 2020 Pixar film won the Academy Award for Best Animated Feature in 2021?', 'answer': 'Soul', 'category': 'Oscars'}, {'question': 'Tom Cruise appears in what 2008 war comedy as movie producer Les Grossman opposite Ben Stiller and Robert Downey Jr.?', 'answer': 'Tropic Thunder', 'category': 'Tom Cruise'}, {'question': "You'll find Angus, a Highland bull voiced by David Tennant, in which 2017 animated film with Daveed Diggs, Anthony Anderson, and Peyton Manning?", 'answer': 'Ferdinand', 'category': 'Animated'}, {'question': 'Tony Scott directed Tom Cruise and Nicole Kidman in what film about a race car driver named Cole Trickle?', 'answer': 'Days of Thunder', 'category': 'Scotts'}, {'question': 'Which 2000s crime film, directed by Guy Ritchie, features Jason Statham as Turkish and Brad Pitt as "One Punch" Mickey O\'Neil?', 'answer': 'Snatch', 'category': '2000s'}, {'question': 'What popular sci-fi action franchise features performances from Josh Brolin, Tony Shalhoub, Tommy Lee Jones, and Tessa Thompson?', 'answer': 'Men in Black', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 1992 crime thriller features performances from Omar Epps, Tupac Shakur, Samuel L. Jackson, and Queen Latifah?', 'answer': 'Juice', 'category': 'Black Cinema'}, {'question': 'Who was nominated for an Academy Award for their performance as Jonathan Larson in the 2021 musical biopic Tick, Tick... Boom!?', 'answer': 'Andrew Garfield', 'category': 'New Releases'}, {'question': 'What 1997 comedy starring Jim Carrey had the tagline "Trust Me"?', 'answer': 'Liar Liar', 'category': '1990s'}, {'question': "Of the following, who does not appear in Ridley Scott's Alien: Covenant: Danny McBride, Patrick Wilson, Katherine Waterston, or Guy Pearce?", 'answer': 'Patrick Wilson', 'category': 'Sequels & Prequels'}, {'question': "Millie Bobby Brown plays the younger sibling of Henry Cavill's Sherlock Holmes in what 2020 Netflix mystery film?", 'answer': 'Enola Holmes', 'category': 'Mystery/Thriller'}, {'question': 'Who plays the lead role of Lorraine Broughton, a top-level MI6 field agent, in the 2010s film Atomic Blonde?', 'answer': 'Charlize Theron', 'category': 'Spy'}, {'question': 'David Oyelowo plays Martin Luther King Jr. and Tom Wilkinson plays President Lyndon B. Johnson in what 2014 film directed by Ava DuVernay?', 'answer': 'Selma', 'category': 'Dramas'}, {'question': "Which actress appears in the following films: The Sixth Sense, 2011's Fright Night, 2000's Shaft, and Hereditary?", 'answer': 'Toni Collette', 'category': 'Famous Actors & Actresses'}, {'question': 'Baz Luhrmann directed Nicole Kidman, Ewan McGregor, and Jim Broadbent in what 2001 film nominated for Best Picture at the Academy Awards?', 'answer': 'Moulin Rouge!', 'category': 'Musicals'}, {'question': 'What film from Adam McKay features supporting roles from Kathryn Hahn, Seth Rogen, Adam Scott, and Richard Jenkins?', 'answer': 'Step Brothers', 'category': 'N/A'}, {'question': "What 1993 horror comedy marks Jennifer Aniston's first official credited feature film debut?", 'answer': 'Leprechaun', 'category': 'Jennifer Aniston'}, {'question': "What MCU actor co-stars opposite Jennifer Aniston in 1998's The Object of My Affection?", 'answer': 'Paul Rudd', 'category': 'Jennifer Aniston'}, {'question': 'Jennifer Aniston and Jason Bateman have appeared together in five films. What is the first film they appeared in together?', 'answer': 'The Break-Up', 'category': 'Jennifer Aniston'}, {'question': "Who directed 2005's Rumor Has It?", 'answer': 'Rob Reiner', 'category': 'Jennifer Aniston'}, {'question': 'In what 2019 film do Jennifer Aniston and Adam Sandler star as a married couple who go on a European vacation to reinvigorate their marriage?', 'answer': 'Murder Mystery', 'category': 'Jennifer Aniston'}, {'question': "Who directed Keanu Reeves and Jennifer Connelly in 2008's The Day the Earth Stood Still?", 'answer': 'Scott Derrickson', 'category': '2000s'}, {'question': 'Which actress stars as Mrs. Lovett in the musical Sweeney Todd: The Demon Barber of Fleet Street?', 'answer': 'Helena Bonham Carter', 'category': '2000s'}, {'question': 'In the 2002 American remake Solaris, who stars as Rheya opposite George Clooney?', 'answer': 'Natascha McElhone', 'category': '2000s'}, {'question': "Who played Lureen Newsome Twist, Jack's wife, in Brokeback Mountain?", 'answer': 'Anne Hathaway', 'category': '2000s'}, {'question': 'Who plays Joseph Sullivan a.k.a. Sky Captain in the film Sky Captain and the World of Tomorrow?', 'answer': 'Jude Law', 'category': '2000s'}, {'question': 'Which Happy Madison regular plays Dickie Roberts, a former child actor who shot to fame on a 70s sitcom in the film Dickie Roberts: Former Child Star?', 'answer': 'David Spade', 'category': 'Happy Madison & Adam Sandler'}, {'question': 'Which actor, known for his spoof comedies, plays Dracula in the Mel Brooks film Dracula: Dead and Loving It?', 'answer': 'Leslie Nielsen', 'category': 'Horror'}, {'question': 'Ford plays Sergeant Joe Gavilan alongside Josh Hartnett in what 2000s action comedy?', 'answer': 'Hollywood Homicide', 'category': 'Harrison Ford'}, {'question': 'In what 1990s political action thriller does Hackman portray the President of the United States alongside Clint Eastwood and Ed Harris?', 'answer': 'Absolute Power', 'category': 'Gene Hackman'}, {'question': 'Carla Gugino, Delroy Lindo, and Jason Statham appear in what 2000s Jet Li film?', 'answer': 'The One', 'category': 'Martial Arts'}, {'question': 'Credited as Scott Reeves, Scott Eastwood made his debut in this war film directed by his father.', 'answer': 'Flags of Our Fathers', 'category': 'Eastwoods'}, {'question': 'Who appears in the following action films: The Meg, Ghosts of Mars, and The Italian Job?', 'answer': 'Jason Statham', 'category': 'Action/Adventure'}, {'question': 'Which famed horror franchise features performances by Dennis Hopper, Matthew McConaughey, Jessica Biel, and R. Lee Ermey?', 'answer': 'Texas Chainsaw Massacre (in 2, The Return of the Texas Chainsaw Massacre, The Texas Chainsaw Massacre; The Texas Chainsaw Massacre, The Beginning)', 'category': 'Horror'}, {'question': "Which actor doesn't appear in Fantastic Beasts: The Crimes of Grindelwald: Dan Fogler, Eddie Redmayne, Jon Voight, or Zoë Kravitz?", 'answer': 'Jon Voight', 'category': '2010s'}, {'question': 'What 1992 hockey film featured the tagline "He\'s never coached. They\'ve never won. Together they\'ll learn everything about winning!"?', 'answer': 'The Mighty Ducks', 'category': 'Sports'}, {'question': 'For which sci-fi film did director Denis Villeneuve receive his only Academy Award nomination for Best Director thus far?', 'answer': 'Arrival', 'category': 'Directors'}, {'question': 'What 1995 Martin Scorsese crime film features supporting performances from James Woods, Don Rickles, and Kevin Pollak?', 'answer': 'Casino', 'category': 'Crime'}, {'question': "Taylor Sheridan directed what actress as smokejumper Hannah alongside Jon Bernthal, Aidan Gillen, and Nicholas Hoult in 2021's Those Who Wish Me Dead?", 'answer': 'Angelina Jolie', 'category': 'New Releases'}, {'question': 'David Bowie features in what Christopher Nolan film featuring supporting performances from Michael Caine, Scarlett Johansson, and Andy Serkis?', 'answer': 'The Prestige', 'category': 'Musicians in Film'}, {'question': 'Julia Roberts and Lily Collins star opposite each other in this 2012 fantasy based on Snow White.', 'answer': 'Mirror Mirror', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What 2009 comedy featuring Rashida Jones and J. K. Simmons marked the third collaboration of Paul Rudd and Jason Segel after Knocked Up and Forgetting Sarah Marshall?', 'answer': 'I Love You, Man', 'category': 'Comedies'}, {'question': '1978 saw the release of what sequel featuring Roy Scheider reprising his role as Chief Martin Brody?', 'answer': 'Jaws 2', 'category': 'N/A'}, {'question': "Who directed 1991's The Rocketeer, featuring Billy Campbell and Jennifer Connelly?", 'answer': 'Joe Johnston', 'category': 'Jennifer Connelly'}, {'question': "Connelly makes her theatrical debut as the young version of Elizabeth McGovern's Deborah in what epic crime film starring Robert De Niro and James Woods?", 'answer': 'Once Upon a Time in America', 'category': 'Jennifer Connelly'}, {'question': "In 1986's Labyrinth starring Jennifer Connelly, what is the name of the Goblin King, played by David Bowie?", 'answer': 'Jareth', 'category': 'Jennifer Connelly'}, {'question': 'Darren Aronofsky directed Ellen Burstyn, Jared Leto, and Jennifer Connelly in which 2000 psychological drama?', 'answer': 'Requiem for a Dream', 'category': 'Jennifer Connelly'}, {'question': "1996's Mulholland Falls, featuring Nick Nolte and Jennifer Connelly, follows a squad of LAPD detectives during what decade?", 'answer': 'the 1950s', 'category': 'Jennifer Connelly'}, {'question': "Which actress co-starred with Keanu Reeves in the films The Devil's Advocate and Sweet November?", 'answer': 'Charlize Theron', 'category': 'Keanu Reeves'}, {'question': 'In Constantine, John Constantine learns that he is sick, and likely to die, from what specific disease?', 'answer': 'lung cancer', 'category': 'Keanu Reeves'}, {'question': 'Which late actor co-starred with Keanu Reeves in the drama My Own Private Idaho as Mikey Waters?', 'answer': 'River Phoenix', 'category': 'Keanu Reeves'}, {'question': 'In Point Break, Johnny Utah played football at what university before becoming an FBI agent?', 'answer': 'the Ohio State University', 'category': 'Keanu Reeves'}, {'question': 'What California city do Bill and Ted hail from in the Bill & Ted franchise?', 'answer': 'San Dimas', 'category': 'Keanu Reeves'}, {'question': 'Which actor stars in the lead role of Morton Rainey in the 2004 Stephen King adaptation Secret Window?', 'answer': 'Johnny Depp', 'category': '2000s'}, {'question': 'In what 1990s Arnold Schwarzenegger film will you find him playing himself, a cop named Jack Slater, and the Shakespearean character Hamlet?', 'answer': 'Last Action Hero', 'category': 'Sly & Arnie'}, {'question': 'Sydney Pollack directed Harrison Ford and Julia Ormond in what 1990s romantic dramedy remake?', 'answer': 'Sabrina', 'category': 'Harrison Ford'}, {'question': 'Kevin Costner stars as a retired sheriff named George Blackledge in what 2020 film opposite Diane Lane?', 'answer': 'Let Him Go', 'category': 'Mystery/Thriller'}, {'question': 'What 2021 dramedy features supporting performances from Judi Dench, Ciarán Hinds, and Jamie Dornan?', 'answer': 'Belfast', 'category': 'New Releases'}, {'question': 'The character of Amanda Young, played by Shawnee Smith, appears in what horror franchise?', 'answer': 'Saw', 'category': 'Horror'}, {'question': 'Karl Urban is a law enforcer with the power of judge, jury, and executioner in a metropolis known as Mega-City One in what 2012 film?', 'answer': 'Dredd', 'category': 'Remakes & Reboots'}, {'question': 'Which of the following baseball movies did Kevin Costner not appear in: Bull Durham, Field of Dreams, Major League, or For Love of the Game?', 'answer': 'Major League', 'category': 'Sports'}, {'question': "Who plays Albert Sparma, a suspect in a string of serial murders that Denzel Washington is helping investigate, in 2021's The Little Things?", 'answer': 'Jared Leto', 'category': 'Crime'}, {'question': 'Which of the following actors does not appear in The Expendables 3: Harrison Ford, Antonio Banderas, Glen Powell, or Bruce Willis?', 'answer': 'Bruce Willis', 'category': '2010s'}, {'question': 'Who directed the films Undercover Brother, Space Jam: A New Legacy, and The Best Man?', 'answer': 'Malcolm D. Lee', 'category': 'Directors'}, {'question': 'What 2021 horror film follows Madison Lake Mitchell, played by Annabelle Wallis, who begins having terrifying visions of people being murdered?', 'answer': 'Malignant', 'category': 'New Releases'}, {'question': 'Which Ghostbusters (2016) actress was nominated for Best Actress at the 2019 Oscars for her role as Lee Israel in the film Can You Ever Forgive Me??', 'answer': 'Melissa McCarthy', 'category': 'LGBTQ Cinema'}, {'question': 'In which popular comedy will you hear Jeff Daniels say "She gave me a bunch of crap about me not listening to her, or something. i don\'t know, I wasn\'t really paying attention."?', 'answer': 'Dumb & Dumber', 'category': 'Quotes'}, {'question': "What famed rock & roll musician appeared in the films Wayne's World, Spice World, and Fight Club?", 'answer': 'Meat Loaf', 'category': 'Musicians in Film'}, {'question': 'Which animated Disney film features the songs "Once Upon a Time in New York City" and "Streets of Gold"?', 'answer': 'Oliver & Company', 'category': 'Animated'}, {'question': 'Which Kevin Smith film features Ralph Garman, Michael Parks, John Goodman, and Stephen Root?', 'answer': 'Red State', 'category': 'N/A'}, {'question': 'Who directed Mark Hamill, Carrie Fisher, and Harrison Ford in The Empire Strikes Back?', 'answer': 'Irvin Kershner', 'category': 'Star Wars'}, {'question': 'In Rogue One, what is the color designation of the starfighter squadron that makes it through the shield gate to assist rebels on the ground?', 'answer': 'blue', 'category': 'Star Wars'}, {'question': 'Ian McDiarmid portrayed which Star Wars villain?', 'answer': 'Sheev Palpatine', 'category': 'Star Wars'}, {'question': 'What is the name of the beast Jabba the Hutt uses to dispatch his enemies in the Dune Sea, which ultimately eats Boba Fett?', 'answer': 'the sarlacc', 'category': 'Star Wars'}, {'question': 'What species is Watto?', 'answer': 'a Toydarian', 'category': 'Star Wars'}, {'question': 'Frank Capra directed what 1944 dark comedy in which a man discovers that his two aunts are killing houseguests by poisoning them?', 'answer': 'Arsenic and Old Lace', 'category': 'Frank Capra'}, {'question': 'Which actress won an Oscar for playing the character Ellie Andrews in It Happened One Night?', 'answer': 'Claudette Colbert', 'category': 'Frank Capra'}, {'question': 'In Mr. Deeds Goes to Town, what brass instrument does Mr. Deeds play in his spare time?', 'answer': 'the tuba', 'category': 'Frank Capra'}, {'question': 'Which Capra film has the line "You see, boys forget what their country means by just reading \'land of the free\' in the history books, then they get to be men and forget even more"?', 'answer': 'Mr. Smith Goes to Washington', 'category': 'Frank Capra'}, {'question': 'Which Oscar-winning actress stars as Apple Annie in the 1961 comedy remake A Pocketful of Miracles?', 'answer': 'Bette Davis', 'category': 'Frank Capra'}, {'question': 'Lori Petty stars in what 1995 film based on a British comic book?', 'answer': 'Tank Girl', 'category': 'Comic Book'}, {'question': 'How many films were theatrically released in the American Pie franchise during the 2000s?', 'answer': '2 (American Pie 2, American Wedding)', 'category': '2000s'}, {'question': 'Who directed Washington in the 2012 film Flight?', 'answer': 'Robert Zemeckis', 'category': 'Denzel Washington'}, {'question': 'Dakota Fanning voices the title character in what 2000s animated frilm from director Henry Selick?', 'answer': 'Coraline', 'category': 'Animated'}, {'question': 'Which 1980s sequel features supporting performances from Peter MacNicol, Kurt Fuller, Cheech Marin, and Bobby Brown?', 'answer': 'Ghostbusters II', 'category': '1980s'}, {'question': 'Jack Nicholson received his first Best Actor nomination for what 1970 film?', 'answer': 'Five Easy Pieces', 'category': 'Oscars'}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': 'N/A'}, {'question': '', 'answer': '', 'category': 'Sly & Arnie'}, {'question': '', 'answer': '', 'category': 'Sly & Arnie'}, {'question': '', 'answer': 'Thanksgiving', 'category': 'Sly & Arnie'}, {'question': '', 'answer': 'Oscar', 'category': 'Sly & Arnie'}, {'question': '', 'answer': 'Jean-Claude Van Damme', 'category': 'Sly & Arnie'}, {'question': '', 'answer': "One Flew Over the Cuckoo's Nest", 'category': 'Jack Nicholson'}, {'question': '', 'answer': 'The Passenger', 'category': 'Jack Nicholson'}, {'question': '', 'answer': 'Michelle Pfeiffer', 'category': 'Jack Nicholson'}, {'question': '', 'answer': 'an astronaut', 'category': 'Jack Nicholson'}, {'question': '', 'answer': 'Anger Management', 'category': 'Jack Nicholson'}, {'question': '', 'answer': 'Bruce Almighty', 'category': 'Morgan Freeman'}, {'question': '', 'answer': 'Atomic Blonde', 'category': 'Spy'}, {'question': '', 'answer': 'Shazam!', 'category': 'DC'}, {'question': '', 'answer': 'Hugo', 'category': 'Martin Scorsese'}, {'question': '', 'answer': 'Adam Wingard', 'category': 'Streaming'}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': 'N/A'}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': 'N/A'}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': 'Which appeared in the', 'answer': 'Harrison Ford', 'category': 'Fantasy/Sci-Fi'}, {'question': 'What is the first film in the 1990s that Steven Spielberg directed?', 'answer': 'Hook', 'category': 'Amblin'}, {'question': 'Alicia Vikander ', 'answer': 'Lara Croft', 'category': 'Action/Adventure'}, {'question': '', 'answer': 'Hot Fuzz', 'category': '2000s'}, {'question': "2018's Game Night", 'answer': 'Jon Hamm', 'category': 'Famous Actors & Actresses'}, {'question': "Which Love Don't Cost a Thing", 'answer': 'Jennifer Lopez', 'category': 'Musicians in Film'}, {'question': 'Which 2010s Oscar nominated', 'answer': 'Bridge of Spies', 'category': 'Thriller'}, {'question': 'What 2017 drama directed by Marc Webb', 'answer': 'Gifted', 'category': 'Dramas'}, {'question': 'What 2010 animated adventure', 'answer': 'Tangled', 'category': 'Animated'}, {'question': '', 'answer': 'The Matrix Resurrections', 'category': 'Dystopian Future & Time Travel'}, {'question': '', 'answer': 'Austin Powers in Goldmember', 'category': 'N/A'}, {'question': 'Damon Wayans features alongside what actor in Bulletproof', 'answer': 'Adam Sandler', 'category': 'Wayans Family'}, {'question': 'Damon wayns JR 2010s buddy comedy and garcia, keegan michael key', 'answer': "Let's be Cops", 'category': 'Wayans Family'}, {'question': 'Kim Wayans features in this 200s comedy, Tommy Davison, Lil Kim, Genuine', 'answer': 'Juwanna Mann', 'category': 'Wayans Family'}, {'question': 'banana man in Eddie Murphy comedy', 'answer': 'Beverly Hills Cop', 'category': 'Wayans Family'}, {'question': 'What martial artist actor features as the titular character alongside Keen n in The Glimmer Man?', 'answer': 'Steven Seagal', 'category': 'Wayans Family'}, {'question': 'John Laroquette play Klingon henchman', 'answer': 'Star Trek III: The Search for Spock', 'category': 'Star Trek'}, {'question': "Ben Cross plays the father of what well-known Star Trek character in 2009's Star Trek?", 'answer': 'Spock', 'category': 'Star Trek'}, {'question': 'How many Star Trek films did Leonard Nimoy direct?', 'answer': '2 (III, IV)', 'category': 'Star Trek'}, {'question': 'In Star Trek II, what Charles Dickens novel?', 'answer': 'A Tale of Two Cities', 'category': 'Star Trek'}, {'question': 'In what Star Trek film, Kirk spock, mccoy, go camping at Yosemity National Park', 'answer': 'Star Trek V: The Final Frontier', 'category': 'Star Trek'}, {'question': 'david gordon green jamie lee curtis 2021 slasher sequel', 'answer': 'Halloween Kills', 'category': 'New Releases'}, {'question': '1985 coming of age film Micahel j Foxx, play Scott howard', 'answer': 'Teen Wolf', 'category': 'Sports'}, {'question': 'after quiet life interrupted, John Matrix take town dictator 1985 film', 'answer': 'Commando', 'category': 'Sly & Arnie'}, {'question': 'What 1995 family film features cameos Clint Eastwood, Rodney Dangerfield, Mel Gibson, and Dan Aykroyd?', 'answer': 'Casper', 'category': 'Family'}, {'question': 'which no mcc how to lsoe guy, maid in manhattan, ghost of ghrilfri, wedding planner', 'answer': 'Maid in Manhattan', 'category': 'Rom-Coms'}, {'question': 'famous actor in great gatsby, quick and the dead, shutter island', 'answer': 'Leonardo DiCaprio', 'category': 'Famous Actors & Actresses'}, {'question': 'sherman klump in nutty professor', 'answer': 'Eddie Murphy', 'category': 'Black Cinema'}, {'question': 'molly ringwald birthday being overshadowed', 'answer': 'Sixteen Candles', 'category': '1980s'}, {'question': '1999 film based on TV show featured blame canada and was subtitled bigger longer and uncut', 'answer': 'South Park: Bigger Longer, and Uncut', 'category': 'Animated'}, {'question': '2006 will ferrell comedy gary cole, amy adams, john c reilly, michael clarke duncan', 'answer': 'Talladega Nights: The Ballad of Ricky Bobby', 'category': 'Comedies'}, {'question': 'Shane Black directed what sci-fi Olivia mUNN, sterling k brown', 'answer': 'The Predator', 'category': 'Sequels & Prequels'}, {'question': 'Lily James, Richard Madden, 2015 Disney film directed by Kenneth Branagh', 'answer': 'Cinderella', 'category': 'Disney'}, {'question': 'What famous musician stars Blue Hawaii, Jailhouse Rock, and Viva Las Vegas?', 'answer': 'Elvis Presley', 'category': 'Musicians in Film'}, {'question': 'Anthony Hopkins and Jodie', 'answer': 'The Silence of the Lambs', 'category': 'Horror'}, {'question': '', 'answer': 'The Karate Kid', 'category': 'N/A'}, {'question': 'norville shaggy roggers opposite scooby doo in james penn scooby-doo', 'answer': 'Matthew Lillard', 'category': 'WC: Talking Animal Movies'}, {'question': '', 'answer': 'norm mcdonald', 'category': 'WC: Talking Animal Movies'}, {'question': '1990s talking animal film farm pig who wants to do work of sheepdog', 'answer': 'Babe', 'category': 'WC: Talking Animal Movies'}, {'question': 'british actor voices marmalade talking bear', 'answer': 'Ben Whishaw', 'category': 'WC: Talking Animal Movies'}, {'question': 'ghostbusters actor voices garfield', 'answer': 'Bill Murray', 'category': 'WC: Talking Animal Movies'}, {'question': 'tom cruise in what 1990 action drama', 'answer': 'Days of Thunder', 'category': 'Nicole Kidman'}, {'question': 'devlin adams in which adam sandler film', 'answer': 'Just Go With It', 'category': 'Nicole Kidman'}, {'question': 'who directed 1995 crime draa to die for', 'answer': 'Gus Van Sant', 'category': 'Nicole Kidman'}, {'question': 'Oscar nomination grieving mother', 'answer': 'Rabbit Hole', 'category': 'Nicole Kidman'}, {'question': 'musical receive her Oscar nomination', 'answer': 'Moulin rouge', 'category': 'Nicole Kidman'}, {'question': 'wwe legend hunting down bumblebee', 'answer': 'John Cena', 'category': 'Wrestlers in Film'}, {'question': 'phil collins makes cameo as inspector in what 1990s steven spielberg film in which he makes a joke "this will be a big joke"', 'answer': 'Hook', 'category': ''}, {'question': 'mcu film lin e"you experience things they\'re over. gods aliens and other ', 'answer': 'Iron Man 3', 'category': 'Marvel'}, {'question': '2018 super hero film', 'answer': 'Spider-Man: Into the Spider-Verse', 'category': 'Animated'}, {'question': '1991 sci-fi action film; i need your clothes your boots and your motorcycle', 'answer': 'Terminator 2: Judgment Day', 'category': 'Sequels & prequeles'}, {'question': 'who directed ryan reynolds, melanie laurent, in 6 underground', 'answer': 'Michael Bay', 'category': 'Streaming'}, {'question': '1956 classic horror film received remakes and most recently with daniel craig', 'answer': 'Invasion of the Body Snatchers', 'category': 'Horror'}, {'question': "charlie's angels full throttle, mr. brooks, indecent proposal", 'answer': 'Demi Moore', 'category': 'Famous Actors & Actresses'}, {'question': '2003 comedy features characters the godfather, the tank, beanieblue', 'answer': 'Old School', 'category': 'Comedies'}, {'question': '2009 biographical comey film directed by soderbergh, matt damon, joel mchale, patton oswalt', 'answer': 'The Informant!', 'category': 'crime'}, {'question': 'Kathryn Bigelow directed what famous actress alongside Ron Silver in Blue Steel', 'answer': 'Jamie Lee Curtis', 'category': 'Thriller'}, {'question': 'singer alongside Adam Sandler, and Drew Barrymore in airplane scene The Wedding Singer', 'answer': 'Billy Idol', 'category': 'Musicians in Film'}, {'question': 'david cronenberg geena davis remake of what 1958 horror film', 'answer': 'The Fly', 'category': 'Fantasy/Sci-Fi'}, {'question': 'composed score for ready player one', 'answer': 'Alan Silvestri', 'category': 'N/A'}, {'question': 'for which film only oscar nomination for best actress', 'answer': 'I, Tonya', 'category': 'Margot Robbie'}, {'question': 'MCu actor george washington williams, entrepreneur', 'answer': 'Samuel L. Jackson', 'category': 'Margot Robbie'}, {'question': 'charlotte in this 2013 flim, tim lake, age at 21 secret aboility', 'answer': 'About Time', 'category': 'Margot Robbie'}, {'question': '2018 film does margot robbie play queen elizabeth the 1', 'answer': 'mary, queen of scots', 'category': 'Margot Robbie'}, {'question': 'margot robbie narrats 2018. which rabbit does she voice?', 'answer': 'Flopsy', 'category': 'Margot Robbie'}, {'question': 'rick moranis big screen debut dave foley', 'answer': 'Strange Brew', 'category': 'SCTV Alumni'}, {'question': "catherine o'hara betty 1980s mike nichols film", 'answer': 'Heartburn', 'category': 'SCTV Alumni'}, {'question': 'dave thomas 1980s ivan reitman film judge reinhold, bill murray', 'answer': 'Stripes', 'category': 'SCTV Alumni'}, {'question': 'eugene levy only one pixar film. charlie', 'answer': 'Finding Dory', 'category': 'SCTV Alumni'}, {'question': '1980s scorsese film ice cream truck driver named gale', 'answer': 'After Hours', 'category': 'SCTV Alumni'}, {'question': 'jason statham mercenary danny brice alonsgide clive owen and robert deniro in what film?', 'answer': 'Killer Elite', 'category': 'Action/Adventure'}, {'question': 'year saw release the secret of my success', 'answer': '1987', 'category': 'N/A'}, {'question': 'actresses, who did not provide voice, bonnie hunt, laurie, annie', 'answer': 'Annie Potts', 'category': 'N/A'}, {'question': '1961 film paul varjack', 'answer': "breakfaset at tiffany's", 'category': 'N/A'}, {'question': 'tony todd, john polilto, david patrick kelley, 1990s comic film', 'answer': 'The Crow', 'category': 'N/A'}, {'question': 'actor president in kingsman: the golden cirle', 'answer': 'bruce greenwood', 'category': 'N/A'}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': 'N/A'}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}, {'question': '', 'answer': '', 'category': ''}]}'

var decoded_mts_map = atob(encrypted_mts_map);

var mts_question_map = JSON.parse(decoded_mts_map);
